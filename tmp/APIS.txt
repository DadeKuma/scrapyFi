APIS:

https://smart-contract-downloader.vercel.app/api/contract/ethmain/0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B


<select name="network" class="border-2 w-full p-2 rounded-md focus:ring-2 ring-blue-500">
    <option selected="ethmain" value="ethmain" class="text-center">Ethereum Mainnet</option>
    <option value="rinkeby" class="text-center">Rinkeby Testnet</option>
    <option value="ropsten" class="text-center">Ropsten Testnet</option>
    <option value="kovan" class="text-center">Kovan Testnet</option>
    <option value="goerli" class="text-center">Goerli Testnet</option>
    <option value="polygon" class="text-center">Polygon Mainnet</option>
    <option value="polygonTest" class="text-center">Polygon Mumbai Testnet</option>
    <option value="bsc" class="text-center">Binance Smart Chain Mainnet</option>
    <option value="bscTest" class="text-center">Binance Smart Chain Testnet</option>
</select>

# ethmain - https://etherscan.io/
    # rinkeby - https://rinkeby.etherscan.io/
    # ropsten - https://ropsten.etherscan.io/
    # kovan - https://kovan.etherscan.io/
    # goerli - https://goerli.etherscan.io/
    # polygon - https://polygonscan.com/
    # polygonTest - https://mumbai.polygonscan.com/
    # bsc - https://bscscan.com/
    # bscTest - https://testnet.bscscan.com/

Immunefi Data:
==============
{
  "props": {
    "pageProps": {
      "bounties": [
        {
          "id": "wormhole",
          "project": "Wormhole",
          "date": "2022-02-11T09:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6sgdaPC0JYg8aGLp02UuzY/a322205dd7e60874ea83539496257e25/Wormhole_Logo-newest__1_.png",
          "maximum_reward": 10000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $10,000,000"
            },
            {
              "level": "high",
              "payout": "USD $100,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $2,500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B",
              "type": "Smart Contract - Wormhole"
            },
            {
              "target": "https://etherscan.io/address/0x3ee18B2214AFF97000D974cf647E7C347E8fa585",
              "type": "Smart Contract - TokenBridge"
            },
            {
              "target": "https://etherscan.io/address/0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE",
              "type": "Smart Contract - NFTBridgeEntrypoint"
            },
            {
              "target": "https://github.com/certusone/wormhole/tree/dev.v2/solana",
              "type": "Smart Contracts - Solana"
            },
            {
              "target": "https://github.com/certusone/wormhole/tree/dev.v2/terra",
              "type": "Smart Contracts - Terra"
            },
            {
              "target": "https://github.com/certusone/wormhole/tree/dev.v2/sdk/rust",
              "type": "Smart Contract - Rust"
            },
            {
              "target": "https://github.com/certusone/wormhole/tree/dev.v2/node",
              "type": "Guardian Nodes (Blockchain/DLT)"
            },
            {
              "target": "https://portalbridge.com",
              "type": "Web/App"
            },
            {
              "target": "https://wormholenetwork.com/explorer/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Wormhole is a generic cross-chain messaging protocol that allows smart contracts on various blockchains to communicate with each other. Messages are routed from chain to chain by a decentralised group of guardian nodes who sign attestations of on-chain state.\n\nFor more information about Wormhole, please visit [https://wormholenetwork.com](https://wormholenetwork.com).\n\nThis bug bounty program is focused on the prevention of negative impacts to the Wormhole ecosystem, which currently covers their smart contracts, web UI, guardian nodes, and Wormhole integrations and is focused on preventing:\n\n  - Exploits resulting in the locking, loss, or theft of user funds.\n  - General forging of unverified data, or validation of forged messages.\n  - Determinism bugs that could lead to inconsistent bridge states.\n  - Governance manipulation.\n  - Exposure of infrastructure private keys and/or PII.\n  - Vulnerabilities in the node operating software resulting in invalid behaviour.\n  - Remote code execution.\n  - Bugs that can facilitate Sybil attacks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system-comprehensive/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Additionally, all smart contract and guardian node bug reports must come with log components, reproduction, and data about vulnerabilities to support learnings and bug fixes. This can be satisfied by providing relevant screenshots, docs, code, and steps to reproduce the issue.\n\nFor Guardian Nodes, which are rewarded under Smart Contracts and Blockchain, bug reports will only get the __Critical__ status if they result in unrecoverable damage to the entire Wormhole network. These are exploits that are cross-chain with high or unlimited damage to the network’s ability to continue to function. Otherwise, bug reports may be lowered to __High__ at the discretion of the team. Permanent freezing of funds that is recoverable via a hard fork is also considered as High.\n\nRewards for Critical smart contract and guardian node vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ for Critical smart contract and guardian node bug reports.\n\nWormhole requires all bug bounty hunters to complete the program’s KYC requirements if they are submitting a report and wanting a reward. The information needed is an ID photo along with a scan of a utility bill to show residency proof.\n\nPayouts are handled by the __Wormhole Foundation__ team directly and are denominated in USD. However, payouts are done in __USDC__. The decision whether to make a payout, and the determination of the amount and manner of any payout, will be made by Terraform Labs Ltd in its sole and absolute discretion.",
            "assets_body": "All smart contracts of Wormhole can be found at [https://github.com/certusone/wormhole](https://github.com/certusone/wormhole). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__General__ \n\n  - Missing authorization logic in governance flows.\n  - Cryptographic Issues (Key security, replayability, signature malleability).\n  - Governance consensus failures.\n  - Incorrect logic in contracts and guardian node software.\n\n__Smart Contracts__\n\n  - Significant loss of user funds, such as unrestricted access to custody accounts.\n  - Destruction or burning of Wormhole assets.\n  - Transaction and/or VAA Replay attacks.\n  - Minting Wormhole assets without an equivalent transfer from a source chain.\n  - Recovering assets from a custody account without valid authorization.\n  - Replacement or spoofing of Guardian signing keys and signatures.\n  - Processing of VAA's with invalid signatures.\n  - Attacks on Consensus.\n  - Insecure Deserialization / Account Confusion.\n  - Blockchain runtime specific exploits, such as re-entrancy bugs.\n  - Insufficient verification of account constraints/access constraints.\n  - Performing governance operations without a governance super majority.\n  - Exploits in dependencies that can be exploited at contract level.\n\n__Guardian Nodes__\n\n  - Attacks against RPC endpoints.\n  - Remote Code Execution in guardian node software.\n  - Exfiltration of guardian private keys via the node software.\n  - Causing nodes to produce VAA's for messages that are expired or invalid.\n  - Preventing nodes from accessing or otherwise processing messages.\n  - Disrupting access to public node RPC.\n  - Deletion/destruction of any persistent data (such as VAA's) maintained by nodes.\n  - Denial of Service via exploitation of the node software.\n  - Censorship attacks, and other methods disrupting message delivery.\n  - Recovery of guardian private key material.\n\nNote that network-based DDoS attacks are not considered valid under the Wormhole bug bounty program, however DoS amplification attacks that utilize an issue in the node software itself do fall under this program's scope.\n\n__Web/App__\n\n  - XSS Attacks or any other DOMbased user exploits.\n  - XSRF Attacks\n  - Access/Exploitation of user wallets via the web application.\n  - SSL or server misconfiguration issues (must be shown to be insecure).",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Frontrunning, including backrunning and sandwich attacks.\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks \n  - Bugs in dependencies (unless they lead to equivalently direct attacks on Wormhole).\n  - Any secret data checked into the repository. Such as API/AUTH tokens.\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Any violation of privacy of network users, other bounty hunters or Wormhole Foundation\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "makerdao",
          "project": "MakerDAO",
          "date": "2022-02-10T01:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5vcEkB0bOqaDEGqlxLIXAM/f4e37545855fec510df9a033ebd78fbf/Mark_Maker.png",
          "maximum_reward": 10000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $10,000,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/dai.sol",
              "type": "Smart Contract - MCD_DAI"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/spot.sol",
              "type": "Smart Contract - MCD_SPOT"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/pot.sol",
              "type": "Smart Contract - MCD_POT"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/end.sol",
              "type": "Smart Contract - MCD_END"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/flap.sol",
              "type": "Smart Contract - MCD_FLAP"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/flop.sol",
              "type": "Smart Contract - MCD_FLOP"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/vow.sol",
              "type": "Smart Contract - MCD_VOW"
            },
            {
              "target": "https://github.com/dapphub/ds-weth/blob/master/src/weth9.sol",
              "type": "Smart Contract - MCD_ETH"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/vat.sol",
              "type": "Smart Contract - MCD_VAT"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/jug.sol",
              "type": "Smart Contract - MCD_JUG"
            },
            {
              "target": "https://github.com/makerdao/median/blob/master/src/median.sol",
              "type": "Smart Contract - Medians"
            },
            {
              "target": "https://github.com/makerdao/osm/blob/master/src/osm.sol",
              "type": "Smart Contract - OSM"
            },
            {
              "target": "https://github.com/makerdao/osm/blob/master/src/value.sol",
              "type": "Smart Contract - Value (OSM)"
            },
            {
              "target": "https://github.com/makerdao/dss-cdp-manager/blob/master/src/DssCdpManager.sol",
              "type": "Smart Contract - DssCdpManager"
            },
            {
              "target": "https://github.com/makerdao/dss-cdp-manager/blob/master/src/GetCdps.sol",
              "type": "Smart Contract - GetCdps"
            },
            {
              "target": "https://github.com/makerdao/dss-proxy-actions/blob/master/src/DssProxyActions.sol",
              "type": "Smart Contract - DssProxyActions"
            },
            {
              "target": "https://github.com/makerdao/dss-auto-line/blob/master/src/DssAutoLine.sol",
              "type": "Smart Contract - DssAutoLine"
            },
            {
              "target": "https://github.com/makerdao/clipper-mom/blob/master/src/ClipperMom.sol",
              "type": "Smart Contract - Clipper Mom"
            },
            {
              "target": "https://github.com/makerdao/dss-vest/blob/master/src/DssVest.sol",
              "type": "Smart Contract - DssVest"
            },
            {
              "target": "https://github.com/makerdao/dss-exec-lib/blob/master/src/CollateralOpts.sol",
              "type": "Smart Contract - CollateralOpts"
            },
            {
              "target": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssAction.sol",
              "type": "Smart Contract - DssAction"
            },
            {
              "target": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssExec.sol",
              "type": "Smart Contract - DssExec"
            },
            {
              "target": "https://github.com/makerdao/dss-exec-lib/blob/master/src/DssExecLib.sol",
              "type": "Smart Contract - DssExecLib"
            },
            {
              "target": "https://github.com/makerdao/exchange-callees/blob/master/src/OasisDexCallee.sol",
              "type": "Smart Contract - OasisDexCallee"
            },
            {
              "target": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV2Callee.sol",
              "type": "Smart Contract - UniswapV2Callee"
            },
            {
              "target": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV2LpTokenCallee.sol",
              "type": "Smart Contract - UniswapV2LpTokenCallee"
            },
            {
              "target": "https://github.com/makerdao/exchange-callees/blob/master/src/UniswapV3Callee.sol",
              "type": "Smart Contract - UniswapV3Callee"
            },
            {
              "target": "https://github.com/makerdao/exchange-callees/blob/master/src/WstETHCurveUniv3Callee.sol",
              "type": "Smart Contract - WstETHCurveUniv3Callee"
            },
            {
              "target": "https://github.com/makerdao/ilk-registry/blob/master/src/IlkRegistry.sol",
              "type": "Smart Contract - Ilk Registry"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/ERC/GemAbstract.sol",
              "type": "Smart Contract - Gem Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSAuthorityAbstract.sol",
              "type": "Smart Contract - DS Authority Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSChiefAbstract.sol",
              "type": "Smart Contract - DS Chief Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSPauseAbstract.sol",
              "type": "Smart Contract - DS Pause Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSPauseProxyAbstract.sol",
              "type": "Smart Contract - DS Pause Proxy Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSRolesAbstract.sol",
              "type": "Smart Contract - DS Roles Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSRuneAbstract.sol",
              "type": "Smart Contract - DS Rune Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSSpellAbstract.sol",
              "type": "Smart Contract - DS Spell Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSThingAbstract.sol",
              "type": "Smart Contract - DS Thing Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSTokenAbstract.sol",
              "type": "Smart Contract - DS Token Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dapp/DSValueAbstract.sol",
              "type": "Smart Contract - DS Value Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/AuthGemJoinAbstract.sol",
              "type": "Smart Contract - Auth Gem Join Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/CatAbstract.sol",
              "type": "Smart Contract - Cat Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ChainlogAbstract.sol",
              "type": "Smart Contract - Chainlog Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ClipAbstract.sol",
              "type": "Smart Contract - Clip Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ClipperMomAbstract.sol",
              "type": "Smart Contract - Clipper Mom Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DaiAbstract.sol",
              "type": "Smart Contract - Dai Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DaiJoinAbstract.sol",
              "type": "Smart Contract - DaiJoinAbstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DogAbstract.sol",
              "type": "Smart Contract - Dog Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DssAutoLineAbstract.sol",
              "type": "Smart Contract - Dss Auto Line Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/DssCdpManager.sol",
              "type": "Smart Contract - Dss Cdp Manager"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ESMAbstract.sol",
              "type": "Smart Contract - ESM Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ETHJoinAbstract.sol",
              "type": "Smart Contract - ETH Join Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/EndAbstract.sol",
              "type": "Smart Contract - End Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/ExponentialDecreaseAbstract.sol",
              "type": "Smart Contract - Exponential Decrease Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FaucetAbstract.sol",
              "type": "Smart Contract - Faucet Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlapAbstract.sol",
              "type": "Smart Contract - Flap Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlashAbstract.sol",
              "type": "Smart Contract - Flash Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlipAbstract.sol",
              "type": "Smart Contract - Flip Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlipperMomAbstract.sol",
              "type": "Smart Contract - Flipper Mom Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/FlopAbstract.sol",
              "type": "Smart Contract - Flop Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinAbstract.sol",
              "type": "Smart Contract - Gem Join Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinImplementationAbstract.sol",
              "type": "Smart Contract - Gem Join Implementation Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GemJoinManagedAbstract.sol",
              "type": "Smart Contract - Gem Join Managed Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/GetCdpsAbstract.sol",
              "type": "Smart Contract - Get Cdps Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/IlkRegistryAbstract.sol",
              "type": "Smart Contract - Ilk Registry Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/JugAbstract.sol",
              "type": "Smart Contract - Jug Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LPOsmAbstract.sol",
              "type": "Smart Contract - LPOsm Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LerpAbstract.sol",
              "type": "Smart Contract - Lerp Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LerpFactoryAbstract.sol",
              "type": "Smart Contract - Lerp Factory Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/LinearDecreaseAbstract.sol",
              "type": "Smart Contract - Linear Decrease Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MKRAbstract.sol",
              "type": "Smart Contract - MKR Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MedianAbstract.sol",
              "type": "Smart Contract - Median Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/MkrAuthorityAbstract.sol",
              "type": "Smart Contract - MKR Authority Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/OsmAbstract.sol",
              "type": "Smart Contract - Osm Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/OsmMomAbstract.sol",
              "type": "Smart Contract - Osm Mom Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PipAbstract.sol",
              "type": "Smart Contract - Pip Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PotAbstract.sol",
              "type": "Smart Contract - Pot Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PotHelper.sol",
              "type": "Smart Contract - Pot Helper"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/PsmAbstract.sol",
              "type": "Smart Contract - Psm Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/SpotAbstract.sol",
              "type": "Smart Contract - Spot Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/StairstepExponentialDecreaseAbstract.sol",
              "type": "Smart Contract - Stairstep Exponential Decrease Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VatAbstract.sol",
              "type": "Smart Contract - Vat Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VestAbstract.sol",
              "type": "Smart Contract - Vest Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/dss/VowAbstract.sol",
              "type": "Smart Contract - Vow Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/GemPitAbstract.sol",
              "type": "Smart Contract - Gem Pit Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiMomAbstract.sol",
              "type": "Smart Contract - Sai Mom Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTapAbstract.sol",
              "type": "Smart Contract - Sai Tap Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTokenAbstract.sol",
              "type": "Smart Contract - Sai Token Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTopAbstract.sol",
              "type": "Smart Contract - Sai Top Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiTubAbstract.sol",
              "type": "Smart Contract - Sai Tub Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/sai/SaiVoxAbstract.sol",
              "type": "Smart Contract - Sai Vox Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/utils/WardsAbstract.sol",
              "type": "Smart Contract - Wards Abstract"
            },
            {
              "target": "https://github.com/makerdao/dss-interfaces/blob/master/src/Interfaces.sol",
              "type": "Smart Contract - Interfaces (Abstracts)"
            },
            {
              "target": "https://github.com/makerdao/dss-vest/blob/master/src/DssVest.sol",
              "type": "Smart Contract - Dss Vest"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-auth.sol",
              "type": "Smart Contract - Join Auth"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-2.sol",
              "type": "Smart Contract - Join 2"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-3.sol",
              "type": "Smart Contract - Join 3"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-4.sol",
              "type": "Smart Contract - Join 4"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-5.sol",
              "type": "Smart Contract - Join 5"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-6.sol",
              "type": "Smart Contract - Join 6"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-7.sol",
              "type": "Smart Contract - Join 7"
            },
            {
              "target": "https://github.com/makerdao/dss-gem-joins/blob/v1.2/src/join-8.sol",
              "type": "Smart Contract - Join 8"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/v1.2/src/join.sol",
              "type": "Smart Contract - Join"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/c8d4c806691dacb903ff281b81f316bea974e4c7/src/abaci.sol",
              "type": "Smart Contract - Abaci"
            },
            {
              "target": "https://github.com/makerdao/dss-psm/blob/master/src/join-5-auth.sol",
              "type": "Smart Contract - Join 5 Auth"
            },
            {
              "target": "https://github.com/makerdao/dss-psm/blob/master/src/join-8-auth.sol",
              "type": "Smart Contract - Join 8 Auth"
            },
            {
              "target": "https://github.com/makerdao/dss-psm/blob/master/src/join-auth.sol",
              "type": "Smart Contract - Join Auth (Dss PSM)"
            },
            {
              "target": "https://github.com/makerdao/dss-psm/blob/master/src/psm.sol",
              "type": "Smart Contract - PSM"
            },
            {
              "target": "https://github.com/makerdao/esm/blob/master/src/ESM.sol",
              "type": "Smart Contract - ESM"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/end.sol",
              "type": "Smart Contract - Dss End"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/dog.sol",
              "type": "Smart Contract - Dss Dog"
            },
            {
              "target": "https://github.com/makerdao/dss/blob/master/src/clip.sol",
              "type": "Smart Contract - Dss Clip"
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1DAITokenBridge.sol",
              "type": "Smart Contract - L1 DAI Token Bridge (Optimism DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1Escrow.sol",
              "type": "Smart Contract - L1 Escrow (Optimism DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l1/L1GovernanceRelay.sol",
              "type": "Smart Contract - L1 Governance Relay (Optimism DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/L2DAITokenBridge.sol",
              "type": "Smart Contract - L2 DAI Token Bridge (Optimism DAI Bridge) "
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/L2GovernanceRelay.sol",
              "type": "Smart Contract - L2 Governance Relay (Optimism DAI Bridge) "
            },
            {
              "target": "https://github.com/makerdao/optimism-dai-bridge/blob/master/contracts/l2/dai.sol",
              "type": "Smart Contract - DAI (Optimism DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1CrossDomainEnabled.sol",
              "type": "Smart Contract - L1 Cross Domain Enabled (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1DaiGateway.sol",
              "type": "Smart Contract - L1 DAI Gateway (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1Escrow.sol",
              "type": "Smart Contract - L1 Escrow (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1GovernanceRelay.sol",
              "type": "Smart Contract - L1 Governance Relay (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l1/L1ITokenGateway.sol",
              "type": "Smart Contract - L1 Token Gateway (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2CrossDomainEnabled.sol",
              "type": "Smart Contract - L2 Cross Domain Enabled (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2DaiGateway.sol",
              "type": "Smart Contract - L2 DAI Gateway (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2GovernanceRelay.sol",
              "type": "Smart Contract - L2 Governance Relay (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/L2ITokenGateway.sol",
              "type": "Smart Contract - L2 Token Gateway (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/arbitrum-dai-bridge/blob/master/contracts/l2/dai.sol",
              "type": "Smart Contract - DAI (Arbitrum DAI Bridge)"
            },
            {
              "target": "https://github.com/makerdao/dss-chain-log/blob/master/src/ChainLog.sol",
              "type": "Smart Contract - ChainLog"
            },
            {
              "target": "https://vote.makerdao.com/",
              "type": "Web/App - Governance Voting"
            },
            {
              "target": "https://chainlog.makerdao.com/",
              "type": "Web/App - Contract addresses"
            }
          ],
          "mdx": {
            "program_overview": "MakerDAO is one of the first DeFi protocols in the crypto space that introduced the first crypto-backed stablecoin called Dai (DAI), which is set at a value of 1:1 with the United States Dollar. It is governed by those who hold and/or are delegated MKR, the governance token of the protocol. Since 2021, the project has become more decentralized, with the MakerDAO Foundation being shut down in order to move operations to decentralized business units known as core units. \n\nOne of these core units is the Immunefi Security (IS-001) core unit, a result of two decentralized organizations collaborating together. One mandate of this core unit is to launch a bug bounty program to protect the critical infrastructure of the ecosystem.\n\nFor more information about MakerDAO, please visit [https://makerdao.com/](https://makerdao.com/). For more information about the Immunefi Security core unit (IS-001), please visit [https://immunefi.com/immunefi-security-core-unit-makerdao/](https://immunefi.com/immunefi-security-core-unit-makerdao/).  \n\nThis bug bounty program is governed under the terms set in MIP64. Resolution of payouts may be longer compared to normal timelines due to requiring governance activity. However, proposed amendments are in process to speed up the payment of rewards to bug bounty hunters. \n\nAll Critical and High bug reports will have a postmortem written by the Immunefi Security core unit to be published on the Immunefi Medium blog and distributed on its social media channels after the payout is made and the fixes finalized. The identity of the bug reporter may be included, either with their real name or pseudonymously, if they choose to, or they can choose to remain anonymous.\n\nThis bug bounty program is launched in a roll-out plan towards the end of February 2022 with regular expansions provided until the end of the month. Though further additions may be included after the end of the month, this initial phasing process is to ensure that all infrastructure is working in place.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk. In cases of repeatable attacks, only the first attack is considered unless the smart contract cannot be upgraded or paused. However, there is a minimum reward of __USD 150 000__ for valid Critical smart contract bug reports. \n\nHigh smart contract vulnerabilities will be further capped at up to 100% of the funds affected. In the event of temporary freezing, the reward doubles for every additional 5 blocks that the funds could be temporarily frozen, rounded down to the nearest multiple of 5, up to the hard cap of USD 100 000. This is implemented in order to account for the increased relative impact based on the duration of the freezing of funds.\n\nAll calculations of the amount of funds at risk are done based on the time the bug report is submitted. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. Smart contracts bug reports are required to include a runnable PoC in order to prove impact. Exceptions may be made in cases where the vulnerability is objectively evident from simply mentioning the vulnerability and where it exists. However, the bug reporter may be required to provide a PoC at any point in time. \n\nCritical website and application bug reports will be rewarded with USD 100,000 only if the impact leads to a direct loss in funds or a manipulation of the votes or the voting result, as well as the modification of its display leading to a misrepresentation of the result or vote. All other impacts that would be classified as Critical would be rewarded no more than USD 50,000.\n\nBug reports from compensated team members of any MakerDAO core unit will not be eligible for a reward. Employees and team members of third-party suppliers to core units that operate in a technical capacity and have assets covered in this bug bounty program will also not be eligible for a reward. All team members of IS-001, and its third-party suppliers, including Immunefi itself and its subsidiaries, are not eligible for a reward.\n\nBug reports from team members and third-party suppliers of businesses and organizations that are not a MakerDAO Core Unit but have assets considered as critical infrastructure covered under the bug bounty program are also not eligible for the bug bounty program.\n\nBug reports covering previously-discovered bugs are not eligible for the program. If a bug report covers a known issue, it may be rejected together with proof of the issue being known before escalation of the bug report. Previous audits of MakerDAO can be found at:\n\n[https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/](https://chainsecurity.com/security-audit/maker-protocol-liquidations-2-0/) \n\n[https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/](https://chainsecurity.com/security-audit/makerdao-g-uni-lp-oracle/) (narrowly scoped subsystem)\n\n[https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/](https://chainsecurity.com/security-audit/makerdao-direct-deposit-module-d3m/)\n\n[https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/](https://chainsecurity.com/security-audit/makerdao-optimism-dai-bridge/)\n\nOther audits that currently don’t cover any of the assets listed in the Assets in Scope table and are currently a work in progress can be found, for further reading, at:\n\n[https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/](https://chainsecurity.com/security-audit/makerdao-dss-charter-smart-contracts/)\n\n[https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf](https://chainsecurity.com/wp-content/uploads/2021/12/ChainSecurity_MakerDAO_StarkNet-DAI-Bridge_audit.pdf)  \n\nThe following issues are considered known and are not eligible for a reward:\n\nConsidering MCD_ETH - The steward core unit is aware that the balance of the contract may be different than the total amount that is deposited if users send ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences we will consider reports on the actual balance being higher than the sum of balanceOf values out of scope.\n\nConsidering all adapters -  The steward core unit is aware that the balance (ETH or token) of the contract may be different than the total amount that is joined through the contract if users send tokens or ETH directly to the contract. They do not believe this has a negative impact on the system and so unless a report can show how having a higher balance does have negative consequences they will consider reports on the actual balance being higher than the sum of tokens 'join'ed out of scope.\n\n__In order to be eligible for a reward, the vulnerability must exist both in the deployed smart contract and the GitHub file in the Assets in Scope table.__ For more information, please check the Assets in Scope section.\n\nPayouts are handled by the __MakerDAO__ governance with coordination by the __Immunefi Security core unit__ and are denominated in USD. However, payouts are done in __DAI__ assuming a full 1:1 ratio with the USD. However, if the price of DAI deviates from the USD value by more than 1%, the amount of DAI will be adjusted.",
            "assets_body": "Due to the regularly-updating smart contracts, only the GitHub links are provided. However, to find the most up-to-date deployment addresses, you can refer to [https://chainlog.makerdao.com/](http://chainlog.makerdao.com/). Vulnerabilities that are exploitable in old versions of smart contracts and have since been mitigated (either deliberately or accidentally) in current versions (as demonstrated by the listing at [https://chainlog.makerdao.com/](https://chainlog.makerdao.com/)) are not in-scope for the bug bounty program. In the event that a vulnerability exists on the GitHub file but not on the most recently deployed contract, this may be due to a “dark spell” to fix a vulnerability quietly. If your bug report is rejected as a known issue due to this, details will be provided to you. __This means that in order to be eligible for a reward, the vulnerability needs to exist in both the GitHub file and the respective deployment contract.__\n\nAssets of MakerDAO can be found at [https://github.com/makerdao](https://github.com/makerdao). If you discover a vulnerability with Critical impact on any deployed smart contract, you may submit it for consideration by the Immunefi Security core unit.\n\nFull documentation can be found at [https://docs.makerdao.com/](https://docs.makerdao.com/) and annotations can be found at [https://docs.makerdao.com/other-documentation/smart-contract-annotations](https://docs.makerdao.com/other-documentation/smart-contract-annotations). A comprehensive guide to the smart contracts can be found at [https://docs.makerdao.com/maker-protocol-101](https://docs.makerdao.com/maker-protocol-101). \n\nFurther information about the Governance Voting asset can be found at:\n\n  - [https://github.com/makerdao/gov-polling-db](https://github.com/makerdao/gov-polling-db)\n  - [https://github.com/makerdao/governance-portal-v2](https://github.com/makerdao/governance-portal-v2) \n  - API documentation: [https://vote.makerdao.com/api-docs](https://vote.makerdao.com/api-docs)\n  - Gov polling db endpoint (can be used to view graphql schema)\n    - prod: [https://polling-db-prod.makerdux.com/api/v1](https://polling-db-prod.makerdux.com/api/v1)\n    - staging: [https://polling-db-staging.makerdux.com/api/v1](https://polling-db-staging.makerdux.com/api/v1)\n",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n__Critical__\n  - Any governance voting result manipulation\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Miner-extractable value (MEV)\n  - Protocol Insolvency\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds for at least five blocks\n\n__Medium__\n  - Smart contract unable to operate due to lack of token funds \n  - Block stuffing for profit\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption \n\n__Low__\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Web/App__\n\n__Critical__\n\n  - Ability to execute system commands\n  - Extract Sensitive data/files from the server such as /etc/passwd\n  - Stealing User Cookies\n  - Taking Down the application/website\n  - Bypassing Authentication\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds \n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet\n\n__High__\n\n  - Spoofing content on the target application (Persistent)\n  - Users Confidential information disclosure such as Email\n  - Subdomain Takeover without financial loss (applicable for subdomains with no addresses published)\n  - Privilege escalation to access unauthorized functionalities\n\n__Medium__\n  - Changing details of other users without direct financial impact (CSRF)\n  - Third-Party API keys leakage that demonstrates loss of funds or modification on the website.\n  - Redirecting users to malicious websites (Open Redirect)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\n__Further Scope Restrictions__\n\n__Attacks Leveraging Other DeFi Protocols__\n\nAttacks in the DeFi space sometimes combine multiple protocols (e.g. utilizing flash loans from a margin protocol or manipulating the spot prices on a DEX). PoCs or descriptions of bug exploits may utilize such mechanisms, either to make an attack more severe than it would be in isolation, or to achieve an attack that would otherwise be impossible or infeasible. However, they will only be considered in-scope so long as all of the following are true:\n\n  - Losses or other negative effects of the attack are inflicted upon Maker ecosystem participants—MKR holders, DAI holders, Vault holders, or Keepers. If the losses or negative effects are inflicted solely upon other (external) protocols, the attack is not in scope for this bounty program (though we would encourage you to responsibly disclose to those protocols).\n  - The losses or other negative effects could be prevented via changes to the MCD smart contracts already included in the bounty scope.\n  - The additional DeFi protocols used exist as smart contracts on the Ethereum mainnet and can reasonably be expected to have enough liquidity in various assets to allow the attack to succeed (when there is insufficient liquidity to achieve the claimed severity level but the attack is still possible, it may still be considered in-scope but with a downgraded severity level). For example: if an attack requires an ETH flash loan, but the amount is larger than all the ETH available for loan across the ecosystem, the attack would be downgraded.\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "olympus",
          "project": "Olympus",
          "date": "2022-01-06T11:45-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7csKh5iZlfBPWyb3cJUY5h/c48c6526392aac027d7d1013a612d96a/final_logo_01_07_22_OLYMPUS.png",
          "maximum_reward": 3333333,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $3,333,333"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $3,333,333"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x31f8cc382c9898b273eff4e0b7626a6987c846e8",
              "type": "Smart Contract - Olympus Treasury"
            },
            {
              "target": "https://etherscan.io/address/0x1c21F8EA7e39E2BA00BC12d2968D63F4acb38b7A",
              "type": "Smart Contract - Authority"
            },
            {
              "target": "https://etherscan.io/address/0x9A315BdF513367C0377FB36545857d12e85813Ef",
              "type": "Smart Contract - Treasury v2"
            },
            {
              "target": "https://etherscan.io/address/0x04906695D6D12CF5459975d7C3C03356E4Ccd460",
              "type": "Smart Contract - sOHM v2"
            },
            {
              "target": "https://etherscan.io/address/0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5",
              "type": "Smart Contract - OHM v2"
            },
            {
              "target": "https://etherscan.io/address/0xeeeb97A127a342656191E0313DF33D58D06B2E05",
              "type": "Smart Contract - Distributor v2"
            },
            {
              "target": "https://etherscan.io/address/0xB63cac384247597756545b500253ff8E607a8020",
              "type": "Smart Contract - Staking v2"
            },
            {
              "target": "https://etherscan.io/address/0x0ab87046fBb341D058F17CBC4c1133F25a20a52f",
              "type": "Smart Contract - gOHM"
            },
            {
              "target": "https://etherscan.io/address/0x9025046c6fb25Fb39e720d97a8FD881ED69a1Ef6",
              "type": "Smart Contract - Bond Depo v2"
            },
            {
              "target": "https://app.olympusdao.finance/#/dashboard",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Olympus is a decentralized reserve currency protocol based on the OHM token. Each OHM token is backed by a basket of assets (e.g. DAI, FRAX) in the Olympus treasury, giving it an intrinsic value. Olympus also introduces unique economic and game-theoretic dynamics into the market through staking and bonding. \n\nFor more information about Olympus, please visit \n[https://www.olympusdao.finance/](https://www.olympusdao.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n  - Loss of treasury funds\n  - Loss of user funds\n  - Loss of bond funds\n\nThis bug bounty program is being run by the Olympus DAO under [OIP-38](https://forum.olympusdao.finance/d/197-oip-38-formalize-partnership-with-immunefi-for-the-bug-bounty-program), an extension of [OIP-17](https://forum.olympusdao.finance/d/72-oip-17-creation-funding-of-bug-bounty-program) and [OIP-34](https://forum.olympusdao.finance/d/165-oip-34-adding-language-to-tier-1-of-bug-bounty).",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be considered for a reward. Smart contract bug reports must have the PoC be fully runnable.\n\nCritical vulnerabilities are further subcategorized into two tiers:\n\n  - Tier 1: For bugs/exploits which would lead to a loss of bond funds or a loss of user funds, a flat reward of __USD 333 333__ is provided.\n  - Tier 2: For bugs/exploits which would lead to a loss of treasury funds, a flat reward of __USD 3 333 333__ is provided. \n\nFor vulnerabilities of websites and applications, only bugs that lead to direct financial damage listed in the Impacts in Scope are accepted and are categorized as critical. All others are not accepted. An example of an acceptable vulnerability in this category would be [https://rekt.news/badger-rekt/](https://rekt.news/badger-rekt/).\n\nBugs that have been previously disclosed, either publicly or in an earlier bug submission, are ineligible for a reward.\n\nPayouts are handled by the __Olympus DAO__ directly and are denominated in USD, under the terms set out in OIP-38. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Olympus can be found at [https://github.com/OlympusDAO/olympus-contracts](https://github.com/OlympusDAO/olympus-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of treasury funds\n  - Loss of user funds\n  - Loss of bond funds\n\n__Web/App__\n\n  - Loss of treasury funds\n  - Loss of user funds\n  - Loss of bond funds",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Any vulnerability that directly has an impact in scope.\n\n__Websites and Applications__\n\n  - Any vulnerability that directly has an impact in scope.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Anything that doesn’t directly lead to an impact in scope. \n  - Centralization risks\n\n__Websites and Applications__\n\n  - Anything that doesn’t directly lead to an impact in scope. \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "astroport",
          "project": "Astroport",
          "date": "2021-11-29T11:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Qwy7LtcelmPuSZnjGquW7/aeac853cef17939e914d63ed1eeebf98/EPpDQTZo_400x400__1_.jpg",
          "maximum_reward": 3000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $3,000,000"
            },
            {
              "level": "high",
              "payout": "USD $80,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://finder.terra.money/testnet/address/terra1kzmee7leehnc6f72zp7k5trsadrk3acn29xh4j",
              "type": "Smart Contract - Periphery Contract: Airdrop"
            },
            {
              "target": "https://finder.terra.money/testnet/address/terra12nkfl2das8gmm5m52hgxpastky89uvrpn6g2na",
              "type": "Smart Contract - Periphery Contract: Auction"
            },
            {
              "target": "https://finder.terra.money/testnet/address/terra15wy4cfgl9uxf53pyhm0uas8p20ajstztc6ntdk",
              "type": "Smart Contract - Periphery Contract: Lockdrop"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra18jcxc5km8lvhkj5jrs8wezcxmctfruezjd6xf9",
              "type": "Smart Contract - Core Contract: Factory"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra16qc4xrjeju5qwf7kzenmrh2stzctd80p7s94v5",
              "type": "Smart Contract - Core Contract: Pair (ASTRO-UST)"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra16qc4xrjeju5qwf7kzenmrh2stzctd80p7s94v5",
              "type": "Smart Contract - Core Contract: Pair (MIR-UST)"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1tj6cxw9juw6qxg42uwzrcq3zd6jgg323x6qxtf",
              "type": "Smart Contract - Core Contract: Stable pair"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1dqcna8llc5cnqk5pmw0u9sckw3tdvnpafjgp4k",
              "type": "Smart Contract - Core Contract: Oracle (MIR-UST)"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1l6fdzx8rm23m9406200fvuq7vqgwf6wagssmx3",
              "type": "Smart Contract - Core Contract: Router"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1vvrvqupxs92ennv9cxzlwp6w63707uveachdrq",
              "type": "Smart Contract - Core Contract: ASTRO Token"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra19ha4hajrfa2gtmww6d4a89nuxdzxy06346qx7q",
              "type": "Smart Contract - Core Contract: Generator"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra12d42apxxa546kwgun909uck64jqp6cff25qlha",
              "type": "Smart Contract - Core Contract: Generator proxy to Mirror"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1vrj3r4tyyyxgqyzamtutqe5fff8pntyxjtwnuc",
              "type": "mart Contract - Core Contract: Maker"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1wq0f50q9r9fdlwgz2fvgdlmf2a65gmzhg5t9eu",
              "type": "Smart Contract - Core Contract: Staking"
            },
            {
              "target": "https://finder.terra.money/testnet/account/terra1prjyn5dlzex26ufhxp0a2r59ltm525qaekd9vc",
              "type": "Smart Contract - Core Contract: Vesting"
            }
          ],
          "mdx": {
            "program_overview": "Astroport is the central space station of the Terra solar system, where travelers from all over the galaxy (Mirrans, Terrans, Anchorians, and more) meet to trustlessly exchange assets. As a galactic public good, Astroport will be governed by the Astral Assembly, a council of cryptonauts representing all corners of the universe.\n\nThe design philosophy behind Astroport is simple: to enable decentralised, non-custodial liquidity and price discovery for any asset. To achieve this, Astroport prioritises flexibility above all else; combining various specialised pool types and routing seamlessly across them.\n\nFor more information about Astroport, please visit [https://astroport.fi/](https://astroport.fi/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nThe following known issues are considered to be out of scope: \n\n1. Collection of ASTRO tokens in maker contract is not possible if there are no tokens to be swapped.\nThe condition in contracts/tokenomics/maker/src/contract.rs:129 implies that if there are no assets to be swapped, the reply will be skipped. This implies that a positive ASTRO balance in the maker cannot be collected.\n\n2. Attackers can cause the generator’s send orphan proxy rewards function to run out of gas, locking orphan rewards in the contract.\nIn the send_orphan_proxy_rewards function in contracts/tokenomics/generator/src/contract.rs:721, the USER_INFO storage map is iterated over with the LP token preﬁx. That iteration is unbounded. An attacker can deposit many small amounts to make the iteration long enough for the send_orphan_proxy_rewards function to run out of gas. There is currently no way to recover from such an attack, any orphan rewards would be locked forever in the contract.\n\n  The query_orphan_proxy_rewards query handler exhibits the same issue in     line 880, which could potentially cause calling contracts to run out of     gas.\n\n3. Lack of tax deduction may lead to failure of maker contract’s swap to ASTRO function.\nIn contracts/tokenomics/maker/src/contract.rs:203, no taxes are deducted before sending native assets to the pair contract in order to swap them for ASTRO tokens. This implies that the maker's native token balance will be used to pay taxes, until eventually the balance will not suﬃce and the message will revert.\n\n4. Generator proxy template assumes that unbonded amount is fully available for transfer.\nIn the generator proxy template, the reference implementation suggests that the unbonded amount is fully available for transfer in line templates/generator_proxy_template/src/contract.rs:130 and 157. In practice, some protocols apply withdrawal fees, taxes, or might subject bonded funds to slashing. In either case, the received balance might be less than what was unbonded, and the withdrawal would fail.\n\n5. Incorrect slippage in stable pool. \nThe calculation for slippage is incorrect in stable pool.\n\n6. Incorrect formula for LP token minting amount in stable pool.\nWe use the same formula for calculating/minting LP tokens in stable pool as in xyk. This is not valid.\nThe current formula ([https://github.com/astroport-fi/astroport/blob/2b73e3e436a4f280cb3474b344fb4f9eece5b580/contracts/pair_stable/src/contract.rs#L298](https://github.com/astroport-fi/astroport/blob/2b73e3e436a4f280cb3474b344fb4f9eece5b580/contracts/pair_stable/src/contract.rs#L298)) implies that he will receive only 100 LP tokens, which doesn't seem correct as the ratio between tokens in stable pool is not 1:10, but ~1:1;\nWe need to use d for calculating the price for the whole pool, which is compared to d after liquidity is provided. The amount of LP tokens to mint should be based on this difference.\n\n7. Run mass_update_pools before updating tokens_per_block.\nIn generator contract if admin updates tokens_per_block (e.g. set to 0) after a pool is created all rewards will change accordingly, so all users who don’t withdraw their liquidity are affected (so it kinda works backwards). We will add mass_update_pools before that operation so it does not work backwards and only affects the next blocks.\n\n8. Unbounded iteration over pools could lead to out of gas issues.\nIn contracts/tokenomics/generator/src/contract.rs:256 and 349, unbounded iteration over POOL_INFO entries are performed. That implies that the gas consumption increases with the number of pools, which could eventually lead to transactions that hit gas limits. We classify this issue as minor since only the owner can add pools to POOL_INFO.\n\n9. Possibility to create multiple pools with the same pair. Creating pools with the same pair generates unexpected situations, e.g. a user could withdraw more tokens than his fair share and affect other users in the pool.\n\n10. Privileged addresses can be transferred without confirmation in the factory contract.\n\n11. Miscalculation in the stableswap D invariant, leading to an incorrect denominator.\n\n12. Incorrect stableswap slippage calculation. The slippage calculation will be removed from stableswap contracts.\n\nCritical vulnerabilities are further capped at 15% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 100 000__ for Critical bug reports. \n\nPayouts are handled by the __Astroport__ team directly and are denominated in USD. However, payouts are done in __ASTRO__. All rewards above 1 000 000 USD are subjected to a unlock period of up to 18 months where tokens will be vested linearly on a monthly basis.   If a bug is found within seven days of Astroport’s launch, the price of ASTRO will be calculated as the Time-Weighted Average Price (TWAP) price in UST since launch. If a bug is found 1 week to 30 days after launch, the price of ASTRO will be the TWAP price in UST over the previous 7 days. If a bug is found 30 days+ after launch, the ASTRO price will be the TWAP price in UST over the previous 30 days.\n",
            "assets_body": "All smart contracts of Astroport can be found at [https://github.com/astroport-fi/](https://github.com/astroport-fi/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in the scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Rust/Terra details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "__Out of Scope & Rules __\n\nThe following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "thegraph",
          "project": "The Graph",
          "date": "2021-08-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2L62ScwrnMTV5zczetmm3N/9596805cc6742d3f1ff64d1abb9121e3/thegraph-logo.jpg",
          "maximum_reward": 2500000,
          "is_external": false,
          "is_special": true,
          "technologies": [
            "Smart Contract"
          ],
          "kyc": true,
          "verification_link": null,
          "mdx": {
            "program_overview": "### Program Overview\n\nThe Graph is an indexing protocol for querying networks like Ethereum and IPFS. It is a decentralized network comprised of multiple stakeholders incentivized to build and offer an efficient and reliable open data marketplace, through GraphQL-based APIs.\n\nThe Graph learns what and how to index Blockchain data based on subgraph descriptions, known as the subgraph manifest. The subgraph description defines the smart contracts of interest for a subgraph, the events in those contracts to pay attention to, and how to map data to data that The Graph will index and store in its decentralized network, to be served by Indexers. Indexers are network participants responsible for running their own infrastructure capable of indexing subgraphs and subsequently serve such data.\n\nThe network is fully permissionless, meaning that every stakeholder can design, implement and deploy subgraphs, with Indexers choosing which subgraphs to index based on a number of factors such as Curators’ interest (signaling high-quality ones which may result in high query volume). Delegators are another key network participant in this open data economy, who delegate their stake towards Indexers, receiving, in turn, a portion of both network rewards and fees from subsequently served queries. Like Delegators, Curators also receive a portion of the query fees, when staking their own GRT in a subgraph’s bounding curve (signaling).\n\nFor more information about The Graph, please visit their website at [https://thegraph.com/](https://thegraph.com). \n\nThe bug bounty program, managed and funded by The Graph Foundation, is focused on the prevention of negative impacts to the whole ecosystem, such as:\n\n- Loss of User Funds\n- Exposure of private information (keys, PII)\n- Determinism bugs that could lead to incorrect or inconsistent query results by - Indexers in the network\n- Vulnerabilities in the Indexer software (eg. Graph Node, Indexer CLI) that could result in the Indexer being slashed or not running effectively\n- Vulnerabilities that could degrade the indexing or querying service\n- Bugs that could facilitate Sybil attacks\n\nHowever, bugs that are known from currently unpublished third-party audits, which will be publicly published by September 15, 2021, are not considered as in-scope of the bug bounty program, as well as other things listed as out-of-scope in the relevant section below. Bug bounty hunters submit bug reports at their own risk of being rejected as a known issue. \n\n### Rewards by Threat Level\n\nRewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from the consequence of exploitation to privilege required to the likelihood of a successful exploit. \n\nRewards for critical vulnerabilities are capped at 10% of economic damage, primarily focusing on the possible loss of funds for Indexers, Delegators, and Curators at Smart Contract level only, but also taking into consideration other aspects such as branding and PR, at the discretion of The Graph Foundation. \n\nIn order to qualify for a reward, bug bounty hunters will need to provide KYC through [https://register.thegraph.com](https://register.thegraph.com). Additionally, all bug reports must come with log components, reproduction, and data about vulnerabilities to support learnings and bug fixes. This can be satisfied by providing relevant screenshots, docs, code, and steps to reproduce the issue.\n\nPayouts are handled by __The Graph Foundation__ and are denominated in USD. All payouts are done in __GRT__.\n\n__Smart Contracts and Blockchain__ \n\n| Level | Payout |\n| :-- | :-- |\n| **Critical** | Up to USD $2,500,000 | \n| **High** | USD $200,000 | \n| **Medium** | USD $20,000 |\n| **Low** | USD $5,000 |\n| **None** | $0 |\n\n### Assets in Scope \n\n| Target | Type |\n|:- | :--: |\n| <https://etherscan.io/address/0x24CCD4D3Ac8529fF08c58F74ff6755036E616117#code> | Smart contract - controller |\n| <https://etherscan.io/address/0xc944E90C64B2c07662A292be6244BDf05Cda44a7> | Smart contract - graphToken |\n| <https://etherscan.io/address/0x64F990Bf16552A693dCB043BB7bf3866c5E05DdB> | Smart contract - epochManager |\n| <https://etherscan.io/address/0x97307b963662cCA2f7eD50e38dCC555dfFc4FB0b> | Smart Contract - disputeManager |\n| <https://etherscan.io/address/0xF55041E37E12cD407ad00CE2910B8269B01263b9> | Smart contract - staking |\n| <https://etherscan.io/address/0x8FE00a685Bcb3B2cc296ff6FfEaB10acA4CE1538> | Smart contract - curation |\n| <https://etherscan.io/address/0x9Ac758AB77733b4150A901ebd659cbF8cB93ED66> | Smart contract - rewardsManager |\n| <https://etherscan.io/address/0xaD0C9DaCf1e515615b0581c8D7E295E296Ec26E6> | Smart contract - serviceRegistry |\n| <https://etherscan.io/address/0xaDcA0dd4729c8BA3aCf3E99F3A9f471EF37b6825> | Smart contract - GNS |\n| <https://etherscan.io/address/0xFCf78AC094288D7200cfdB367A8CD07108dFa128> | Smart Contract - GraphTokenLockManager (Token Distribution - https://github.com/graphprotocol/token-distribution) |\n| <https://etherscan.io/address/0xbE5e630383b5BAEcF0Db7b15C50d410edD5A2255> | Smart Contract - GraphTokenLockWallet (Token Distribution - https://github.com/graphprotocol/token-distribution) |\n| <https://github.com/graphprotocol/graph-node> | Graph Node (Indexer Software Stack) |\n| <https://github.com/graphprotocol/agora> | Agora (Indexer Software Stack) |\n| <https://github.com/graphprotocol/indexer> | Indexer (Indexer Software Stack) |\n\n### Impacts in Scope \n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in the scope table.\n\n__Applicable to all assets in scope__ \n\n- A bug in a smart contract, gateway, or the default Indexer software that could result in funds being lost (not including slashing)\n- A bug that could cause incorrect payouts of query fees or indexing rewards\n- An economic attack that could result in Indexers, Curators or Delegators losing a significant amount of funds or being exploited\n- A bug that could cause network participants to be impersonated and unwanted actions being taken (eg. funds being transferred)\n- A bug in a smart contract or the default Indexer software that could result in private information being stolen\n- A bug that allows remote code execution resulting in private information being stolen\n- A bug that could make it difficult or impossible to run an Indexer effectively\n- A bug that could halt or delay an Indexer’s ability to process a query or receive payments\n- A bug in a smart contract or the default Indexer software that could result in a “halt\" or an impact on liveness\n- A bug whereby an attacker does not pay sufficient GRT fees for the load they exert on the network\n- A vulnerability that could cause two or more Indexers to provide different results for the same query when the approved code is run\n- A vulnerability that could cause inaccurate query data to be served\n- A bug that could cause the service functionality, throughput, or utility to be degraded but not disabled\n- A griefing attack on the services provided or network participants\n- A bug that could encourage or incentivize sybil attacking or impersonating users\n\n__Applicable to graph-node only__\n\n- A bug that could lead to non-deterministic syncing of subgraph data  \n\n### Impacts and Vulnerabilities Not in Scope\n\nThere are several known potential exploits on Ethereum and The Graph infrastructure. Bounty hunters will not be rewarded for reporting these:\n\n- Frontrunning, including backrunning and sandwich attacks\n- Bugs already identified in external third-party audits\n  - These audits will be publicly published by September 15, 2021. Until then, bug reports may be rejected if the vulnerability is determined by The Graph Foundation to be a known issue. The Graph Foundation will, however, inform the bug reporter within 72 hours of escalation that the bug report is a known issue.\n  - Natural network activity like curation whose involved mechanisms could result in unprofitable actions for the particular stakeholder\n\nAdditionally, all of the following vulnerabilities and bug report types are not considered as in-scope in this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n- Incorrect data supplied by third party oracles\n- Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n### Rules and Requirements \n\nAll bounty hunters must abide by rules when reporting bugs to be eligible for rewards. We appreciate your cooperation.\n\n__Report Responsibly__\n\nReport vulnerabilities to The Graph first by submitting a bug report on Immunefi, to mitigate attacks and in the best interest of the network’s safety. Give reasonable time for The Graph to fix the bug before sharing publicly.\n\n__Don't Exploit Reported Bugs__\n\nDo not exploit bugs in the code to gain an advantage or conduct malicious activity in the network. No hacking or social engineering of other network users.\n\n__Don’t Violate Privacy__\n\nDo not violate the privacy of network users, other bounty hunters, or The Graph.\n\n__Don’t Attack or Defraud The Graph__\n\nDo not attack The Graph team, operations, or technology (eg. DDOS attack, spam, social engineering) or defraud The Graph team or network users.\n\nPlease also note reporting requirements:\n\n- Bugs will only be rewarded once for successful reporting and confirmation of fix to the first person to report the bug.\n\n- Vulnerabilities must be reproducible by The Graph team (please include all relevant links, docs, and code)\n\n- Single vulnerabilities can be submitted per form, multiple submissions for the same vulnerability will not be counted\n\n- Bounty hunters can submit multiple bug reports\n\n- Public disclosure of the vulnerability prior to resolution may cancel a pending reward. We reserve the right to disqualify individuals from the program for disrespectful or disruptive behavior.\n\n- The Graph and affiliates will not negotiate in response to duress or threats (e.g., we will not negotiate the payout amount under threat of withholding the vulnerability or threat of releasing the vulnerability or any exposed data to the public)."
          }
        },
        {
          "id": "optimism",
          "project": "Optimism",
          "date": "2022-01-14T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/iGySa7GVnISWqfSbIR9N4/2867df922f76c0f722543bdddd6e080b/Optimism_Logo.jpeg",
          "maximum_reward": 2000042,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,042"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
              "type": "Smart Contract - Lib_AddressManager"
            },
            {
              "target": "https://etherscan.io/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19",
              "type": "Smart Contract - StateCommitmentChain"
            },
            {
              "target": "https://etherscan.io/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2",
              "type": "Smart Contract - CanonicalTransactionChain"
            },
            {
              "target": "https://etherscan.io/address/0xD16463EF9b0338CE3D73309028ef1714D220c024",
              "type": "Smart Contract - ChainStorageContainer-CTC-batches"
            },
            {
              "target": "https://etherscan.io/address/0xb0ddFf09c4019e31960de11bD845E836078E8EbE",
              "type": "Smart Contract - ChainStorageContainer-SCC-batches"
            },
            {
              "target": "https://etherscan.io/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
              "type": "Smart Contract - Proxy__OVM_L1CrossDomainMessenger"
            },
            {
              "target": "https://etherscan.io/address/0xd9166833FF12A5F900ccfBf2c8B62a90F1Ca1FD5",
              "type": "Smart Contract - OVM_L1CrossDomainMessenger"
            },
            {
              "target": "https://etherscan.io/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
              "type": "Smart Contract - Proxy__OVM_L1StandardBridge"
            },
            {
              "target": "https://etherscan.io/address/0x40e0c049f4671846e9cff93aaed88f2b48e527bb",
              "type": "Smart Contract - L1StandardBridge"
            },
            {
              "target": "https://etherscan.io/address/0x29Ea454F8f2750e345E52e302A0c09f1A5215AC7#code",
              "type": "Smart Contract - L1StandardBridge (not in use, but included for source code verification)"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000000",
              "type": "Smart Contract - OVM_L2ToL1MessagePasser"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000007",
              "type": "Smart Contract - L2CrossDomainMessenger"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000010",
              "type": "Smart Contract - L2StandardBridge"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000012",
              "type": "Smart Contract - L2StandardTokenFactory"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xc40f949f8a4e094d1b49a23ea9241d289b7b2819",
              "type": "Smart Contract - L2StandardToken"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000",
              "type": "Smart Contract - OVM_ETH"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000011",
              "type": "Smart Contract - SequencerFeeVault"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x420000000000000000000000000000000000000F",
              "type": "Smart Contract - OVM_GasPriceOracle"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x4200000000000000000000000000000000000006",
              "type": "Smart Contract - WETH9"
            }
          ],
          "mdx": {
            "program_overview": "Optimism is a Layer 2 Optimistic Rollup network designed to utilize the strong security guarantees of Ethereum while reducing its cost and latency. Optimism is EVM equivalent, making the transition from L1 to L2 as seamless as possible. This means one-click deployments and full compatibility with most of the tooling Ethereum developers are accustomed to. It also means that with very few exceptions, existing Solidity smart contracts can run on Optimism exactly how they run on Ethereum. \n\nFor more information about Optimism, please visit [https://www.optimism.io/](https://www.optimism.io/).  \n\nThis bug bounty program is focused on their smart contracts and on preventing:\n\n  - Theft of assets held in their Bridge and Messenger smart contracts.\n  - Theft, freezing or other loss of funds due to vulnerabilities in their fork of Geth.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nFor KYC, OptimismPBC will request an invoice, with your name and address in order to payout the reward.\n\nAny freezing of funds that is recoverable via an upgrade would be considered as High severity.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. \n\nHowever, there is a minimum of __USD 75 000__ for Critical bug reports.\n\nNote: that there appears to be an obvious bug which would allow an attacker to withdraw a fake ERC20 token from L2 in exchange for a real ERC20 (such as WBTC) token on L1. There is no check in the L2StandardBridge, however the withdrawal is prevented from finalizing by a check in the L1StandardBridge. Naturally if you do find a way to circumvent our protections, then we would reward you. \n\nFor testing any exploits involving cross-domain transactions, we recommend working with our [dockerized services](https://github.com/ethereum-optimism/optimism/blob/6f8e432506a5f4ba094f091b22a0bb6acc53fdac/ops/README.md) and modifying our [integration tests](https://github.com/ethereum-optimism/optimism/blob/6f8e432506a5f4ba094f091b22a0bb6acc53fdac/integration-tests/test/bridged-tokens.spec.ts)\n\nThe following known issues are considered to be out of scope of this bug bounty program:\n  - The fact that their contracts are upgradable via a multisig. \n  - The fact that fault proofs (FKA fraud proofs) are not yet running.\n  - A bug in Lib_MerkleTrie.sol which will prevent withdrawals from succeeding in some cases. There is a workaround for this, by modifying the proof to add an extra element.\n  - A bug in Lib_ResolvedDelegateProxy.sol which could result in a storage slot key collision overwriting the address of the implementation. This bug is dependent on the layout of the implementation contract, and Optimism is not affected.\n  - The user cannot commit to a L1 gas price, the OVM_GasPriceOracle is owned by a key controlled by Optimism and is responsible for setting the L1 gas price.\n\nPayouts are handled by the __Optimism__ team directly and are denominated in USD. All payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Optimism can be found at [https://github.com/ethereum-optimism/optimism](https://github.com/ethereum-optimism/optimism).  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Blockchain (Geth)__\n\nThe relevant code for Optimism’s fork of Geth can be found here: \n\n[https://github.com/ethereum-optimism/optimism/tree/master/l2geth](https://github.com/ethereum-optimism/optimism/tree/master/l2geth)\n",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Temporary freezing of funds for significantly longer than is enforced by the withdrawal delay.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Vulnerabilities in the implementation of ‘custom token bridges’ which are written by third parties for bridging tokens to their network\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nSince Optimism uses a fork of Geth, issues which are responsibly disclosed to upstream cannot be \"replayed\" against Optimism’s bug bounty program if the vulnerability has already been made public. If the vulnerability is disclosed to Optimism at the same time as upstream Geth, the vulnerability is eligible for the bug bounty program.\n\nThe following known issues are considered to be out of scope of this bug bounty program:\n\n - All currently known issues with devp2p here: [https://github.com/ethereum/devp2p/blob/master/rlpx.md#known-issues-in-the-current-version](https://github.com/ethereum/devp2p/blob/master/rlpx.md#known-issues-in-the-current-version)\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gnosischain",
          "project": "Gnosis Chain",
          "date": "2022-02-10T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6ibSou9KOCjwRMOviQ4op0/bd40955a44009d5e7a35376fb4c0a248/Aatar_green_white.png",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016",
              "type": "Smart contract - DAI-xDAI TokenBridge contract on the Ethereum Mainnet"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x7301CFA0e1756B71869E93d4e4Dca5c7d0eb0AA6",
              "type": "Smart contract - DAI-xDAI OmniBridge contract on the xDai chain"
            },
            {
              "target": "https://etherscan.io/address/0x88ad09518695c6c3712AC10a214bE5109a655671",
              "type": "Smart contract - ETH-xDAI OmniBridge contract on the Ethereum Mainnet"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
              "type": " Smart contract - ETH-xDAI OmniBridge contract on the xDai chain"
            },
            {
              "target": "https://bscscan.com/address/0xf0b456250dc9990662a6f25808cc74a6d1131ea9",
              "type": "Smart contract - BSC-xDAI OmniBridge contract on the Binance Smart Chain"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x59447362798334d3485c64D1e4870Fde2DDC0d75",
              "type": " Smart contract - BSC-xDAI OmniBridge contract on the xDai chain"
            }
          ],
          "mdx": {
            "program_overview": "Gnosis chain, previously known as xDai, is a stable payments EVM (Ethereum Virtual Machine) blockchain designed for fast and inexpensive transactions. The chain uses a unique dual-token model; xDai is a stable token used for transactions, payments, and fees, and STAKE currently supports the underlying POSDAO Proof-of-Stake consensus.\n\nFor more information about Gnosis Chain, please visit [https://www.xdaichain.com/](https://www.xdaichain.com/) \n\nThis bug bounty program is focused on their smart contracts.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\n\nAll Critical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into consideration the funds at risk. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the Gnosis Chain team directly and are denominated in USD. However, payouts are done in USDT for payments up to USD 100 000. All remaining rewards are paid in STAKE.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "celer",
          "project": "Celer",
          "date": "2021-11-18T07:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/13hITYqQMxBrQvjeOzbRhl/b7ca8569a07d3a2212aeac6a92244110/Celer_Logo.jpeg",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $100,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x8a4B4C2aCAdeAa7206Df96F00052e41d74a015CE",
              "type": "Staking"
            },
            {
              "target": "https://etherscan.io/address/0xCb4A7569a61300C50Cf80A2be16329AD9F5F8F9e",
              "type": "State Guardian Network"
            },
            {
              "target": "https://etherscan.io/address/0xb01fd7Bc0B3c433e313bf92daC09FF3942212b42",
              "type": "Staking Rewards"
            },
            {
              "target": "https://etherscan.io/address/0x61f85fF2a2f4289Be4bb9B72Fc7010B3142B5f41",
              "type": "Farming Rewards"
            },
            {
              "target": "https://etherscan.io/address/0xea129aE043C4cB73DcB241AAA074F9E667641BA0",
              "type": "Governance"
            },
            {
              "target": "https://etherscan.io/address/0x5803457E3074E727FA7F9aED60454bf2F127853b",
              "type": "Viewer"
            },
            {
              "target": "https://etherscan.io/address/0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
              "type": "Ethereum 1"
            },
            {
              "target": "https://bscscan.com/address/0xdd90E5E87A2081Dcf0391920868eBc2FFB81a1aF",
              "type": "BSC 56"
            },
            {
              "target": "https://arbiscan.io/address/0x1619DE6B6B20eD217a58d00f37B9d47C7663feca",
              "type": "Arbitrum 42161"
            },
            {
              "target": "https://polygonscan.com/address/0x88DCDC47D2f83a99CF0000FDF667A468bB958a78",
              "type": "Polygon 137"
            },
            {
              "target": "https://snowtrace.io/address/0xef3c714c9425a8F3697A9C969Dc1af30ba82e5d4",
              "type": "Avalanche 43114"
            },
            {
              "target": "https://ftmscan.com/address/0x374B8a9f3eC5eB2D97ECA84Ea27aCa45aa1C57EF",
              "type": "Fantom 250"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x9D39Fc627A6d9d9F8C831c16995b209548cc3401",
              "type": "Optimism 10"
            },
            {
              "target": "https://blockexplorer.boba.network/address/0x841ce48F9446C8E281D3F1444cB859b4A6D0738C",
              "type": "Boba 288"
            },
            {
              "target": "https://cbridge.celer.network/#/transfer",
              "type": "Web/App - cBridge Web App"
            }
          ],
          "mdx": {
            "program_overview": "Celer cBridge is a multi-chain interoperability system that provides the best-in-class cross-chain token bridging experience with deep liquidity for users, highly efficient and easy-to-use liquidity management for both cBridge node operators and Liquidity Providers who do not want to operate cBridge nodes, and developer-oriented features such as general message bridging for cases like cross-chain DEX and NFTs. All of the above is made possible by the Celer State Guardian Network (SGN), a tendermint PoS blockchain that acts as a messaging fabric interconnecting different blockchains. State Guardian Network acts as a sidechain on Ethereum with staking and governance functionality rooted in Ethereum. $CELR validators and delegators are rewarded in the system via block reward and part of the transaction fee generated by cBridge. \n\nFor more information about cBridge architecture, please visit \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts\n  - Thefts and permanent freezing of unclaimed yield rewards\n  - The only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThere are some modifications from the above Severity Classification for this bug bounty program:\n\nCritical Level Security - Modified: \n  - Empty or permanent freeze the contract's holdings (e.g. economic attacks, flash loans, reentrancy, MEV, logic errors, integer over-/under-flow)\n\nMedium Level Security - Excluded: \n  - Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract)\n  - Gas griefing\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \nCritical Smart Contract and Blockchain bug reports are further capped at 10% of economic damage up to USD 2,000,000, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of USD 150,000. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Attacks requiring MITM or physical access to a user's device.\n  - Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis\n  - Any griefing attacks on the system or smart contract trying to spend gas costs or liquidity lockup to incur gas costs and computational overhead  for the validators and operators of the network.\n  - Liquidity value reduction or arbitraging incurred due to the pricing mechanisms of the system and LP’s own operations. \n  - Attacks involving getting access to privileged admin keys \n  - Delay of cross-chain transfer (fund security not compromised) due to network/rpc error from the blockchain endpoint being used by SGN validators\n  - Security issues related to connected blockchains of cBridge is not in the scope\n  - As to the current implementation, it is possible (with low probability) that a user triggered transaction (e.g., add liquidity, send fund, delegate stake) is not automatically synced to the sgn, or the sgn failed to automatically submit the fund relay transaction to the destination chain (e.g., due to chain rpc endpoint failure). Such cases do not introduce fund security, and can be recovered through manual CLI tools. Related improvements will be included in later releases.\n\nCeler Network requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is acquired through mutually agreed third-party KYC solutions. The collection of this information will be done by the Celer Network team.\n\nPayouts are handled by the __Celer Network__ team directly and are denominated in USD. However, payouts are done in __ETH__, __CELR__, __or a stablecoin__, with the choice of the ratio at the discretion of the team.\n",
            "assets_body": "All smart contracts of Celer Network can be found at [https://github.com/celer-network/sgn-v2-contracts](https://github.com/celer-network/sgn-v2-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For cBridge contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and permanent freezing of any funds in liquidity pool smart contract or staking contracts\n  - Thefts and permanent freezing of unclaimed yield rewards\n\n__Web/App__\n\nThe only web vulnerabilities in scope are those which lead directly and unequivocally to loss of user funds, a direct breach of data, and the deletion of site data",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "polkastarter",
          "project": "Polkastarter",
          "date": "2021-10-12T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/QhL5Cn1GfQrsM8DYKpHyO/c25573012e6228e53c98ead992ff93b8/Screenshot_2021-10-09_at_10.01.32_PM.png",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xc24A365A870821EB83Fd216c9596eDD89479d8d7#code",
              "type": "Smart Contract - PolsStake (ETH)"
            },
            {
              "target": "https://bscscan.com/address/0xD558675a8c8E1fd45002010BaC970B115163dE3a#code",
              "type": "Smart Contract - PolsStake (BSC)"
            },
            {
              "target": "https://www.polkastarter.com",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Polkastarter is a protocol built for cross-chain token pools and auctions, enabling projects to raise capital in a decentralized, permissionless and interoperable environment based on Polkadot.\n\nThe platform allows cryptocurrency projects to raise funds by setting up a swap pool based on a fixed purchase rate for tokens. These so-called “Fixed Swap Pools” have many advantages for token sale investors over traditional fundraising models like ICOs, IEOs and IDOs (Initial DEX Offerings). Fixed Swap Pools will maintain the token price throughout the sale until the initial supply is bought.\n\nWith Polkastarter, decentralized projects will be able to raise and exchange capital cheap and fast. Users will be able to participate in a secure and compliant environment and to use assets that go way beyond the current ERC20 standard.\n\nFor more information about Polkastarter, please visit [https://polkastarter.com/ ](https://polkastarter.com/) \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\nAny unintentional withdrawing/draining of funds from the staking contract on ETH and BSC (i.e. theft of the POLS staked)\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll critical bug reports must come with a PoC in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nPayouts are handled by the __Polkastarter__ team directly and are denominated in USD. Payouts are done in __USDC__ or __USDT__, up to the discretion of the team.",
            "assets_body": "All smart contracts of Polkastarter can be found at [https://github.com/polkastarter](https://github.com/polkastarter). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\nLoss of user funds staked (principal) by freezing or theft.\n\n__Web/App__\n\nAnything that can lead to loss of user funds.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\nSmart Contracts and Blockchain \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\nSmart Contracts and Blockchain\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nWebsites and Apps\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "polygon",
          "project": "Polygon",
          "date": "2021-09-13T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/8EEzTabH4B0Palx5UgpL8/4d800cd963e02d33e39872b4030e7e2f/Polygon__1_.jpeg",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $75,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x1d21fACFC8CaD068eF0cbc87FdaCdFb20D7e2417",
              "type": "Smart Contract - BytesLib "
            },
            {
              "target": "https://etherscan.io/address/0x31851aAf1FA4cC6632f45570c2086aDcF8B7BD75",
              "type": "Smart Contract - Common"
            },
            {
              "target": "https://etherscan.io/address/0x71d91a8988D81617be53427126ee62471321b7DF",
              "type": "Smart Contract - ECVerify"
            },
            {
              "target": "https://etherscan.io/address/0x8b90C7633F1f751E19E76433990B1663c625B258",
              "type": "Smart Contract - Merkle"
            },
            {
              "target": "https://etherscan.io/address/0x8E51a119E892D3fb324C0410F11f39F61dec9DC8",
              "type": "Smart Contract - MerklePatriciaProof"
            },
            {
              "target": "https://etherscan.io/address/0x61AdDcD534Bdc1721c91740Cf711dBEcE936053e",
              "type": "Smart Contract - PriorityQueue"
            },
            {
              "target": "https://etherscan.io/address/0x021c2Bf4d2941cE3D593e07317EC355937bae495",
              "type": "Smart Contract - RLPEncode"
            },
            {
              "target": "https://etherscan.io/address/0xD75f1d6A8A7Dc558A65c2f30eBF876DdbeE035a2",
              "type": "Smart Contract - RLPReader"
            },
            {
              "target": "https://etherscan.io/address/0x96D358795782a73d90F2ed2d505aB235D197ca05",
              "type": "Smart Contract - SafeMath"
            },
            {
              "target": "https://etherscan.io/address/0x98165b71cdDea047C0A49413350C40571195fd07",
              "type": "Smart Contract - Governance"
            },
            {
              "target": "https://etherscan.io/address/0x6e7a5820baD6cebA8Ef5ea69c0C92EbbDAc9CE48",
              "type": "Smart Contract - GovernanceProxy"
            },
            {
              "target": "https://etherscan.io/address/0x33a02E6cC863D393d6Bf231B697b82F6e499cA71",
              "type": "Smart Contract - Registry"
            },
            {
              "target": "https://etherscan.io/address/0x536c55cFe4892E581806e10b38dFE8083551bd03",
              "type": "Smart Contract - RootChain"
            },
            {
              "target": "https://etherscan.io/address/0x86E4Dc95c7FBdBf52e33D563BbDB00823894C287",
              "type": "Smart Contract - RootChainProxy"
            },
            {
              "target": "https://etherscan.io/address/0xc4FA447A0e77Eff9717b09C057B40570813bb642",
              "type": "Smart Contract - ValidatorShareFactory"
            },
            {
              "target": "https://etherscan.io/address/0xa59C847Bd5aC0172Ff4FE912C5d29E5A71A7512B",
              "type": "Smart Contract - StakingInfo"
            },
            {
              "target": "https://etherscan.io/address/0x47Cbe25BbDB40a774cC37E1dA92d10C2C7Ec897F",
              "type": "Smart Contract - StakingNFT"
            },
            {
              "target": "https://etherscan.io/address/0xd6f5c46d4e1a02f9d145cee41d2f8af30d8d2d76",
              "type": "Smart Contract - StakeManager"
            },
            {
              "target": "https://etherscan.io/address/0x5e3Ef299fDDf15eAa0432E6e66473ace8c13D908",
              "type": "Smart Contract - StakeManagerProxy"
            },
            {
              "target": "https://etherscan.io/address/0x01F645DcD6C796F6BC6C982159B32fAaaebdC96A",
              "type": "Smart Contract - SlashingManager"
            },
            {
              "target": "https://etherscan.io/address/0x01d5dc56ad4206bb0c132d834644d57f51fed5ec",
              "type": "Smart Contract - ValidatorShare"
            },
            {
              "target": "https://etherscan.io/address/0x28e4F3a7f651294B9564800b2D01f35189A5bFbE",
              "type": "Smart Contract - StateSender"
            },
            {
              "target": "https://etherscan.io/address/0xd505C3822C787D51d5C2B1ae9aDB943B2304eB23",
              "type": "Smart Contract - DepositManager"
            },
            {
              "target": "https://etherscan.io/address/0x401F6c983eA34274ec46f84D70b31C151321188b",
              "type": "Smart Contract - DepositManagerProxy"
            },
            {
              "target": "https://etherscan.io/address/0x017C89Ca4Bda3D66cC65E3d20DD95432258201Ca",
              "type": "Smart Contract - WithdrawManager"
            },
            {
              "target": "https://etherscan.io/address/0x2A88696e0fFA76bAA1338F2C74497cC013495922",
              "type": "Smart Contract - WithdrawManagerProxy"
            },
            {
              "target": "https://etherscan.io/address/0xDF74156420Bd57ab387B195ed81EcA36F9fABAca",
              "type": "Smart Contract - ExitNFT"
            },
            {
              "target": "https://etherscan.io/address/0x158d5fa3ef8e4dda8a5367decf76b94e7effce95",
              "type": "Smart Contract - ERC20PredicateBurnOnly"
            },
            {
              "target": "https://etherscan.io/address/0x54150f44c785d412ec262fe895cc3b689c72f49b",
              "type": "Smart Contract - ERC721PredicateBurnOnly"
            },
            {
              "target": "https://etherscan.io/address/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0",
              "type": "Smart Contract - MaticToken"
            },
            {
              "target": "https://etherscan.io/address/0x96CDDF45C0Cd9a59876A2a29029d7c54f6e54AD3",
              "type": "Smart Contract - RootERC721"
            },
            {
              "target": "https://etherscan.io/address/0xa45b966996374E9e65ab991C6FE4Bfce3a56DDe8",
              "type": "Smart Contract - MaticWeth"
            },
            {
              "target": "https://etherscan.io/address/0x195fe6EE6639665CCeB15BCCeB9980FC445DFa0B",
              "type": "Smart Contract - Merkle"
            },
            {
              "target": "https://etherscan.io/address/0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa",
              "type": "Smart Contract - MerklePatriciaProof"
            },
            {
              "target": "https://etherscan.io/address/0xBEFe614A45A8300f2a4A00fb634b7137b6b1Bc47",
              "type": "Smart Contract - RLPReader"
            },
            {
              "target": "https://etherscan.io/address/0xeFfdCB49C2D0EF813764B709Ca3c6fe71f230E3e",
              "type": "Smart Contract - SafeERC20"
            },
            {
              "target": "https://etherscan.io/address/0x6EBEAC13f6403D19C95b6B75008B12fd21a93Aab",
              "type": "Smart Contract - SafeMath"
            },
            {
              "target": "https://etherscan.io/address/0x7cfa0f105a4922e89666d7d63689d9c9b1ea7a19",
              "type": "Smart Contract - RootChainManager"
            },
            {
              "target": "https://etherscan.io/address/0xA0c68C638235ee32657e8f720a23ceC1bFc77C77",
              "type": "Smart Contract - RootChainManagerProxy"
            },
            {
              "target": "https://etherscan.io/address/0x608669d4914eec1e20408bc4c9efff27bb8cbde5",
              "type": "Smart Contract - ERC20Predicate"
            },
            {
              "target": "https://etherscan.io/address/0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf",
              "type": "Smart Contract - ERC20PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0xb272b6d99858b0efb079946942006727fe105201",
              "type": "Smart Contract - ERC721Predicate"
            },
            {
              "target": "https://etherscan.io/address/0xE6F45376f64e1F568BD1404C155e5fFD2F80F7AD",
              "type": "Smart Contract - ERC721PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0x62d7e87677ac7e3bd02c198e3fabeffdbc5eb2a3",
              "type": "Smart Contract - ERC1155Predicate"
            },
            {
              "target": "https://etherscan.io/address/0x0B9020d4E32990D67559b1317c7BF0C15D6EB88f",
              "type": "Smart Contract - ERC1155PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0xFdc26CDA2d2440d0E83CD1DeE8E8bE48405806DC",
              "type": "Smart Contract - MintableERC20Predicate"
            },
            {
              "target": "https://etherscan.io/address/0x9923263fA127b3d1484cFD649df8f1831c2A74e4",
              "type": "Smart Contract - MintableERC20PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0x58adfa7960bf7cf39965b46d796fe66cd8f38283",
              "type": "Smart Contract - MintableERC721Predicate"
            },
            {
              "target": "https://etherscan.io/address/0x932532aA4c0174b8453839A6E44eE09Cc615F2b7",
              "type": "Smart Contract - MintableERC721PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0x62414d03084eeb269e18c970a21f45d2967f0170",
              "type": "Smart Contract - MintableERC1155Predicate"
            },
            {
              "target": "https://etherscan.io/address/0x2d641867411650cd05dB93B59964536b1ED5b1B7",
              "type": "Smart Contract - MintableERC1155PredicateProxy"
            },
            {
              "target": "https://etherscan.io/address/0x499a865ac595e6167482d2bd5a224876bab85ab4",
              "type": "Smart Contract - EtherPredicate"
            },
            {
              "target": "https://etherscan.io/address/0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30",
              "type": "Smart Contract - EtherPredicateProxy"
            },
            {
              "target": "https://polygonscan.com/address/0xD9c7C4ED4B66858301D0cb28Cc88bf655Fe34861",
              "type": "Smart Contract - ChildChain"
            },
            {
              "target": "https://polygonscan.com/address/0x8cc8538d60901d19692F5ba22684732Bc28F54A3",
              "type": "Smart Contract - MaticWeth"
            },
            {
              "target": "https://polygonscan.com/address/0x0000000000000000000000000000000000001010",
              "type": "Smart Contract - MaticToken"
            },
            {
              "target": "https://polygonscan.com/address/0xa35363CFf92980F8268299D0132D5f45834A9527",
              "type": "Smart Contract - RootERC721"
            },
            {
              "target": "https://polygonscan.com/address/0xa40fc0782bee28dd2cf8cb4ac2ecdb05c537f1b5",
              "type": "Smart Contract - ChildChainManager"
            },
            {
              "target": "https://polygonscan.com/address/0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa",
              "type": "Smart Contract - ChildChainManagerProxy"
            },
            {
              "target": "https://polygonscan.com/address/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619",
              "type": "Smart Contract - MaticWETH"
            },
            {
              "target": "https://wallet.matic.network",
              "type": "Web/App"
            },
            {
              "target": "https://wallet.polygon.technology",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Polygon provides the core components and tools to join the new, borderless economy and society. With Polygon, any project can easily spin-up a dedicated blockchain network which combines the best features of stand-alone blockchains (sovereignty, scalability and flexibility) and Ethereum (security, interoperability and developer experience). Additionally, these blockchains are compatible with all the existing Ethereum tools (Metamask, MyCrypto, Remix etc), and can exchange messages among themselves and with Ethereum.\n\nFor more information about Polygon, please visit [https://polygon.technology/](https://polygon.technology/). \n\nThis bug bounty program is focused on their smart contracts and apps and is focused on preventing the following impacts:\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Checkpoint manipulation\n  - Protection of Delegated and Staked Amount on Smart Contract\n  - Securing Bridge Transfers (Minting, Withdrawal)\n  - Double spend by getting the clients to accept a different chain\n  - Double spend by validating malicious blocks\n  - Tamper/manipulate blockchain history to invalidate transactions\n  - Cause a user to mint tokens to own account\n  - Undermine consensus mechanism to split the chain\n  - Censorship (e.g. on checkpoints)\n  - Steal tokens from node\n  - Prevent node from accessing the network\n  - Abuse bugs in the economic system to defraud other participants (e.g. avoid transaction fees to full nodes)\n  - Denial of service attacks\n  - Chain halt and shutting down the network ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA PoC and a suggestion for a fix is required for all Critical and High bug reports. Additionally, a PoC is required for Medium Web/App bug reports. A high-quality suggestion for a fix may come with a bonus from the Polygon team.\n\nAll bug reports must include the following information in order to be considered for a reward:\n\nSummary:\n  - add summary of the vulnerability\n\nSteps To Reproduce:\n  - add details for how we can reproduce the issue\n\n  1.  add step\n  1.  add step\n  1.  add step\n\nSupporting Material/References:\n - list any additional material (e.g. screenshots, logs, etc.)\n    - attachment / reference\n\nBug reports containing the following will not be eligible for a reward with this bug bounty program:\n\n  - Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Attacks requiring MITM or physical access to a user's device.\n  - Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis.\n\nCritical Smart Contract bug reports are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk but may include branding and PR aspects at the discretion of the team. However, they have a minimum reward of __USD 100 000__. \n\nPayouts are handled by the __Polygon__ team directly and are denominated in USD. However, payouts are done in __MATIC__. The Polygon team may, at its discretion, allow for other options to be done.",
            "assets_body": "Only the web/app assets explicitly listed here are in-scope. All else is out-of-scope.\n\nRelevant smart contracts of Polygon can be found at:\n\n[https://github.com/maticnetwork/contracts](https://github.com/maticnetwork/contracts)\n\n[https://github.com/maticnetwork/pos-portal](https://github.com/maticnetwork/contracts)\n\n[https://github.com/fx-portal/contracts](https://github.com/maticnetwork/contracts)\n\n[https://github.com/maticnetwork/genesis-contracts](https://github.com/maticnetwork/genesis-contracts) \n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Checkpoint manipulation\n  - Protection of Delegated and Staked Amount on Smart Contract\n  - Securing Bridge Transfers (Minting, Withdrawal)\n  - Double spend by getting the clients to accept a different chain\n  - Double spend by validating malicious blocks\n  - Tamper/manipulate blockchain history to invalidate transactions\n  - Cause a user to mint tokens to own account\n  - Undermine consensus mechanism to split the chain\n  - Censorship (e.g. on checkpoints)\n  - Steal tokens from node\n  - Prevent node from accessing the network\n  - Abuse bugs in the economic system to defraud other participants (e.g. avoid transaction fees to full nodes)\n  - Denial of service attacks\n  - Chain halt and shutting down the network \n\n__Web/App__\n\n  - Domain takeover\n  - Denial of service\n  - Access on server\n  - Users spoofing other users\n  - Redirected funds by address modification",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "sifchain",
          "project": "Sifchain",
          "date": "2021-08-31T03:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7ppRrHrTdDJumDhdIHcGIb/0b2f3becd832fcc96548e3f4c6b03169/Sifchain.jpeg",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x714b49640c2a545b672e8bbd53cc8935725c6a14#code",
              "type": "Smart Contract - BridgeBank"
            },
            {
              "target": "https://etherscan.io/address/0x0cef3eb4733bb64cdb00fede6a9e7aaa7aa2067a#code",
              "type": "Smart Contract - CosmosBridge"
            },
            {
              "target": "https://dex.sifchain.finance",
              "type": "Web/App (production)"
            },
            {
              "target": "https://testnet.sifchain.finance",
              "type": "Web/App (testnet version of above)"
            },
            {
              "target": "https://github.com/sifchain/sifnode",
              "type": "Blockchain - Node Software"
            }
          ],
          "mdx": {
            "program_overview": "Built with the Cosmos SDK, Sifchain processes substantially more transactions per second than Ethereum, making it 100x more efficient than the current leading DEXes. This equates to faster trades and lower fees. Sifchain will target 20–25 blockchains (such as Ethereum and Stellar) for cross-chain integration. Sifchain’s goal is for new blockchains to consider cross-chain integration as essential as a wallet or block explorer. Liquidity from all cryptocurrencies can then be accessed on-chain, allowing the coordinated deployment of capital from all cryptocurrencies by DAOs. Sifchain uses a two-way peg protocol which results in the swap of pegged tokens.\n\nSifchain combines the best elements of liquidity pools and order books for optimal order execution. While decentralized exchanges are currently dominated by liquidity pool algorithms optimized for token swaps, Sifchain will rethink the formulas used for liquidity pool algorithms from first principles of complexity theory to implement adaptive AMMs suitable to limit orders and token swaps alike.\n\nFor more information about Sifchain, please visit [https://sifchain.finance/](https://sifchain.finance/).  \nFor more information about how Sifchain works, see [https://docs.sifchain.finance/](https://docs.sifchain.finance/).\n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Thefts and freezing of of any funds anywhere\n  - Anything which brings down or disrupts any portion of our chain\n  - Leak of any private info ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. A PoC is not required for smart contract and blockchain vulnerabilities. However, one may be requested if validity is questioned. \n\nFor both Smart Contract and web/app bugs, only those that are explicitly within the Impacts in Scope section are considered as in-scope of the bug bounty program. Additionally, for added clarification, the following vulnerabilities are explicitly out-of-scope in the bug bounty program:\n\n  - Anything involving DDoS\n  - Anything involving third party distributed system dependencies, especially various open source IBC relayer nodes, and overloading/crashing them\n  -  Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n  - Previously known vulnerabilities in Tendermint and or/any other fork of these.\n  - Previously known vulnerabilities in Cosmos SDK and or/any other fork of these.\n  - Previously known vulnerable libraries without a working Proof of Concept.\n  - Public Zero-day vulnerabilities that have had an official patch for less than 1 month will be awarded on a case by case basis.\n  - Findings related to the encryption or access control of the third party wallets.\n\nThe maximum payout for a “Critical” bounty is capped at 10% of direct economic damage, primarily focusing on the funds at risk as well as branding and PR considerations at the discretion of the team with a maximum payout of __USD 2 000 000__ but with a minimum payout of __USD 50 000__. \n\nPayouts are handled by the __Sifchain__ team directly and are denominated in USD. However, payouts are done in __USDT__, __USDC__, __ETH__, or __BTC__, at the discretion of the team.",
            "assets_body": "Further information about the smart contracts in Sifchain can be found at [https://github.com/Sifchain/sifnode/tree/master/smart-contracts](https://github.com/Sifchain/sifnode/tree/master/smart-contracts). However, only those in the assets in scope table are considered as in-scope of the bug bounty program. \n\nFurther information about the Web/App can be found at [https://github.com/sifchain/sifchain-ui](https://github.com/sifchain/sifchain-ui). Additionally, all other web/app components of the project are out-of-scope for this bug bounty program. \n\nWeb/App vulnerabilities not directly involving the assets listed in this table are out of scope. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts and Blockchain__\n\n  - Loss of any funds by freezing or theft\n  - Gaining unauthorized permissions or access to privileged roles\n  - Any crashing or loss of availability of our blockchain\n\n__Web/App__\n\n  - Direct loss of any funds by freezing or theft\n  - Gaining unauthorized permissions or access to privileged roles\n  - Any crashing or loss of availability of our blockchain",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Any vulnerability that can result in the impacts stated in the Impacts in Scope section",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Anything without economic damage or direct damage to the blockchain\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "lidoforsolana",
          "project": "Lido for Solana",
          "date": "2021-08-30T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/11dLLA8sFzThlFElaXan2L/ca5171d4c01b67f8d57bf8dbadb64657/Solido.png",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000 to $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000 to $400,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000 to $100,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $40,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500 to $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/ChorusOne/solido/tree/main/program",
              "type": "Smart Contract - Main Program"
            },
            {
              "target": "https://github.com/chorusone/multisig",
              "type": "Smart Contract - Multisig"
            },
            {
              "target": "https://chorusone.github.io/solido/deployments",
              "type": "Smart Contract - Testnet Addresses"
            },
            {
              "target": "https://solana.lido.fi ",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Lido for Solana is a Lido-DAO governed liquid staking protocol for the Solana blockchain. Anyone who stakes their SOL tokens with Lido will be issued an on-chain representation of SOL staking position with Lido validators, called stSOL. Lido for Solana will work to integrate stSOL widely into the Solana DeFi ecosystem to enable stSOL users to make use of their staked assets in a variety of applications.\n\nFor more information about Lido, the parent project, please visit their main bug bounty program at [https://immunefi.com/bounty/lido/](https://immunefi.com/bounty/lido/). \n\nFor more information about Lido for Solana itself, please visit [https://chorusone.github.io/solido/](https://chorusone.github.io/solido/). \n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Freeze of user funds\n  - Governance manipulation\n  - Denial of service on smart contracts\n  - Redirected funds by address modification\n  - Denial of service\n  - Leak of user data\n  - Injection of texts\n  - RCE",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. \n\n__Smart Contracts Rewards Breakdowns__\n\n  - __Smart Contracts Critical:__\n\n    - Loss of user funds: \n      - 1% of assets at risk, minimum 100 000 USD, maximum 2 000 000 USD\n    - Loss of non-user funds (e.g. treasury): \n      - 1% of assets at risk, minimum  50 000 USD , maximum 1 000 000 USD\n\n  - __Smart Contracts High:__\n\n    - 1% of assets at risk when attack persists for 1 month\n      -  minimum 20 000 USD, maximum of 400 000 USD\n\n  - __Smart Contracts Medium:__\n\n    - 1% of assets at risk when attack persists for 1 month \n      - minimum 5 000 USD, maximum 100 000 USD\n\n  - __Smart Contracts Low:__\n\n     - 2 000 USD\n\n__Web/App Rewards Breakdowns__\n\n  - __Web/App Critical:__\n\n    -  40 000 USD\n\n  - __Web/App High:__\n\n    -  7 500 USD  \n    -  If attack can modify the transaction users approve so it sends funds to the wrong address: then this reward increases to a total of 40 000 USD\n\n  - __Web/App Medium:__\n\n    -  3 250 USD\n\n  - __Web/App Low:__\n\n    -  500 USD  \n\nPayouts are handled by the __Solido__ __(Lido for Solana)__ department of the __Lido__ team directly and are denominated in USD. Payouts can be done in __ETH__, __DAI__, __RAI__, or __LDO__, at the decision of the bug bounty hunter.",
            "assets_body": "For the “Main Program”, only the on-chain program in the “program” subdirectory of the repository is in scope. The “cli” subdirectory is not. Please use the main branch.\n\nFor the “Multisig”, the addresses listed in the readme are the deployments of the upstream Serum Multisig program, these are not the addresses used by Lido for Solana. Please use the commit that is pinned as the “multisig” submodule in the solido repository.\n\nOnce launched on mainnet, the testnet addresses will be removed from the Assets in Scope table and replaced with mainnet contracts. \n\nFor researchers who want to start their research early, a development version is available at [https://solana-dev.testnet.lido.fi/](https://solana-dev.testnet.lido.fi/), but this devnet deployment is not in scope. Additionally, any web/app bugs not directly related to what is in the Assets in Scope table but relevant for lido.fi, should be submitted in their [main bug bounty program](https://immunefi.com/bounty/lido/), assuming it fulfills all other requirements. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked by freezing or theft\n  - Ability to gain more stSOL than the Solido exchange rate allows for a given SOL deposit\n  - Ability to gain more SOL than the Solido exchange rate allows for a given stSOL withdrawal\n  - Loss of governance funds (treasury or developer fees)\n  - Ability to manipulate manager-gated parameters without 4/7 multisig approval.\n    - Changing the Solido fee percentages\n    - Changing the validator list\n    - Changing the maintainer list\n    - Changing the multisig owner list\n    - Upgrading the Solido or multisig program\n  - Ability to stake deposits without a signature from a maintainer\n  - Preventing Solido from making progress\n    - Preventing users from depositing\n    - Indefinitely preventing users from withdrawing\n    - Preventing staking of new deposits\n    - Preventing exchange rate updates\n    - Preventing collecting validation rewards\n    - Preventing validators from claiming their fee\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Accessing sensitive pages without authorization\n  - Injection of text\n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solana details not considered\n    - including integer over-/under-flow that does not fail the transaction\n    - including balance dropping below the rent-exempt amount for essential accounts\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of compute units\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Reports about outdated dependencies\n  - Reports about vulnerabilities in dependencies, when those vulnerabilities do not impact Solido’s use of the dependency\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "lido",
          "project": "Lido",
          "date": "2021-05-22T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1juChpOkenRApXgGp4CcXF/7fe8265cab1624d296bbeb316cc76d8f/LDO.png",
          "maximum_reward": 2000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000 to $2,000,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000 to $400,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000 to $100,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $40,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500 to $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": "https://docs.lido.fi/security/bugbounty",
          "assets_in_scope": [
            {
              "target": "https://docs.lido.fi/deployed-contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/dc4bc",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/steth-price-feed",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/curve-merkle-oracle",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/lido-dao",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/lido-council-daemon",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/easy-track",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/lidofinance/anchor-collateral-steth/",
              "type": "Smart Contract"
            },
            {
              "target": "https://lido.fi",
              "type": "Website/App"
            },
            {
              "target": "https://stake.lido.fi",
              "type": "Website/App"
            },
            {
              "target": "https://help.lido.fi/",
              "type": "Website/App"
            },
            {
              "target": "https://easytrack.lido.fi/",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "Lido is a liquid staking solution for ETH 2.0 backed by industry-leading staking providers. Lido lets users stake their ETH - without locking assets or maintaining infrastructure - whilst participating in on-chain activities, e.g. lending.\n\nLido attempts to solve the problems associated with initial ETH 2.0 staking - illiquidity, immovability and accessibility - making staked ETH liquid and allowing for participation with any amount of ETH to improve security of the Ethereum network.\n\nFor more information about Lido, please visit [Lido.fi](https://lido.fi/). \n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds, denial of service, governance hijacks, data breaches, and data leaks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\n__Smart Contracts Rewards Breakdowns__\n\n  - __Smart Contracts Critical:__\n\n    - Loss of user funds: \n      - 1% of assets at risk, minimum 100 000 USD, maximum 2 000 000 USD\n    - Loss of non-user funds (e.g. treasury): \n      - 1% of assets at risk, minimum  50 000 USD , maximum 1 000 000 USD\n\n  - __Smart Contracts High:__\n\n    - 1% of assets at risk when attack persists for 1 month\n      -  minimum 20 000 USD, maximum of 400 000 USD\n\n  - __Smart Contracts Medium:__\n\n    - 1% of assets at risk when attack persists for 1 month \n      - minimum 5 000 USD, maximum 100 000 USD\n\n  - __Smart Contracts Low:__\n\n     - 2 000 USD\n\n__Web/App Rewards Breakdowns__\n\n  - __Web/App Critical:__\n\n    -  40 000 USD\n\n  - __Web/App High:__\n\n    -  7 500 USD  \n    -  If attack can modify the transaction users approve so it sends funds to the wrong address: then this reward increases to a total of 40 000 USD\n\n  - __Web/App Medium:__\n\n    -  3 250 USD\n\n  - __Web/App Low:__\n\n    -  500 USD  \n\nPayouts are handled by the __Lido__ team directly and are denominated in __USD__. Payouts can be done in __ETH__, __DAI__, __RAI__, or __LDO__, at the decision of the bug bounty hunter.",
            "assets_body": "Smart Contracts labeled or categorized as testnet are not in scope of this bug bounty program. \n\nSubdomains other than the one listed in this table are not included in the bug bounty program scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tokemak",
          "project": "Tokemak",
          "date": "2021-08-24T03:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6k60oMMHjDXQQ6lY5LA8mf/9ac1ddab3bc903d1c2df1c9a94d65f0d/Tokemak.jpeg",
          "maximum_reward": 1500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,500,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://tokemak.xyz",
              "type": "Web/App"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/balance-tracker/BalanceTracker.sol",
              "type": "Smart Contract - BalanceTracker.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/BalancerController.sol",
              "type": "Smart Contract - BalancerController.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/BaseController.sol",
              "type": "Smart Contract - BaseController.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/ConvexController.sol",
              "type": "Smart Contract - ConvexController.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/CurveControllerTemplate.sol",
              "type": "Smart Contract - CurveControllerTemplate.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/SushiswapControllerV1.sol",
              "type": "Smart Contract - SushiswapControllerV1.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/SushiswapControllerV2.sol",
              "type": "Smart Contract - SushiswapControllerV2.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/TransferController.sol",
              "type": "Smart Contract - TransferController.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/controllers/UniswapController.sol",
              "type": "Smart Contract - UniswapController.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/event-proxy/EventProxy.sol",
              "type": "Smart Contract - EventProxy.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/manager/Manager.sol",
              "type": "Smart Contract - Manager.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/pools/EthPool.sol",
              "type": "Smart Contract - EthPool.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/pools/Pool.sol",
              "type": "Smart Contract - Pool.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/pools/TokeVotePool.sol",
              "type": "Smart Contract - TokeVotePool.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/rewards/Rewards.sol",
              "type": "Smart Contract - Rewards.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/rewards/RewardsHash.sol",
              "type": "Smart Contract - RewardsHash.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/staking/Staking.sol",
              "type": "Smart Contract - Staking.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/token/Toke.sol",
              "type": "Smart Contract - Toke.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/vote/OnChainVoteL1.sol",
              "type": "Smart Contract - OnChainVoteL1.sol"
            },
            {
              "target": "https://github.com/Tokemak/tokemak-smart-contracts-public/blob/main/contracts/vote/VoteTracker.sol",
              "type": "Smart Contract - VoteTracker.sol"
            }
          ],
          "mdx": {
            "program_overview": "Tokemak is a decentralized liquidity providing/market making protocol designed to create efficient, sustainable liquidity across DeFi.\n\nLiquidity providers deposit assets into their respective ”token reactors” (e.g. AAVE, SNX, MKR, etc.).  Tokemak’s native protocol token, TOKE, is used to direct liquidity for each asset into DeFi markets such as Uniswap, Sushiswap, Balancer and 0x. TOKE can be thought of as tokenized liquidity. When staking to a given asset’s token reactor, TOKE holders control not only where the liquidity gets directed, but also what market receives liquidity, pulling from Tokemak’s reserves of ETH and Stablecoins.\n\nFor more information about Tokemak, please visit [https://www.tokemak.xyz/](https://www.tokemak.xyz/) and [https://medium.com/tokemak](https://medium.com/tokemak)\n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Redirected funds by address modification\n  - Users spoofing other users",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports are required to come with a PoC. A suggestion for a fix is also required for all severity levels. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and marketing considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__. \n\nPayouts are handled by the __Tokemak__ team directly and are denominated in USD. However, payouts are done in __ETH__, __TOKE__, or stablecoins, at the discretion of the team.",
            "assets_body": "However, only those in the table are considered as in-scope of the bug bounty program. \n\nAll issues found in [this document](https://docs.google.com/document/d/1qcLv6_lggVSadDB4CTg8wPSrQxMprVqR9h997g87YxQ/edit) are considered as out-of-scope of this bug bounty program.\n\nFor further reference, the relevant GitHub can be found at [https://github.com/Tokemak/tokemak-smart-contracts-public/tree/main](https://github.com/Tokemak/tokemak-smart-contracts-public/tree/main). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Direct theft or permanent freezing of staked funds in Tokemak contracts (Critical)\n    - (this item currently excludes capital deployed into other protocols)\n  - Theft of unclaimed yield (High)\n  - Freezing of staked funds in Tokemak contracts for more than 10 minutes (High)\n    - (excludes filling blocks so Manager contract unable to rollover cycles)\n  - Freezing of unclaimed yield for a period of more than 10 minutes (High)\n\n__Web/App__\n\n  - Redirected funds by address modification (Critical)\n  - Users spoofing other users leading to loss of user funds (Critical)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "delta",
          "project": "Delta",
          "date": "2021-03-07T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4X7DdJX8fcDPU53J3zbPpt/8836c50bdb4c0fb0b0572ce32b2eb191/Delta-logo.jpg",
          "maximum_reward": 1500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $1,500,000"
            },
            {
              "level": "high",
              "payout": "up to USD $25,000"
            },
            {
              "level": "medium",
              "payout": "up to USD $10,000"
            },
            {
              "level": "low",
              "payout": "up to USD $2,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Delta-Financial/Smart-Contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Delta-Financial/Smart-Contracts/blob/master/contracts/v076/DELTAToken.sol",
              "type": "Smart contract - DeltaToken"
            },
            {
              "target": "https://github.com/Delta-Financial/Smart-Contracts/blob/master/contracts/v076/Periphery/Vaults/DELTA_Deep_Farming_Vault.sol",
              "type": "Smart contract - Deep Farming Vault"
            },
            {
              "target": "https://github.com/Delta-Financial/Smart-Contracts/blob/master/contracts/v076/Periphery/DELTA_Rebasing_Liquidity_Token.sol",
              "type": "Smart contract - rebasing LP"
            }
          ],
          "mdx": {
            "program_overview": "Delta is a tokenized form of liquidity that aims to create competitive Options\nthrough unique liquidity deployments. Two tokens work together inside the\nsystem to achieve Delta's Open Vesting Liquidity. The Delta token, which\ncreates vesting schedules upon transfer and the rLP token which secures the\ninfrastructure through the locking of assets.\n\nDelta has a vesting mechanism built into its token that is triggered on\ntransfer. This vesting period is based on a block number schedule. When Delta\nis transferred, a token vesting schedule is activated. 10% of the total token\nbalance is sent to the user while 90% is initially locked and released\nlinearly, over a 2 week period.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds, general improvements and gas improvements.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount for critical smart contract and blockchain vulnerabilities is capped at 10% of the funds at risk based on the vulnerability reported.\n\nThe likelihood of exploitability is also taken into consideration in the\ndetermination of the final payout amount based on the severity of the bug\nreported according to the table below:\n\n| | Low | Medium | High | Critical |\n| :-- | :-- | :-- | :-- | :-: |\n| Almost Certain | $2,000 | $10,000 | $25,000 | $1,500,000 |\n| Likely | $1,000 | $5,000 | $10,000 | $25,000 | \n| Possible | $500 | $1,000 | $5,000 | $10,000 |\n| Unlikely  | $200 | $750 | $2,000 | $5,000 |\n| Almost Possible | $200 | $500 | $1,000 | $3,500 |\n\nIn addition to the Immunefi Vulnerability Severity Classification System, the\nfollowing information is provided by the Delta team for further\nclarity. Whenever there is a conflict between these two, the information\nprovided by the Delta team here will prevail.\n\n**Critical**\n\n- Minting bug on tokens (Anything that gives you more tokens than you should\n  have, creating tokens out of air)\n- Liquidity removal under any conditions\n- Abusing and stealing funds from the Deep Farming Vault (if it can be done on\n  a mass scale)\n- Raising the price with rebasing\n\n**High or Medium** (depending on exploitability and impact)\n\n- Deep Farming Vault inefficiencies - bugs reported need to have a write up\n  that explains how it happens or an EVM proof in our suite of tests (hardhat)\n  - Exploits that could benefit individuals “in-the-know”\n\n**Low**\n\n- Increasing volume generated by the rebasing LP (rebasing LP contract)\n\n**Special Reward: Gas improvements**\n\nA special reward of up to $2,000 for gas improvements is provided. Prove and\nexplain why calls could use less gas. The priority is the Delta token and the\nmost incentivized is the Delta token. After that in priority is the deep\nfarming vault. Gas usage is not a priority in other contracts - safety is.\n\nPayouts are handled by **Delta** team directly and are denominated in\n**USD**. All payouts are done in **ETH**. This bug bounty program has a maximum\ncumulative amount of $2MM worth of Ethereum for all bug/vulnerability findings.\n\nAs with all bug reports submitted on Immunefi, bug reports are handled on a\nfirst-come-first-serve basis.",
            "assets_body": "As noted in the Delta repository, only smart contracts with the `// DELTA-BUG-BOUNTY` comment are included in the program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "cronos",
          "project": "Cronos",
          "date": "2021-11-08T00:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2roRMtTA7jBK5AcJEJa6sp/8681bfad6e7edeb5f52df2acf1dea8a0/Cronos.png",
          "maximum_reward": 1337133,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1 337 133.70"
            },
            {
              "level": "high",
              "payout": "Up to USD $250 000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $25 000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15 000"
            },
            {
              "level": "high",
              "payout": "USD $7 500"
            },
            {
              "level": "medium",
              "payout": "USD $1 000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/crypto-org-chain/cronos/releases",
              "type": "Blockchain - Cronos"
            },
            {
              "target": "https://github.com/crypto-org-chain/ibc-go/releases",
              "type": "Blockchain - IBC-Go"
            },
            {
              "target": "https://github.com/crypto-org-chain/ethermint/releases",
              "type": "Blockchain - Ethermint"
            },
            {
              "target": "https://vvs.finance/",
              "type": "Web/App"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23",
              "type": "VVS - WCRO"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x3b44b2a187a7b3824131f8db5a74194d0a42fc15",
              "type": "VVS - Factory"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x145863Eb42Cf62847A6Ca784e6416C1682b1b2Ae",
              "type": "VVS - Router"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x2D03bECE6747ADC00E1a131BBA1469C15fD11e03",
              "type": "VVS - Token"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x6a2d178585806De5A2e5E7F9acFCE44680637284",
              "type": "VVS - Workbench"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0xDccd6455AE04b03d785F12196B492b18129564bc",
              "type": "VVS - Craftsman"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x5e954f5972EC6BFc7dECd75779F10d848230345F",
              "type": "VVS - Multicall2"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0xA6fF77fC8E839679D4F7408E8988B564dE1A2dcD",
              "type": "VVS - VVSVault"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0xe61Db569E231B3f5530168Aa2C9D50246525b6d6",
              "type": "VVS - VVSPair - CRO-USDC"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x0A3e766c364D180A4cDB75E97390067ef8063d66",
              "type": "VVS - CraftmanAdmin"
            },
            {
              "target": "https://tectonic.gitbook.io/docs/developer/smart-contracts-and-security",
              "type": "Tectonic Smart Contracts and Security"
            },
            {
              "target": "https://tectonic.gitbook.io/docs/developer/price-oracle",
              "type": "Tectonic Price Oracle"
            },
            {
              "target": "https://cronos.org/explorer/address/0xbc149c62EFe8AFC61728fC58b1b66a0661712e76",
              "type": "VVS - CraftsmanV2"
            },
            {
              "target": "https://cronos.org/explorer/address/0x5C78a8dEAd748Ccfa3D1e70E72854D0CaB2eeAd0",
              "type": "VVS - Rewarder"
            },
            {
              "target": "https://cronoscan.com/address/0xb79dcd181bc79d1774df65658fcbe9916beda3a5",
              "type": "VVS - ConditionalLiquidity"
            }
          ],
          "mdx": {
            "program_overview": "Cronos core team announces a Cronos bug bounty program, with a maximum bounty of up to USD $1,337,133.7 sponsored by Blockchain accelerator Particle B to enhance on-chain security of the Cronos ecosystem. The security campaign, in partnership with Immunefi, is focused on discovering potential technical vulnerabilities and strengthening smart contract security. \n\nThe Cronos core team puts security as its top priority and has dedicated resources to ensure high incentives to attract the community-at-large to evaluate and safeguard the ecosystem. Whilst building Cronos, the team has engaged with industry leading cybersecurity audit firms specializing in Blockchain Security to help secure the codebase of Ethermint. We encourage smart contract developers, whitehat hackers to participate, evaluate the code base and hunt for bugs especially on issues that could potentially put users’ funds at risk. In exchange, the bug bounty program will reward up to USD 1,337,133.7 based on the vulnerability severity level. \n\nThis bug bounty program is focused on Cronos (blockchain), smart contracts and decentralised applications with the emphasis on any vulnerabilities causing unintentional withdrawal/draining of funds/loss of user funds. The program also extends to key projects in the Cronos ecosystem, including VVS Finance as the first project with more DeFi projects to come. \nCronos is the Ethereum Virtual Machine (EVM) chain running in parallel to the Crypto.org Chain. It aims to massively scale the DeFi and decentralised application (DApp) ecosystem, by providing developers with the ability to instantly port apps from Ethereum and EVM-compatible chains. With low cost, high throughput, fast finality, and built-in interoperability, Cronos is poised to bring decentralized applications to the 10M+ user base of the Crypto.com ecosystem and beyond.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on [this severity classification system](https://docs.google.com/document/d/1fo9UA_XNNnQqmpIwivyiZkmquW3makw3/edit?usp=sharing&ouid=100960043094147056181&rtpof=true&sd=true).\n\nAll bug reports must come with a PoC in order to be considered for a reward. For web/app bug reports, if the Report does not include a valid Proof-of-Concept, the qualification of rewards will be decided according to reproducibility and severity of the vulnerability, and the rewards amount may be reduced significantly. The specific amount of the bounty will vary according to:\n\n- The effect of the bug.\n- The cause of the bug.\n- Whether or not the person who reports the bug suggests a solution to the bug or helps in its resolution.\n\nCritical smart contract and blockchain vulnerabilities are capped at 10% of economic damage, primarily focused on the funds at risk, but also taking into account branding and PR considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__. High smart contract and blockchain vulnerabilities are capped up to 100% of the amount of funds that are affected with a minimum reward of __USD 25 000__. Medium smart contract and blockchain vulnerabilities are rewarded based on the level of impact at the discretion of the Cronos team. \n\nAll vulnerabilities that directly affect the Cronos blockchain, smart contract, and app that directly cause unintentional withdrawals, draining of funds, or loss of user funds, are considered as Critical.\n\nThe only web vulnerabilities in scope are those which will directly lead to loss of user funds, or breach of sensitive data, or deletion of site data. As stated in the severity classification system, the Cronos team will use CVSS calculator to figure out the severity and based on that they will determine the reward for the bounty.\n\nAll bug reports payments require KYC completed. In order to receive a payment, submitters must be prepared to do any one of the options listed below. Please indicate your preferred option in the bug report. \n\n1) Create an invoice and [fill out this form](https://docs.google.com/forms/d/e/1FAIpQLScNamV48ENwK78AMAqRHTFaAjcFJ9JWE2V6jlfQaQjur6SS0Q/viewform?usp=sf_link). When your bug report is deemed valid, please submit the form right away. \n2) Register on the [crypto.com](https://crypto.com) app, complete any KYC required, and submit an address generated on the app\n3) Sign up or log in to an external bug bounty platform and receive payment there. ",
            "assets_body": "Only the latest release version deployed to mainnet is considered as in-scope of the bug bounty program. All folders and files labeled as \"Mock\" or \"Test\" are considered as out-of-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Any vulnerabilities causing unintentional withdrawal/draining of funds/loss of user funds\n\n__Web/App__\n\n  - Anything that will directly lead to loss of user funds, or breach of sensitive data, or deletion of site data.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution / SQL injection\n- Significant manipulation of the account balance\n- Leakage of sensitive data\n- XSS/CSRF affecting sensitive actions \n- Theft of privileged information\n- Partial authentication bypass\n- Other vulnerability with clear potential for financial or data loss\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Previously known vulnerabilities (resolved or not) on the Ethereum network (and any other fork of these).\n- Previously known vulnerabilities in Tendermint and or/any other fork of these.\n- Previously known vulnerabilities in cosmos-sdk and or/any other fork of these.\n- Previously known vulnerable libraries without a working Proof of Concept.\n- Public Zero-day vulnerabilities \n- Feature request\n- Best practices\n- VVS-Bench is Out of Scope\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing/Text injection issues\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, directory listing without sensitive information, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- Attacks requiring privileged access from within the organization\n- Clickjacking/UI redressing with minimal security impact\n- Tab-nabbing / Self-XSS / Denial of service (DoS) / Spamming / Usability issues\n- Vulnerabilities only exploitable on out-of-date browsers or platforms\n- Vulnerabilities in third party applications which make use of the Crypto.com OpenAPI\n- Reports from automated tools or scans, without exploitability demonstration\n- Vulnerabilities related to autofill web forms\n- Use of known vulnerable libraries without actual proof of concept\n- Vulnerabilities that require physical access to a user's device\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n\nAdditionally, please do not:\n\n- use scanners or automated tools to find vulnerabilities. They are noisy and we may ban your IP address.\n- attempt non-technical attacks such as social engineering, phishing, or physical attacks against our employees, users, or infrastructure.\n- submit multiple vulnerabilities per submission, unless you need to chain vulnerabilities to provide impact regarding any of the vulnerabilities."
          }
        },
        {
          "id": "tornadocash",
          "project": "Tornado Cash",
          "date": "2022-01-05T11:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7hDoxtjuCUCJx0a17RqMju/ffd5e32c3969bc2e507f47609e1aa9c6/Tornado_Cash_Logo.jpeg",
          "maximum_reward": 1300000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to 32,500 TORN (~Up to USD $1,300,000)"
            },
            {
              "level": "high",
              "payout": "1,625 TORN (~USD $65,000)"
            },
            {
              "level": "medium",
              "payout": "525 TORN (~USD $21,000)"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x12D66f87A04A9E220743712cE6d9bB1B5616B8Fc",
              "type": "Smart Contract - 0.1 ETH Pool"
            },
            {
              "target": "https://etherscan.io/address/0x47CE0C6eD5B0Ce3d3A51fdb1C52DC66a7c3c2936",
              "type": "Smart Contract - 1 ETH Pool"
            },
            {
              "target": "https://etherscan.io/address/0x910Cbd523D972eb0a6f4cAe4618aD62622b39DbF",
              "type": "Smart Contract - 10 ETH Pool"
            },
            {
              "target": "https://etherscan.io/address/0xA160cdAB225685dA1d56aa342Ad8841c3b53f291",
              "type": "Smart Contract - 100 ETH Pool"
            },
            {
              "target": "https://etherscan.io/address/0xD4B88Df4D29F5CedD6857912842cff3b20C8Cfa3",
              "type": "Smart Contract - 100 DAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0xFD8610d20aA15b7B2E3Be39B396a1bC3516c7144",
              "type": "Smart Contract - 1k DAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0x07687e702b410Fa43f4cB4Af7FA097918ffD2730",
              "type": "Smart Contract - 10k DAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0x23773E65ed146A459791799d01336DB287f25334",
              "type": "Smart Contract - 100k DAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0x22aaA7720ddd5388A3c0A3333430953C68f1849b",
              "type": "Smart Contract - 5k cDAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0x03893a7c7463AE47D46bc7f091665f1893656003",
              "type": "Smart Contract - 50k cDAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0x2717c5e28cf931547B621a5dddb772Ab6A35B701",
              "type": "Smart Contract - 500k cDAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0xD21be7248e0197Ee08E0c20D4a96DEBdaC3D20Af",
              "type": "Smart Contract - 5m cDAI Pool"
            },
            {
              "target": "https://etherscan.io/address/0xd96f2B1c14Db8458374d9Aca76E26c3D18364307",
              "type": "Smart Contract - 100 USDC Pool"
            },
            {
              "target": "https://etherscan.io/address/0x4736dCf1b7A3d580672CcE6E7c65cd5cc9cFBa9D",
              "type": "Smart Contract - 1k USDC Pool"
            },
            {
              "target": "https://etherscan.io/address/0x169AD27A470D064DEDE56a2D3ff727986b15D52B",
              "type": "Smart Contract - 100 USDT Pool"
            },
            {
              "target": "https://etherscan.io/address/0x0836222F2B2B24A3F36f98668Ed8F0B38D1a872f",
              "type": "Smart Contract - 1k USDT Pool"
            },
            {
              "target": "https://etherscan.io/address/0x178169B423a011fff22B9e3F3abeA13414dDD0F1",
              "type": "Smart Contract - 0.1 WBTC"
            },
            {
              "target": "https://etherscan.io/address/0x610B717796ad172B316836AC95a2ffad065CeaB4",
              "type": "Smart Contract - 1 WBTC"
            },
            {
              "target": "https://etherscan.io/address/0xbB93e510BbCD0B7beb5A853875f9eC60275CF498",
              "type": "Smart Contract - 10 WBTC"
            },
            {
              "target": "https://etherscan.io/address/0x77777FeDdddFfC19Ff86DB637967013e6C6A116C",
              "type": "Smart Contract - Torn Token"
            },
            {
              "target": "https://etherscan.io/address/0x5efda50f22d34F262c29268506C5Fa42cB56A1Ce",
              "type": "Smart Contract - Governance Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x88fd245fEdeC4A936e700f9173454D1931B4C307",
              "type": "Smart Contract - Reward Verifier"
            },
            {
              "target": "https://etherscan.io/address/0x09193888b3f38C82dEdfda55259A82C0E7De875E",
              "type": "Smart Contract - Withdraw Verifier"
            },
            {
              "target": "https://etherscan.io/address/0x653477c392c16b0765603074f157314Cc4f40c32",
              "type": "Smart Contract - Tree Update Verifier"
            },
            {
              "target": "https://etherscan.io/address/0x5cab7692D4E94096462119ab7bF57319726Eed2A",
              "type": "Smart Contract - Reward Swap"
            },
            {
              "target": "https://etherscan.io/address/0x905b63Fff465B9fFBF41DeA908CEb12478ec7601",
              "type": "Smart Contract - TornadoCash Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x43a3bE4Ae954d9869836702AFd10393D3a7Ea417",
              "type": "Smart Contract - TornadoTrees"
            },
            {
              "target": "https://etherscan.io/address/0x746Aebc06D2aE31B71ac51429A19D54E797878E9",
              "type": "Smart Contract - Miner"
            },
            {
              "target": "https://github.com/tornadocash/circomlib/blob/master/src/poseidon.js",
              "type": "Smart Contract - Poseidon hasher"
            }
          ],
          "mdx": {
            "program_overview": "Tornado Cash is a fully decentralized non-custodial protocol allowing private transactions in the crypto-space. Tornado Cash improves transaction privacy by breaking the on-chain link between source and destination addresses. It uses a smart contract that accepts ETH & other token deposits from one address and enables their withdrawal from a different address.\n\nAs a non-custodial protocol, users keep custody of their cryptocurrencies while operating Tornado Cash. At each deposit, users are provided with the private key enabling the access to the deposited funds, which gives users complete control over their assets.\n\nFor more information about Tornado Cash, please visit [https://tornado.cash/](https://tornado.cash/).  \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts or freezing of funds in anonymity pool\n  - Thefts or freezing of unclaimed yield (TORN anonymity mining)\n  - Theft of governance funds (Main on-chain Tornado DAO treasury only)\n  - On chain governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nThis bug bounty program has fixed rewards in __TORN__. The USD amounts reflected are only estimates. For an up-to-date price of the token, please visit [https://tornado.cash/](https://tornado.cash/).\n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into account the funds at risk. However, there is a minimum reward of __2 000 TORN__. Additionally, the maximum reward is capped at 32 500 TORN, even if 10% of the damage in USD equivalent is greater than the USD equivalent of 32 500 TORN.\n\nPayouts are handled by the __Tornado Cash__ team directly and are denominated in TORN. Payouts are done in __TORN__.",
            "assets_body": "All smart contracts of Tornado Cash can be found at [https://github.com/tornadocash](https://github.com/tornadocash). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts or freezing of funds in anonymity pool\n  - Thefts or freezing of unclaimed yield (TORN anonymity mining)\n  - Theft of governance funds (Main on-chain Tornado DAO treasury only)\n  - On chain governance activity disruption",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Severe break of privacy due to issues with the SNARK logic/code \n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "creamfinance",
          "project": "Cream Finance",
          "date": "2021-04-20T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6lflBKeyB4vMhLKO7xtcHz/b2496c2957f32790b6355af52943e1eb/Creamfinance-logo.jpg",
          "maximum_reward": 1250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $1,250,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $40,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/CreamFi/cream-docs/blob/ethereum-mainnet/lending/lending-contract-address.md",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/CreamFi/compound-protocol",
              "type": "Smart contract"
            },
            {
              "target": "https://app.cream.finance",
              "type": "Web/App"
            },
            {
              "target": "https://api.cream.finance",
              "type": "API"
            }
          ],
          "mdx": {
            "program_overview": "C.R.E.A.M. Finance is a decentralized lending protocol for individuals and protocols to access financial services. The protocol is permissionless, transparent, and non-custodial.\n\nCurrently, C.R.E.A.M. is live on Ethereum, Binance Smart Chain, and Fantom.\n\nC.R.E.A.M. Finance’s smart contract money markets are focused on longtail assets -- with the goal of increasing capital efficiency for all assets in crypto markets. Users are able to lend any supported assets on our markets, and use the provided capital as collateral to borrow another supported asset.\n\nC.R.E.A.M. offers a wide range of tokens on our money markets, including: stablecoins (USDT, USDC, BUSD); interest-bearing stablecoins (yCRV, yyCRV); defi tokens (YFI, SUSHI, CREAM, CREAM); LP-tokens (USDC-ETH SLP, WBTC-ETH SLP); and other cryptocurrencies (ETH, LINK). This list is not exhaustive. \n\nFor more information about C.R.E.A.M, please refer to <Link href=\"https://docs.cream.finance/white-paper\">https://docs.cream.finance/</Link>.\n\nThe bug bounty program is focused around the C.R.E.A.M smart contracts and the \nprevention of loss of user funds, as well as its web and app assets and data breach vulnerabilities.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward for critical smart contract and blockchain bounty payouts \nis capped at 10% of the funds at risk based on the vulnerability \nreported.\n\nThe only web vulnerabilities in scope are those which lead **directly** and \nunequivocally to loss of user funds, a direct breach of data, and the deletion \nof site data.\n\nPayouts are handled by the **Cream Finance** team directly and are denominated \nin **USD**. Payouts are done in **USDC** or **DAI** for payouts equal to or less \nthan **USD 50 000**. When payouts are over USD 50 000 but less than USD 1 250 000, \nup to 80% of the payout will be in **CREAM** with the rest in **USDC** or **DAI**.",
            "assets_body": "Only contracts that are active are considered within the scope of this program.  If a contract is listed as deprecated, it is not considered as in-scope of the bug bounty program. \n\nOnly web/app vulnerabilities that **directly** affect the web/app assets in this table are accepted within the bug bounty program. All others are out-of-scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n- Signature malleability\n- Susceptibility to replay attacks\n- Weak randomness\n- Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites, Apps, and API:**\n\nThe only web vulnerabilities in scope are those which lead directly and \nunequivocally to loss of user funds, a direct breach of data, and the \ndeletion of site data. ",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "sushiswap",
          "project": "SushiSwap",
          "date": "2021-03-26T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/ktA91VW40fkAtwAT2Ygs9/4bccd7ed0e2b2b2ef8f27e783801273e/Sushiswap-logo.png",
          "maximum_reward": 1250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $1,250,000"
            },
            {
              "level": "high",
              "payout": "up to USD $40,000"
            },
            {
              "level": "medium",
              "payout": "up to USD $5,000"
            },
            {
              "level": "low",
              "payout": "up to USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $100,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xF5BCE5077908a1b7370B9ae04AdC565EBd643966",
              "type": "Smart contract - BentoBox"
            },
            {
              "target": "https://etherscan.io/address/0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",
              "type": "Smart contract - Sushi Token"
            },
            {
              "target": "https://etherscan.io/address/0xc2edad668740f1aa35e4d8f227fb8e17dca888cd",
              "type": "Smart contract - MasterChef v1"
            },
            {
              "target": "https://etherscan.io/address/0xe94b5eec1fa96ceecbd33ef5baa8d00e4493f4f3",
              "type": "Smart contract - Treasury Wallet"
            },
            {
              "target": "https://etherscan.io/address/0xc0aee478e3658e2610c5f7a4a2e1777ce9e4f2ac",
              "type": "Smart contract - SushiFactory"
            },
            {
              "target": "https://etherscan.io/address/0xe11fc0b43ab98eb91e9836129d1ee7c3bc95df50",
              "type": "Smart contract - SushiMaker"
            },
            {
              "target": "https://etherscan.io/address/0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f",
              "type": "Smart contract - SushiRouter"
            },
            {
              "target": "https://etherscan.io/address/0x74A81CB5b6996d9347b864b9a1492a6509e51e65",
              "type": "Smart contract - Kashi Lending"
            },
            {
              "target": "https://etherscan.io/address/0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB",
              "type": "Smart contract - ChainlinkOracleV2"
            },
            {
              "target": "https://etherscan.io/address/0x1766733112408b95239aD1951925567CB1203084",
              "type": "Smart contract - SushiSwapSwapperV1"
            },
            {
              "target": "https://etherscan.io/address/0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42",
              "type": "Smart contract - KashiPairMediumRiskV1"
            },
            {
              "target": "https://etherscan.io/address/0xcbe6b83e77cdc011cc18f6f0df8444e5783ed982#code",
              "type": "Smart contract - SushiDistributor"
            },
            {
              "target": "https://sushi.com",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "SushiSwap is an automated market-making (AMM) decentralized exchange (DEX) that\nallows users to provide liquidity for token swaps.\n\nThe bug bounty program is focused around its smart contracts and web app for\nthe purpose of preventing the loss of user funds.\n\nThis bug bounty program is further covered by the [Armor Alliance Bug Bounty Challenge](https://medium.com/immunefi/armor-alliance-bug-bounty-challenge-launched-with-immunefi-250df9219ebc). ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nTheft of Yield vulnerability reports are temporarily not in scope for this bug bounty program, though this attack may be in the future.\n\nAll web/app bug reports must come with a PoC. All bug reports without a PoC will not be accepted under this bug bounty program.\n\nAll critical payments, both for smart contracts and the website, are capped at \n10% of economic damage. The only web vulnerabilities in scope are those which \nlead directly and unequivocally to loss of user funds, such as by spoofing \ntransactions on the Sushi interface.\n\nSushiswap is open to rewarding bounties beyond the critical cap for\nvulnerabilities with extreme impact.\n\nPayouts are handled by the **SushiSwap** team directly and are denominated in **USD**. Payouts worth USD $100,000 and below are done in **USDC**. Payouts beyond USD $100,000 up to USD 1,000,000 are made in **SUSHI**, though the first $100,000 can be made in **USDC** if requested.  Payouts above USD 1,000,000 have the remainder paid in __ARMOR__ under the Armor Alliance Bug Bounty Challenge with a vesting period of up to 24 months. \n",
            "assets_body": "A full list of the smart contracts of SushiSwap can be found in their [Github repository](https://github.com/sushiswap). However, only the contracts listed in this table are considered as within the scope of the bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n  - excluding real market activity\n  - excluding external oracle manipulation\n- Novel governance attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App**\n\n- For web vulnerabilities, Sushiswap is strictly interested in those that cause\n  direct and unequivocal loss or permanent locking of user funds\n- An example would be a vulnerability that lets an attacker spoof transactions\n  on Sushi web applications, leading to theft of funds",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n**All programs**\n\n- Attacks that the reporter has already exploited himself, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles/exchange rate being outdated\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Loss of positive slippage through Sandwich Attacks\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Any and all web vulnerabilities that do not directly lead to loss or\n  permanent locking of user funds are out of scope\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "feiprotocol",
          "project": "Fei Protocol",
          "date": "2021-03-30T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/9cf32cGQXyJrPfozxcZXA/4ffcc4671f8c8ba86fc7d751cea3b5c5/Feiprotocol-logo.png",
          "maximum_reward": 1100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $1,100,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://docs.fei.money/protocol/contract-addresses",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/fei-protocol/fei-protocol-core/pull/95",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/fei-protocol/fei-protocol-core/blob/master/contracts/staking/TribalChief.sol",
              "type": "Smart Contract - TribalChief"
            },
            {
              "target": "https://fei.money/",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "The goal of the Fei Protocol is to maintain a liquid market in which ETH/FEI trades closely to the ETH/USD price. FEI achieves this using Protocol Controlled Value to actively market make and defend the peg throughout DeFi. Governance can add and update DEX integrations and other incentives as needed, which uses the TRIBE governance token.\n\nThe bug bounty program is focused around its smart contracts and website and\nthe prevention of the loss of user funds and the disruption of the governance\nsystem.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe following smart contract issues are known and reports including these vulnerabilities are not considered to be in scope of this bug bounty program and will not receive a reward:\n\n  - Supplying LP before a reweight can increase PCV expense to Fei Protocol\n  - Reweights can be dust attacked by repeated buying\n  - Reweights can be front and back-run\n\nAll web and app bug reports must include a PoC in order for consideration \nof a reward. Web and app bug reports without a PoC will be rejected with \ninstructions to provide one.\n\nCritical-level smart contract vulnerabilities that result in the loss of user \nfunds will have rewards additionally capped at 10% of the funds potentially \naffected based on the vulnerability that was identified. These rewards are \nadditionally only payable in **TRIBE** and have a vesting schedule lasting between 6-12 months with a minimum of 6 months for rewards up to USD 400 000, with an additional month added for every USD 100 000 tranche, rounded up. \n\nPayouts are handled by the **Fei Protocol** team directly and are denominated\nin **USD**. However, payouts are done in **TRIBE** or **FEI**. For Low and\nMedium threat levels, payouts can alternatively be in **ETH** or **USDC**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App Vulnerabilities:**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "raricapital",
          "project": "Rari Capital",
          "date": "2021-03-16T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2lz4sMNgI39ZpywuU8z8Fs/5fc16a9d8e36ac114d7dcee9857306fd/Raricapital-logo.jpg",
          "maximum_reward": 1100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,100,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Rari-Capital/open-oracle",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Rari-Capital/fuse-contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Rari-Capital/compound-protocol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Rari-Capital/rari-ethereum-pool-contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Rari-Capital/rari-stable-pool-contracts",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Rari Capital was founded upon a principle whereby yield could be generated\nwithout speculation, and instead: utilization. Rari Capital is managed by the\n$RGT which manages governance over all of the Rari Protocol, a DeFi\nrobo-advisor for maximizing yield. The Rari Protocol is pursuing a DeFi\nManifest Destiny of sorts. Yield aggregation is just the start...tranches,\nfuse, governance and a hell of a lot more are coming soon--we are working to\nbuild Finance 2.0.\n\nLet's take this world from the corrupt hedge funds and centralized institutions\nthat have hurt the masses for centuries. Let's give it back to the people. And\nthat begins with the yield.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical bug reports are further capped at 10% of economic damage with a minimum payout amount of **USD 50 000**. \n\nTheft of yield is considered Medium under this bug bounty program and not High.\n\nPayouts are handled by the **Rari Capital DAO**, facilitated by the Rari Capital team, and are denominated in USD. Payouts under $50 000 are paid in **USDC**\nor **DAI**. All payouts that are higher are done in a mix of **RGT** and\na stablecoin (**USDC** or **DAI**), respectively.",
            "assets_body": "The following smart contracts are not included in this bug bounty program:\n\n[RariFundPriceConsumer.sol](https://github.com/Rari-Capital/rari-stable-pool-contracts/blob/master/contracts/RariFundPriceConsumer.sol) \n\n[DAIInterestRateModelV3.sol](https://github.com/Rari-Capital/compound-protocol/blob/master/contracts/DAIInterestRateModelV3.sol) \n\n[CDaiDelegate.sol](https://github.com/Rari-Capital/compound-protocol/blob/master/contracts/CDaiDelegate.sol)\n\n[SimplePriceOracle.sol](https://github.com/Rari-Capital/compound-protocol/blob/master/contracts/SimplePriceOracle.sol) ",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "anchor",
          "project": "Anchor",
          "date": "2021-11-29T02:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4Z2ZO0aGR2KiE7SRgf9fxd/3a599a8a15c86949f42b5c49f76ed10a/Anchor_logo.jpeg",
          "maximum_reward": 1050000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,050,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://docs.anchorprotocol.com/smart-contracts/deployed-contracts",
              "type": "Smart Contract - Deployed Contracts"
            },
            {
              "target": "https://github.com/Anchor-Protocol/money-market-contracts",
              "type": "Smart Contract - Money Market Contracts"
            },
            {
              "target": "https://github.com/Anchor-Protocol/anchor-token-contracts",
              "type": "Smart Contract - Anchor Token Contracts"
            },
            {
              "target": "https://github.com/Anchor-Protocol/anchor-bAsset-contracts",
              "type": "Smart Contract - Anchor bLuna Contracts"
            },
            {
              "target": "https://github.com/Anchor-Protocol/anchor-bEth-contracts",
              "type": "Smart Contract - Anchor bETH Contracts"
            },
            {
              "target": "https://app.anchorprotocol.com/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Anchor's yield is stable and attractive, powered by staking returns from multiple Proof of Stake blockchains. Anchor’s open source Savings-as-a-Service SDK can be integrated in 10 lines of code to any serviced application holding user balances. Anchor savings has no minimum deposits, account freezes, or sign up requirements, it can be used by anyone in the world with access to the internet.\n\nFor more information about Anchor, please visit https://anchorprotocol.com/. \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data \n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAny vulnerability with regards to the use of centralized price feed oracles is not eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration the funds at risk. However, there is a minimum reward of __USD 50 000__.\n\nPayouts up to __USD 50 000__ are handled by the __Anchor__ team directly and are denominated in USD. However, payouts are done in __UST__. Payments above that up to the maximum reward have the [remainder handled by Do Kwon](https://twitter.com/stablekwon/status/1465546405250879490). ",
            "assets_body": "With the Deployed Contracts, only mainnet contracts are considered as in-scope of the bug bounty program. \n\nAll code of Anchor can be found at [https://github.com/Anchor-Protocol/](https://github.com/Anchor-Protocol/anchor-bAsset-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n  - DDoS vulnerabilities\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "marsprotocol",
          "project": "Mars Protocol",
          "date": "2022-02-24T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7oXuj4mrxkWyQGWo9NDAzU/4c629c2079c1b9c8b9d29260ee87fd4f/Mars_Logo.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $80,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://finder.extraterrestrial.money/mainnet/address/terra1n38982txtv2yygtcfv3e9wp2ktmjyxl6z88rma",
              "type": "Smart Contract - mars_lockdrop"
            },
            {
              "target": "https://finder.extraterrestrial.money/mainnet/address/terra106htgurux879drvjy5tzp8l7ydcnytmhpj7yr3",
              "type": "Smart Contract - mars_airdrop"
            },
            {
              "target": "https://finder.extraterrestrial.money/mainnet/address/terra1hgyamk2kcy3stqx82wrnsklw9aq7rask5dxfds",
              "type": "Smart Contract - mars_auction"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1lnkyal8m7afh04ymscgy8s43tunacmlv0jjthl",
              "type": "Smart Contract - mars_minter"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1h9tmwpwll5zpx6dvu28t8mvjk9jctu9nftm5ru",
              "type": "Smart Contract - mars_token"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1na2u7gzagtrgun85t8tz9a93hzu4h5w4p8keee",
              "type": "Smart Contract - mars_address_provider"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1jtdz9fhrrwd8yak6e3z7utmkypvx0qf0n393c6",
              "type": "Smart Contract - mars_council"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra10xxp3sktzndz3vt0t62rrmdh9qvj0u6q0pn0d5",
              "type": "Smart Contract - mars_vesting"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1g373xsvrvxtaauueh5272jtcy7d6auwmnlp5kd",
              "type": "Smart Contract - mars_staking"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra16k25cyvzqj0a8mhcl4y3s3z9fxrrdk25n2v3m7",
              "type": "Smart Contract - mars_xSmart Contract - mars_token"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1ky7jek93rffwnapgx4p60f8km8f84wzz02llkc",
              "type": "Smart Contract - mars_treasury"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1frhrg9m8q25mv527wfzdk3qrk85jsvddl40805",
              "type": "Smart Contract - mars_safety_fund"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1ejzvrlm8dn4mfwk85gdp68qecvhamxznq2fnzx",
              "type": "Smart Contract - mars_protocol_rewards_collector"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1a46rspe2x6flh97gsv4vsg09j47latug5d9elw",
              "type": "Smart Contract - mars_incentives"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1avkm5w0gzwm92h0dlxymsdhx4l2rm7k0lxnwq7",
              "type": "Smart Contract - mars_red_bank"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra108j350s2f4qprjluhup04zqggxuzhm4vzktm3f",
              "type": "Smart Contract - mars_oracle"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1eqpcgsa7750r8rjqhxzcmpzvw46fn7gquywzfe",
              "type": "Smart Contract - mars_lockdrop"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1xn9079ly7qfxf3mspf3pny3w4q4hl6agxwlnps",
              "type": "Smart Contract - mars_airdrop"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1myp6y5869dngaczu943pqej56r8at3as2ehqje",
              "type": "Smart Contract - mars_auction"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra158jpdhramr7rl4gtjny77t5mkj93sxa6exfl55",
              "type": "Smart Contract - mars_lp_staking"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1xmx2e3eyj9d0mcycpak4fa95z0wdvykp7zesqt",
              "type": "Smart Contract - mars_ma_ust_token"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1gwl5srdgdy2r24dxpdzn7m2t7509yhnzjyc36w",
              "type": "Smart Contract - mars_ma_luna_token"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1wrj7lrrxzdmcmpask6y48eudq7huvu8eylssjs",
              "type": "Smart Contract - martian_fields_mir_ust"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1x3tu0tgsa3wuz97w2nm29fvhnhjnag00nxsgmy",
              "type": "Smart Contract - martian_fields_anc_ust"
            },
            {
              "target": "https://finder.extraterrestrial.money/testnet/address/terra1pkpgcqy38gyr978xfh9fx0ttq0jllzyfl05k4f",
              "type": "Smart Contract - martian_fields_luna_ust"
            }
          ],
          "mdx": {
            "program_overview": "Mars is a credit protocol for the future: non-custodial, open-source, transparent, algorithmic and community-governed.\n\nLike banks, Mars aims to attract deposits and lend out this money while managing illiquidity and insolvency risk. Unlike banks, Mars is a fully automated, on-chain credit facility governed by a decentralised community via a transparent governance process. All decisions are made by the Martian Council, composed of MARS stakers who put skin in the game to backstop certain kinds of protocol risk in exchange for a portion of the protocol borrowing fees.\n\nFor more information about Mars Protocol, please visit [https://marsprotocol.io/](https://marsprotocol.io/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported. \n\nAll smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nKnown issues highlighted in the following audit reports are considered out-of-scope:\n  - [https://github.com/mars-protocol/mars-audits](https://github.com/mars-protocol/mars-audits) \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of mainnet economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ for Critical bug reports.\n\nPrior to the official launch of Mars Protocol, this bug bounty program will also have a hard cap of __USD 1 500 000__. In the event that multiple bug reports are submitted that exceed this amount, the rewards will be provided on a first come first served basis. All remaining valid reports will have their rewards considered after the full launch of Mars Protocol and the MARS token. \n\nPayouts are handled by the __Mars Protocol__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __MARS__. If a valid bug report is submitted and the __MARS__ token is not launched within 2 weeks of the report submission date, the payout will be done in __USDC__. Otherwise, all payouts will be done in __MARS__.",
            "assets_body": "All smart contracts of Mars Protocol can be found at [https://github.com/mars-protocol/](https://github.com/mars-protocol/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Mars Protocol that isn’t on this table but for which the impact is in the Impacts in Scope section, you are encouraged to submit it for the consideration of the project.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "flamingofinance",
          "project": "Flamingo Finance",
          "date": "2022-02-14T15:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2F4VGKaboWEaBfj1yfdpj/5597728d3c7bbd22b3814cb79d71ccde/Flamingo_Finance_logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/neo-project/examples/blob/master/csharp/NEP17/NEP17.cs",
              "type": "Smart Contract - Offical NEP17 standard"
            },
            {
              "target": "https://github.com/flamingo-finance/flamingo-contract-staking-n3/tree/main/FLM",
              "type": "Smart Contract - FLM"
            },
            {
              "target": "https://github.com/flamingo-finance/flamingo-contract-swap",
              "type": "Smart Contract - Swap"
            },
            {
              "target": "https://github.com/flamingo-finance/flamingo-contract-swap/tree/master/Swap/flamingo-contract-swap/FlamingoSwapPair",
              "type": "Smart Contract - Swap Pairs"
            },
            {
              "target": "https://github.com/flamingo-finance/flamingo-contract-staking-n3",
              "type": "Smart Contract - Staking Vault"
            },
            {
              "target": "https://github.com/flamingo-finance/IdoContract",
              "type": "Smart Contract - IDO Contract"
            },
            {
              "target": "https://flamingo.finance/",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Flamingo is an interoperable, full-stack decentralized finance protocol built on the Neo blockchain. Flamingo is comprised of five main components, including Wrapper - a crosschain asset gateway, Swap - an on-chain liquidity provider, Vault - a one-stop asset manager, Perp - an AMM-based perpetual contract trading platform, and also DAO - a decentralized governance mechanism. FLM is the governance token of Flamingo and will be 100% distributed to the community based on participation.\n\nFor more information about Flamingo Finance, please visit [https://flamingo.finance/](https://flamingo.finance/).  \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Thefts and freezing of unclaimed yield of any amount (including frontend code injection attacks)\n  - Thefts and freezing of principal of any amount (including frontend code injection attacks)\n  - Website goes down\n  - Access to admin accounts without authorization (Cloudflare accounts, service management cloud software, e-mails, etc.)\n  - Smart contract hacks that lead to users losing funds\n  - Smart contract hacks that leads to smart contracts malfunctioning\n  - Smart contract exploits in general",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __Flamingo Finance__ team directly and are denominated in USD. However, payouts are done in __GAS__.",
            "assets_body": "Assets in Scope Listed Below.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Smart contract hacks that lead to users losing funds\n  - Smart contract hacks that lead to smart contracts malfunctioning\n  - Smart contract exploits in general\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than one day\n\n__Web/App__\n\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing of principal of any amount\n  - Website goes down\n  - Access to admin accounts without authorization (Cloudflare accounts, service management cloud software, e-mails, etc.)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Centralization risks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "opynsqueeth",
          "project": "Opyn: Squeeth",
          "date": "2022-02-07T11:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/43tM3hRYc1MlpNWqoVKkrg/42629c8fcfe0f03f6f6e5046da5d4bab/SqueethLogo.jpg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x65D66c76447ccB45dAf1e8044e918fA786A483A1",
              "type": "Smart Contract - Squeeth Oracle Contract"
            },
            {
              "target": "https://etherscan.io/address/0xa653e22A963ff0026292Cc8B67941c0ba7863a38",
              "type": "Smart Contract - Squeeth Short Power Perp Contract"
            },
            {
              "target": "https://etherscan.io/address/0xf1B99e3E573A1a9C5E6B2Ce818b617F0E664E86B",
              "type": "Smart Contract - Squeeth WPowerPerp Contract"
            },
            {
              "target": "https://etherscan.io/address/0x64187ae08781B09368e6253F9E94951243A493D5",
              "type": "Smart Contract - Squeeth Controller Contract"
            },
            {
              "target": "https://etherscan.io/address/0x9E9fd8A934107Cd0BABf3001981B90243dDe4E98",
              "type": "Smart Contract - Squeeth Short Helper Contract"
            },
            {
              "target": "https://squeeth.opyn.co/",
              "type": "Web/App"
            },
            {
              "target": "https://squeeth.com",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Opyn builds DeFi native derivatives and options infrastructure that allow users and protocols to buy, sell, and create options, and utilize brand new primitives like squeeth. DeFi enthusiasts and projects alike rely on Opyn’s smart contracts and interface to hedge themselves against DeFi risks and take positions on different cryptocurrencies.\n\nSqueeth (squared ETH) is a new financial derivative. Squeeth is the first [Power Perpetual](https://www.paradigm.xyz/2021/08/power-perpetuals/) and gives traders perpetual exposure to ETH².\n\nMechanism-wise, Squeeth functions similar to a [perpetual swap](https://firefly.exchange/blog/primer-on-perpetual-swaps), tracking the index of ETH² rather than ETH. It provides global options-like exposure (pure [convexity](https://www.investopedia.com/terms/c/convexity.asp), pure [gamma](https://www.investopedia.com/terms/g/gamma.asp)) without the need for either strikes or expiries, effectively consolidating much of the options market liquidity into a single ERC20 token.\n\nIn short, Squeeth makes options perpetual and is a very effective hedge for Uniswap LPs, all ETH/USD options, and anything that has a curved payoff.\n\nFor more information about Opyn, please visit [https://www.opyn.co/](https://www.opyn.co/).   \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Critical and High severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward\n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nThe following impacts are considered to be out-of-scope of this bug bounty program:\n  - Economic TWAP manipulation \n  - System insolvency if due to economic factors / market movements\n\nCritical payouts by Sherlock will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably, and this then excludes Sherlock critical bounty payout for temporary freezing bugs.\n\nPayouts are handled by the __Opyn__ team directly and are denominated in USD. However, payouts are done in __USD__, __USDC__, __DAI__ or __ETH__. Critical severity smart contract rewards will be paid out by Sherlock with their bug bounty matching program and are done in __USDC__.",
            "assets_body": "All smart contracts of Opyn: Squeeth can be found at [https://github.com/opynfinance/squeeth-monorepo](https://github.com/opynfinance/squeeth-monorepo). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time \n  - Smart contract gas drainage\n\n__Web/App__\n\n  - Any exploit that can cause direct and unequivocal loss or permanent locking of user funds",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Any vulnerabilities that do not cause an unequivocal loss or permanent locking of user funds\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "celsiusx",
          "project": "CelsiusX",
          "date": "2022-02-03T10:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6UmlMeOEkvYkryRQxE9b7f/325c3e01f275eab46cfc38d4bf8ce78e/CelsiusX.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0xfe4546fefe124f30788c4cc1bb9aa6907a7987f9",
              "type": "Smart Contract -  Wrapped ETH - cxETH - Polygon Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0x4859df02d1c7cd85c2a283708958aaa7728bad67",
              "type": "Smart Contract -  Wrapped ETH - cxETH - Polygon"
            },
            {
              "target": "https://polygonscan.com/address/0x64875aaa68d1d5521666c67d692ee0b926b08b2f",
              "type": "Smart Contract - Wrapped ADA - cxADA - Polygon Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0xd0064864c650d5ecc0e60162fa95767b7b353b7e",
              "type": "Smart Contract -  Wrapped ADA - cxADA - Polygon"
            },
            {
              "target": "https://etherscan.io/address/0x64875aaa68d1d5521666c67d692ee0b926b08b2f",
              "type": "Smart Contract - Wrapped ADA - cxADA - Ethereum Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xd0064864c650d5ecc0e60162fa95767b7b353b7e",
              "type": "Smart Contract -  Wrapped ADA - cxADA - Ethereum"
            },
            {
              "target": "https://polygonscan.com/address/0x9bd9ad490dd3a52f096d229af4483b94d63be618",
              "type": "Smart Contract -  Wrapped DOGE - cxDOGE - Polygon Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0xddf5abddbd7131f140a0bbaea528b6542a6c77b4",
              "type": "Smart Contract -  Wrapped DOGE - cxDOGE - Polygon"
            },
            {
              "target": "https://etherscan.io/address/0xf9e293d5d793ddc1ae4f778761e0b3e4aa7cf2dd",
              "type": "Smart Contract - Wrapped DOGE - cxDOGE - Ethereum Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xdf10d833a65bbf9c6a5efc44b214b2d12518be87",
              "type": "Smart Contract -  Wrapped DOGE - cxDOGE - Ethereum"
            },
            {
              "target": "https://etherscan.io/address/0xfe4546fefe124f30788c4cc1bb9aa6907a7987f9",
              "type": "Smart Contract -  Address Manager Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x4859df02d1c7cd85c2a283708958aaa7728bad67",
              "type": "Smart Contract -  Address Manager"
            },
            {
              "target": "https://etherscan.io/address/0x520da65f3b9b93a5bb6a1db911de40ae197aa639",
              "type": "Smart Contract -  Collateral Manager Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x9b436168dd080f1f95d1919258c64590263c0dae",
              "type": "Smart Contract -  Collateral Manager"
            }
          ],
          "mdx": {
            "program_overview": "At CelsiusX, one of our goals is to bridge DeFi and CeFi infrastructure. Although DeFi, which is a major technological leap in financial infrastructure, enables services such as lending, borrowing, trading, and payments to be accessible to anyone in the world with an internet connection, it still faces many challenges when it comes to adoption, particularly because many innovative solutions fail to bootstrap sufficient liquidity. \n\nAs a DeFi-CeFi hybrid institution, CelsiusX is building liquidity bridges which will give users the ability to move assets between blockchains and provide cross-chain liquidity.\nFor more information about CelsiusX, please visit [https://celsiusx.io/](https://celsiusx.io/). \nThis bug bounty program is focused on smart contracts and preventing:\n\n  - Thefts and freezing of wrapped tokens of any amount\n  - Malfunction of any part of the smart contract system",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/) and the CelciusX bug bounty reward classification (see Impacts in Scope). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract bug reports require a PoC demonstrating how the vulnerability can be exploited and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. This may be a smart contract itself or a transaction.\n\nCritical smart contract vulnerabilities are capped at 5% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. There is no minimum reward for Critical vulnerabilities. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Front running of initialize method for Wrapped tokens\n  - Non unique reserve Id when using the same name and description in the same block\n  - All vulnerabilities marked in the [Halborn security review (Wrapped Token)](https://drive.google.com/file/d/1hjkiujJ8OdVQjhhm6R3MZJl6foQiHQLl/view?usp=sharing) and [Halborn security review (Collateral Manager)](https://drive.google.com/file/d/1MeecuUBi75XkfffrriY25_SNySsmI7rk/view?usp=sharing) are not eligible for a reward.\n\nCelsiusX requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. Bounty Hunters will need an active (KYC'ed) account with Celsius Network and a proof of address. Security and Compliance review will be done before reward payouts. Rewards will be placed on the bug bounty hunter’s account with Celsius Network. The bug bounty hunter will open an account with Celsius network and successfully complete the KYC process. The collection of this information will be done by the Celsius Network team. \n\nPayouts are handled by the __CelsiusX__ team directly and are denominated in USD. However, payouts are done in __USDC__. Payouts will be remitted linearly over a period of up to 6 months. ",
            "assets_body": "All CelsiusX smart contracts can be found at [https://github.com/CelsiusXDeFi](https://github.com/CelsiusXDeFi). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Wrapped\n    -  Taking actions or changing privileges by unauthorized users:\n      - Upgrading the implementation contract (Critical)\n      - Upgrading the Oracle Address (Critical)\n      - Minting (Critical)\n      - Burning (Critical)\n      - Pausing (High)\n      - Revoking (High)\n      - Whitelisting (High)\n    - Blacklisting (High)\n    - Unauthorized transfer of Wrapped token (Critical)\n    - Minting more tokens than reported by the Oracle on any given block (not including flash loan) (Critical)\n      - Unauthorized withdrawal of Ether or token held by a contract (Medium)\n\n  - CollateralManager\n    - Taking actions or changing privileges by unauthorized users:\n      - Upgrading the implementation contract (Critical)\n      - Modifying the data used to report reserved quantity (Critical)\n\n  - AddressManager\n    - Taking actions or changing privileges by unauthorized users:\n      - Upgrading the implementation contract (Critical)\n      - Modifying the data used to report addresses for reading reserve values (Critical)\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/) and CelsiusX’s classification above, CelsiusX classification will be followed. ",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "looksrare",
          "project": "LooksRare",
          "date": "2022-01-26T12:00+09:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1X6bwRUnrYxMcvvNmHHk9R/dd0b65573e0ec6ba9fdf441dd2e18aa5/LooksRare_logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $4,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xf4d2888d29d722226fafa5d9b24f9164c092421e",
              "type": "Smart Contract - LooksRareToken"
            },
            {
              "target": "https://etherscan.io/address/0x59728544b08ab483533076417fbbb2fd0b17ce3a",
              "type": "Smart Contract - LooksRareExchange"
            },
            {
              "target": "https://etherscan.io/address/0x56244bb70cbd3ea9dc8007399f61dfc065190031",
              "type": "Smart Contract - StrategyStandardSaleForFixedPrice"
            },
            {
              "target": "https://etherscan.io/address/0x86f909f70813cdb1bc733f4d97dc6b03b8e7e8f3",
              "type": "Smart Contract - StrategyAnyItemFromCollectionForFixedPrice"
            },
            {
              "target": "https://etherscan.io/address/0x58d83536d3efedb9f7f2a1ec3bdaad2b1a4dd98c",
              "type": "Smart Contract - StrategyPrivateSale"
            },
            {
              "target": "https://etherscan.io/address/0xC881ADdf409eE2C4b6bBc8B607c2C5CAFaB93d25",
              "type": "Smart Contract - CurrencyManager"
            },
            {
              "target": "https://etherscan.io/address/0x9cc58bf22a173c0fa8791c13df396d18185d62b2",
              "type": "Smart Contract - ExecutionManager"
            },
            {
              "target": "https://etherscan.io/address/0x55010472a93921a117aad9b055c141060c8d8022",
              "type": "Smart Contract - RoyaltyFeeRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x7358182024c9f1b2e6b0153e60bf6156b7ef4906",
              "type": "Smart Contract - RoyaltyFeeManager"
            },
            {
              "target": "https://etherscan.io/address/0x66466107d9cae4da0176a699406419003f3c27a8",
              "type": "Smart Contract - RoyaltyFeeSetter"
            },
            {
              "target": "https://etherscan.io/address/0xf42aa99F011A1fA7CDA90E5E98b277E306BcA83e",
              "type": "Smart Contract - TransferManagerERC721"
            },
            {
              "target": "https://etherscan.io/address/0xFED24eC7E22f573c2e08AEF55aA6797Ca2b3A051",
              "type": "Smart Contract - TransferManagerERC1155"
            },
            {
              "target": "https://etherscan.io/address/0x9ba628f27aac9b2d78a9f2bf40a8a6df4ccd9e2c",
              "type": "Smart Contract - TransferSelectorNFT"
            },
            {
              "target": "https://etherscan.io/address/0x465a790b428268196865a3ae2648481ad7e0d3b1",
              "type": "Smart Contract - TokenDistributor"
            },
            {
              "target": "https://etherscan.io/address/0x453c1208B400fE47aCF275315F14E8F9F9fbC3cD",
              "type": "Smart Contract - TradingRewardsDistributor"
            },
            {
              "target": "https://etherscan.io/address/0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce",
              "type": "Smart Contract - FeeSharingSystem"
            },
            {
              "target": "https://etherscan.io/address/0x2A70e7F51f6cd40C3E9956aa964137668cBfAdC5",
              "type": "Smart Contract - StakingPoolForUniswapV2Tokens"
            },
            {
              "target": "https://looksrare.org",
              "type": "Web/App - Main Website"
            },
            {
              "target": "https://api.looksrare.org/graphql",
              "type": "Web/App - Main App"
            }
          ],
          "mdx": {
            "program_overview": "LooksRare is the community-first NFT marketplace that actively rewards traders, collectors and creators for participating.LooksRare’s smart contracts are custom-built within a modular system that enables new features to be rolled out over time – without compromising security – thanks to standardized signatures that clearly define the execution scope.\n\nFor more information about LooksRare, please visit [https://looksrare.org/](https://looksrare.org/). \nThis bug bounty program is focused on their smart contracts, website and app, and is focused on preventing:\n\n- Loss of user NFTs\n- Loss of user funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All Low, Medium, High and Critical Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __LooksRare__ team directly and are denominated in USD. However, payouts are done in __LOOKS__ and __ETH__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. All vulnerabilities found in the [https://docs.looksrare.org/](https://docs.looksrare.org/) are out of scope. ",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Exploits leading to backend downtime\n  - Modifying content which a user is not permitted to (such as collection information for collections they don’t own)\n  - Injecting malicious scripts through the NFT iframe\n  - Any exploits which may affect our domain names\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Manipulation of trading rewards through token farming\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "keep3rnetwork",
          "project": "Keep3r Network",
          "date": "2022-01-19T01:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/10L9tJ5tgrPqXmkhFF6ThR/50746e69a4c7fd48e18fd2ecdd2c180f/Keep3r.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x2fc52c61fb0c03489649311989ce2689d93dc1a2",
              "type": "Smart Contract - Vyper_contract"
            },
            {
              "target": "https://etherscan.io/address/0x076bbbd5384acd0550d8d58bc758dd9e0287cccf",
              "type": "Smart Contract - veclaim"
            },
            {
              "target": "https://etherscan.io/address/0x1ceb5cb57c4d4e2b2433641b95dd330a33185a44",
              "type": "Smart Contract - Keep3rV1"
            },
            {
              "target": "https://etherscan.io/address/0x5555f75e3d5278082200fb451d1b6ba946d8e13b",
              "type": "Smart Contract - FixedForex"
            },
            {
              "target": "https://etherscan.io/address/0x69681f8fde45345c3870bcd5eaf4a05a60e7d227",
              "type": "Smart Contract - FixedForex"
            },
            {
              "target": "https://etherscan.io/address/0xFAFdF0C4c1CB09d430Bf88c75D88BB46DAe09967",
              "type": "Smart Contract - FixedForex"
            },
            {
              "target": "https://etherscan.io/address/0x96e61422b6a9ba0e068b6c5add4ffabc6a4aae27",
              "type": "Smart Contract - FixedEUR"
            },
            {
              "target": "https://etherscan.io/address/0x95dfdc8161832e4ff7816ac4b6367ce201538253",
              "type": "Smart Contract - FixedForex"
            },
            {
              "target": "https://etherscan.io/address/0x0ea89fb2e5b8fa8f14b741ffe1a4617a32611dfc",
              "type": "Smart Contract - Vyper_contract"
            },
            {
              "target": "https://etherscan.io/address/0x4A6cFf9E1456eAa3b6f37572395C6fa0c959edAB",
              "type": "Smart Contract - Keep3r V2"
            },
            {
              "target": "https://etherscan.io/address/0xc07c37a0a1e557e0d1704c90d966b37a67a45dd4",
              "type": "Smart Contract - Keep3r Helper"
            },
            {
              "target": "https://etherscan.io/address/0x1ceb5cb57c4d4e2b2433641b95dd330a33185a44",
              "type": "Smart Contract - - KP3R [ERC20]"
            },
            {
              "target": "https://etherscan.io/address/0x005634CfeF45e5a19C84aEdE6f0af17833471852",
              "type": "Smart Contract - Pair Manager Factory [Uni V3]"
            },
            {
              "target": "https://etherscan.io/address/0x7396899638410094b3690f8bd2b56f07fdab620c",
              "type": "Smart Contract - Keep3r Job Registry"
            }
          ],
          "mdx": {
            "program_overview": "Keep3r Network is a decentralized keeper network for projects that need external devops and for external teams to find keeper jobs.\n\nA Keeper is the term used to refer to an external person and/or team that executes a job. This can be as simplistic as calling a transaction, or as complex as requiring extensive off-chain logic. The scope of Keep3r network is not to manage these jobs themselves, but to allow contracts to register as jobs for keepers, and keepers to register themselves as available to perform jobs. It is up to the individual keeper to set up their devops and infrastructure and create their own rules based on what transactions they deem profitable.\n\nA Job is the term used to refer to a smart contract that wishes an external entity to perform an action. They would like the action to be performed in \"good will\" and not have a malicious result. For this reason they register as a job, and keepers can then execute on their contract.\n\nFor more information about Keep3r, please visit [https://keep3r.network/](https://keep3r.network/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the loss of funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract bug reports must come with a PoC in order to be considered for a reward. Other severity levels may require a PoC during the bug validation process. \n\nCritical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of __USD 50 000__.\n\nHigh smart contract vulnerability rewards are further restricted to be 100% of the funds affected within this severity level. However, the minimum reward is __USD 10 000__. For vulnerabilities involving a temporary lock-up, the reward is further increased by __USD 5 000__, until the cap, for every additional 5 minutes, based on the minimum 5 minute requirement to be qualified as in-scope. \n\nPayouts are handled by the __Keep3r Network__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "All smart contracts of Keep3r Network can be found at [https://github.com/keep3r-network](https://github.com/keep3r-network). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. The following folders are the most relevant:\n\n  - [https://github.com/keep3r-network/ff](https://github.com/keep3r-network/ff)\n  - [https://github.com/keep3r-network/OptionsLM](https://github.com/keep3r-network/OptionsLM)\n  - [https://github.com/keep3r-network/keep3r.network](https://github.com/keep3r-network/keep3r.network)",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theftLoss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 5 minutes\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are __prohibited__ by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "euler",
          "project": "Euler",
          "date": "2022-01-10T03:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4V4281MlOit3IQ7V8A1Akc/d70e84584ad4a2b4b47813da9a538b35/Euler_logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x27182842E098f60e3D576794A5bFFb0777E025d3",
              "type": "Smart Contract - Euler"
            },
            {
              "target": "https://etherscan.io/address/0xeC29b4C2CaCaE5dF1A491f084E5Ec7C62A7EdAb5",
              "type": "Smart Contract - Installer"
            },
            {
              "target": "https://etherscan.io/address/0xE5d0A7A3ad358792Ba037cB6eE375FfDe7Ba2Cd1",
              "type": "Smart Contract - Markets"
            },
            {
              "target": "https://etherscan.io/address/0xAed37a234cc880a9e3D9Fd9022013eE0A419493e",
              "type": "Smart Contract - Liquidation"
            },
            {
              "target": "https://etherscan.io/address/0x554ee3d9ed7E9ec21E186c7dd636430669812f73",
              "type": "Smart Contract - Governance"
            },
            {
              "target": "https://etherscan.io/address/0x14cBaC4eC5673DEFD3968693ebA994F07F8436D2",
              "type": "Smart Contract - Exec"
            },
            {
              "target": "https://etherscan.io/address/0xe20582e7FB2E5D1D96D8c8A65B4cdC3F5Dc398f8",
              "type": "Smart Contract - Swap"
            },
            {
              "target": "https://etherscan.io/address/0x00D54F129293b1580C779c8F04b2d8cE370cA69d",
              "type": "Smart Contract - RiskManager"
            },
            {
              "target": "https://etherscan.io/address/0x090c752B7b26d3cc382BF532eC9C4403C80D56CF",
              "type": "Smart Contract - EToken"
            },
            {
              "target": "https://etherscan.io/address/0x03601eDc8aF4b0439d63Eb3a45ed11B01c6975d7",
              "type": "Smart Contract - DToken"
            },
            {
              "target": "https://etherscan.io/address/0x68004911694EC42f0c56B7144a6A5281fFDD38F7",
              "type": "Smart Contract - IRMDefault"
            },
            {
              "target": "https://etherscan.io/address/0xD75870dCbd1521E6CAd7566FbcA35D72e238572B",
              "type": "Smart Contract - IRMClassMajor"
            },
            {
              "target": "https://etherscan.io/address/0xf058fE816B01265d1BA0A3bD226049676b107318",
              "type": "Smart Contract - IRMClassMidCap"
            },
            {
              "target": "https://etherscan.io/address/0x42ec0eb1d2746A9f2739D7501C5d5608bdE9eE89",
              "type": "Smart Contract - IRMClassStable"
            }
          ],
          "mdx": {
            "program_overview": "Euler is a capital-efficient permissionless lending protocol that helps users to earn interest on their crypto assets or hedge against volatile markets without the need for a trusted third party.\n\nEuler features a number of innovations not seen before in DeFi, including permissionless lending markets, reactive interest rates, protected collateral, MEV-resistant liquidations, multi-collateral stability pools, and much more.\n\nFor more information about Euler, please visit [https://www.euler.finance/#/](https://www.euler.finance/#/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than 1 week\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Medium, High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All Low Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nCritical payouts by Sherlock will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably, and this then excludes Sherlock critical bounty payout for temporary freezing bugs.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Anything that involves a malicious or illiquid token being promoted from isolation tier (the default ‘safe’ tier on Euler) to cross or collateral tier (where there are many more potential attack vectors). We assume governance is responsible for blocking promotion up the tiers.\n  - Tokens exhibiting non-standard ERC20 behaviour that only affects holders of that token and does not impact any other assets managed by Euler. (E.g., a transfer function that fails to update users balances)\n  - Oracle failure/manipulation of the form described here [https://github.com/euler-xyz/uni-v3-twap-manipulation](https://github.com/euler-xyz/uni-v3-twap-manipulation): {E.g., manipulation of the Uniswap Pools from which we derive the time-weighted average price (TWAP)}.\n\nPayouts up to USD 50 000 are handled by the __Euler__ team directly and are denominated in USD. However, payouts are done in __USDC__. Payments above that have the remainder paid out by __Sherlock__ with their bug bounty matching program and are done in __USDC__.",
            "assets_body": "All smart contracts of Euler can be found at [https://github.com/euler-xyz/euler-contracts](https://github.com/euler-xyz/euler-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than 1 week\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Flash loan attacks\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Attacks that require an illiquid/malicious token to be promoted from isolation tier to cross or collateral tier (governance is responsible for preventing this, see definitions here: [https://docs.euler.finance/getting-started/white-paper#asset-tiers)](https://docs.euler.finance/getting-started/white-paper#asset-tiers)\n  - Uniswap v3 TWAP oracle manipulation attacks of the form described here: [https://github.com/euler-xyz/uni-v3-twap-manipulation](https://github.com/euler-xyz/uni-v3-twap-manipulation)   \n  - Basic economic governance attacks (E.g. 51% attack)\n  - Tokens exhibiting non-standard ERC20 behaviour that only affects holders of that token and does not impact any other assets managed by Euler. (E.g., malicious transfer functions, malicious transferFrom functions in the ERC-20 token contract.) Such attacks caused by malicious tokens are considered out of scope.\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pnetwork",
          "project": "pNetwork",
          "date": "2021-12-27T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6cMB5OFI6eqRCGQxhK5d1r/0469ace40706a84849e141f35eec02da/pTokens-icon-white-eye.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xab83bd5169f58e753d291223dcaba4f7644ad3a9",
              "type": "Smart Contract - pERC20-on-bsc - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0xa55D3a3fe645E1f47f11C13B157e3767c7Fda913",
              "type": "Smart Contract - pERC20-on-telos - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0x112334f50Cb6efcff4e35Ae51A022dBE41a48135",
              "type": "Smart Contract - pERC20-on-eos - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0x9f8622b11984afc8f0a42a394928702017c5968d",
              "type": "Smart Contract - pERC20-on-ultra - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0x8DEf733E0F1907104f17dc138AD5705caA5eCEDE",
              "type": "Smart Contract - pERC20-on-polygon - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0x8e220b9d3f09c56dc306cab1d7644b846066cc43",
              "type": "Smart Contract - pEOS-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0xa23d33d5e0a61ba81919bfd727c671bb03ab0fea",
              "type": "Smart Contract - IQ-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0x917847de47b375C59ddC66AAfae113604b205039",
              "type": "Smart Contract - pVAI-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0xe1590a6fa0cff9c960181cb77d8a873601772f64",
              "type": "Smart Contract - WSB-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0x7825e833d495f3d1c28872415a4aee339d26ac88",
              "type": "Smart Contract - TLOS-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0xADCdB2C1613752Efc6C71DEFcC7e48B259c1C87F",
              "type": "Smart Contract - pERC20-on-xdai - native-vault-address"
            },
            {
              "target": "https://etherscan.io/address/0x9b917D94Fb0138eDF520332f3d45494f1a74Bec8",
              "type": "Smart Contract - EFX-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0x6db338e6ed75f67cd5a4ef8bdf59163b32d4bd46",
              "type": "Smart Contract - pSEEDS-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0xa4b85d23238396051d554b1f8918e484ee9f08e2",
              "type": "Smart Contract - OCP-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0x16631e53c20fd2670027c6d53efe2642929b285c",
              "type": "Smart Contract - pSAFEMOON-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0x4f640f2529ee0cf119a2881485845fa8e61a782a",
              "type": "Smart Contract - ORE-on-eth - host-smart-contract-address"
            },
            {
              "target": "https://etherscan.io/address/0xe540204af3a5d77419552b35aead5453a477a7da#code",
              "type": "Smart Contract - TransparentUpgradeableProxy"
            },
            {
              "target": "https://etherscan.io/address/0xb44c36bbfd660f81ff379c0591f218248c2d87bb#code",
              "type": "Smart Contract - ERC20Vault"
            },
            {
              "target": "https://etherscan.io/address/0xaC494b69256A724C368bEd8b1e44aE456048DD42#code",
              "type": "Smart Contract - AdminUpgradeabilityProxy"
            },
            {
              "target": "https://bscscan.com/address/0x32895326d1456cbba301aa936c5a0b673546ab65",
              "type": "Smart Contract - pBEP20-on-polygon - native-vault-address"
            },
            {
              "target": "https://bscscan.com/address/0x6075F749d9C0F93fBbcd65C48B8e26A688Db1B0F",
              "type": "Smart Contract - pBEP20-on-eth - native-vault-address"
            },
            {
              "target": "https://bscscan.com/address/0x92b1d615aa1511ea24c203ff48b0815800079a88",
              "type": "Smart Contract - pSFM-on-eth - native-vault-address"
            },
            {
              "target": "https://bscscan.com/address/0xde960267b9aabfb5404d9a566c1ed6db9db09522",
              "type": "Smart Contract - ZMT-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xbd525e51384905c6c0936a431bc7efb6c4903ea0",
              "type": "Smart Contract - BIST-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5",
              "type": "Smart Contract - pOPEN-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0x7ddee176f665cd201f93eede625770e2fd911990",
              "type": "Smart Contract - GALA-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xb6c53431608e626ac81a9776ac3e999c5556717c",
              "type": "Smart Contract - TLOS-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xe2e7329499e8ddb1f2b04ee4b35a8d7f6881e4ea",
              "type": "Smart Contract - ANRX-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92",
              "type": "Smart Contract - PNT-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0x566cedd201f67e542a6851a2959c1a449a041945",
              "type": "Smart Contract - pOPIUM-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xae22e27d1f727b585549c10e26192b2bc01082ca",
              "type": "Smart Contract - pdefiplusplus-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xa114f89b49d6a58416bb07dbe09502c4f3a19e2f",
              "type": "Smart Contract - pBCP-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0x9f5377fa03dcd4016a33669b385be4d0e02f27bc",
              "type": "Smart Contract - PTERIA-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0x1613957159e9b0ac6c80e824f7eea748a32a0ae2",
              "type": "Smart Contract - CGG-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0xc51ef828319b131b595b7ec4b28210ecf4d05ad0",
              "type": "Smart Contract - EFX-on-bsc - host-smart-contract-address"
            },
            {
              "target": "https://bscscan.com/address/0x7e1eA653451352825540618878d5655a97d46748#code",
              "type": "Smart Contract - AdminUpgradeabilityProxy"
            },
            {
              "target": "https://bscscan.com/address/0xaacb683a934a5e1aee846286049f1a5dd38bdfb9#code",
              "type": "Smart Contract - TransparentUpgradeableProxy"
            },
            {
              "target": "https://polygonscan.com/address/0x2d9eef197371ff2309000a8fc2a1aeeaba401089",
              "type": "Smart Contract - pEOS-on-polygon - host-smart-contract-address"
            },
            {
              "target": "https://polygonscan.com/address/0xb6bcae6468760bc0cdfb9c8ef4ee75c9dd23e1ed",
              "type": "Smart Contract - PNT-on-polygon - host-smart-contract-address"
            },
            {
              "target": "https://polygonscan.com/address/0xe662b32cdf4f59a136d7aefa863b61bdbe6a3338#code",
              "type": "Smart Contract -  TransparentUpgradeableProxy"
            },
            {
              "target": "https://polygonscan.com/address/0xad178e5d81dbbf0e7da5106e8c035d9289091c45",
              "type": "Smart Contract - TFF-on-polygon - host-smart-contract-address"
            },
            {
              "target": "https://polygonscan.com/address/0xc79358de3868a7c751f52cfeecd650595aee8b18",
              "type": "Smart Contract - USDO-on-polygon - host-smart-contract-address"
            },
            {
              "target": "https://polygonscan.com/address/0x78e6740a36B8E605aE02869e48F0caCEF757d9F9#code",
              "type": "Smart Contract - AdminUpgradeabilityProxy"
            },
            {
              "target": "https://polygonscan.com/address/0x5841565Bd231a868e47347d9749eF06AF5cA0970#code",
              "type": "Smart Contract - TransparentUpgradeableProxy"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x0259461eed4d76d4f0f900f9035f6c4dfb39159a",
              "type": "Smart Contract - PNT-on-xdai - host-smart-contract-address"
            },
            {
              "target": "https://github.com/provable-things/ptokens-eos-smart-contracts/blob/master/vault.cpp",
              "type": "Smart Contract - Vault EOS-like"
            },
            {
              "target": "https://github.com/provable-things/ptokens-eos-smart-contracts/blob/master/ptoken/pbtc.token.cpp",
              "type": "Smart Contract - pToken EOS-like"
            },
            {
              "target": "https://dapp.ptokens.io",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "pNetwork is a multi-chain routing protocol for DeFi, NFTs and gaming. It enables assets and data to move frictionlessly from one blockchain to another with support on some of the largest and widely-recognized DeFi platforms today. Currently, the protocol powers cross-chain connections among 12 different blockchains and Layer 2 solutions such as wrapped Bitcoin on Ethereum.\n\npNetwork is a progressively decentralized protocol home to the pNetwork DAO, pNetwork nodes and the ecosystem’s governance token PNT. \n\nTo know more about pNetwork, visit [https://p.network/](https://p.network/) or join the community at [https://twitter.com/pNetworkDeFi](https://twitter.com/pNetworkDeFi)\n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds\n  - Forging data returned by pNetwork nodes before it gets presented to the user by the dapp (XSS)",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nThe following is a known issue that is considered as out of scope. There is an \"unhandled exception\" (which is on the list of vulnerabilities) in the ERC777; Namely that the ERC777 tokens received hook combined with a tag for automatic peg-in on sends can fail if the user ABI encodes the other information incorrectly. This will revert but with no reason because there's no way to catch the error to add a message.\n\npNetwork requires KYC to be done for all bug bounty hunters submitting Critical bug reports and wanting a reward. The information needed is an ID photo together with a selfie. Reports for other severity levels do not require any KYC. \n\nPayouts are handled by the __pNetwork__ team directly and are denominated in USD. However, payouts are done in __PNT__ or __USDC__, up to the discretion of the team.",
            "assets_body": "All smart contracts of pNetwork can be found at [https://github.com/provable-things](https://github.com/provable-things). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds\n  - Firing of `Redeem` event without pegging out funds (PToken.sol)\n  - Firing of `PegIn` event without pegging in funds (Erc20Vault.sol)\n  - Re-entrancy attacks when pegging in or out (PToken.sol & Erc20Vault.solt)\n  - Receiving greater than the amount pegged in or out (PToken.sol & Erc20Vault.sol)\n  - Receiving fewer tokens than the amount pegged in or out (PToken.sol & Erc20Vault.sol)\n  - Pegging in or out non-supported tokens.\n\n__Web/App__\n\n  - Forging data returned by pNetwork nodes before it gets presented to the user by the dapp (XSS)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tempus",
          "project": "Tempus",
          "date": "2021-12-23T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2U8C2Q9tTbZ9mZW6JZ0L1P/1b5e1bfb0f7e10683d5a9ff2eefcc8bf/Tempus_Logo.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xdB5fD0678eED82246b599da6BC36B56157E4beD8",
              "type": "Smart Contract - TempusController"
            },
            {
              "target": "https://etherscan.io/address/0x6320E6844EEEa57343d5Ca47D3166822Ec78b116",
              "type": "Smart Contract - TempusPool - Lido stEth 31 March 2022"
            },
            {
              "target": "https://etherscan.io/address/0x7004797ad44897f90401609C075E2F082be9D8Be",
              "type": "Smart Contract - TempusAMM - Lido stEth 31 March 2022"
            },
            {
              "target": "https://etherscan.io/address/0x0697B0a2cBb1F947f51a9845b715E9eAb3f89B4F",
              "type": "Smart Contract - TempusPool - Lido stEth 30 August 2022"
            },
            {
              "target": "https://etherscan.io/address/0x200e41BE620928351F98Da8031BAEB7BD401a129",
              "type": "Smart Contract - TempusAMM - Lido stEth 30 August 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x8c47924b35c3667f59df579f3ec061f8d7603242",
              "type": "Smart Contract - TempusController"
            },
            {
              "target": "https://ftmscan.com/address/0x943B73d3B7373de3e5Dd68f64dbf85E6F4f56c9E",
              "type": "Smart Contract - TempusPool - Yearn USDC 26 August 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x8DCf7e47d7c285e11E48a78dFDDaEc5c48887AF8",
              "type": "Smart Contract - TempusAMM - Yearn USDC 26 August 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x9c0273E4abB665ce156422a75F5a81db3c264A23",
              "type": "Smart Contract - TempusPool - Yearn DAI 24 June 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x354090dd4f695D7dc5ad492e48d0f30042Ed7BbE#code",
              "type": "Smart Contract - TempusAMM - Yearn DAI 24 June 2022"
            },
            {
              "target": "https://ftmscan.com/address/0xE9b557f9766Fb20651E3685374cd1DF6f977d36B",
              "type": "Smart Contract - TempusPool - Yearn USDT 29 July 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x54b28166026e8dd13bf07c46da6ef754a6b80989",
              "type": "Smart Contract - TempusAMM - Yearn USDT 29 July 2022"
            },
            {
              "target": "https://ftmscan.com/address/0xA9C549aeFa21ee6e79bEFCe91fa0E16a9C7d585a",
              "type": "Smart Contract - TempusPool - Yearn WETH 24 June 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x51B21368396cb76A348E995D698960F8fe44DeF1",
              "type": "Smart Contract - TempusAMM - Yearn WETH 24 June 2022"
            },
            {
              "target": "https://ftmscan.com/address/0xAE7E5242eb52e8a592605eE408268091cC8794b8",
              "type": "Smart Contract - TempusPool - Yearn YFI 27 May 2022"
            },
            {
              "target": "https://ftmscan.com/address/0x4B137DD01a7Dc7c3Bc12d51b42a00030B6561340",
              "type": "Smart Contract - TempusAMM - Yearn YFI 27 May 2022"
            },
            {
              "target": "https://app.tempus.finance/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Tempus is a multi-chain fixed income protocol. Tempus integrates with lending protocols, staking protocols, and yield aggregators, and lets users fix or speculate on the yield generated by them.\n\nMost forms of yield farming return a variable rate of yield. This means that depositors can be subject to unpredictable fluctuations in their returns. Currently, there is no easy capital-efficient way to obtain a fixed yield or otherwise speculate on the receivable rewards.\n\nThis is where Tempus steps in. Tempus has three different use cases, each of which offers a unique value proposition:\n\n  - Fix your future yield using any supported Yield Bearing Token (such as stETH, cDai).\n  - Speculate on the rate of future yield of any supported Yield Bearing Token.\n  - Provide liquidity to earn additional swap fees (on top of yield earned through yield farming protocols) by depositing any supported Yield Bearing Token. \n\nFor more information about Tempus, please visit [https://tempus.finance/](https://tempus.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Website goes down",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Critical/High smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical smart contract bug reports. \n\nCritical payouts by Sherlock will only apply to Tempus’s smart contracts deployed on Ethereum. Hence, rewards for bug reports on Fantom smart contracts are capped at USD 150 000. In the case where a valid critical bug report affects both the Ethereum and Fantom smart contracts, rewards above USD 150 000 will be calculated solely based on the economic damage of the exploit on Ethereum contracts.\n\nIn addition, critical payouts by Sherlock will only be paid out for critical smart contract bugs that would result in a loss of funds and can be executed profitably. This then excludes Sherlock’s critical bounty payout for temporary freezing bugs.\n\nAll payouts are denominated in USD. Payouts of up to USD 150 000 are handled by the __Tempus__ team directly and are done in USDC. Payouts above USD 150 000 will be paid out by Sherlock with their bug bounty matching program and are also done in __USDC__.",
            "assets_body": "All smart contracts of Tempus can be found at [https://github.com/tempus-finance/tempus-protocol/releases/tag/release-1.0](https://github.com/tempus-finance/tempus-protocol/releases/tag/release-1.0). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "moonbeamnetwork",
          "project": "Moonbeam Network",
          "date": "2021-12-16T11:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1StyHlTZ2MSJXaKxaNp8J4/f16943b1d65ac45770b2aa17e354600b/Moonbeam_Logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $75,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/PureStake/moonbeam",
              "type": "Blockchain - Moonbeam"
            },
            {
              "target": "https://github.com/PureStake/nimbus",
              "type": "Blockchain - Nimbus"
            },
            {
              "target": "https://github.com/PureStake/crowdloan-rewards",
              "type": "Blockchain - Crowdloan Rewards"
            },
            {
              "target": "https://github.com/paritytech/frontier",
              "type": "Blockchain - Frontier"
            },
            {
              "target": "https://github.com/ethereum-lists/chains/blob/master/_data/chains/eip155-1285.json",
              "type": "Blockchain - RPC Infrastructure (Moonriver)"
            },
            {
              "target": "https://github.com/ethereum-lists/chains/blob/master/_data/chains/eip155-1287.json",
              "type": "Blockchain - RPC Infrastructure (Moonbase Alpha)"
            },
            {
              "target": "https://github.com/ethereum-lists/chains/blob/master/_data/chains/eip155-1287.json",
              "type": "Blockchain - RPC Infrastructure (Moonbeam)"
            },
            {
              "target": "https://apps.moonbeam.network",
              "type": "Web/App"
            },
            {
              "target": "https://crowdloan.moonbeam.foundation/",
              "type": "Web/App"
            },
            {
              "target": "https://moonbeam.network/",
              "type": "Web/App"
            },
            {
              "target": "https://moonbeam.foundation/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Moonbeam is an Ethereum-compatible smart contract platform on the Polkadot network that makes it easy to build natively interoperable applications. This Ethereum compatibility allows developers to deploy existing Solidity smart contracts and DApp frontends to Moonbeam with minimal changes. As a parachain on the Polkadot network, Moonbeam benefits from the shared security of the Polkadot relay chain and integrations with other chains that are connected to Polkadot. \n\nFor more information about Moonbeam Network, please visit [https://moonbeam.network/](https://moonbeam.network/).   \n\nThis bug bounty program is focused on their Moonriver and Moonbeam parachains (deployed to Kusama and Polkadot respectively) and dApps and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Network shutdown\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. For smart contract bug reports, at the discretion of the team, a PoC may be required in order to determine if the bug exists, and if necessary, to calculate the extent of the damage the bug could have if exploited. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 75 000__ for Critical bug reports. \n\nNote that a bug reported for one of either the Moonbeam or Moonriver networks that applies to both will be treated as a single report and paid only once. \n\nThe Moonbeam Foundation requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is an ID scan along with a selfie to verify identity. \n\nPayouts are handled by the __Moonbeam Foundation__ team directly and are denominated in USD. However, payouts are done in __USDT__ or __USDC__.",
            "assets_body": "The Moonriver parachain on Kusama and the Moonbeam parachain on Polkadot (estimated launch in Jan 2022) are both included in the assets-in-scope. \n\nAll source code of Moonbeam can be found at [https://github.com/PureStake/](https://github.com/PureStake/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts and Blockchain__\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 15 minutes\n  - Temporarily unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns due to a defect or exploit within the underlying parachain\n  - Governance activity disruption\n  - Vote manipulation\n  - Incorrect polling actions\n  - Bypassing extrinsic verifications (origin bypassing or escalation)\n  - Runtime consensus violation (getting invalid block into canonical)\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Users spoofing other users\n  - Denial of service via\n    - Logic attacks\n    - Slow roll attacks on unperformant services",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - EVM/Custom precompile exploit\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Broken link hijacking is out of scope \n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - SPF records for email domains\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "acala",
          "project": "Acala",
          "date": "2021-12-13T20:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2yQpKoZm8AOR2wLqYzZa9j/fd4701886536ad5828e0ff05edd4771d/acala_logo.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $50,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/AcalaNetwork/Acala",
              "type": "Blockchain - Main Network"
            },
            {
              "target": "https://github.com/open-web3-stack/open-runtime-module-library",
              "type": "Blockchain - Open Runtime Module Library"
            }
          ],
          "mdx": {
            "program_overview": "Acala is the decentralized finance network and liquidity hub of Polkadot. It’s a layer-1 smart contract platform that’s scalable, Ethereum-compatible, and optimized for DeFi with built-in liquidity and ready-made financial applications. With its trustless exchange, decentralized stablecoin (aUSD), DOT Liquid Staking (LDOT), and EVM+, Acala lets developers access the best of Ethereum and the full power of Substrate.\n\nKarura is a \"canary network\" for Acala, which means it's an early, unaudited release of the code and holds real economic value. Karura’s all-in-one DeFi hub for Kusama gives users a taste of a decentralized swap, stablecoin minting, liquid staking, earning rewards, and more – all with micro gas fees.\n\nFounded by the Acala Foundation, Karura is a scalable, EVM-compatible network optimized for DeFi. The platform offers a suite of financial applications including: a trustless staking derivative (liquid KSM), a multi-collateralized stablecoin backed by cross-chain assets (kUSD), and an AMM DEX – all with micro gas fees that can be paid in any token.\nFor developers, Karura is a proving ground for protocol upgrades and a place to experiment with new DeFi protocols and on-chain governance. \n\nFor more information about Acala, please visit [https://acala.network/](https://acala.network/).   \n\nThis bug bounty program is focused on Karura and is focused on preventing:\n\n- Transaction/consensus manipulation, \n  - Double-spending, \n  - Unauthorized token minting, \n  - Governance compromise, \n  - Getting access to an identity that can lead to unauthorized access to system’s or user’s assets. \n  - Blocking or modifying processes for governance or users from performing their tasks, generating not handled on-chain errors. \n  - Putting on-chain data into an unexpected state without interrupting the system or users from performing their tasks, e.g. generating redundant events, logs, etc.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the following severity scale:\n\n__Critical__: transaction/consensus manipulation, double-spending, unauthorized token minting, governance compromise, getting access to an identity that can lead to unauthorized access to system’s or user’s assets. \n\n__High__: blocking or modifying processes for governance or users from performing their tasks, generating not handled on-chain errors. These actions can lead to blocking users or governance from accessing their assets or performing system functions.\n\n__Medium__: Putting on-chain data into an unexpected state without interrupting the system or users from performing their tasks, e.g. generating redundant events, logs, etc.\n\nCritical vulnerabilities involving a direct loss of user funds, double spending, or the minting of tokens are capped at 10% of the economic damage, taking primarily into consideration the funds at risk or the amount of tokens that can be minted but also branding and PR considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__. Consensus manipulation or governance compromise results in the full __USD 1 000 000__. \n\nThe addition of a PoC and a suggestion for a fix is not required, but its addition may be grounds for a bonus provided by the team at its discretion.\n\nA reward can only be provided if:\n\n  - The Bug wasn't reported before.\n  - The Bounty Hunter does not disclose the Bug to other parties or publicity until it's fixed by the Karura Team.\n  - The Hunter didn't exploit the vulnerability or allow anyone else to profit from it.\n  - The Hunter reports a Bug without any additional conditions or threats.\n  - The investigation was NOT conducted with Ineligible methods or Prohibited Activities, defined in this document.\n  - The Hunter should reply to our additional questions regarding the reproduction of the reported bug (if they follow) within a reasonable time.\n  - When duplicate bug reports occur, we reward only the first one if it's provided with enough information for reproduction.\n  - When multiple vulnerabilities are caused by one underlying issue, we will reward only the first reported.\n  - The vulnerability is found in runtime pallet of Karura (no tests, or modules that aren’t in runtime, e.g. live, can be considered as vulnerability)\n\nPayouts are handled by the __Acala__ team directly and are denominated in USD. However, payouts are done in __DOT__.",
            "assets_body": "Only code involving runtime pallets of Karura are considered as in-scope of the bug bounty program. Modules that are not in runtime pallets like tests, those under development, and those that are not live, are considered as out-of-scope of the bug bounty program. \n\nAll code of Acala can be found at [https://github.com/AcalaNetwork/](https://github.com/AcalaNetwork/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Transaction/consensus manipulation, \n  - Double-spending, \n  - Unauthorized token minting, \n  - Governance compromise, \n  - Getting access to an identity that can lead to unauthorized access to system’s or user’s assets. \n  - Blocking or modifying processes for governance or users from performing their tasks, generating not handled on-chain errors. \n  - Putting on-chain data into an unexpected state without interrupting the system or users from performing their tasks, e.g. generating redundant events, logs, etc.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\nAll those that lead to the impacts stated in the Impacts in Scope section",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - DDOS attack\n  - Denial of service attacks\n  - Spamming\n  - Any physical attacks against Karura property, or employees\n  - Phishing or other social engineering attacks against our Karura’s employees\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "metis",
          "project": "Metis",
          "date": "2021-12-03T04:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/19ABvYvjdqOuf9Yh0z1qku/eca71f197167ec20877ce54534315bd2/Metis_Logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xf51B9C9a1c12e7E48BEC15DC358D0C1f0d7Eb3be",
              "type": "Smart Contract - BondManager"
            },
            {
              "target": "https://etherscan.io/address/0x56a76bcC92361f6DF8D75476feD8843EdC70e1C9",
              "type": "Smart Contract - CanonicalTransactionChain"
            },
            {
              "target": "https://etherscan.io/address/0x38473Feb3A6366757A249dB2cA4fBB2C663416B7",
              "type": "Smart Contract - ChainStorageContainer-CTC-batches"
            },
            {
              "target": "https://etherscan.io/address/0xA91Ea6F5d1EDA8e6686639d6C88b309cF35D2E57",
              "type": "Smart Contract - ChainStorageContainer-CTC-queue"
            },
            {
              "target": "https://etherscan.io/address/0x10739F09f6e62689c0aA8A1878816de9e166d6f9",
              "type": "Smart Contract - ChainStorageContainer-SCC-batches"
            },
            {
              "target": "https://etherscan.io/address/0x101500214981e7A5Ad2334D8404eaF365C2c3113",
              "type": "Smart Contract - L1StandardBridge_for_verification_only"
            },
            {
              "target": "https://etherscan.io/address/0x918778e825747a892b17C66fe7D24C618262867d",
              "type": "Smart Contract - AddressManager"
            },
            {
              "target": "https://etherscan.io/address/0xC8953ca384b4AdC8B1b11B030Afe2F05471664b0",
              "type": "Smart Contract - MVM_DiscountOracle"
            },
            {
              "target": "https://etherscan.io/address/0x9E2E3be85df5Ca63DE7674BA64ffD564075f3B48",
              "type": "Smart Contract - MVM_L2ChainManagerOnL1_for_verification_only"
            },
            {
              "target": "https://etherscan.io/address/0x8bf439ef7167023f009e24b21719ca5f768ecb36",
              "type": "Smart Contract - OVM_L1CrossDomainMessenger"
            },
            {
              "target": "https://etherscan.io/address/0xf3d58D1794f2634d6649a978f2dc093898FEEBc0",
              "type": "Smart Contract - Proxy__MVM_ChainManager"
            },
            {
              "target": "https://etherscan.io/address/0x081D1101855bD523bA69A9794e0217F0DB6323ff",
              "type": "Smart Contract - Proxy__OVM_L1CrossDomainMessenger"
            },
            {
              "target": "https://etherscan.io/address/0x3980c9ed79d2c191A89E02Fa3529C60eD6e9c04b",
              "type": "Smart Contract - Proxy__OVM_L1StandardBridge"
            },
            {
              "target": "https://etherscan.io/address/0xf209815E595Cdf3ed0aAF9665b1772e608AB9380",
              "type": "Smart Contract - StateCommitmentChain"
            }
          ],
          "mdx": {
            "program_overview": "Metis is an Ethereum layer 2 rollup platform that is designed from the ground up to be almost identical to Ethereum, but cheaper, faster, easier to use, more scalable, and more functional, with inexpensive on-chain storage. If you've built an app on Ethereum before, you're more than equipped to deploy to Metis.\n\nFor more information about Metis, please visit [https://www.metis.io/.](https://www.metis.io/) \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll smart contract bug reports must come with a PoC in order to be considered for a reward. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nMetis requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is the name, email address, phone number, company name (if applicable), and physical address.\n\nPayouts are handled by the Metis team directly and are denominated in USD. However, payouts are done in __METIS__.",
            "assets_body": "\nAll smart contracts of Metis can be found at [https://github.com/MetisProtocol/mvm/tree/develop/packages/contracts/contracts](https://github.com/MetisProtocol/mvm/tree/develop/packages/contracts/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\nAttacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)\n\nSmart Contracts and Blockchain\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "notional",
          "project": "Notional",
          "date": "2021-11-05T03:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4IWAL9hnVKo7ToHawJYKZ1/2b7d9aab624d0fe6646f17bb6171c9fe/Notional_Logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "high",
              "payout": "USD $50,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x1344A36A1B56144C3Bc62E7757377D288fDE0369",
              "type": "Smart Contract - nProxy"
            },
            {
              "target": "https://etherscan.io/address/0x123fca954ea894305b684f56a0d043169a5aa7e4#code",
              "type": "Smart Contract - Router"
            },
            {
              "target": "https://etherscan.io/address/0x5f11e94e0a69ac8490f45eb27a6478dcddb0227e",
              "type": "Smart Contract - Account Action"
            },
            {
              "target": "https://etherscan.io/address/0x63757f772b8aab66f4de09617e8f257249efcb93",
              "type": "Smart Contract - Batch Action"
            },
            {
              "target": "https://etherscan.io/address/0xffd7531ed937f703b269815950cb75bdaaa341c9",
              "type": "Smart Contract - ERC1155"
            },
            {
              "target": "https://etherscan.io/address/0xd2b104a30518abee70e5b77023d8966a2234253d",
              "type": "Smart Contract - GovernanceAction"
            },
            {
              "target": "https://etherscan.io/address/0x280decd520da16e5571a6f2fb803a57e0c16f423",
              "type": "Smart Contract - InitializeMarketAction"
            },
            {
              "target": "https://etherscan.io/address/0x6b986a60216aca687457782adfa0b002ad392ce7",
              "type": "Smart Contract - LiquidateCurrencyAction"
            },
            {
              "target": "https://etherscan.io/address/0xb12b08045c2fb403fcae579641d0a011aad8ed70",
              "type": "Smart Contract - LiquidatefCashAction"
            },
            {
              "target": "https://etherscan.io/address/0x1cd33f81420bfce8a3622dc56bbd617b7fa3c93a",
              "type": "Smart Contract - nTokenActions"
            },
            {
              "target": "https://etherscan.io/address/0x1c510763432c0e65d86f313612d4e1e2d26e4332",
              "type": "Smart Contract - nTokenRedeem"
            },
            {
              "target": "https://etherscan.io/address/0xde14d5f07456c86f070c108a04ae2fafdbd2a939",
              "type": "Smart Contract - Views"
            },
            {
              "target": "https://etherscan.io/address/0xbe401d7e76bb71bf7fa5a4aed7f3b650c6e0bd25",
              "type": "Smart Contract - pauseRouter"
            },
            {
              "target": "https://etherscan.io/address/0x422A2e95009f11e9E144FE7fd1a7c7A9C759Bb6A#code",
              "type": "Smart Contract - Free Collateral External (Library)"
            },
            {
              "target": "https://etherscan.io/address/0x662F1be7f07C90031F7B5264f71Bd1AC0E975526",
              "type": "Smart Contract - Trading Action (Library)"
            },
            {
              "target": "https://etherscan.io/address/0x0092A5552162f911ccF7f456e85f473cE259707F",
              "type": "Smart Contract - nTokenMintAction (Library)"
            },
            {
              "target": "https://etherscan.io/address/0xb15167FfF26202Aa3d20Ecfd7f46a34Fa4126e49",
              "type": "Smart Contract - SettleAssetsExternal (Library)"
            },
            {
              "target": "https://etherscan.io/address/0xCFEAead4947f0705A14ec42aC3D44129E1Ef3eD5",
              "type": "Smart Contract - NOTE ERC20 Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x95df7e34403becd532f2be160cacda56f0bd6ba3#code",
              "type": "Smart Contract - NOTE ERC20 Implementation"
            },
            {
              "target": "https://etherscan.io/address/0x086b4ecD75c494dD36641195E89c25373E06d7cB",
              "type": "Smart Contract - Governor"
            },
            {
              "target": "https://notional.finance",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Notional is a protocol on Ethereum that facilitates fixed-rate, fixed-term crypto asset lending and borrowing through a novel financial instrument called fCash.\n\nfCash is a tokenized representation of a fCash flow. It represents the amount of tokens (i.e. Dai) that an account is either entitled to receive or obligated to pay at its designated maturity. For example, if an account holds +100 fCash tokens for a maturity on January 1, 2021, it is entitled to 100 Dai at any time greater than or equal to January 1, 2021. Similarly, -100 fCash tokens for the same maturity means that the account is obligated to pay 100 Dai at maturity.\n\nFor more information about Notional, please visit [https://notional.finance/](https://notional.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Loss of funds \n  - Voting manipulation\n  - Any function that is outside the intended behavior of the smart contracts\n  - Redirection of funds\n  - Injection of text",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical web and Low and Medium smart contract bug reports must come with a PoC in order to be considered for a reward. \n\nCritical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the Notional team directly and are denominated in USD. However, payouts are done in __USDC__, __DAI__, __ETH__, __USDT__, or the project token, at the discretion of the team.",
            "assets_body": "All smart contracts of Notional can be found at https://github.com/notional-finance/contracts-v2/. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of funds \n  - Voting manipulation\n  - Any function that is outside the intended behavior of the smart contracts\n\n__Web/App__\n\n  - Redirection of funds\n  - Injection of text",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gmx",
          "project": "GMX",
          "date": "2021-10-20T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3MNDLo0J4LVTW2PgGVCsrb/1b8813ff88a37704386e3c81237dfbbc/GMX_logo.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0x489ee077994B6658eAfA855C308275EAd8097C4A",
              "type": "Smart Contract - Vault"
            },
            {
              "target": "https://arbiscan.io/address/0x1cf4579904eb2acda0e4081e39ec10d0c32b5de3",
              "type": "Smart Contract - Vault Price Feed"
            },
            {
              "target": "https://arbiscan.io/address/0x73fe72c9caa0faf0e488570d5898984783e728df",
              "type": "Smart Contract - Fast Price Feed"
            },
            {
              "target": "https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064",
              "type": "Smart Contract - Router"
            },
            {
              "target": "https://arbiscan.io/address/0x321f653eed006ad1c29d174e17d96351bde22649",
              "type": "Smart Contract - Glp Manager"
            },
            {
              "target": "https://arbiscan.io/address/0xA906F338CB21815cBc4Bc87ace9e68c87eF8d8F1",
              "type": "Smart Contract - Reward RouterV2"
            },
            {
              "target": "https://arbiscan.io/address/0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258",
              "type": "Smart Contract - GLP"
            },
            {
              "target": "https://arbiscan.io/address/0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a",
              "type": "Smart Contract - GMX"
            },
            {
              "target": "https://arbiscan.io/address/0xf42Ae1D54fd613C9bb14810b0588FaAa09a426cA",
              "type": "Smart Contract - EsGMX"
            },
            {
              "target": "https://arbiscan.io/address/0x35247165119B69A40edD5304969560D0ef486921",
              "type": "Smart Contract - BnGMX"
            },
            {
              "target": "https://arbiscan.io/address/0x45096e7aA921f27590f8F19e457794EB09678141",
              "type": "Smart Contract - USDG"
            },
            {
              "target": "https://arbiscan.io/address/0x908c4d94d34924765f1edc22a1dd098397c59dd4",
              "type": "Smart Contract - Staked Gmx Tracker"
            },
            {
              "target": "https://arbiscan.io/address/0x4d268a7d4C16ceB5a606c173Bd974984343fea13",
              "type": "Smart Contract - Bonus Gmx Tracker"
            },
            {
              "target": "https://arbiscan.io/address/0xd2D1162512F927a7e282Ef43a362659E4F2a728F",
              "type": "Smart Contract - Fee Gmx Tracker"
            },
            {
              "target": "https://arbiscan.io/address/0x1aDDD80E6039594eE970E5872D247bf0414C8903",
              "type": "Smart Contract - Staked Glp Tracker"
            },
            {
              "target": "https://arbiscan.io/address/0x4e971a87900b931fF39d1Aad67697F49835400b6",
              "type": "Smart Contract - Fee Glp Tracker"
            },
            {
              "target": "https://arbiscan.io/address/0x23208b91a98c7c1cd9fe63085bff68311494f193",
              "type": "Smart Contract - Staked Gmx Distributor"
            },
            {
              "target": "https://arbiscan.io/address/0x03f349b3cc4f200d7fae4d8ddaf1507f5a40d356",
              "type": "Smart Contract - Bonus Gmx Distributor"
            },
            {
              "target": "https://arbiscan.io/address/0x1de098faf30bd74f22753c28db17a2560d4f5554",
              "type": "Smart Contract - Fee Gmx Distributor"
            },
            {
              "target": "https://arbiscan.io/address/0x60519b48ec4183a61ca2b8e37869e675fd203b34",
              "type": "Smart Contract - Staked Glp Distributor"
            },
            {
              "target": "https://arbiscan.io/address/0x5c04a12eb54a093c396f61355c6da0b15890150d",
              "type": "Smart Contract - Fee Glp Distributor"
            },
            {
              "target": "https://arbiscan.io/address/0x199070DDfd1CFb69173aa2F7e20906F26B363004",
              "type": "Smart Contract - Gmx Vester"
            },
            {
              "target": "https://arbiscan.io/address/0xA75287d2f8b217273E7FCD7E86eF07D33972042E",
              "type": "Smart Contract - Glp Vester"
            },
            {
              "target": "https://arbiscan.io/address/0x3f3e77421e30271568ef7a0ab5c5f2667675341e",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://arbiscan.io/address/0x01AF26b74409d10e15b102621EDd29c326ba1c55",
              "type": "Smart Contract - Staked Glp"
            },
            {
              "target": "https://arbiscan.io/address/0x13E0BbE893B33b64D4f3F96725dd70531fA4EbCe",
              "type": "Smart Contract - Glp Balance"
            },
            {
              "target": "https://arbiscan.io/address/0x09f77e8a13de9a35a7231028187e9fd5db8a2acb#code",
              "type": "Smart Contract - Order Book"
            },
            {
              "target": "https://gmx.io/earn",
              "type": "Web/App - App"
            },
            {
              "target": "https://gmx.io/trade",
              "type": "Web/App - App"
            }
          ],
          "mdx": {
            "program_overview": "GMX is a decentralized spot and perpetual exchange that supports low swap fees and zero price impact trades.\n\nTrading is supported by a unique multi-asset pool that earns liquidity providers fees from market making, swap fees, leverage trading (spreads, funding fees & liquidations) and asset rebalancing.\n\nFor more information about GMX, please visit [https://gmx.io/](https://gmx.io/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds by freezing, theft, or manipulation of the price of GLP\n  - Theft or freezing of unclaimed yield\n  - Unable to call smart contract\n  - There is currently a cooldown duration of 15 minutes between minting and redeeming GLP to reduce manipulation risks, we are planning to set this duration to zero eventually, so we would want to know about potential exploits if the duration is zero \n  - There is a minimum price movement of 1.5% required for positions to be in profit, this is to mitigate front-running issues, we would want to know about potential exploits if this threshold is reduced to e.g. 0.5%\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Temporary freezing of fund for any amount of time \n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Exploits that require access to the Timelock admin keys or Fast Price Feed admin keys\n  - Cases involving risks of losses to the GLP pool in case the assets in the pool decrease in price\n  - Cases involving price manipulation on exchanges\n  - Vesting schedules might be slightly faster for multiple deposits\n  - Vault.includeAmmPrice and Vault.useSwapPricing are not reset to default values for certain cases, these variables will not be used\n  - Vault.liquidatePosition does not pay the transaction sender for certain cases, this is intentional\n  - Exploits that are not economically practical to execute\n  - Exploits due to delays or sizes of price feed updates\n  - In general, we assume that the fees earned from swaps and leverage trading over a period of a few months will be larger than any potential losses from price updates, we will be analyzing past data to adjust the fees and parameters for this. Additionally, any changes relating to the minimum price movement for profit as well as the cooldown duration for redeeming GLP will only be done after this analysis.  This analysis will also consider cases where opening both a long and short position within the minimum price movement may result in a higher probability of profit. Reports relating to these should be excluded.\n  - Calling Vault.setTokenConfig, Vault.clearTokenConfig, Vault.setTokenConfig on the same token would lead to double counting of the token amounts in GlpManager, Vault.clearTokenConfig will not be used\n  - GlpManager.getAum may return a slightly higher value until a liquidation occurs\n  - GlpManager.getAum may return a slightly lower value when there are shorts in profit but the price movement is below the 1.5% threshold\n  - It is possible for a user to burn and then mint GLP to frontrun price movements, the fees are assumed to be sufficient to prevent this from being profitable\n  - There will be some deviation of Vault.globalShortAveragePrices from the true average price if users increase their short position while the mark price is within 1.5% of their position’s average price, it is evaluated to not be economical for users to do this intentionally whether in combination with GLP minting or otherwise, GlpManager.setAumAdjustment can be used to correct this drift if required\n  - Vault.CollectSwapFees(_token, feeAmount, tokenToUsdMin(_token, feeAmount)) has a mixed up ordering for feeTokens and feeUsd\n  - It is expected that liquidators and order executors validate transactions will succeed before sending them\n\nPayouts are handled by the __GMX__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "All smart contracts of GMX can be found at [https://github.com/gmx-io/gmx-contracts](https://github.com/gmx-io/gmx-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds by freezing, theft, or manipulation of the price of GLP\n  - Unable to call smart contract\n  - There is currently a cooldown duration of 15 minutes between minting and redeeming GLP to reduce manipulation risks, we are planning to set this duration to zero eventually, so we would want to know about potential exploits if the duration is zero \n  - There is a minimum price movement of 1.5% required for positions to be in profit, this is to mitigate front-running issues, we would want to know about potential exploits if this threshold is reduced to e.g. 0.5%\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Temporary freezing of fund for any amount of time \n  - Theft of governance funds \n  - Governance activity disruption\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - Attacks that require the user to click on phishing or malicious links for subdomains can be reported but will be given a Medium or High classification at most\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tracer",
          "project": "Tracer",
          "date": "2021-09-24T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5DKQJAQioL419G8rS8uffH/0caf1323460cf51acbbef98e50abd014/Tracer.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0x0f79e82ae88e1318b8cfc8b4a205fe2f982b928a",
              "type": "Smart Contract - Multisig"
            },
            {
              "target": "https://arbiscan.io/address/0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
              "type": "Smart Contract - USDC"
            },
            {
              "target": "https://arbiscan.io/address/0xA72159FC390f0E3C6D415e658264c7c4051E9b87",
              "type": "Smart Contract - Tracer Token"
            },
            {
              "target": "https://arbiscan.io/address/0xE973E6400B44fd20fc4752c03D112274A1374bA0",
              "type": "Smart Contract - Deployed OracleWrapper"
            },
            {
              "target": "https://arbiscan.io/address/0xeceaea7e0408606714b2559ac9b1d3d51a327afe",
              "type": "Smart Contract - Keeper oracle"
            },
            {
              "target": "https://arbiscan.io/address/0x98C58c1cEb01E198F8356763d5CbA8EB7b11e4E2",
              "type": "Smart Contract - 1-BTC/USD Deployed PoolFactory"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/LeveragedPool.sol",
              "type": "Smart Contract - 1-BTC/USD Deployed LeveragedPool"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolKeeper.sol",
              "type": "Smart Contract - 1-BTC/USD Deploy PoolKeeper"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 1-BTC/USD Long pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 1-BTC/USD Long pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 1-BTC/USD Long pool token"
            },
            {
              "target": "https://arbiscan.io/address/0x98C58c1cEb01E198F8356763d5CbA8EB7b11e4E2",
              "type": "Smart Contract - 3-BTC/USD Deployed PoolFactory"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/LeveragedPool.sol",
              "type": "Smart Contract - 3-BTC/USD Deployed LeveragedPool"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolKeeper.sol",
              "type": "Smart Contract - 3-BTC/USD Deploy PoolKeeper"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 3-BTC/USD Long pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 3-BTC/USD Short pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolCommitter.sol",
              "type": "Smart Contract - 3-BTC/USD PoolCommitter"
            },
            {
              "target": "https://arbiscan.io/address/0x98C58c1cEb01E198F8356763d5CbA8EB7b11e4E2",
              "type": "Smart Contract - 1-ETH/USD Deployed PoolFactory"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/LeveragedPool.sol",
              "type": "Smart Contract - 1-ETH/USD Deployed LeveragedPool"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolKeeper.sol",
              "type": "Smart Contract - 1-ETH/USD Deploy PoolKeeper"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 1-ETH/USD Long pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 1-ETH/USD Short pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolCommitter.sol",
              "type": "Smart Contract - 1-ETH/USD PoolCommitter"
            },
            {
              "target": "https://arbiscan.io/address/0x98C58c1cEb01E198F8356763d5CbA8EB7b11e4E2",
              "type": "Smart Contract - 3-ETH/USD Deployed PoolFactory"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/LeveragedPool.sol",
              "type": "Smart Contract - 3-ETH/USD Deployed LeveragedPoo"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolKeeper.sol",
              "type": "Smart Contract - 3-ETH/USD Deploy PoolKeeper"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 3-ETH/USD Long pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolToken.sol",
              "type": "Smart Contract - 3-ETH/USD Short pool token"
            },
            {
              "target": "https://github.com/tracer-protocol/perpetual-pools-contracts/blob/6ef0aaf03815e99d85bf4baf0ea9d1b358a921d3/contracts/implementation/PoolCommitter.sol",
              "type": "Smart Contract - 3-ETH/USD PoolCommitter"
            },
            {
              "target": "https://arbiscan.io/address/0xA2bACCD1AA980f80b37BC950CE3eE2d5816d7EC0",
              "type": "Smart Contract - 1-BTC/USD Long Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0xD04dDCAEca6bf283A430Cb9E847CEEd5Da419Fa0",
              "type": "Smart Contract - 1-BTC/USD Short Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0xEb05e160D3C1990719aa25d74294783fE4e3D3Ef",
              "type": "Smart Contract - 3-BTC/USD Long Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0xeA4FF5ED11F93AA0Ce7744B1D40093f52eA1cda8",
              "type": "Smart Contract - 3-BTC/USD Short Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0xA18413dC5506A91138e0604C283E36B021b8849B",
              "type": "Smart Contract - 1-ETH/USD Long Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0x9769F208239C740cC40E9CB3427c34513213B83f",
              "type": "Smart Contract - 1-ETH/USD Short Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0x07cCcDC913bCbab246fC6E38E81b0C53AaB3De9b",
              "type": "Smart Contract - 3-ETH/USD Long Staking farm address"
            },
            {
              "target": "https://arbiscan.io/address/0xE1c9C69a26BD5c6E4b39E6870a4a2B01b4e033bC",
              "type": "Smart Contract - ​​3-ETH/USD Short Staking farm address"
            }
          ],
          "mdx": {
            "program_overview": "The Tracer protocol is a DAO governed network of open-source financial smart contracts that enables people to manage financial risk. The protocol itself is a low cost vehicle that can be used to unlock new digital and real-world markets.\n\nFor more information about Tracer, please visit [https://tracer.finance/](https://tracer.finance/).   \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds\n  - Deadlocking of system (minting and burning gets blocked)\n  - Contract fails to deliver promised returns, but doesn't lose value",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical and High smart contract bug reports must come with a PoC in order to be considered for a reward. \n\nCritical smart contract vulnerabilities are paid at 10% of economic damage, primarily based on funds at risk. The team may, at its discretion, take into consideration other aspects such as PR and branding effects. However, there is a minimum reward of __USD 100 000__.\n\nBug reports involving vulnerabilities highlighted [in this audit](https://ipfs.io/ipfs/QmTGAU4mF4P9TFPjSBw5gwUydzF3XX1BfRdX68RnsYjvDs) are not eligible for a reward as they are a known issue. \n\nBug reports involving vulnerabilities highlighted in  [https://code423n4.com/reports/2021-10-tracer/](https://code423n4.com/reports/2021-10-tracer/) are not eligible for a reward as they are known issues and are out of scope.\n\nPayouts are handled by the __Tracer__ team directly and are denominated in USD. However, payouts are done in a mix of __TCR__ and stablecoins, at the discretion of the Tracer team.",
            "assets_body": "All smart contracts of Tracer can be found at [https://github.com/mycelium-ethereum/perpetual-pools-contracts](https://github.com/mycelium-ethereum/perpetual-pools-contracts).  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\nFor additional reference, the following smart contracts can be found at the following contract addresses:\n\n3-ETH/USD PoolCommitter - [https://arbiscan.io/address/0x72c4e7Aa6c743DA4e690Fa7FA66904BC3f2C9C04](https://arbiscan.io/address/0x72c4e7Aa6c743DA4e690Fa7FA66904BC3f2C9C04)   \n\n3-ETH/USD Short pool token - [https://arbiscan.io/address/0x7d7E4f49a29dDA8b1eCDcf8a8bc85EdcB234E997](https://arbiscan.io/address/0x7d7E4f49a29dDA8b1eCDcf8a8bc85EdcB234E997) \n\n3-ETH/USD Long pool token - [https://arbiscan.io/address/0xaA846004Dc01b532B63FEaa0b7A0cB0990f19ED9](https://arbiscan.io/address/0xaA846004Dc01b532B63FEaa0b7A0cB0990f19ED9)\n\n3-ETH/USD Deploy PoolKeeper - [https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e](https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e)  \n\n3-ETH/USD Deployed LeveragedPool - [https://arbiscan.io/address/0x54114e9e1eEf979070091186D7102805819e916B](https://arbiscan.io/address/0x54114e9e1eEf979070091186D7102805819e916B)\n\n1-ETH/USD PoolCommitter - [https://arbiscan.io/address/0x047Cd47925C2390ce26dDeB302b8b165d246d450](https://arbiscan.io/address/0x047Cd47925C2390ce26dDeB302b8b165d246d450) \n\n1-ETH/USD Short pool token - [https://arbiscan.io/address/0xf581571DBcCeD3A59AaaCbf90448E7B3E1704dcD](https://arbiscan.io/address/0xf581571DBcCeD3A59AaaCbf90448E7B3E1704dcD) \n\n1-ETH/USD Long pool token - [https://arbiscan.io/address/0x38c0a5443c7427e65A9Bf15AE746a28BB9a052cc](https://arbiscan.io/address/0x38c0a5443c7427e65A9Bf15AE746a28BB9a052cc) \n\n1-ETH/USD Deploy PoolKeeper - [https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e](https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e) \n\n1-ETH/USD Deployed LeveragedPool - [https://arbiscan.io/address/0x3A52aD74006D927e3471746D4EAC73c9366974Ee](https://arbiscan.io/address/0x3A52aD74006D927e3471746D4EAC73c9366974Ee) \n\n3-BTC/USD PoolCommitter - \n[https://arbiscan.io/address/0xFDE5D7B7596AF6aC5df7C56d76E14518A9F578dF](https://arbiscan.io/address/0xFDE5D7B7596AF6aC5df7C56d76E14518A9F578dF) \n\n3-BTC/USD Short pool token - [https://arbiscan.io/address/0x85700dC0bfD128DD0e7B9eD38496A60baC698fc8](https://arbiscan.io/address/0x85700dC0bfD128DD0e7B9eD38496A60baC698fc8) \n\n3-BTC/USD Long pool token - [https://arbiscan.io/address/0x05A131B3Cd23Be0b4F7B274B3d237E73650e543d](https://arbiscan.io/address/0x05A131B3Cd23Be0b4F7B274B3d237E73650e543d)  \n\n3-BTC/USD Deploy PoolKeeper - [https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e](https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e) \n\n3-BTC/USD Deployed LeveragedPool - [https://arbiscan.io/address/0x70988060e1FD9bbD795CA097A09eA1539896Ff5D](https://arbiscan.io/address/0x70988060e1FD9bbD795CA097A09eA1539896Ff5D) \n\n1-BTC/USD Long pool token - [https://arbiscan.io/address/0x539Bf88D729B65F8eC25896cFc7a5f44bbf1816b](https://arbiscan.io/address/0x539Bf88D729B65F8eC25896cFc7a5f44bbf1816b) \n\n1-BTC/USD Long pool token - [https://arbiscan.io/address/0x052814194f459aF30EdB6a506eABFc85a4D99501](https://arbiscan.io/address/0x052814194f459aF30EdB6a506eABFc85a4D99501) \n\n1-BTC/USD Long pool token - [https://arbiscan.io/address/0x1616bF7bbd60E57f961E83A602B6b9Abb6E6CAFc](https://arbiscan.io/address/0x1616bF7bbd60E57f961E83A602B6b9Abb6E6CAFc) \n\n1-BTC/USD Deploy PoolKeeper - [https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e](https://arbiscan.io/address/0x759E817F0C40B11C775d1071d466B5ff5c6ce28e) \n\n1-BTC/USD Deployed LeveragedPool - [https://arbiscan.io/address/0x146808f54DB24Be2902CA9f595AD8f27f56B2E76 ](https://arbiscan.io/address/0x146808f54DB24Be2902CA9f595AD8f27f56B2E76)\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds\n  - Deadlocking of system (minting and burning gets blocked)\n  - Contract fails to deliver promised returns, but doesn't lose value",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n  - Contract DOS attacks on the minting and burning system\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "arbitrum",
          "project": "Arbitrum",
          "date": "2021-08-31T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4R1H4ktLiQcp601gnixkJa/20dc4d9cf5229ae712f1413d9afced4f/Arbitrum.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/Hashing.sol",
              "type": "Smart Contract - Hashing.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/IOneStepProof.sol",
              "type": "Smart Contract - IOneStepProof.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/Machine.sol",
              "type": "Smart Contract - Machine.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/Marshaling.sol",
              "type": "Smart Contract - Marshaling.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/OneStepProof.sol",
              "type": "Smart Contract - OneStepProof.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/OneStepProof2.sol",
              "type": "Smart Contract - OneStepProof2.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/OneStepProofCommon.sol",
              "type": "Smart Contract - OneStepProofCommon.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/OneStepProofHash.sol",
              "type": "Smart Contract - OneStepProofHash.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/arch/Value.sol",
              "type": "Smart Contract - Value.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/Bridge.sol",
              "type": "Smart Contract - Bridge.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/BridgeUtils.sol",
              "type": "Smart Contract - BridgeUtils.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/Inbox.sol",
              "type": "Smart Contract - Inbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/Messages.sol",
              "type": "Smart Contract - Messages.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/Outbox.sol",
              "type": "Smart Contract - Outbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/SequencerInbox.sol",
              "type": "Smart Contract - SequencerInbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/interfaces/IBridge.sol",
              "type": "Smart Contract - IBridge.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/interfaces/IInbox.sol",
              "type": "Smart Contract - IInbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/interfaces/IMessageProvider.sol",
              "type": "Smart Contract - IMessageProvider.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/interfaces/IOutbox.sol",
              "type": "Smart Contract - IOutbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/bridge/interfaces/ISequencerInbox.sol",
              "type": "Smart Contract - ISequencerInbox.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/challenge/Challenge.sol",
              "type": "Smart Contract - Challenge.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/challenge/ChallengeFactory.sol",
              "type": "Smart Contract - ChallengeFactory.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/challenge/ChallengeLib.sol",
              "type": "Smart Contract - ChallengeLib.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/challenge/IChallenge.sol",
              "type": "Smart Contract - IChallenge.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/challenge/IChallengeFactory.sol",
              "type": "Smart Contract - IChallengeFactory.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/interfaces/IERC20.sol",
              "type": "Smart Contract - IERC20.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/BytesLib.sol",
              "type": "Smart Contract - BytesLib.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/Cloneable.sol",
              "type": "Smart Contract - Cloneable.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/DebugPrint.sol",
              "type": "Smart Contract - DebugPrint.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/ICloneable.sol",
              "type": "Smart Contract - ICloneable.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/MerkleLib.sol",
              "type": "Smart Contract - MerkleLib.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/Precompiles.sol",
              "type": "Smart Contract - Precompiles.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/libraries/Whitelist.sol",
              "type": "Smart Contract - Whitelist.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/BridgeCreator.sol",
              "type": "Smart Contract - BridgeCreator.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/INode.sol",
              "type": "Smart Contract - INode.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/INodeFactory.sol",
              "type": "Smart Contract - INodeFactory.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/IRollupCore.sol",
              "type": "Smart Contract - IRollupCore.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/Node.sol",
              "type": "Smart Contract - Node.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/NodeFactory.sol",
              "type": "Smart Contract - NodeFactory.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/Rollup.sol",
              "type": "Smart Contract - Rollup.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/RollupCore.sol",
              "type": "Smart Contract - RollupCore.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/RollupCreator.sol",
              "type": "Smart Contract - RollupCreator.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/RollupEventBridge.sol",
              "type": "Smart Contract - RollupEventBridge.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/RollupLib.sol",
              "type": "Smart Contract - RollupLib.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/facets/IRollupFacets.sol",
              "type": "Smart Contract - IRollupFacets.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/facets/RollupAdmin.sol",
              "type": "Smart Contract - RollupAdmin.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/rollup/facets/RollupUser.sol",
              "type": "Smart Contract - RollupUser.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/validator/Validator.sol",
              "type": "Smart Contract - Validator.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/validator/ValidatorUtils.sol",
              "type": "Smart Contract - ValidatorUtils.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-eth/contracts/validator/ValidatorWalletCreator.sol",
              "type": "Smart Contract - ValidatorWalletCreator.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arb-os/blob/develop/contracts/arbos/builtin/ArbRetryableTx.sol",
              "type": "Smart Contract - ArbRetryableTx.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arb-os/blob/develop/contracts/arbos/builtin/ArbAddressTable.sol",
              "type": "Smart Contract - ArbAddressTable.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arb-os/blob/develop/contracts/arbos/builtin/ArbSys.sol",
              "type": "Smart Contract - ArbSys.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/IArbToken.sol",
              "type": "Smart Contract - IArbToken.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/L2ArbitrumMessenger.sol",
              "type": "Smart Contract - L2ArbitrumMessenger.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/StandardArbERC20.sol",
              "type": "Smart Contract - StandardArbERC20.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/gateway/L2ArbitrumGateway.sol",
              "type": "Smart Contract - L2ArbitrumGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/gateway/L2CustomGateway.sol",
              "type": "Smart Contract - L2CustomGateway.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/gateway/L2ERC20Gateway.sol",
              "type": "Smart Contract - L2ERC20Gateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/gateway/L2GatewayRouter.sol",
              "type": "Smart Contract - L2GatewayRouter.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/arbitrum/gateway/L2WethGateway.sol",
              "type": "Smart Contract - L2WethGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/ICustomToken.sol",
              "type": "Smart Contract - ICustomToken.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/L1ArbitrumMessenger.sol",
              "type": "Smart Contract - L1ArbitrumMessenger.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1ArbitrumExtendedGateway.sol",
              "type": "Smart Contract - L1ArbitrumExtendedGateway.sol "
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1ArbitrumGateway.sol",
              "type": "Smart Contract - L1ArbitrumGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1CustomGateway.sol",
              "type": "Smart Contract - L1CustomGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1ERC20Gateway.sol",
              "type": "Smart Contract - L1ERC20Gateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1GatewayRouter.sol",
              "type": "Smart Contract - L1GatewayRouter.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/ethereum/gateway/L1WethGateway.sol",
              "type": "Smart Contract - L1WethGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/BytesParser.sol",
              "type": "Smart Contract - BytesParser.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/ClonableBeaconProxy.sol",
              "type": "Smart Contract - ClonableBeaconProxy.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/ITransferAndCall.sol",
              "type": "Smart Contract - ITransferAndCall.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/IWETH9.sol",
              "type": "Smart Contract - IWETH9.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/L2GatewayToken.sol",
              "type": "Smart Contract - L2GatewayToken.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/TransferAndCallToken.sol",
              "type": "Smart Contract - TransferAndCallToken.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/aeERC20.sol",
              "type": "Smart Contract - aeERC20.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/aeWETH.sol",
              "type": "Smart Contract - aeWETH.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/gateway/GatewayMessageHandler.sol",
              "type": "Smart Contract - GatewayMessageHandler.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/gateway/GatewayRouter.sol",
              "type": "Smart Contract - GatewayRouter.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/gateway/ICustomGateway.sol",
              "type": "Smart Contract - ICustomGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/gateway/ITokenGateway.sol",
              "type": "Smart Contract - ITokenGateway.sol"
            },
            {
              "target": "https://github.com/OffchainLabs/arbitrum/blob/master/packages/arb-bridge-peripherals/contracts/tokenbridge/libraries/gateway/TokenGateway.sol",
              "type": "Smart Contract - TokenGateway.sol"
            }
          ],
          "mdx": {
            "program_overview": "Arbitrum is a scaling solution for Ethereum developed by Offchain Labs that drastically reduces costs and latency. An \"Optimistic Rollup\", Arbitrum instantly scales apps, reducing costs and increasing capacity, without sacrificing Ethereum's security. Arbitrum validators optimistically post updates to Ethereum, and the protocol uses an interactive fraud proof mechanism to resolve any disputes efficiently with a minimal on-chain footprint. Porting contracts to Arbitrum requires no code changes or downloads as Arbitrum is fully compatible with most existing Ethereum developer tooling. Arbitrum has just launched its mainnet beta, Arbitrum One, on Ethereum mainnet. \n\nFor more information about Arbitrum, please visit [https://github.com/OffchainLabs/arbitrum](https://github.com/OffchainLabs/arbitrum).    \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be considered for a reward.\n\nCritical bug reports are capped at 10% of economic damage, primarily considering the funds at risk, and taking into account branding and PR issues, at the discretion of the team. However, rewards for Critical bug reports have a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __Offchain Labs__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Arbitrum can be found at [https://github.com/OffchainLabs/arbitrum](https://github.com/OffchainLabs/arbitrum) and \n\n[https://github.com/OffchainLabs/arb-os/tree/develop/contracts/arbos/builtin](https://github.com/OffchainLabs/arb-os/tree/develop/contracts/arbos/builtin). \n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Temporary freezing of funds other than withdrawals for one week or more\n  - Delaying withdrawals at no cost to the exploiter\n  - Unable to call smart contract\n  - Network shutdown\n  - Smart contract gas drainage",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "renvm",
          "project": "RenVM",
          "date": "2021-08-27T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5rNELm0Hpe4lx4jqQkfcce/e3e0cecf41df3e545d293e6604b9924e/RenVM.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $1,500 - USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $600 - USD $1,500"
            },
            {
              "level": "low",
              "payout": "USD $200 - USD $600"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/renproject/hyperdrive",
              "type": "Blockchain - Consensus engine"
            },
            {
              "target": "https://github.com/renproject/aw",
              "type": "Blockchain - P2P networking library"
            },
            {
              "target": "https://github.com/renproject/multichain",
              "type": "Blockchain - Blockchain adapters"
            },
            {
              "target": "https://github.com/renproject/mpc",
              "type": "Blockchain - MPC library"
            },
            {
              "target": "https://etherscan.io/address/0xe80d347DF1209a76DD9d2319d62912ba98C54DDD",
              "type": "Smart Contract - GatewayRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x32666B64e9fD0F44916E1378Efb2CFa3B3B96e80",
              "type": "Smart Contract - BasicAdapter"
            },
            {
              "target": "https://etherscan.io/address/0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D",
              "type": "Smart Contract - renBTC ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xe4b679400F0f267212D5D812B95f58C83243EE71",
              "type": "Smart Contract - renBTC Gateway"
            },
            {
              "target": "https://etherscan.io/address/0x1C5db575E2Ff833E46a2E9864C22F4B22E0B37C2",
              "type": "Smart Contract - renZEC ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xc3BbD5aDb611dd74eCa6123F05B18acc886e122D",
              "type": "Smart Contract - renZEC Gateway"
            },
            {
              "target": "https://etherscan.io/address/0x459086F2376525BdCebA5bDDA135e4E9d3FeF5bf",
              "type": "Smart Contract - renBCH ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xCc4FF5b8A4A7adb35F00ff0CBf53784e07c3C52F",
              "type": "Smart Contract - renBCH Gateway"
            },
            {
              "target": "https://etherscan.io/address/0xD5147bc8e386d91Cc5DBE72099DAC6C9b99276F5",
              "type": "Smart Contract - renFIL ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xED7D080AA1d2A4D468C615a5d481125Bb56BF1bf",
              "type": "Smart Contract - renFIL Gateway"
            },
            {
              "target": "https://etherscan.io/address/0xe3Cb486f3f5C639e98cCBaF57d95369375687F80",
              "type": "Smart Contract - renDOGE ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xe3Cb486f3f5C639e98cCBaF57d95369375687F80",
              "type": "Smart Contract - renDOGE Gateway"
            },
            {
              "target": "https://etherscan.io/address/0x3832d2F059E55934220881F831bE501D180671A7",
              "type": "Smart Contract - renDGB ERC20"
            },
            {
              "target": "https://etherscan.io/address/0x2362843745615368F4ef0A43D7502353649C0783",
              "type": "Smart Contract - renDGB Gateway"
            },
            {
              "target": "https://etherscan.io/address/0x52d87F22192131636F93c5AB18d0127Ea52CB641",
              "type": "Smart Contract - renLUNA ERC20"
            },
            {
              "target": "https://etherscan.io/address/0xD7D7Deab930B6d3f98b35A26a4c431630d5AB874",
              "type": "Smart Contract - renLUNA Gateway"
            },
            {
              "target": "https://etherscan.io/address/0xc25167ffa19b4d9d03c7d5aa4682c7063f345b66",
              "type": "Smart Contract - Protocol"
            },
            {
              "target": "https://etherscan.io/address/0x2D7b6C95aFeFFa50C068D50f89C5C0014e054f0A",
              "type": "Smart Contract - DarknodeRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x60Ab11FE605D2A2C3cf351824816772a131f8782",
              "type": "Smart Contract - DarknodeRegistryStore"
            },
            {
              "target": "https://etherscan.io/address/0x098e1708b920EFBdD7afe33Adb6a4CBa30c370B9",
              "type": "Smart Contract - DarknodePayment"
            },
            {
              "target": "https://etherscan.io/address/0xE33417797d6b8Aec9171d0d6516E88002fbe23E7",
              "type": "Smart Contract - DarknodePaymentStore"
            },
            {
              "target": "https://bscscan.com/address/0x21C482f153D0317fe85C60bE1F7fa079019fcEbD",
              "type": "Smart Contract - GatewayRegistry"
            },
            {
              "target": "https://bscscan.com/address/0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5",
              "type": "Smart Contract - BasicAdapter"
            },
            {
              "target": "https://bscscan.com/address/0xfCe146bF3146100cfe5dB4129cf6C82b0eF4Ad8c",
              "type": "Smart Contract - renBTC BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x95De7b32e24B62c44A4C44521eFF4493f1d1fE13",
              "type": "Smart Contract - renBTC Gateway"
            },
            {
              "target": "https://bscscan.com/address/0x695FD30aF473F2960e81Dc9bA7cB67679d35EDb7",
              "type": "Smart Contract - renZEC BEP20"
            },
            {
              "target": "https://bscscan.com/address/0xfdecB67cE94A22C8e227D17938c3127EA1B47B4E",
              "type": "Smart Contract - renZEC Gateway"
            },
            {
              "target": "https://bscscan.com/address/0xA164B067193bd119933e5C1e7877421FCE53D3E5",
              "type": "Smart Contract - renBCH BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x3023DD075B0291Cd6aDc890A1EBDD6C400595E08",
              "type": "Smart Contract - renBCH Gateway"
            },
            {
              "target": "https://bscscan.com/address/0xDBf31dF14B66535aF65AaC99C32e9eA844e14501",
              "type": "Smart Contract - renFIL BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x05Cadbf3128BcB7f2b89F3dD55E5B0a036a49e20",
              "type": "Smart Contract - renFIL Gateway"
            },
            {
              "target": "https://bscscan.com/address/0x31a0D1A199631D244761EEba67e8501296d2E383",
              "type": "Smart Contract - renDOGE BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x7986568375Af35B427f3f51389d73196967C356a",
              "type": "Smart Contract - renDOGE Gateway"
            },
            {
              "target": "https://bscscan.com/address/0xc3fEd6eB39178A541D274e6Fc748d48f0Ca01CC3",
              "type": "Smart Contract - renDGB BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x06A2C5d79c66268610eEBBca10AFa17092860830",
              "type": "Smart Contract - renDGB Gateway"
            },
            {
              "target": "https://bscscan.com/address/0xc4Ace9278e7E01755B670C0838c3106367639962",
              "type": "Smart Contract - renLUNA BEP20"
            },
            {
              "target": "https://bscscan.com/address/0x4d59f628CB8e4670b779eAE22aF0c46DebC06695",
              "type": "Smart Contract - renLUNA Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0x21C482f153D0317fe85C60bE1F7fa079019fcEbD",
              "type": "Smart Contract - GatewayRegistry"
            },
            {
              "target": "https://ftmscan.com/address/0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5",
              "type": "Smart Contract - BasicAdapter"
            },
            {
              "target": "https://ftmscan.com/address/0xDBf31dF14B66535aF65AaC99C32e9eA844e14501",
              "type": "Smart Contract - renBTC ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x05Cadbf3128BcB7f2b89F3dD55E5B0a036a49e20",
              "type": "Smart Contract - renBTC Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0x31a0D1A199631D244761EEba67e8501296d2E383",
              "type": "Smart Contract - renZEC ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x7986568375Af35B427f3f51389d73196967C356a",
              "type": "Smart Contract - renZEC Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0xc3fEd6eB39178A541D274e6Fc748d48f0Ca01CC3",
              "type": "Smart Contract - renBCH ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x06A2C5d79c66268610eEBBca10AFa17092860830",
              "type": "Smart Contract - renBCH Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0xc4Ace9278e7E01755B670C0838c3106367639962",
              "type": "Smart Contract - renFIL ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x4d59f628CB8e4670b779eAE22aF0c46DebC06695",
              "type": "Smart Contract - renFIL Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0x2628568509E87c4429fBb5c664Ed11391BE1BD29",
              "type": "Smart Contract - renDOGE ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x677b23D0ffc82414B063accA197f74d791285952",
              "type": "Smart Contract - renDOGE Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0xcE829A89d4A55a63418bcC43F00145adef0eDB8E",
              "type": "Smart Contract - renDGB ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x9FB2C0b19A9fee6d02E7Ea861C71503608B64d6A",
              "type": "Smart Contract - renDGB Gateway"
            },
            {
              "target": "https://ftmscan.com/address/0x7c7DAAF2dB46fEFd067f002a69FD0BE14AeB159f",
              "type": "Smart Contract - renLUNA ERC20"
            },
            {
              "target": "https://ftmscan.com/address/0x731Ea4Ba77fF184d89dBeB160A0078274Acbe9D2",
              "type": "Smart Contract - renLUNA Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0x21C482f153D0317fe85C60bE1F7fa079019fcEbD",
              "type": "Smart Contract - GatewayRegistry"
            },
            {
              "target": "https://polygonscan.com/address/0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5",
              "type": "Smart Contract - BasicAdapter"
            },
            {
              "target": "https://polygonscan.com/address/0xDBf31dF14B66535aF65AaC99C32e9eA844e14501",
              "type": "Smart Contract - renBTC ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x05Cadbf3128BcB7f2b89F3dD55E5B0a036a49e20",
              "type": "Smart Contract - renBTC Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0x31a0D1A199631D244761EEba67e8501296d2E383",
              "type": "Smart Contract - renZEC ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x7986568375Af35B427f3f51389d73196967C356a",
              "type": "Smart Contract - renZEC Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0xc3fEd6eB39178A541D274e6Fc748d48f0Ca01CC3",
              "type": "Smart Contract - renBCH ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x06A2C5d79c66268610eEBBca10AFa17092860830",
              "type": "Smart Contract - renBCH Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0xc4Ace9278e7E01755B670C0838c3106367639962",
              "type": "Smart Contract - renFIL ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x4d59f628CB8e4670b779eAE22aF0c46DebC06695",
              "type": "Smart Contract - renFIL Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0x2628568509E87c4429fBb5c664Ed11391BE1BD29",
              "type": "Smart Contract - renDOGE ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x677b23D0ffc82414B063accA197f74d791285952",
              "type": "Smart Contract - renDOGE Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0xcE829A89d4A55a63418bcC43F00145adef0eDB8E",
              "type": "Smart Contract - renDGB ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x9FB2C0b19A9fee6d02E7Ea861C71503608B64d6A",
              "type": "Smart Contract - renDGB Gateway"
            },
            {
              "target": "https://polygonscan.com/address/0x7c7DAAF2dB46fEFd067f002a69FD0BE14AeB159f",
              "type": "Smart Contract - renLUNA ERC20"
            },
            {
              "target": "https://polygonscan.com/address/0x731Ea4Ba77fF184d89dBeB160A0078274Acbe9D2",
              "type": "Smart Contract - renLUNA Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x21C482f153D0317fe85C60bE1F7fa079019fcEbD",
              "type": "Smart Contract - GatewayRegistry"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xAC23817f7E9Ec7EB6B7889BDd2b50e04a44470c5",
              "type": "Smart Contract - BasicAdapter"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xDBf31dF14B66535aF65AaC99C32e9eA844e14501",
              "type": "Smart Contract - renBTC ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x05Cadbf3128BcB7f2b89F3dD55E5B0a036a49e20",
              "type": "Smart Contract - renBTC Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x31a0D1A199631D244761EEba67e8501296d2E383",
              "type": "Smart Contract - renZEC ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x7986568375Af35B427f3f51389d73196967C356a",
              "type": "Smart Contract - renZEC Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xc3fEd6eB39178A541D274e6Fc748d48f0Ca01CC3",
              "type": "Smart Contract - renBCH ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x06A2C5d79c66268610eEBBca10AFa17092860830",
              "type": "Smart Contract - renBCH Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xc4Ace9278e7E01755B670C0838c3106367639962",
              "type": "Smart Contract - renFIL ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x4d59f628CB8e4670b779eAE22aF0c46DebC06695",
              "type": "Smart Contract - renFIL Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x2628568509E87c4429fBb5c664Ed11391BE1BD29",
              "type": "Smart Contract - renDOGE ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x677b23D0ffc82414B063accA197f74d791285952",
              "type": "Smart Contract - renDOGE Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xcE829A89d4A55a63418bcC43F00145adef0eDB8E",
              "type": "Smart Contract - renDGB ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x9FB2C0b19A9fee6d02E7Ea861C71503608B64d6A",
              "type": "Smart Contract - renDGB Gateway"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x7c7DAAF2dB46fEFd067f002a69FD0BE14AeB159f",
              "type": "Smart Contract - renLUNA ERC20"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x731Ea4Ba77fF184d89dBeB160A0078274Acbe9D2",
              "type": "Smart Contract - renLUNA Gateway"
            }
          ],
          "mdx": {
            "program_overview": "RenVM provides one of the only practical interoperability solutions that can scale. It is also the only solution that allows for secret computation over multiple inputs and multiple parties. RenVM is not a product or an application in and of itself, it is a network (and an accompanying SDK) that allows developers to bring cross-chain functionality to their DeFi applications.\n\nRenVM is a network powered by decentralized virtual machines. This virtual machine is replicated over thousands of machines that work together to power it, contributing their network bandwidth, their computational power, and their storage capacity. These machines are known as Darknodes. Darknodes earn a share of the volume transacted through RenVM.\n\nFor more information about RenVM, please visit their website at [https://renproject.io/](https://renproject.io/). \n\nThe bug bounty program is focused on the following impacts on funds custodied within RenVM and ancillary components of the protocol (i.e. darknode fees going to operators, CEF funds, etc):\n\nThe ability to steal, modify, access, or distort funds in these components. \nThe ability to hack, steal, and or modify smart contacts in a way that would break RenVM’s 1 to 1 peg or jeopardize the contracts ability to store funds securely. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nTo qualify for a reward, all bug reports must:\n\n  1. Not have been previously reported.\n  2. Not have broken the law in any jurisdictions.\n  3. Include disclosure on how the issue was found.\n  4. Include a proof of concept (PoC) and demonstration of the exploit.\n  5. Bug reports that do not satisfy all four requirements will not be eligible for a reward. \n\nFor PoC provision, all bug reporters must use Hardhat for providing a bug and must be done with a ganache fork of Mainnet with the attack executed.\n\nCritical vulnerabilities are capped at 10% of economic damage, primarily taking into consideration the funds at risk. However, the team may factor in PR and branding considerations at its discretion. \n\nPayouts are handled by the __RenVM__ team directly and are denominated in USD. Payouts are done in __REN__, __USDC__, or __USDT__, at the choice of the bug bounty hunter.",
            "assets_body": "For added reference, please take a look at their GitHub -  [https://github.com/renproject](https://github.com/renproject). However, only the contracts listed as in-scope here are considered as part of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n\n__Blockchain - Consensus Engine__\n\n  - Problems in the implementation of the spec ([https://github.com/renproject/hyperdrive/wiki](https://github.com/renproject/hyperdrive/wiki)), such as liveliness failures that violate the claims of the consensus algorithm\n  - Errors in the serialisation/deserialisation of data\n\n__Blockchain - P2P Networking Library__\n\n  - Deadlocks or other liveliness failures\n  - Errors in peer discovery or handshaking logic\n  - Errors in message passing between nodes\n  - Errors in the serialisation/deserialisation of data\n\n__Blockchain - MPC Library__\n\n  - Soundness of the protocols used, i.e. do the described protocols fulfil their claimed security/liveliness\n  - Problems in the implementations of the protocols, such as revealing data that the protocol should keep secret, liveliness failures that violate the claims of the protocol descriptions\n  - Bad/incorrect usage of cryptography primitives\n  - Bad/incorrect usage of randomness primitives that could result in unacceptably low entropy\n  - Errors in the serialisation/deserialisation of data\n\n__Blockchain - Blockchain Adapters (Multichain)__\n\n  - Correctness of chain-specific API implementations (tx construction/submission, account details, gas values)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Blockchain (All)__\n\n  - Bugs in third party dependencies\n  - Known limitations (e.g. failures when there are more than k malicious players)\n  - For Hyperdrive:\n    - Problems in the implementation/general deviations from the spec ([https://github.com/renproject/hyperdrive/wiki](https://github.com/renproject/hyperdrive/wiki))\n  - Logic errors\n  - Errors in the serialisation/deserialisation of data\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gro",
          "project": "Gro",
          "date": "2021-08-18T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4sXJuHhCbWu6lM6OGQjlb7/7b74160213e59a9d396d89fe2cf9193b/Gro.jpeg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xf0a93d4994b3d98fb5e3a2f90dbc2d69073cb86b",
              "type": "Smart Contract - PWRD Stablecoin"
            },
            {
              "target": "https://etherscan.io/address/0x3ADb04E127b9C0a5D36094125669d4603AC52a0c",
              "type": "Smart Contract - Gro Vault"
            },
            {
              "target": "https://etherscan.io/address/0xCC5c60A319D33810b9EaB9764717EeF84deFB8F4",
              "type": "Smart Contract - Controller"
            },
            {
              "target": "https://etherscan.io/address/0x8a070363f6DB6A74cAAF486Dde6da013E5Cd050E",
              "type": "Smart Contract - Insurance"
            },
            {
              "target": "https://etherscan.io/address/0x2344dba0A1DE9ACf22B7C9936c6693f20B953444",
              "type": "Smart Contract - Exposure"
            },
            {
              "target": "https://etherscan.io/address/0x167BCca89b1527E015B8aad7bd6130707922A99A",
              "type": "Smart Contract - Allocation"
            },
            {
              "target": "https://etherscan.io/address/0xF67A426e110c74c566174a37C9269780fB48096d",
              "type": "Smart Contract - PnL"
            },
            {
              "target": "https://etherscan.io/address/0x5D3Ab53b6B66f86bbFaBC2A58c0F26Ea7dFB8126",
              "type": "Smart Contract - Lifeguard"
            },
            {
              "target": "https://etherscan.io/address/0xbF8C81B2977B10F13A4AC542e72969a6E123f5fE",
              "type": "Smart Contract - Buoy3Pool"
            },
            {
              "target": "https://etherscan.io/address/0xB7207Ea9446DcA1dEC1c1FC93c6Fcdf8B4a44F40",
              "type": "Smart Contract - DepositHandler"
            },
            {
              "target": "https://etherscan.io/address/0x641bEFA4dB601578A64F0Fc1f4E89E9869268Fe7",
              "type": "Smart Contract - WithdrawHandler"
            },
            {
              "target": "https://etherscan.io/address/0xc535CFE245D8F969E647B3dD8Be1255EC076EE76",
              "type": "Smart Contract - EmergencyHandler"
            },
            {
              "target": "https://etherscan.io/address/0x277947D84A2Ec370a636683799351acef97fec60",
              "type": "Smart Contract - DAIVaultAdaptor"
            },
            {
              "target": "https://etherscan.io/address/0x6a01bC748d71489372BD8fB743b23F63d99aac85",
              "type": "Smart Contract - DAIVault"
            },
            {
              "target": "https://etherscan.io/address/0x9B2688DA7d80641F6E46A76889EA7F8B59771724",
              "type": "Smart Contract - USDCVaultAdaptor"
            },
            {
              "target": "https://etherscan.io/address/0x03b298D27b0426758cb70c4ADd6523927bD7cC8e",
              "type": "Smart Contract - USDCVault"
            },
            {
              "target": "https://etherscan.io/address/0x6419Cb544878E8C4faA5EaF22D59d4A96E5F12FA",
              "type": "Smart Contract - USDTVaultAdaptor"
            },
            {
              "target": "https://etherscan.io/address/0x9CD696A225d7a3c9Ce1ed71f5bDB031234a86D79",
              "type": "Smart Contract - USDTVault"
            },
            {
              "target": "https://etherscan.io/address/0x4F22C70d0B59B0EbaF44C864cC2419f0fF065295",
              "type": "Smart Contract - 3CRVVaultAdaptor"
            },
            {
              "target": "https://etherscan.io/address/0x8029157B06bE67693dc0E94FBfC55B200180f548",
              "type": "Smart Contract - 3CRVVault"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - XGRO (early DAO governance voting)"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - Gro DAO Token (GRO)"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - DAI"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - USDC"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - USDT"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - Curve3Pool"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - 3CRV"
            },
            {
              "target": "https://etherscan.io/address/0xe664b73ce29ba81666a137ae577797a0de230682",
              "type": "Smart Contract - WETH"
            },
            {
              "target": "https://etherscan.io/address/0xA28693bf01Dc261887b238646Bb9636cB3a3730B",
              "type": "Smart Contract - GROVesting"
            },
            {
              "target": "https://etherscan.io/address/0xEf10eac205817A88C6d504d02481053E85A8F927",
              "type": "Smart Contract - GROHodler"
            },
            {
              "target": "https://etherscan.io/address/0x001C249c09090D79Dc350A286247479F08c7aaD7",
              "type": "Smart Contract - LPTokenStaker"
            },
            {
              "target": "https://etherscan.io/address/0x6b1bFf72F00cC147b5Dc7A5b156Fe7A6Fd206ddA",
              "type": "Smart Contract - AirDrop"
            },
            {
              "target": "https://etherscan.io/address/0xb2a54e5820683e48b2e255d66aedD02908fb544D",
              "type": "Smart Contract - GRODistributer"
            },
            {
              "target": "https://etherscan.io/address/0x702605F43471183158938C1a3e5f5A359d7b31ba",
              "type": "Smart Contract - Balancer v2 GRO 80% / WETH 20%"
            },
            {
              "target": "https://etherscan.io/address/0x2ac5bC9ddA37601EDb1A5E29699dEB0A5b67E9bB",
              "type": "Smart Contract - Uniswap v2 GRO / Vault"
            },
            {
              "target": "https://etherscan.io/address/0x21C5918CcB42d20A2368bdCA8feDA0399EbfD2f6",
              "type": "Smart Contract - Uniswap v2 GRO / USDC"
            },
            {
              "target": "https://etherscan.io/address/0xbcb91E689114B9Cc865AD7871845C95241Df4105",
              "type": "Smart Contract - Curve Metapool PWRD-3CRV"
            }
          ],
          "mdx": {
            "program_overview": "Gro protocol is a stablecoin yield aggregator that tranches risk and yield. The first two products built on it are the PWRD stablecoin with deposit protection and yield, and Vault with leveraged stablecoin yields.\n\nThe protocol delivers DeFi yields by continuously optimising a range of market neutral yield strategies, including lending income, trading fees from Automated Market Makers, and protocol incentive farming. What makes it unique is the Gro Risk Balancer, a novel risk tranching module that distributes smart contract and stablecoin risk in a targeted way.\n\nInitially the protocol has two risk- and yield-tranched products: the PWRD stablecoin and the Vault. All deposits are algorithmically and non-custodially allocated to a set of strategies. Depositors into the Vault receive a higher proportion of system yields but also take on extra smart contract and stable coin risk. Inversely, the PWRD stablecoin receives a smaller portion of the system yield but is protected against these risks.\n\nFor more information about Gro, please visit [https://gro.xyz/](https://www.gro.xyz/).   \n\nThis bug bounty program is focused on their smart contracts, and is focused on preventing the following impacts:\n\n  - Thefts and/or freezing of principal funds in protocol of any amount\n  - Thefts and/or freezing of unclaimed yield of any amount\n  - Temporary freezing of funds for X minutes/hours/days\n  - Smart contract fails to deliver promised returns\n  - Sets of protocol interactions which benefit the person making these interactions at the expense of other users invested in the protocol, or the protocol itself\n  - Protocol and/or oracle interactions which result in unfair allocation of gains to specific users",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nWhile the protocol currently has a 0.5% withdrawal fee on PWRD, a bug bounty of up to __USD 500 000__ can be claimed if a loss of funds can be created when the withdrawal fee is set to 0.\n\nCritical bug reports are capped at 10% of economic damage, primarily taking into consideration the funds at risk, but can also consider other factors such as branding and PR, all fully at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are paid out of the DAO treasury and handled by the __Gro__ core contributor team directly. The bounty is denominated in USD, and will wholly or partly be paid in __USDC__. Gro protocol reserves the right to also pay out part of the bounty in its governance token. ",
            "assets_body": "For added reference, here are the external dependencies that interact with the Gro protocol:\n\nDAI - [https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F ](https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F#code)\n\nUSDC - [https://etherscan.io/address/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48](https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code) \n\nUSDT - [https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7](https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7) \n\nCurve3Pool - [https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7](https://etherscan.io/address/0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7) \n\n3Crv - [https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490](https://etherscan.io/address/0x6c3F90f043a72FA612cbac8115EE7e52BDe6E490) \n\nFor now, no GitHub repo is publicly available, and so a PoC is not required for any bug report. In the event of a PoC being required for final validation of a bug to clarify disagreements on a bug report’s validity, access will be provided.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Thefts and/or freezing of principal funds in protocol of any amount\n  - Thefts and/or freezing of unclaimed yield of any amount\n  - Temporary freezing of funds for any period\n  - Smart contract fails to deliver promised returns\n  - Sets of protocol interactions which benefit the person making these interactions at the expense of other users invested in the protocol, or the protocol itself\n  - Protocol and/or oracle interactions which result in unfair allocation of gains to specific users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pancakeswap",
          "project": "PancakeSwap",
          "date": "2021-03-28T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2xJOw4FpKeRGxyQOV0RG0G/58c413a9b3969ddbd605bea881c02e72/Pancakeswap-logo.jpg",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $7,500"
            },
            {
              "level": "high",
              "payout": "USD $4,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://pancakeswap.finance/",
              "type": "Website/App"
            },
            {
              "target": "https://exchange.pancakeswap.finance",
              "type": "Website/App"
            },
            {
              "target": "https://github.com/pancakeswap",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "PancakeSwap is a decentralized exchange running on Binance Smart Chain, with\nlots of other features that let you earn and win tokens. It's fast, cheap, and\nanyone can use it. It's also got pancakes and rabbits.\n\nThe exchange is an automated market maker (“AMM”) that allows two tokens to be\nexchanged on the Binance Smart Chain. On top of that, you can earn CAKE with\nyield farms, earn CAKE with Staking, and earn even more tokens with Syrup\npools. Additionally PancakeSwap runs a lottery every 6 hours with 20 000 CAKE\ninjected into the lottery every day.\n\nThe PancakeSwap bug bounty program is focused around its smart contracts,\nwebsites, and apps with a primary interest in the prevention of loss of user\nfunds, either by direct draining of locked funds or social engineering attacks\nby redirecting users or forcing them to sign a transaction.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must include a Proof of Concept demonstrating how the vulnerability \ncan be exploited to be eligible for a reward. This may be a smart contract itself \nor a transaction.\n\nThe final reward amount for critical smart contract vulnerabilities is capped at 10% of the funds at risk based on the vulnerability reported.\n\nXSS reports are restricted to those that have an impact of prompting a user to \nsign a transaction or a redirect.\n\nAll payouts are done by the **PancakeSwap** team and are pegged to the **USD**\nvalues set here and are payable in **CAKE** or **BUSD**.",
            "assets_body": "All smart contracts excluding `lottery-contract` and `initial-farm-offering`.\n\nIssues with the LP contracts that are due to specific underlying tokens are not in scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps** \n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF (reports of CSRF must include a demonstration of impact)\n- Direct object reference\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- DOM XSS",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n- Internal SSRF\n- Path Traversal\n- SPF/DKIM/DMARC Configuration Problems\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- Clickjacking \n- Misleading Unicode text (e.g. using right to left override characters)\n- HTTP security headers\n- Cache control issues\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "primitive",
          "project": "Primitive",
          "date": "2021-03-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7045Dlf7PsLvtuf9AgiyTj/ccbdca203eb0bd33848e8998dc0b25c0/Primitive-logo.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $35,000"
            },
            {
              "level": "medium",
              "payout": "USD $7,500"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/primitivefinance/rmm-core",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/primitivefinance/rmm-manager",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Primitive is an AMM launching in December on Ethereum mainnet, Arbitrum One, and Optimism.  \n\nAdditional information on Primitive can be found at [https://primitive.finance](https://primitive.finance).\n\nThe bug bounty program is focused around its smart contracts and is mostly\nconcerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical vulnerabilities are further capped at 10% of economic damage, which primarily takes into consideration the funds at risk but also other factors at the discretion of the team. \n\nCritical payouts by Sherlock will only be paid out for critical bugs that would result in a loss of funds and can be executed profitably,  and this then excludes Sherlock critical bounty payout for temporary freezing bugs.\n\nPayouts up to USD 250 000 are handled by __Primitive Finance__ directly and are denominated in USD. However, payouts are done in __USDC__. Payments above that have the remainder paid out by Sherlock with their bug bounty matching program and are done in __USDC__.",
            "assets_body": "__The test folders are out-of-scope of the bug bounty program.__\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds \n  - Loss of governance funds\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised return",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n__All programs__\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks that rely on social engineering\n  - Attacks requiring access to leaked keys/credentials\n\n__Smart Contracts/Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Disassembly or reverse engineering of binaries for which source code is not published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "sovryn",
          "project": "Sovryn",
          "date": "2021-03-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1WxmZjVBKwVs8B9tTr8DGp/78025280490aea0dbcddf7bebed36c18/Sovryn-logo.png",
          "maximum_reward": 1000000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Mobile App",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $1,000,000"
            },
            {
              "level": "high",
              "payout": "USD $22,140"
            },
            {
              "level": "medium",
              "payout": "USD $8,800"
            },
            {
              "level": "low",
              "payout": "USD $2,200"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/DistributedCollective/Sovryn-smart-contracts/tree/master",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/DistributedCollective/Bridge-SC/tree/master",
              "type": "Bridge"
            }
          ],
          "mdx": {
            "program_overview": "Sovryn is an on-chain decentralized trading and lending protocol deployed on\nRSK, a side chain of the Bitcoin blockchain-powered by merge-mining, and is\ngoverned by the community. The Sovryn protocol is controlled by its community\nand stakeholders. There is no single company, organization, or individual that\nrepresents or controls the Sovryn protocol. While the Sovryn community is built\non the principles of transparency, the Sovryn protocol's decentralized\nstructure means that there is no single party that can be relied upon to\nprovide you with accurate information.\n\nThe SOV token is used to tokenize the rights, rewards, and risks associated\nwith participating in Sovryn Bitocracy. It is used to represent voting power\nand to wrap the rewards and risks of Sovryn's future into a digital\nrepresentation. SOV can be used by the Sovryn protocol whenever there is a need\nto balance risks and rewards. Changes to the protocol introduce risks, but if\nthey are successful, can grow the use of the protocol and the fee revenue it\ngenerates. SOV can be staked to cover user losses and thus insure that they do\nnot occur.\n\nThe Sovryn bug bounty program was initially submitted as <Link href=\"https://github.com/DistributedCollective/SIPS/blob/main/SIP-0008.md\">Sovryn Improvement Proposal 8</Link> and was <Link href=\"https://twitter.com/SovrynBTC/status/1365431235217096704?s=20\">approved on February 26 with 100% consensus</Link>\n\nIt is focused around its smart contracts and the prevention of loss of\nuser funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount of critical smart contract vulnerabilities is capped at 10% of the funds at risk based on the vulnerability reported.\n\nBug reports involving the bridge must include demonstration of economic damage with a PoC. \n\nIn the case of two or more reports covering the same vulnerability, only the\nfirst complete bug report gets the reward.\n\nAll payouts done by the **Sovryn** treasury and are pegged to the **USD**\nvalues set here and are payable in **BTC** though the Sovryn team may, at their discretion, have up to 50% of the reward payable in **SOV** according to a **vesting schedule** dependent on the amount paid out.\n\n__Bridge__\n\n| Level | |\n|:- | :--: |\n| Vulnerabilities with Economic Damage | __Up to USD $30 000__ |",
            "assets_body": "Only the branches in the assets in scope table are considered as in-scope of the bug bounty program. All other branches, including the default branch are considered as out-of-scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Bridge**\n\n- All bug reports involving economic damages are prioritized for this bug bounty program.",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "opyngamma",
          "project": "Opyn: Gamma",
          "date": "2022-02-07T11:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/vZUZGK84FUQTVxKGC5bZP/49fd4c2fb8a8c6fb0cea44de19e763b9/opyn_gamma_new_logo.png",
          "maximum_reward": 900000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $900,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/opynfinance/GammaProtocol/tree/67a2bff57ec49c4bb7c9c454c8ad945fd5bdcf51/contracts/core",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://github.com/opynfinance/GammaProtocol/tree/67a2bff57ec49c4bb7c9c454c8ad945fd5bdcf51/contracts/external",
              "type": "Smart Contract - External"
            },
            {
              "target": "https://github.com/opynfinance/GammaProtocol/tree/67a2bff57ec49c4bb7c9c454c8ad945fd5bdcf51/contracts/interfaces",
              "type": "Smart Contract - Interfaces"
            },
            {
              "target": "https://github.com/opynfinance/GammaProtocol/tree/67a2bff57ec49c4bb7c9c454c8ad945fd5bdcf51/contracts/libs",
              "type": "Smart Contract - Libs"
            },
            {
              "target": "https://github.com/opynfinance/GammaProtocol/tree/67a2bff57ec49c4bb7c9c454c8ad945fd5bdcf51/contracts/pricers",
              "type": "Smart Contract - Pricers"
            }
          ],
          "mdx": {
            "program_overview": "Opyn builds DeFi native derivatives and options infrastructure that allow users and protocols to buy, sell, and create options, and utilize brand new primitives like squeeth. DeFi enthusiasts and projects alike rely on Opyn’s smart contracts and interface to hedge themselves against DeFi risks and take positions on different cryptocurrencies.\n\nGamma is a capital efficient option protocol that enables sellers to create spreads and other combinations, trade atomically, flash loan mint oTokens, assign operators to roll over vaults, create perpetual instruments, and more.\n\nJust like Convexity Protocol(Opyn v1), Gamma protocol enables any user to create option tokens, that represent the right to buy or sell a certain asset at a predefined price (strike price) at expiry. \n\nFor more information about Opyn, please visit [https://www.opyn.co/](https://www.opyn.co/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical and High severity bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nPayouts are handled by the __Opyn__ team directly and are denominated in USD. Payouts up to USD 900 000 are done in __USD__, __USDC__, __DAI__ or __ETH__.",
            "assets_body": "All smart contracts of Opyn: Gamma can be found at [https://github.com/opynfinance/GammaProtocol/releases/tag/v2.0.0](https://github.com/opynfinance/GammaProtocol/releases/tag/v2.0.0). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Smart contract gas drainage",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "perpetual",
          "project": "Perpetual",
          "date": "2021-01-05T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2n3sLFnajsobepdgcWfug8/39048fc8a387fcccffd94049e1bc4b75/09_2021_updated_Perpetual_logo.jpeg",
          "maximum_reward": 820000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "See above for more information"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - USD $9,999"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - USD $4,999"
            },
            {
              "level": "low",
              "payout": "Up to USD $999"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://twitter.com/perpprotocol/status/1347001656404103168",
          "assets_in_scope": [
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/bridge/ethereum/RootBridge.sol",
              "type": "Smart contract - RootBridge"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/ChainlinkL1.sol",
              "type": "Smart contract - ChainlinkL1"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/MetaTxGateway.sol",
              "type": "Smart contract - MetaTxGateway"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/bridge/xDai/ClientBridge.sol",
              "type": "Smart contract - ClientBridge"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/InsuranceFund.sol",
              "type": "Smart contract - InsuranceFund"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/L2PriceFeed.sol",
              "type": "Smart contract - L2PriceFeed"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/ClearingHouse.sol",
              "type": "Smart contract - ClearingHouse"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/Amm.sol",
              "type": "Smart contract - Amm"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/ClearingHouseViewer.sol",
              "type": "Smart contract - ClearingHouseViewer"
            },
            {
              "target": "https://github.com/perpetual-protocol/perpetual-protocol/blob/master/src/AmmReader.sol",
              "type": "Smart contract - AmmReader"
            }
          ],
          "mdx": {
            "program_overview": "Perpetual protocol, formerly known as Strike, was created in 2019 inspired by\nemerging DeFi protocols such as Synthetix and Uniswap. The team sought to\ncombine the merits of these protocols to create a decentralized perpetual\ncontract trading protocol on Ethereum. The protocol is capable of supporting\n20x leverage, short positions, and lower slippage compared to other AMMs thanks\nto its virtual AMM (vAMM) design.\n\nUnlike well known Automated Market Makers used for both token swaps and price\ndiscovery, the vAMM is solely used for price discovery to handle leverage and\nshort positions. Similar to Uniswap, traders can trade with the vAMM without\ncentral authorities and is designed to be market neutral and fully\ncollateralized.\n\nPERP is the protocol’s ERC-20 native token. PERP tokens allow community members\nto govern the protocol and stake their tokens for a fixed amount of time to the\nStaking Pool. In return, holders are rewarded with the staking incentive, which\nincludes rewards in PERP and transaction fees.\n\nFurther resources regarding Perpetual can be found on their website, <Link href=\"https://docs.perp.fi/\">https://docs.perp.fi/</Link>. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe maximum payout for a “Critical” bounty is 10% of the total value locked\nin the “Clearing House” contract, currently estimated at a maximum base payout\nof **USD 820 000**, but with a minimum payout of **USD 10 000**. This page will\nupdate periodically to reflect changes in\nTVL. <Link href=\"https://blockscout.com/poa/xdai/address/0x5d9593586b4B5edBd23E7Eba8d88FD8F09D83EBd/tokens\">Click here</Link> to view the most up-to-date\nbalance.\n\nBase payouts are handled by the **Perpetual** team directly and are denominated\nin USD.  However, payouts are done in **PERP**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "Perpetual is especially interested in receiving and rewarding vulnerabilities\nof the following types:\n\n- Theft of assets from the system\n- Assets locked permanently inside the system\n\nAdditionally, Perpetual seeks reports of the following\n<Link href=\"/common-vulnerabilities/\">Immunefi Common Vulnerabilities</Link>. \n\nThe following <Link href=\"/common-vulnerabilities-to-exclude/\">Immunefi Commonly Excluded Vulnerabilities</Link> are excluded from the\nPerpetual bug bounty program.",
            "out_of_scope_and_rules": "See the <Link href=\"/standard-rules/\">Immunefi Standard Rules</Link>"
          }
        },
        {
          "id": "reflexer",
          "project": "Reflexer",
          "date": "2021-11-02T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4DeaIbS9whSxx3zJehZqqL/cbb244a748772c62c3ecff36bdae4662/Reflexer_Logo.png",
          "maximum_reward": 750000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $750,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $15,000"
            },
            {
              "level": "low",
              "payout": "USD $2,500"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xcee6aa1ab47d0fb0f24f51a3072ec16e20f90fce",
              "type": "Smart Contract - Accounting Engine"
            },
            {
              "target": "https://etherscan.io/address/0x9fc9ae5c87fd07368e87d1ea0970a6fc1e6dd6cb#code",
              "type": "Smart Contract - (Increasing Discount) Collateral Auction House"
            },
            {
              "target": "https://etherscan.io/address/0x1896adbe708bf91158748b3f33738ba497a69e8f#code",
              "type": "Smart Contract - Debt Auction House"
            },
            {
              "target": "https://etherscan.io/address/0xee4cf96e5359d9619197fd82b6ef2a9eae7b91e1",
              "type": "Smart Contract - Global Settlement"
            },
            {
              "target": "https://etherscan.io/address/0x27efc6ffe79692e0521e7e27657cf228240a06c2",
              "type": "Smart Contract - Liquidation Engine"
            },
            {
              "target": "https://etherscan.io/address/0x4ed9c0dca0479bc64d8f4eb3007126d5791f7851",
              "type": "Smart Contract - Oracle Relayer"
            },
            {
              "target": "https://etherscan.io/address/0xcc88a9d330da1133df3a7bd823b95e52511a6962",
              "type": "Smart Contract - Safe Engine"
            },
            {
              "target": "https://etherscan.io/address/0xeef4ea1a548417df1e7f0f6ab89494eed9e06b70",
              "type": "Smart Contract - Surplus Auction House"
            },
            {
              "target": "https://etherscan.io/address/0xcdb05aeda142a1b0d6044c09c64e4226c1a281eb",
              "type": "Smart Contract - Tax Collector"
            },
            {
              "target": "https://etherscan.io/address/0xb825e25856bd98b3f2faf2aeb6cb8742b38c4025",
              "type": "Smart Contract - Chainlink Relayer"
            },
            {
              "target": "https://etherscan.io/address/0xfbf4849a06f6e6f53ecb31d2f8bd61aa7874b268",
              "type": "Smart Contract - Uniswap Consecutive Slots Price Feed Medianizer"
            },
            {
              "target": "https://etherscan.io/address/0x880cecbc56f48bce5e0ef4070017c0a4270f64ed#code",
              "type": "Smart Contract - Geb Proxy Actions"
            },
            {
              "target": "https://etherscan.io/address/0x17b5d9914194a08c7ef14451ba15e8ae4f92cb93",
              "type": "Smart Contract - Geb Proxy Actions Global Settlement"
            },
            {
              "target": "https://etherscan.io/address/0xefe0b4ca532769a3ae758fd82e1426a03a94f185",
              "type": "​​Smart Contract - Geb Safe Manager"
            },
            {
              "target": "https://etherscan.io/address/0xdf4bc9aa98cc8ecd90ba2bee73ad4a1a9c8d202b",
              "type": "Smart Contract - Get Safes"
            },
            {
              "target": "https://etherscan.io/address/0x2cde6a1147b0ee61726b86d83fd548401b1162c7",
              "type": "Smart Contract - Protest Pause"
            },
            {
              "target": "https://etherscan.io/address/0x4678f0a6958e4d2bc4f1baf7bc52e8f3564f3fe4",
              "type": "Smart Contract - Geb Proxy Registry"
            },
            {
              "target": "https://etherscan.io/address/0xe24f8b30fd28c90462c9bbc87a9a2a823636f533",
              "type": "Smart Contract - FSM Governance Interface"
            },
            {
              "target": "https://etherscan.io/address/0x105b857583346e250fbd04a57ce0e491eb204ba3",
              "type": "Smart Contract - FSM Wrapper"
            },
            {
              "target": "https://etherscan.io/address/0xd4a0e3ec2a937e7cca4a192756a8439a8bf4ba91",
              "type": "Smart Contract - Externally Funded OSM"
            },
            {
              "target": "https://etherscan.io/address/0x7df2d51e69aa58b69c3df18d75b8e9acc3c1b04e",
              "type": "Smart Contract - Debt Auction Initial Parameter Setter"
            },
            {
              "target": "https://etherscan.io/address/0x7df2d51e69aa58b69c3df18d75b8e9acc3c1b04e",
              "type": "Smart Contract - Increasing Treasury Reimbursement"
            },
            {
              "target": "https://etherscan.io/address/0xe1d5181F0DD039aA4f695d4939d682C4cF874086",
              "type": "Smart Contract - Mandatory Fixed Treasury Reimbursement"
            },
            {
              "target": "https://etherscan.io/address/0xe8063b122bef35d6723e33dbb3446092877c6855",
              "type": "Smart Contract - Increasing Reward Relayer"
            },
            {
              "target": "https://etherscan.io/address/0xe1d5181f0dd039aa4f695d4939d682c4cf874086",
              "type": "Smart Contract - Debt Popper Rewards"
            },
            {
              "target": "https://etherscan.io/address/0x2419356360becd9929caafc787ce018b42fa56fa",
              "type": "Smart Contract - Geb Uniswap v2 Keeper Flash"
            },
            {
              "target": "https://etherscan.io/address/0x2419356360becd9929caafc787ce018b42fa56fa",
              "type": "Proxy ETH"
            },
            {
              "target": "https://etherscan.io/address/0x12f906e4854eedfdb1bd2daa9100d1c3b0cb7631",
              "type": "Smart Contract - Geb Uniswap v2 Multi Collateral Keeper Flash Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xcdce3af4ef75bc89601a2e785172c6b9f65a0aac",
              "type": "Smart Contract - Geb Uniswap v3 Keeper Flash Proxy ETH"
            },
            {
              "target": "https://etherscan.io/address/0x2cde6a1147b0ee61726b86d83fd548401b1162c7",
              "type": "Smart Contract - DSRoles"
            },
            {
              "target": "https://etherscan.io/address/0x6243d8cea23066d098a15582d81a598b4e8391f4",
              "type": "Smart Contract - DSDelegateToken"
            },
            {
              "target": "https://etherscan.io/address/0x69c6c08b91010c88c95775b6fd768e5b04efc106",
              "type": "Smart Contract - Geb Lender First Resort Rewards Vested"
            },
            {
              "target": "https://etherscan.io/address/0xaa5f19b87cc8f8a17d20f0697f1b37e112930ae4",
              "type": "Smart Contract - Staked Tokens to Keep Setter"
            },
            {
              "target": "https://etherscan.io/address/0x8017f897aaaabd5701b63d819590062a87732ba0",
              "type": "Smart Contract - Staking Rewards Escrow"
            },
            {
              "target": "https://etherscan.io/address/0x27da9f90255e56c2bcec5f6360ed260be70f3ab2",
              "type": "Smart Contract - Staked Token Auction House"
            },
            {
              "target": "https://etherscan.io/address/0x03da3d5e0b13b6f0917fa9bc3d65b46229d7ef47",
              "type": "Smart Contract - Auto Reward Dripper"
            }
          ],
          "mdx": {
            "program_overview": "Reflexer is a platform where anyone can use their crypto collateral to mint stablecoins. Stablecoins, as opposed to fiat coins, are not pegged to anything, very similar to how the US Dollar is not pegged and it is still considered stable.\n\nRAI is an ETH backed stablecoin with a managed float regime. The RAI/USD exchange rate is determined by supply and demand while the protocol that issues RAI tries to stabilize its price by constantly de or revaluing it.\nFor more information about Reflexer, please visit [https://reflexer.finance](https://reflexer.finance).   \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Incorrect accounting logic in the core protocol\n  - Theft of unclaimed yield\n  - Unable to shut down the protocol in the global settlement process\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical, High and Medium severity bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nKnown issues from their previous audits are considered out-of-scope:\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/open-zeppelin/core-contracts/oz-geb-protocol-audit.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit](https://github.com/reflexer-labs/geb-audits/tree/master/quantstamp/helper-contracts/first-audit)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/helper-contracts/second-audit/Reflexer%20Second%20Engagement%20-%20Final%20Report.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/quantstamp/staking/Reflexer%20Staking%20and%20Auction%20House%20-%20Report.pdf)\n\n[https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf](https://github.com/reflexer-labs/geb-audits/blob/master/solidified/helper-contracts/Solidified%20Audit%20Report%20-%20Reflexer%20%5B26.01.2021%5D.pdf)\n\nAdditionally, there is a known bug in the contract below where, if it does not have tokens anymore, it cannot compute a 0 reward. This does not affect the rest of the functionality of the system and would also be considered out-of-scope.\n\n[https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol](https://github.com/reflexer-labs/geb-lender-first-resort/blob/master/src/AutoRewardDripper.sol) \n\nPayouts are handled by the Reflexer team directly and are denominated in USD. However, payouts are done in FLX, RAI or a combination of both at the discretion of the team.",
            "assets_body": "All smart contracts of Reflexer can be found at https://github.com/reflexer-labs. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Incorrect accounting logic in the core protocol\n  - Theft of unclaimed yield\n  - Unable to shut down the protocol in the global settlement process\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contracts\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "driftprotocol",
          "project": "Drift Protocol",
          "date": "2022-02-15T08:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6mEZZK0CrRG6j07qIyR6Ct/c933e32272d29a8ae3f8e9c72845ac4f/Drift_logo.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $25,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/drift-labs/protocol-v1/tree/master/programs",
              "type": "Smart Contract - Clearinghouse"
            }
          ],
          "mdx": {
            "program_overview": "Drift Protocol is a decentralized, fully on-chain perpetual swap exchange built on Solana. Drift Protocol also is the first perpetual swap exchange to leverage a Dynamic AMM. A Dynamic AMM is based on a virtual AMM (vAMM), but its key innovative is that it introduces repegging and adjustable k mechanisms to recalibrate liquidity in a trading pool based on participant demand. DAMMs, as a result, have the ability to be more flexible than traditional vAMMs and AMMs, which lead to better capital efficiency and reduced slippage. Drift’s exchange gives traders the ability to take on cross-margined long or short positions with up to 5x leverage with minimal slippage thanks to the protocol’s Dynamic Automated Market Maker (DAMM). The exchange currently has 12 markets available:  SOL, BTC, ETH, MATIC, LUNA, AVAX, ATOM and BNB. Since inception, the exchange has traded $1B in cumulative volume as of a month after launch.\n\nFor more information about Drift Protocol, please visit [https://www.drift.trade/](https://www.drift.trade/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All High Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __Drift Protocol__ team directly and are denominated in USD. However, payouts are done in __USDC__. ",
            "assets_body": "Assets are Listed Below.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "portfinance",
          "project": "Port Finance",
          "date": "2022-01-11T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5xJi2n9A9meLRjwF2KCJYD/126939f0983decfb5720ab31f31f1738/Square_Black.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://anchor.projectserum.com/build/127",
              "type": "Smart Contract - Port Finance Variable Rate Lending"
            },
            {
              "target": "https://anchor.projectserum.com/build/128",
              "type": "Smart Contract - Port Finance Staking"
            }
          ],
          "mdx": {
            "program_overview": "Port Finance aims to provide a whole suite of money market products. They aim to provide variable rate lending, fixed rate lending and also interest rate swap products. Their backers include Jump Capital, Alameda Research, Defi Alliance, a41 and founders of other Solana projects such as Mercurial, Solanium and Raydium.\n\nThey are the first variable rate lending product that is live on Solana. Currently, Port Finance supports 13 different assets from the Solana, Ethereum, Terra and Bitcoin networks.\n\nIn December 2021, they launched their first fixed rate lending product Sundial and they believe that the fixed rate lending protocol will unleash the true potential of the Solana blockchain by providing an effective interest rate discovery mechanism using Serum.\n\nFor more information about Port Finance, please visit [https://port.finance/](https://port.finance/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of any user funds\n  - Insolvency of the platform",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be considered for a reward. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nKnown issues highlighted in their previous audits linked below are considered out-of-scope: \n  - [https://drive.google.com/file/d/1iRy6v6_CsJKXOBSk_6mg4kmqvBL-Aqlj/view?usp=sharing](https://drive.google.com/file/d/1iRy6v6_CsJKXOBSk_6mg4kmqvBL-Aqlj/view?usp=sharing)\n  - [https://drive.google.com/file/d/16X4Su-zuxIxcCLbf7-dC2hQJdUW7oDaf/view?usp=sharing](https://drive.google.com/file/d/16X4Su-zuxIxcCLbf7-dC2hQJdUW7oDaf/view?usp=sharing)\n\nPayouts are handled by the __Port Finance__ team directly and are denominated in USD. However, payouts are done in __USDC__, __PORT__ or a combination of both, at the discretion of the team.",
            "assets_body": "All smart contracts of Port Finance can be found at [https://anchor.projectserum.com/](https://anchor.projectserum.com/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds\n  - Theft of unclaimed yield\n  - Smart contract fails to deliver promised returns with over a USD 10 000 difference",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "burgerswap",
          "project": "BurgerSwap",
          "date": "2021-12-09T08:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3V7ji8UqjGO4fCMedgOqvO/e0017efb2c31be534ac1b3a677917fd9/BurgerSwap_logo.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x789c11212eaca5312d4aa6d63148613e658ccfad",
              "type": "Smart Contract - Trade"
            },
            {
              "target": "https://bscscan.com/address/0x3de79b6ff181aa60bd1cd7d2c6ea8a6099a35e60",
              "type": "Smart Contract - Trade-liquidity"
            },
            {
              "target": "https://bscscan.com/address/0xefc254d0cdb1924149382d404a2133532d46a777",
              "type": "Smart Contract - Aggregator"
            },
            {
              "target": "https://etherscan.io/address/0x74805ca1ff1cc0d6932c29e34460e0214e6e6819",
              "type": "Smart Contract - Switch-ETH-Across Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x435c7c5365753b712263732d375f79e8eb5ba71a#code",
              "type": "Smart Contract - Switch-ETH-Across"
            },
            {
              "target": "https://etherscan.io/address/0x1d08260d7f23d47807d88bf07a0e63ff6dd1a5b9",
              "type": "Smart Contract - Switch-ETH-TicketFactory Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xa18c219e6509e09d24473b1de904e7f2b2a1e918#code",
              "type": "Smart Contract - Switch-ETH-TicketFactory"
            },
            {
              "target": "https://etherscan.io/address/0x54a1ca2ed74f0ac04e21e2154022b330104f2e7a",
              "type": "Smart Contract - Switch-ETH-Farm Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x095d0b1c98736a260e18e776da983d444a8fcb0a#code",
              "type": "Smart Contract - Switch-ETH-Farm"
            },
            {
              "target": "https://etherscan.io/address/0xf724773d2588fcdad28053e0b9ff46d5fca233fc",
              "type": "Smart Contract - Switch-ETH-Pool Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xf135e94d423e37debe277fcf707c49e1bdab53c5#code",
              "type": "Smart Contract - Switch-ETH-Pool"
            },
            {
              "target": "https://bscscan.com/address/0xf135e94d423e37debe277fcf707c49e1bdab53c5",
              "type": "Smart Contract - Switch-BSC-Across Proxy"
            },
            {
              "target": "https://bscscan.com/address/0x9c8ef42b83e1ed0838c977d11e829344ccc2015f#code",
              "type": "Smart Contract - Switch-BSC-Across"
            },
            {
              "target": "https://bscscan.com/address/0x3dc6ba3a889a6782db8ac21b5127f57ed45df319",
              "type": "Smart Contract - Switch-BSC-TicketFactory Proxy"
            },
            {
              "target": "https://bscscan.com/address/0xa53986f01c74302542e116beb64884a130fcdeaf#code",
              "type": "Smart Contract - Switch-BSC-TicketFactory"
            },
            {
              "target": "https://bscscan.com/address/0x5422479c89ad04c593b746be61dac58858360f23a",
              "type": "Smart Contract - Switch-BSC-Pool Proxy"
            },
            {
              "target": "https://bscscan.com/address/0x435c7c5365753b712263732d375f79e8eb5ba71a#code",
              "type": "Smart Contract - Switch-BSC-Pool"
            },
            {
              "target": "https://hecoinfo.com/address/0x435c7c5365753b712263732d375f79e8eb5ba71a",
              "type": "Smart Contract - Switch-Heco-Across Proxy"
            },
            {
              "target": "https://hecoinfo.com/address/0x3dc6ba3a889a6782db8ac21b5127f57ed45df319#code",
              "type": "Smart Contract - Switch-Heco-Across"
            },
            {
              "target": "https://hecoinfo.com/address/0xa18c219e6509e09d24473b1de904e7f2b2a1e918",
              "type": "Smart Contract - Switch-Heco-TicketFactory Proxy"
            },
            {
              "target": "https://hecoinfo.com/address/0x74805ca1ff1cc0d6932c29e34460e0214e6e6819#code",
              "type": "Smart Contract - Switch-Heco-TicketFactory"
            },
            {
              "target": "https://hecoinfo.com/address/0x095d0b1c98736a260e18e776da983d444a8fcb0a",
              "type": "Smart Contract - Switch-Heco-Farm Proxy"
            },
            {
              "target": "https://hecoinfo.com/address/0x1d08260d7f23d47807d88bf07a0e63ff6dd1a5b9#code",
              "type": "Smart Contract - Switch-Heco-Farm"
            },
            {
              "target": "https://hecoinfo.com/address/0xF135e94d423E37Debe277fcf707c49E1BdaB53c5",
              "type": "Smart Contract - Switch-Heco-Pool Proxy"
            },
            {
              "target": "https://hecoinfo.com/address/0x54a1ca2ed74f0ac04e21e2154022b330104f2e7a#code",
              "type": "Smart Contract - Switch-Heco-Pool"
            },
            {
              "target": "https://polygonscan.com/address/0xb002aed03e3cdf288039daa84afc00dfc974e375",
              "type": "Smart Contract - Switch-Matic-Across Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0xf514267c377f9b2f4d1ea051e4f27b7f87363a04#code",
              "type": "Smart Contract - Switch-Matic-Across"
            },
            {
              "target": "https://polygonscan.com/address/0x78fa9daebec0cc5eb09ef247a845276c8d064f34",
              "type": "Smart Contract - Switch-Matic-TicketFactory Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0xe1e2a26b9c8f2018c9a10e5544612bbbbaf4a357#code",
              "type": "Smart Contract - Switch-Matic-TicketFactory"
            },
            {
              "target": "https://polygonscan.com/address/0x1fd262935473a630180fbeb5124cc0dd9883ec11",
              "type": "Smart Contract - Switch-Matic-Farm Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0x478613d26b5d74fcd727a62293ac63cf31923f56#code",
              "type": "Smart Contract - Switch-Matic-Farm"
            },
            {
              "target": "https://polygonscan.com/address/0x88f464dC6Da0A8d3FdC95bAFa0d7732E2EC8f0dA",
              "type": "Smart Contract - Switch-Matic-Pool Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0x07786f8c13b821d5bca40650492384a326a63a0c#code",
              "type": "Smart Contract - Switch-Matic-Pool"
            }
          ],
          "mdx": {
            "program_overview": "BurgerSwap is the first cross-chain aggregator that combines liquidity from the leading DEXs and CEXs, allowing users to access any digital asset or transfer funds between any chain on one platform at the best price.\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Medium, High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Issues stated in the [PeckShield security review](https://drive.google.com/file/d/1mgR-Wa5osbFfe7TcEIMvLJqzvsUVcHrJ/view?usp=sharing) are not eligible for a reward.\n  - In Switch, Centralization / Privilege findings refer to either feature logic or implementation of components that act against the nature of decentralization, such as explicit ownership or specialized access roles in combination with a mechanism to relocate funds. \n\nPayouts are handled by the __BurgerSwap__ team directly and are denominated in USD. However, payouts are done in __Burger and USDT__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of BurgerSwap can be found at \n\n  - [https://github.com/burgerswap-org/burgerswap-core](https://github.com/burgerswap-org/burgerswap-core)\n\n  - [https://github.com/burgerswap-org/burger-aggregator](https://github.com/burgerswap-org/burger-aggregator)\n\n  - [https://github.com/burgerswap-org/burger-switch-protocol](https://github.com/burgerswap-org/burger-switch-protocol)\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\nFor Switch contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield",
            "prioritized_vulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "hurricaneswap",
          "project": "HurricaneSwap",
          "date": "2021-11-23T09:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3w82l9a78ih3RzvEzsuVpl/4ee2ab19233c6446a4c0535542fe8245/HurricaneSwap_logo.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://snowtrace.io/address/0x010d464fe46aba2fb468a4bb251248d669c67c72#code",
              "type": "Smart Contract - HcSwapAvaxRouter - implementation"
            },
            {
              "target": "https://bscscan.com/address/0xb6559dd3cbec057078fbd9477e676a24ccea0609#code",
              "type": "Smart Contract - HcSwapBSCRouter - implementation"
            },
            {
              "target": "https://snowtrace.io/address/0xe4ae2e8648b8e84c4a487a559b04e884b822a350#code",
              "type": "Smart Contract - StakingRewardERC20"
            },
            {
              "target": "https://snowtrace.io/address/0x1c9F36FE608190D1fe99e001b596c31871696b24#code",
              "type": "Smart Contract - AvaxPool"
            },
            {
              "target": "https://snowtrace.io/address/0x842BcaABcdcDA2281ea84Fe02cb0F9FEC1bDaF7C#code",
              "type": "Smart Contract - LPMigration"
            },
            {
              "target": "https://snowtrace.io/address/0x75B797a0ed87F77bB546F3A3556F18fC35a01140#code",
              "type": "Smart Contract - HCTBar"
            }
          ],
          "mdx": {
            "program_overview": "HurricaneSwap is the 1st cross-chain liquidity DEX based on Avalanche. With the innovative LP-Bridge mechanism (Roke Protocol), users can trade popular assets of other chains without leaving Avalanche. And taking the advantages of Avalanche, HurricaneSwap can provide users with a high-performance, low slippage, low-cost and seamless cross-chain trading experience.\n\nFor more information about HurricaneSwap, please visit [https://hurricaneswap.com](https://hurricaneswap.com).  \n\nThis bug bounty program is focused on their smart contract and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll High and Critical Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - All the issues that are listed here, inclusive of marked as “Confirmed” or “Fixed” in the [Audit Reports](https://docs.google.com/document/d/199_c4xsxxAUZkD6fVF0jCxp_D9PLx0EDas-4EsBjyW8/edit)\n - The issues found in this [audit report](https://github.com/HurricaneSwap/AuditReport) , whatever fixed or not, will not be included in this bug bounty program.\n\nPayouts are handled by the __HurrianceSwap__ team directly and are denominated in USD. However, payouts are done in __HCT__, __USDT__ or __USDC__. ",
            "assets_body": "All smart contracts of HurricaneSwap can be found at [https://github.com/HurricaneSwap/v2-contract/](https://github.com/HurricaneSwap/v2-contract/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 48 hours\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "traderjoe",
          "project": "Trader Joe",
          "date": "2021-11-08T12:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2G87Qstl6DWQtVWgdS7Zii/3e0eae244db21196755ae49b264d047f/Trader_Joe_Logo__1_.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cchain.explorer.avax.network/address/0xdc13687554205E5b89Ac783db14bb5bba4A1eDaC/transactions",
              "type": "Smart Contract - Unitroller"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x1Ed8368Ca83437DbF43E50e85E6f82342e92CFCB/transactions",
              "type": "Smart Contract - Joetroller"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xe34309613B061545d42c4160ec4d64240b114482/transactions",
              "type": "Smart Contract - PriceOracleProxyUSD"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x2274491950B2D6d79b7e69b683b482282ba14885/transactions",
              "type": "Smart Contract - RewardDistributor"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xe6FfD92B9F77FBF5BfEc0F3D9c9d027C4CF3bA6e/transactions",
              "type": "Smart Contract - TripleInterestRateModel"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xFDF50FEa3527FaD31Fa840B748FD3694aE8a47cc/transactions",
              "type": "Smart Contract - JoeLens"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xe5cDdAFd0f7Af3DEAf4bd213bBaee7A5927AB7E7/transactions",
              "type": "Smart Contract - Maximillion"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xC22F01ddc8010Ee05574028528614634684EC29e/transactions",
              "type": "Smart Contract - JWrappedNativeDelegator"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xd915Fdb10530eF2A8337B4b0bb33F1B0Bc015531/transactions",
              "type": "Smart Contract - JWrappedNativeDelegate"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x929f5caB61DFEc79a5431a7734a68D714C4633fa/transactions",
              "type": "Smart Contract - JCollateralCapErc20Delegator"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xEb41c98513ff3f975016b26e16cbf26E2F1B1DF8/transactions",
              "type": "Smart Contract - JCollateralCapErc20Delegate"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xd6a4F121CA35509aF06A0Be99093d08462f53052/transactions",
              "type": "Smart Contract - MasterChefJoeV2"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x188bED1968b795d5c9022F6a0bb5931Ac4c18F00/transactions",
              "type": "Smart Contract - MasterChefJoeV3"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x60aE616a2155Ee3d9A68541Ba4544862310933d4/transactions",
              "type": "Smart Contract - JoeRouter02"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x57319d41F71E81F3c65F2a47CA4e001EbAFd4F33/transactions",
              "type": "Smart Contract - JoeBar"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xD0C23F8A3777D96e7561b0B5C5ce8b5aFC0c2fa1/transactions",
              "type": "Smart Contract - SimpleRewarderPerSec"
            }
          ],
          "mdx": {
            "program_overview": "The origins of Trader Joe were born from a blended desire, to create a unique and truly innovative trading platform that would resonate with the emerging superiority of the Avalanche blockchain, whilst also serving a global and burgeoning audience at the frontier of the decentralised finance industry.\n\nSince launching, the platform has attracted over $4bn in assets and has gained backing from some of the most widely recognised investors in the industry.\n\nGo to Trader Joe and Swap, Stake, Farm, Lend, Borrow, and Leverage … Do it all under one roof. Users of the Platform will have the ability to immerse themselves into a fully integrated, highly accessible DeFi Trading Platform.\n\nFor more information about Trader Joe, please visit [https://traderjoexyz.com/#/home](https://traderjoexyz.com/#/home). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical/High severity bug reports must come with both a PoC as well as a suggestion for a fix in order to be considered for a reward. Medium severity bug reports must come with a suggestion for a fix in order to be considered for a reward.\n\nThere is a known impact where If a user tries to claim pending rewards after SimpleRewarderPerSec has run out, it will lose all pending rewards. This impact would be considered out-of-scope. \nBug reports relating to a contract running out of gas or a contract consuming unbounded gas are also considered out-of-scope. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nPayouts are handled by the __Trader Joe__ team directly and are denominated in USD. Rewards of less than USD 50 000 are paid out in __USDT__ or __USDC__. Rewards over USD 50 000 are paid out in __AVAX__ or __JOE__.\n",
            "assets_body": "All smart contracts of Trader Joe can be found at [https://github.com/traderjoe-xyz/joe-core](https://github.com/traderjoe-xyz/joe-core) and [https://github.com/traderjoe-xyz/joe-lending](https://github.com/traderjoe-xyz/joe-lending). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Incorrect polling actions\t",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "angleprotocol",
          "project": "Angle Protocol",
          "date": "2021-11-04T12:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3JUIkjiQnvnS4hKZzbqoGR/ec4fcab5bc243679cda582d7d638b4fd/Angle_Protocol_logo__1_.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xA61BeB4A3d02decb01039e378237032B351125B4#code",
              "type": "Smart Contract - AgToken"
            },
            {
              "target": "https://etherscan.io/address/0x3E399AE5B4D8bc0021e53b51c8BCdD66DD62c03b",
              "type": "Smart Contract - Governor"
            },
            {
              "target": "https://etherscan.io/address/0x61ed74de9Ca5796cF2F8fD60D54160D47E30B7c3",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://etherscan.io/address/0x5183f032bf42109cD370B9559FD22207e432301E",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://etherscan.io/address/0x31429d1856ad1377a8a0079410b297e1a9e214c2",
              "type": "Smart Contract - ANGLE"
            },
            {
              "target": "https://etherscan.io/address/0xE6d9bD6796bDAF9B391Fac2A2D34bAE9c1c3c1C4",
              "type": "Smart Contract - Fee Manager"
            },
            {
              "target": "https://etherscan.io/address/0x533438BDf6C576eB14d9572B41d5D37220cc4d09",
              "type": "Smart Contract - Generic Aave"
            },
            {
              "target": "https://etherscan.io/address/0xf89fa5D0f1A85c2bAda78dBCc1d6CDC09a7c8e12",
              "type": "Smart Contract - Generic Compound"
            },
            {
              "target": "https://etherscan.io/address/0xc9Cb5703C109D4Fe46d2F29b0454c434e42A6947",
              "type": "Smart Contract - Oracle DAI"
            },
            {
              "target": "https://etherscan.io/address/0x2859a4eBcB58c8Dd5cAC1419C4F63A071b642B20",
              "type": "Smart Contract - Oracle Chainlink Single"
            },
            {
              "target": "https://etherscan.io/address/0x07C89CC845D046aEad377DddC61114AA9D920Ac0",
              "type": "Smart Contract - Perpetual Manager Front"
            },
            {
              "target": "https://etherscan.io/address/0xa014A485D64efb236423004AB1a99C0aaa97a549",
              "type": "Smart Contract - Pool Manager"
            },
            {
              "target": "https://etherscan.io/address/0x6cd24ac05103C2C911347a6D3628d64a9F07eAf5",
              "type": "Smart Contract - San Token"
            },
            {
              "target": "https://etherscan.io/address/0xC06481fc1D0196C138770fD2148DCB306cB24E20",
              "type": "Smart Contract - Rewards Distributor"
            },
            {
              "target": "https://etherscan.io/address/0xb1F2A25fFB2b095E99f430cAF507cC31F9A3EaAB",
              "type": "Smart Contract - Staking Rewards"
            },
            {
              "target": "https://etherscan.io/address/0xFd04BcE2Cd25fC69f30813f0342Bf0C0B5e22461",
              "type": "Smart Contract - Strategy"
            },
            {
              "target": "https://etherscan.io/address/0xC16B81Af351BA9e64C1a069E3Ab18c244A1E3049",
              "type": "Smart Contract - Stable Master Front"
            },
            {
              "target": "https://etherscan.io/address/0x4f91F01cE8ec07c9B1f6a82c18811848254917Ab",
              "type": "Smart Contract - AngleDistributor"
            },
            {
              "target": "https://etherscan.io/address/0xEB7547a8a734b6fdDBB8Ce0C314a9E6485100a3C",
              "type": "Smart Contract - LiquidityGaugeV4"
            },
            {
              "target": "https://etherscan.io/address/0x2E2063080A05FfdaA6D57f9358C2a5e1C65c70EC",
              "type": "Smart Contract - SurplusConverterSanTokens"
            },
            {
              "target": "https://etherscan.io/address/0xD302484DC0fB3D50F60E1a2a82c882174aBC6eBe",
              "type": "Smart Contract - SurplusConverterUniV3"
            },
            {
              "target": "https://etherscan.io/address/0x9aD7e7b0877582E14c17702EecF49018DD6f2367",
              "type": "Smart Contract - GaugeController"
            },
            {
              "target": "https://etherscan.io/address/0x0C462Dbb9EC8cD1630f1728B2CFD2769d09f0dd5",
              "type": "Smart Contract - veANGLE"
            }
          ],
          "mdx": {
            "program_overview": "Angle is the first over-collateralized, decentralized and capital-efficient stablecoin protocol. It offers full convertibility between stable assets and collateral at oracle value: you can swap 1 of collateral against 1 of stablecoin and conversely. This makes the protocol both capital efficient and highly liquid.\n\nFor more information about Angle Protocol, please visit [https://www.angle.money/](https://www.angle.money/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds\n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All High and Medium Smart Contract bug reports require a PoC to be eligible for a reward.\n\nVulnerabilities marked as “Acknowledged”, “ Accepted Risk” or “Closed” in the [ChainSecurity security review](https://github.com/AngleProtocol/angle-core/blob/main/audits/Chainsecurity%20Audit%20Report.pdf) from July 2021, and [Sigma Prime security review](https://github.com/AngleProtocol/angle-core/blob/main/audits/Sigma%20Prime%20Audit%20Report.pdf) from July 2021,  and in the Chainsecurity security review from December 2021 are not eligible for a reward.\n\nCritical-level smart contract vulnerabilities that result in the loss of user funds will have rewards additionally capped at 10% of the funds potentially affected based on the vulnerability that was identified. These rewards are payable in USDC or in ANGLE at the discretion of the team. ANGLE rewards will have a vesting schedule lasting between 6-12 months with a minimum of 6 months for rewards up to USD 200 000, with an additional month added for every USD 50 000 tranche, rounded up. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nPayouts are handled by the __Angle Protocol__ team directly and are denominated in USD. However, payouts are done in __ANGLE__ or __USDC__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Angle Protocol can be found at [https://github.com/AngleProtocol/angle-core](https://github.com/AngleProtocol/angle-core/blob/main/audits/Chainsecurity%20Audit%20Report.pdf). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked by freezing or theft\n  - Loss of governance funds\n  - Smart contracts fails to deliver promised returns\n  - Temporary freezing of funds for any amount of time\n  - Theft/Freezing of unclaimed yield\n  - Smart contract fails to deliver promised returns\n  - Vote Manipulation\n  - Unable to call smart contract",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "buttonwood",
          "project": "Buttonwood",
          "date": "2021-10-28T04:15-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4KQLVXSS65vjjJRtqM1PbQ/85eeab1addc2bdf186d9f37032c21fe2/logo__black___1_.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000 - USD $100,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000 - USD $50,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/ButtonToken.sol",
              "type": "Smart Contract - ButtonToken.sol"
            },
            {
              "target": "https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/oracles/ChainlinkOracle.sol",
              "type": "Smart Contract - ChainlinkOracle.sol"
            },
            {
              "target": "https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/ButtonTokenFactory.sol",
              "type": "Smart Contract - ButtonTokenFactory.sol"
            },
            {
              "target": "https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/UnbuttonTokenFactory.sol",
              "type": "Smart Contract - UnbuttonTokenFactory.sol "
            },
            {
              "target": "https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/UnbuttonToken.sol",
              "type": "Smart Contract - UnbuttonToken.sol"
            }
          ],
          "mdx": {
            "program_overview": "Buttonwood is a DeFi project creating and implementing various DeFi protocols, including liquidity aggregation, price-stabilization wrappers, governance, peer-to-peer lending, and risk stratification.\n\nButtonwood’s approach to innovation focuses on composability—we believe the most useful smart contracts are building blocks, not walled gardens. They should be open-source and as minimal as possible—we seek to build primitives to be used by the entirety of digital finance, not platforms to extract value from the ecosystem. These protocols can be used and incorporated into any other protocol without restriction.\n\nFor more information about Buttonwood, please visit [https://button.foundation](https://button.foundation).\n\nThis bug bounty program is focused on their smart contracts and website and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract bug reports are further capped at 10% of economic damage, primarily taking into consideration the funds at risk, but also considering other aspects such as PR and branding considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__.\n\nBug reports of other severity levels will take into consideration the exploitability and impact of the bug reports had they been executed. Buttonwood reserves the right to make the final decision on the reward amount.\n\nPayouts are handled by the __Buttonwood__ team directly and are denominated in USD. However, payouts are done in  __ETH__ or __USDC__, at the discretion of the team.",
            "assets_body": "All code of  Buttonwood can be found at [https://github.com/buttonwood-protocol](https://github.com/buttonwood-protocol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nOnce deployed on mainnet, the smart contract addresses will be included in this bug bounty program.\n\nOnly files in the parent \"contracts\" folder for both of the assets listed in this table are in scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "cartesi",
          "project": "Cartesi",
          "date": "2021-10-26T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/69XxoWV8SomtIOnQVdemR9/0034f18c248e929280ef26675d4eb268/Cartesi.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x00B6110c111b626bfC226894992d1A4C4740C4dC",
              "type": "Smart Contract - Staking Pool Factory Impl"
            },
            {
              "target": "https://etherscan.io/address/0x3F9A0B1A0B81473e051a26a039F730b28f02018B",
              "type": "Smart Contract - Staking Pool Impl"
            },
            {
              "target": "https://etherscan.io/address/0x778e443DCe627dE31bbc54098cC8153508c27F2E",
              "type": "Smart Contract - Chainlink Gas Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xd092A3611A140Bd4171ad46B5F708593E7fA832a",
              "type": "Smart Contract - Chainlink Price Oracle"
            },
            {
              "target": "https://explorer.cartesi.io",
              "type": "Web/App - Main web"
            }
          ],
          "mdx": {
            "program_overview": "Cartesi is a layer-2 platform for the development and deployment of scalable decentralized applications. Cartesi DApps are composed of both blockchain and off-chain components. Off-chain components run inside Cartesi Nodes that represent the interests of each DApp user.\n\nFor more information about Cartesi, please visit [https://cartesi.io/](https://cartesi.io/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Medium, High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Tokens transferred directly to a pool (through a ERC-20 transfer), without using the \"deposit\" transaction, are locked permanently. Those tokens are staked to the Staking contract, improving its productivity, but they don't belong to anyone and cannot be recovered.\n\n  - If a delegator deposits tokens and then the pool manager pauses (locks) the pool, the delegator needs to wait for the pool to be unpaused (unlocked) so he can stake those tokens. He still has the option to withdraw those tokens while the pool is paused (locked).\n\nPayouts are handled by the __Cartesi__ team directly and are denominated in USD. However, payouts are done in __CTSI__ and __Stablecoins__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Cartesi can be found at [https://github.com/cartesi/staking-pool](https://github.com/cartesi/staking-pool). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n\n__Web/App__\n\n  - Leak of user data\n  - Redirected funds by address modification\n  - Accessing sensitive pages without authorization\n  - Injection of text\n  - Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "sherlock",
          "project": "Sherlock",
          "date": "2021-10-12T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3KAGs1iPkVQgH479qY0UC0/1bbe99e55301f0b4be5b7c1739fe7c19/sherlock.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xeecee260a402fe3c20e5b8301382005124bef121a",
              "type": "Smart Contract - Aave Strategy"
            },
            {
              "target": "https://etherscan.io/address/0xde229e52bdb72c449db7912968e51d9d5e793005",
              "type": "Smart Contract - ForeignLock"
            },
            {
              "target": "https://etherscan.io/address/0xca1bf9e6add6155e92dc1dc7c0bf210c159a2f43",
              "type": "Smart Contract - NativeLock"
            }
          ],
          "mdx": {
            "program_overview": "Sherlock is a risk management platform designed to provide DeFi protocols with affordable, reliable coverage against smart contract exploits starting from Day 1.\n\nSherlock coverage is backed by proprietary staking pools that offer some of the highest risk-adjusted returns in DeFi. This is made possible by their team of security and risk experts who evaluate the smart contracts of every protocol, price the coverage and have skin in the game alongside stakers.\n\nFor more information about Sherlock, please visit [https://sherlock.xyz/about/](https://sherlock.xyz/about/)  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds by profitable theft or profitable freezing\n  - Loss of staker funds by profitable theft\n  - Profitable dilution of staker funds (infinite minting of lockUSDC or SHERX)\n  - Profitable payout exploits\n  - DoS or “freezing” attacks",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA PoC is required for Critical and High Smart Contract/Blockchain bug reports.\n\nExploits that result in a material loss of funds for users and is profitable for the hacker are classified as Critical. Anything else that results in a material loss/freezing of user funds that is unprofitable for the hacker is classified as High. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nKnown issues in their previous audits are considered out-of-scope:\n[https://certificate.quantstamp.com/full/sherlock](https://certificate.quantstamp.com/full/sherlock)\n[https://code423n4.com/reports/2021-07-sherlock/](https://code423n4.com/reports/2021-07-sherlock/)\n\nAdditionally, the underflow bug described here is also considered out-of-scope:\n[https://sherlock.xyz/blog/5_underflow_error/](https://sherlock.xyz/blog/5_underflow_error/)\n\nPayouts are handled by the __Sherlock__ team directly and are denominated in USD. Payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Sherlock can be found at [https://github.com/sherlock-protocol/sherlock-v1-core/tree/main/contracts](https://github.com/sherlock-protocol/sherlock-v1-core/tree/main/contracts). \nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds by theft or freezing\n  - Loss of staker funds by theft\n  - Dilution of staker funds (infinite minting of lockUSDC or SHERX)\n  - Payout exploits\n  - DoS attacks and temporary freezing of funds for at least 10 days",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials (unless the hacker can prove public access to these leaked keys/credentials)\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "spookyswap",
          "project": "SpookySwap",
          "date": "2021-09-21T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6JiqHo4RihNNlwpQDfjG68/51aa033d277f0db1afa5977aef732b32/SpookySwap__1_.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://spookyswap.finance",
              "type": "Web/App"
            },
            {
              "target": "https://ftmscan.com/address/0x152ee697f2e276fa89e96742e9bb9ab1f2e61be3",
              "type": "Smart Contract - UniswapV02Factory"
            },
            {
              "target": "https://ftmscan.com/address/0xf491e7b69e4244ad4002bc14e878a34207e38c29",
              "type": "Smart Contract - UniswapV02Router"
            },
            {
              "target": "https://ftmscan.com/address/0x2b2929e785374c651a81a63878ab22742656dcdd",
              "type": "Smart Contract - MasterChef"
            },
            {
              "target": "https://ftmscan.com/address/0x841fad6eae12c286d1fd18d1d525dffa75c7effe",
              "type": "Smart Contract - BooToken"
            },
            {
              "target": "https://ftmscan.com/address/0xa48d959AE2E88f1dAA7D5F611E01908106dE7598",
              "type": "Smart Contract - Boo MirrorWorld (xBOO)"
            },
            {
              "target": "https://ftmscan.com/address/0x7f41312b5d2d31d49482f31c9a53e6485df37e1d",
              "type": "Smart Contract - BrewBoo"
            },
            {
              "target": "https://ftmscan.com/address/0x2352b745561e7e6FCD03c093cE7220e3e126ace0",
              "type": "Smart Contract - AceLab"
            }
          ],
          "mdx": {
            "program_overview": "SpookySwap is an automated market-making (AMM) decentralized exchange (DEX) for the Fantom Opera network. Different from other DEXs, we're invested in building a strong foundation with our BOO token as a governance token, diverse farms, a built in bridge, built in limit orders and user-centered service. \n\nFor more information about SpookySwap, please visit [https://spookyswap.finance/](https://spookyswap.finance/). \n\nThis bug bounty program is focused on their smart contracts and website and is focused on preventing the following impacts:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Redirected funds by address modification\n  - Site goes down\n  - Injection of text \n  - Users spoofing other users",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports are required to have a PoC in order to receive a reward. \n\nAny report involving issues highlighted in their [CertiK audit](https://www.certik.org/projects/spookyswap) are considered as out-of-scope.\n\nCritical smart contract bug reports are further capped at 10% of economic damage, primarily taking into consideration the funds at risk, but also considering other aspects such as PR and branding considerations, at the discretion of the team. \nHowever, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __SpookySwap__ team directly and are denominated in USD. However, payouts are done in a mix of  __BOO__, __ETH__ and __USDC__, at the discretion of the team.",
            "assets_body": "All code of SpookySwap can be found at [https://github.com/spookyswap](https://github.com/spookyswap). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Injection of text \n  - Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "goldfinch",
          "project": "Goldfinch",
          "date": "2021-09-10T13:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/arpDmjFKDdzJz5O1pgtwQ/37743b282dbdc711c4e1ce060fa16af0/Goldfinch.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.goldfinch.finance",
              "type": "Web/App"
            },
            {
              "target": "https://etherscan.io/address/0x3483Db484B213786990185Eb6347eC49904D0Bfa",
              "type": "Smart Contract - Accountant "
            },
            {
              "target": "https://etherscan.io/address/0xB8276651612df04E48DA5f353c969aa1C0076099",
              "type": "Smart Contract - Borrower "
            },
            {
              "target": "https://etherscan.io/address/0x19BfbF921d48279391c7445303D89Cb4a6066b71",
              "type": "Smart Contract - ConfigOptions"
            },
            {
              "target": "https://etherscan.io/address/0xD52dc1615c843c30F2e4668E101c0938e6007220",
              "type": "Smart Contract - CreditDesk"
            },
            {
              "target": "https://etherscan.io/address/0xb5b6996F086D6A570b1A547D9CB7Df93A0C58518",
              "type": "Smart Contract - CreditLine"
            },
            {
              "target": "https://etherscan.io/address/0x6a445E9F40e0b97c92d0b8a3366cEF1d67F700BF",
              "type": "Smart Contract - Fidu"
            },
            {
              "target": "https://etherscan.io/address/0x9b2ACD3fd9aa6c60B26CF748bfFF682f27893320",
              "type": "Smart Contract - FixedLeverageRatioStrategy"
            },
            {
              "target": "https://etherscan.io/address/0x4eb844Ff521B4A964011ac8ecd42d500725C95CC",
              "type": "Smart Contract - GoldfinchConfig"
            },
            {
              "target": "https://etherscan.io/address/0xd20508E1E971b80EE172c73517905bfFfcBD87f9",
              "type": "Smart Contract - ​​GoldfinchFactory "
            },
            {
              "target": "https://etherscan.io/address/0x187E45EbAf88f63Ebf0319dEae51DF8955423869",
              "type": "Smart Contract - MigratedTranchedPool"
            },
            {
              "target": "https://etherscan.io/address/0xB01b315e32D1D9B5CE93e296D483e1f0aAD39E75",
              "type": "Smart Contract - Pool "
            },
            {
              "target": "https://etherscan.io/address/0x57686612C601Cb5213b01AA8e80AfEb24BBd01df",
              "type": "Smart Contract - PoolTokens "
            },
            {
              "target": "https://etherscan.io/address/0x8481a6EbAf5c7DABc3F7e09e44A89531fd31F822",
              "type": "Smart Contract - SeniorPool "
            },
            {
              "target": "https://etherscan.io/address/0x76C3F166d086E6Cc213fcE0391e5087d3F4A77Fe",
              "type": "Smart Contract - TestForwarder"
            },
            {
              "target": "https://etherscan.io/address/0xcD123Dd7B07e164bf1b33Fc639A8f7a04C3370b2",
              "type": "Smart Contract - TranchedPool "
            }
          ],
          "mdx": {
            "program_overview": "Goldfinch is a decentralized protocol that allows for crypto borrowing without crypto collateral. The Goldfinch protocol has four core participants: Borrowers, Backers, Liquidity Providers, and Auditors.\n\nBorrowers are participants who seek financing, and they propose Borrower Pools for the Backers to assess. Borrower Pools contain the terms a Borrower seeks, like the interest rate and repayment schedule.\n\nBackers assess the Borrower Pools and decide whether to supply first-loss capital. After Backers supply capital, Borrowers can borrow and repay through the Borrower Pool.\n\nLiquidity Providers supply capital to the Senior Pool in order to earn passive yield. The Senior Pool uses the Leverage Model to automatically allocate capital to the Borrower Pools, based on how many Backers are participating in them. When the Senior Pool allocates capital, a portion of its interest is reallocated to the Backers. This increases the Backers’ effective yield, which incentives them to both provide the higher-risk first-loss capital and do the work of assessing Borrower Pools.\n\nLastly, Auditors vote to approve Borrowers, which is required before they can borrow. Auditors are randomly selected by the protocol, and they provide a human-level check to guard against fraudulent activity.\n\nFor more information about Goldfinch, please visit [https://goldfinch.finance/](https://goldfinch.finance/).     \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Loss of user funds\n  - Loss of governance funds\n  - Incorrect or unintended behavior relating to money transfers (ie. user input is for 10 USDC, and we actually try to move 100 USDC)\n  - Logical bugs relating to calculation of interest or principal owed, or payment dates, etc.\n  - Temporary freezing of user or governance funds.\n  - Unable to call smart contract\n  - Pointing to an incorrect smart contract from our frontend",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\n“Clickjacking state-changing” is considered as Medium if it can result in any user losing funds or being tricked into unintended behavior involving money through Goldfinch’s front-ends. It is considered “High” if it could result in greater than USD 10 000 worth of such damages. \n\nTheft of Yield is considered Critical if the theft is greater than the equivalent of USD 200 000.\n\nCritical bug reports are further capped at 10% of economic damage, primarily taking into account the funds at risk but also potentially accounting for PR and branding considerations, at the discretion of the Goldfinch team. However, the minimum reward for Critical vulnerabilities is USD 20 000.\n\nIn order to be eligible for a reward, the following terms and conditions must be met:\n\n  - Identify an original, previously unreported, non-public vulnerability within the scope of the Goldfinch bug bounty program as described.\n  - Include sufficient detail in your disclosure to enable our engineers to quickly reproduce, understand, and fix the vulnerability.\n  - Be at least 18 years of age.\n  - Be reporting in an individual capacity, or if employed by a company, reporting with the company’s written approval to submit a disclosure to Goldfinch.\n  - Not be subject to US sanctions or reside in a US-embargoed country.\n  - Not be a current or former Goldfinch employee, vendor, contractor, or employee of a Goldfinch vendor or contractor.\n\nVulnerabilities in contracts built on top of Goldfinch by third-party developers (such as smart contract wallets) are not in-scope, nor are vulnerabilities that require ownership of an admin key.\n\nPayouts are handled by the __Goldfinch__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Goldfinch can be found at [https://github.com/goldfinch-eng/goldfinch-contracts](https://github.com/goldfinch-eng/goldfinch-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds\n  - Loss of governance funds\n  - Unintended behavior relating to money transfers (ie. user input is for 10 USDC, and we actually try to move 100 USDC)\n  - Logical bugs relating to calculation of interest or principal owed, or payment dates, etc.\n  - Temporary freezing of user or governance funds.\n  - Unable to call smart contract\n  - Failure of access controls\n\n__Web/App__\n\n  - Incorrect or unintended behavior relating to money. (ie. user input is for 10 USDC on the app, and we actually send 100 USDC to the smart contract), \n  - We are pointing to an incorrect smart contract\n  - Cross-site request forgery (CSRF)\n  - Cross-site scripting (XSS)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "thorchain",
          "project": "THORChain",
          "date": "2021-07-28T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2ivu6TOSX5K1g4rprSlKTI/b044ae4248b6b03c658cbfed4d91d05e/THORChain.jpeg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.com/address/0xC145990E84155416144C532E31f89B840Ca8c2cE",
              "type": "Smart Contract - ETH Router (non-Bifrost)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode",
              "type": "Blockchain - Core THORChain functionality"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost",
              "type": "Blockchain - Bifrost Core Functionality (not including pkg/chainclients)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost/pkg/chainclients/binance",
              "type": "Blockchain - Bifrost Chain Client (Binance)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost/pkg/chainclients/bitcoincash",
              "type": "Blockchain - Bifrost Chain Client (BitcoinCash)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost/pkg/chainclients/litecoin",
              "type": "Blockchain - Bifrost Chain Client (Litecoin)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost/pkg/chainclients/bitcoin",
              "type": "Blockchain - Bifrost Chain Client (Bitcoin)"
            },
            {
              "target": "https://gitlab.com/thorchain/thornode/-/tree/develop/bifrost/pkg/chainclients/ethereum",
              "type": "Blockchain - Bifrost Chain Client (Ethereum)"
            }
          ],
          "mdx": {
            "program_overview": "THORChain is a decentralised cross-chain liquidity protocol based on Tendermint & Cosmos-SDK and utilising Threshold Signature Schemes (TSS). It does not peg or wrap assets, it simply determines how to move them in response to user-actions. \n\nTHORChain observes incoming user deposits to vaults, executes business logic (swap, add/remove liquidity), and processes outbound transactions. THORChain is primarily a leaderless vault manager, ensuring that every stage of the process is byzantine-fault-tolerant. \n\nTHORChain's key objective is to be resistant to centralisation and capture whilst facilitating cross-chain liquidity. THORChain only secures the assets in its vaults, and has economic guarantees that those assets are safe. \n\nFor more information about how THORChain works, please visit [https://docs.thorchain.org/technology](https://docs.thorchain.org/technology). \n\nThe bug bounty program covers its smart contracts and core THORChain functionality, and is focused on receiving critical bug reports covering impacts as stated in the Impacts in Scope section.  Vulnerabilities below the Critical severity level are not accepted under the bug bounty program. \n\n[Nine Realms](https://www.ninerealms.co/) has joined the efforts to triage and verify vulnerabilities of this bug bounty program.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nTHORChain core team members, auditing firms contracted by THORChain, as well as contributors on Treasury payroll are not permitted to participate in this bug bounty program. If an existing pull request or live issue on GitLab addresses the vulnerability reported, it will not be eligible for a reward.\n\nThe reward is dependent on the amount of funds that can be taken or permanently frozen per vulnerability exploited over the span of 30 minutes, capped at 10% of the funds that can be taken or permanently frozen, up to USD 300 000. For vulnerabilities that can be exploited and executed in a single non-ongoing attack over a single block, the cap is USD 500 000.\n\nThe total pool of the bug bounty program is USD 2 000 000. Rewards are distributed on a first-come-first serve basis. Once this pool is depleted, no further rewards will be paid out until the full redeployment of THORChain in about 8 weeks from the launch date of this bug bounty program. Rewards will only be distributed if it is still relevant to the full redeployment at the discretion of the team. This amount will be updated as the bug bounty program is ongoing. \n\nIn order to qualify for the critical reward, a PoC must be included. Exploited vulnerabilities, as well as known issues, are not eligible for a reward.\n\nPayouts are handled by the __THORChain__ treasury in coordination with the THORChain team and are denominated in USD. However, payouts are done completely in __RUNE__. Triaging and verification for this bug bounty program is provided by [Nine Realms](https://www.ninerealms.co/).",
            "assets_body": "Bifrost-related vulnerabilities are only considered as in-scope if they affect one of the chains mentioned in the Assets in Scope table. Vulnerabilities that only affect other chains are not considered in-scope. \n\nWhile the Tendermint application ([https://gitlab.com/thorchain/thornode/-/tree/develop/app](https://gitlab.com/thorchain/thornode/-/tree/develop/app)) is considered as in-scope, Cosmos SDK dependencies themselves are out-of-scope. \n\n### Impacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts and Blockchain__\n\n- Loss of user funds (staked/locked) by permanent freezing or theft\n- Loss of governance funds",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Logic errors\n- Congestion and scalability\n- Sybil attacks\n\n__The following activities are prohibited by the bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "alphafinance",
          "project": "Alpha Finance",
          "date": "2021-04-20T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/71pklpx3jRf9XgK7fxlT8n/c7c77d4bcca1ee5dd85284c4c1f95c01/Alphafinance-logo.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://gist.github.com/n1punp/e9d2961de5af69fbd9a39d0efbb77766",
              "type": "Smart contract - Alpha Homora v1 (ETH)"
            },
            {
              "target": "https://gist.github.com/n1punp/afc21382eabf68a2a16a8f2947697338",
              "type": "Smart contract - Alpha Homora v1 (BSC)"
            },
            {
              "target": "https://gist.github.com/n1punp/3345d1bf6d159c7d4457b41656cd11f7",
              "type": "Smart Contract - Alpha Staking"
            },
            {
              "target": "https://gist.github.com/n1punp/707f1fa2632ae9e3651b3686ac68d197",
              "type": "Smart Contract - Alpha Homora v2"
            },
            {
              "target": "https://gist.github.com/n1punp/66e994be78d5e303829f148feb96b0e8",
              "type": "Smart Contract - Alpha Homora v2 (AVAX)"
            },
            {
              "target": "https://gist.github.com/n1punp/207650ad32f8073c728a666bc7d0df66",
              "type": "Smart Contract - AlphaX (AVAX)"
            },
            {
              "target": "https://homora-v2.alphafinance.io/",
              "type": "Web/App - Alpha Homora V2 (ETH & AVAX)"
            },
            {
              "target": "https://x.alphafinance.io/",
              "type": "Web/App - AlphaX (AVAX)"
            },
            {
              "target": "https://tokenomics.alphafinance.io/",
              "type": "Web/App - Alpha Tokenomics"
            }
          ],
          "mdx": {
            "program_overview": "Alpha Finance Lab is building an ecosystem of DeFi products (the Alpha ecosystem), consisting of innovative building blocks that capture unaddressed demand in key pillars of the financial system. These building blocks will interoperate, creating the Alpha ecosystem that will be an innovative and more capital efficient way to banking in DeFi. \n\nAlpha Homora is Alpha Finance Lab’s first product and DeFi’s first leveraged yield farming product that captures the market gap in lending, one of the key pillars of the financial system.\n\nFurther information about Alpha Finance can be found here [https://alphafinancelab.gitbook.io/alpha-finance-lab/](https://alphafinancelab.gitbook.io/alpha-finance-lab/). ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. For Smart Contract bug reports, PoCs and suggestions for a fix are not required but good to have and encouraged. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. This includes a bounty of up to USD 500,000 from the Alpha Finance team and an additional bounty of up to USD 250,000 from the Armor Alliance Bug Bounty program.\n\nPayouts are handled by the __Alpha Finance__ team directly and are denominated in USD. However, payouts are done in __ALPHA__ for payouts up to USD 500,000. For critical level smart contract vulnerabilities, payouts of up to USD 500,000 will take place with an upfront payout of up to USD 100,000 and USD 50,000 monthly vesting thereafter. ",
            "assets_body": "In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. ",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Undesirable flashloan/sandwich exploits\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Accessing sensitive pages without authorization\n  - Persistent injection of text or script\n  - Users spoofing other users\n  - Shell access on server\n  - Loss of treasury funds\n  - Loss of user funds\n  - Incorrect calculations e.g. slippage control that can lead to funds loss",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "alchemix",
          "project": "Alchemix",
          "date": "2021-03-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2NgcBC2slhGYI8qYGnTsCw/0616521e1a588b3a5373af0215dd2a2b/Alchemix-logo.png",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/README.md",
          "assets_in_scope": [
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/Alchemist.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/AlToken.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/AlchemixToken.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/MultiSigWallet.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/MultiSigWalletWithTimelock.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/StakingPools.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/TimeToken.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/blob/master/contracts/TransmuterB.sol",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/tree/master/contracts/libraries",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/alchemix-finance/alchemix-protocol/tree/master/contracts/adapters",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Alchemix is a DeFi protocol that allows for the creation of synthetic tokens that represent the future yield of a deposit. It enables users to retrieve near instant tokenized value against temporary deposits of stablecoins. A magic money potion if you will, however one that is crafted in Defi with perhaps a sprinkling of ancient wisdom. The protocol presents a powerful new DeFi primitive offering myriad applications for users and an exciting new tool for other developers.\n\nVersion one of the Alchemix protocol supports two synthetic tokens, “alUSD”, which will be mintable using DAI as collateral, and \"alETH\", which is mintable using ETH as collateral.  Users deposit the necessary collateral into an Alchemist smart-contract and can then mint an alX token, up to 50% the deposited amount of collateral at a 1:1 ratio. The deposited collateral is deployed to yearn vaults to earn yield.\n\nThe bug bounty program is focused around its smart contracts and the prevention of loss of user funds, flash loan attacks, economic exploits, and contract bricking.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe theft of yield/interest severity classification of High does not apply to issues related to the transmuter, as it is not a source of yield.\n\nCritical smart contract and blockchain vulnerabilities are further capped at 10% of economic damage, based primarily on the amount of funds at risk, but also taking into account branding and PR considerations, at the discretion of the team. However, there is a minimum reward of USD 50 000.\n\nPayouts are handled by the **Alchemix** team directly and are denominated in\n**USD**. Payouts are done in **USDC, DAI, or any other stablecoin**.",
            "assets_body": "The team is aware of minor rounding errors and will not accept bug reports\ninvolving them unless they lead to a bricking of the contract.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "yieldprotocol",
          "project": "Yield Protocol",
          "date": "2021-03-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2kWvHa5ZhMGP6OVynxoCwG/16d81ac8323e0ec125ad7486c8ea9e28/Yield_Protocol_logo_update_01_2022.jpg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $8,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/yieldprotocol/vault-v2/tree/master/contracts",
              "type": "Smart Contract - Yield Protocol core contracts"
            },
            {
              "target": "https://github.com/yieldprotocol/yield-liquidator-v2",
              "type": "Smart contract - Liquidator"
            },
            {
              "target": "https://github.com/yieldprotocol/yieldspace-v2/tree/main/contracts",
              "type": "Smart Contract - YieldSpace AMM v2"
            },
            {
              "target": "https://github.com/yieldprotocol/yield-utils-v2",
              "type": "Smart Contract - Utils"
            },
            {
              "target": "https://github.com/yieldprotocol/strategy-v2/tree/master/contracts",
              "type": "Smart Contract - Liquidity Providing strategies"
            }
          ],
          "mdx": {
            "program_overview": "Yield Protocol brings collateralized fixed-rate, fixed-term borrowing and\nlending and interest rate markets to decentralized finance.\n\nThis solves a major pain point around today's DeFi lending protocols:\npredictable interest rates. Existing DeFi protocols offer only variable\ninterest rates. These protocols may experience interest rate volatility that\ncan make it difficult for you to plan for the future, make investment\ndecisions, and properly hedge risk when borrowing and lending.\n\nYield Protocol allows you to have a \"set and forget\" experience, instead of\nconstantly rebalancing your assets across DeFi in an effort to minimize your\nborrow rates or maximize your lending yields. We accomplish that with a new\nprimitive, fixed yield tokens, or fyTokens for short. fyTokens are\nEthereum-based tokens (ERC20) that may be redeemed one-for-one for a target\nasset after a predetermined maturity date.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nPayouts are handled by the __Yield Protocol__ founding team directly and are denominated in USD. Payouts are done in __USDC__ or __Dai__. ",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "badger",
          "project": "Badger DAO",
          "date": "2021-01-08T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/YTJQeFFqEJVGTiAwSXLbS/ec3860feb1cace5ef1c29ea3d9178177/Badger-logo.jpg",
          "maximum_reward": 500000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $500,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $250"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://badger-finance.gitbook.io/badger-finance/bug-bounty",
          "assets_in_scope": [
            {
              "target": "https://github.com/Badger-Finance/badger-system",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Badger Finance is a community DAO, focused on bringing Bitcoin to DeFi. The DAO's debut products are Sett, a yield aggregator, and Digg, a BTC-pegged elastic supply currency. Its components include:\n\n  - Badger DAO - The governance of Badger Finance is managed via an Aragon DAO with a liquid governance token. \n  - Sett - The debut yield aggregator product of the DAO, focused on innovating on the best bitcoin-related yield strategies.\n  - Digg - A BTC-pegged elastic supply currency, based on the Ampleforth protocol.\n  - Token Distribution - The Badger governance token ($BADGER) and the Digg token ($DIGG) will be initially distributed via airdrops for users who have demonstrated an active interest in Bitcoin DeFi and community governance, early contributors to the DAO, and as staking rewards for participation in Sett.\n  - Assistants - Traditional backend services to provide necessary updates to the system. These include oracles, keepers, and system monitors\n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nRewards for critical payouts are capped at 10% of the funds at risk. \n\nPayouts up to __USD 500 000__ are handled by the __BadgerDAO__ team directly and are denominated in __USD__. Payouts are denominated in __USD__ and are paid out in the reporter's choice of __BADGER__, __ETH__, __BTC__, or a stablecoin (__USDC__, __DAI__, __USDT__).",
            "assets_body": "Additionally, Badger's website hosted at [https://badger.finance](https://badger.finance) and the infrastructure that hosts that site are excluded from this bug bounty program. Reports of web vulnerabilities that do not impact Badger's Web3 smart contract interface will not receive a payout under this program. Web vulnerabilities that are claimed to impact Badger's Web3 smart contract interface __must be accompanied by a proof-of-concept__ exploit. \n\nWeb vulnerabilities may be included in future versions of this program; watch this page for updates.",
            "prioritized_vulnerabilities": "Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "enzymefinance",
          "project": "Enzyme Finance",
          "date": "2021-03-29T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4a7y72EOvOMZWlUx3h2ZNi/7877774da8145f9d7cbd85f902d7198a/Enzymefinance-logo.jpg",
          "maximum_reward": 400000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $400,000"
            },
            {
              "level": "high",
              "payout": "USD $80,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.enzyme.finance/",
              "type": "App"
            },
            {
              "target": "https://github.com/enzymefinance/protocol/tree/v3",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/enzymefinance/protocol/tree/v4",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Enzyme Finance, formerly known as Melon Protocol, is an Ethereum-based protocol\nfor decentralized on-chain asset management. It is a protocol for people or\nentities to manage their wealth & the wealth of others within a customizable\nand safe environment. Enzyme empowers anyone to set up, manage and invest in\ncustomized on-chain investment vehicles.\n\nMore information about Enzyme Finance can be found in their <Link href=\"https://docs.enzyme.finance/\">docs</Link> and also here in the additional [V4 docs](https://avantgarde-finance.gitbook.io/enzyme-protocol-v4-sulu-general-spec/).\n\nThis bug bounty program is focused around the Enzyme Finance smart contracts\nand app and is primarily concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount for critical smart contract vulnerabilities is capped at 10% of the funds at risk based on the vulnerability reported.\n\nAll web and app bug reports must come with a PoC. If a bug report does not have \na PoC it will be rejected with instructions to provide a PoC\n\nAll payouts are done by the **Enzyme Finance** team directly and are\ndenominated in **USD**. Payouts are done in **USDC** up to USD $400,000.",
            "assets_body": "Only web/app vulnerabilities that **directly** affect the listed web/app assets are \naccepted within the bug bounty program. All others are out-of-scope.\n\nAudits are available at  [https://github.com/enzymefinance/protocol/tree/v4/audits](https://github.com/enzymefinance/protocol/tree/v4/audits).\n\nAny prior bugs that have been found in the audit above are ineligible for the bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps** \n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF (reports of CSRF must include a demonstration of impact)\n- Direct object reference\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- DOM XSS",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n- Internal SSRF\n- Path Traversal\n- SPF Configuration Problems\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "horizonfinance",
          "project": "Horizon Finance",
          "date": "2021-03-21T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/bpIAszcbJCWdY4yx4nncQ/1b65f2af361a906417c5b1e0bc39ac81/Horizonfinance-logo.jpg",
          "maximum_reward": 400000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $400,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Horizonfinance2020/horizon-web-front-end",
              "type": "Web/App"
            },
            {
              "target": "https://beta.horizon.finance/#/index",
              "type": "Web/App"
            },
            {
              "target": "https://github.com/Horizonfinance2020/horizon-contract",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Horizon Finance allows participants to deposit their assets (any kind the\nplatform supports) with a fixed or floating interest rate, and get reward\naccording to the interest rate they chose with an order according to how many\nassets they deposited.\n\nFor more information about Horizon, please read the <Link href=\"https://docs.horizon.finance/general/whitepaper\">Horizon Whitepaper</Link>. \n\nThe bug bounty program covers its smart contracts and apps and is focused on\nthe prevention of loss of user funds, denial of service, and data breaches and\ndata leaks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount for critical smart contract vulnerabilities is \ncapped at 10% of the funds at risk based on the vulnerability reported.\n\nAll web and app bugs must come with a PoC in order to be accepted. All \nweb and app bug reports without a PoC will be rejected with a request for a PoC.\n\nPayouts are handled by the **Horizon Finance** team directly and are\ndenominated in **USD**. Payouts are done in a stablecoin (USDC or DAI) until\nthe project is fully live.  Once the project is live, up to 50% of rewards may\nbe paid out in **HRZ**.",
            "assets_body": "Only web/app vulnerabilities that **directly** affect this asset are accepted\nwithin the bug bounty program. All others are out of scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps** \n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bridgemutual",
          "project": "Bridge Mutual",
          "date": "2021-05-21T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/46s5x7qKQgskgQLeKm0Ygr/30317c85344310bff81b5d9c8e8d148e/5fac3e348dbd59b4765788f6_white-logo.svg",
          "maximum_reward": 251000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD  $251,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Bridge-Mutual/Bridgemutual-v2/tree/master",
              "type": "Smart Contract - BridgeMutual V2"
            },
            {
              "target": "https://etherscan.io/address/0x4cefb2f1509595b8f9ea073c1ac44abd42b283e9#code",
              "type": "Smart Contract - ContractsRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x725c263e32c72ddc3a19bea12c5a0479a81ee688#code",
              "type": "Smart Contract - BMIToken"
            },
            {
              "target": "https://etherscan.io/address/0xd4a3a0b872a90ffad288f624ea7e162caaf3dda3#code",
              "type": "Smart Contract - BMIStaking"
            },
            {
              "target": "https://etherscan.io/address/0xee4c79dffb0123e7a04021b2a934b9b34fab52a4#code",
              "type": "Smart Contract - LiquidityMiningStaking"
            },
            {
              "target": "https://etherscan.io/address/0x2887cfab266e5cf992fbef331f7ae1d019e8a29f",
              "type": "Smart Contract - STKBMIToken"
            },
            {
              "target": "https://etherscan.io/address/0x8050c5a46FC224E3BCfa5D7B7cBacB1e4010118d#code",
              "type": "Smart Contract - ContractsRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x725c263e32c72ddc3a19bea12c5a0479a81ee688#code",
              "type": "Smart Contract - BMI Token"
            },
            {
              "target": "https://etherscan.io/address/0x6771fd8968488eb590dff1730fe099c0efa415bf#code",
              "type": "Smart Contract - BMICoverStaking"
            },
            {
              "target": "https://etherscan.io/address/0xdfb820b95eee42a858f50befbf834d2d24621153#code",
              "type": "Smart Contract - BMIStaking"
            },
            {
              "target": "https://etherscan.io/address/0x87802101122ba906c36cb4556c066e7f67ca5fe1#code",
              "type": "Smart Contract - BMIUtilityNFT"
            },
            {
              "target": "https://etherscan.io/address/0xa71ef8b0f85a7f7df1cf00a4bf129c61c42aa81f#code",
              "type": "Smart Contract - ClaimVoting"
            },
            {
              "target": "https://etherscan.io/address/0x558d3c11891e67e0b36f5b2a8aa9b230ea96d9a5#code",
              "type": "Smart Contract - ClaimingRegistry"
            },
            {
              "target": "https://etherscan.io/address/0xfcc6bcc7b9a9a9cbf1c21cb6b80779221daf5e0b",
              "type": "Smart Contract - LiquidityMining"
            },
            {
              "target": "https://etherscan.io/address/0x49791b39b8cb01ad5f207c296123fd772d5c0d62",
              "type": "Smart Contract - LiquidityMiningStaking"
            },
            {
              "target": "https://etherscan.io/address/0xa3a5fe1d37da9cafae497f886be1f54aa171b445",
              "type": "Smart Contract - LiquidityRegistry"
            },
            {
              "target": "https://etherscan.io/address/0xe067e86cdcd0b3868ee660de380ebbe8d97e204d",
              "type": "Smart Contract - PolicyBookAdmin"
            },
            {
              "target": "https://etherscan.io/address/0xb956afc680395be3a58339c0eb12835438aa184c",
              "type": "Smart Contract - PolicyBookFabric"
            },
            {
              "target": "https://etherscan.io/address/0x1c5bb877d8f135db77fd8afb9103b43b4bf65c33",
              "type": "Smart Contract - PolicyBookRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x3823a2c98c69e920ff6062c141cf753f62403572",
              "type": "Smart Contract - PolicyQuote"
            },
            {
              "target": "https://etherscan.io/address/0x11db60680f72ce0d1e16e52d731c62732626c86d",
              "type": "Smart Contract - PolicyRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x3810464c2f68b8feacde5d067e666293e01a0eb6",
              "type": "Smart Contract - PriceFeed"
            },
            {
              "target": "https://etherscan.io/address/0x0140b5cca6954167a0d7f4d6d0b0a5ed5a982d6b",
              "type": "Smart Contract - ReinsurancePool"
            },
            {
              "target": "https://etherscan.io/address/0x02d6e7b09ff7b895cf8ba907b0a2a712f55ea07a",
              "type": "Smart Contract - ReputationSystem"
            },
            {
              "target": "https://etherscan.io/address/0x662c1d66075033a81ce7ad5ef164a1b1a2df8d8e",
              "type": "Smart Contract - RewardsGenerator"
            },
            {
              "target": "https://etherscan.io/address/0x2887cfab266e5cf992fbef331f7ae1d019e8a29f",
              "type": "Smart Contract - STKBMI Token"
            },
            {
              "target": "https://etherscan.io/address/0xceaf1bf80b117aedb2a2c68ad5ebcfca4479646d",
              "type": "Smart Contract - VBMI Token"
            },
            {
              "target": "https://etherscan.io/address/0xcbEFa9aa05a165652838fbC2297fa87b3278665D",
              "type": "Smart Contract - PolicyBook"
            }
          ],
          "mdx": {
            "program_overview": "Bridge Mutual is introducing a new version of it's platform (VERSION 2) in November 2021. Version 2 introduces a number of completely new features compared to Version 1 released in July 2021.\n\nThis bug bounty is oriented towards finding and delivering fixes for the V2 version of the code with the goal of providing maximum security levels upon the launch of V2.\n\nLearn more about Bridge Mutual Version 2 here: [tinyurl.com/m8ya488u](http://tinyurl.com/m8ya488u)\n\nBridge Mutual is a decentralized, discretionary coverage platform. It allows users to provide coverage to smart contracts, stablecoins and exchanges that they think are safe in return for yields and profit sharing. Likewise, other users may purchase coverage to protect their assets. Its platform allows users to provide coverage, decide on claim payouts, as well as get compensated for taking part in the ecosystem.\n\nFor more information about Bridge Mutual, please visit [https://www.bridgemutual.io/](https://www.bridgemutual.io/) \n\nThe bug bounty program covers its smart contracts and is focused on the prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the __Bridge Mutual__ team directly and are denominated in USD. Payouts less than or equal to __USD 1000__ are done in __USDC__. Payouts greater than that are done in __BMI__.\n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into consideration the amount of funds at risk but also PR and branding effects, though only at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThis bug bounty program has an overall pool cap of __USD 2 000 000__. In the event of multiple active reports going above the pool cap, the rewards are distributed on a first-come- first-serve basis. This pool cap will be updated as rewards are paid out.",
            "assets_body": "The vulnerabilities found in [this document](https://docs.google.com/document/d/1SiDNH7McNQGAwZ_0PoypaMc3lCi1BlT4hE0yORrTSm0/edit?usp=sharing) are considered out-of-scope for the bug bounty program, even if they affect assets in this table.\n\nIn the BridgeMutual V2 GitHub link, all files with “Mock” or inside a folder with the label “Mock”, are out of scope.\n\nFor additional reference, you can find their GitHub here - [https://github.com/Bridge-Mutual/bridgemutual-public](https://github.com/Bridge-Mutual/bridgemutual-public). However, only the contracts in the assets in scope table are considered as in-scope of this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "moonwell",
          "project": "Moonwell",
          "date": "2022-02-15T21:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2HBJ4TAgJpFffmwV1yDnXj/a2c8b270ebcf4628c9b59c106347cf93/Moonwell_Logo.png",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $100,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://moonriver.moonscan.io/address/0x0b7a0EAA884849c6Af7a129e899536dDDcA4905E",
              "type": "Smart Contract - Unitroller"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x8529ea4DBDcA738aA928d682ea9c1382Bf2Ff098",
              "type": "Smart Contract - Comptroller"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x1650C0AD9483158f9e240fd58d0E173807A80CcC",
              "type": "Smart Contract - Maximillion"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x892bE716Dcf0A6199677F355f45ba8CC123BAF60",
              "type": "Smart Contract - ChainlinkOracle"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0xC862A3af64a8d3C146E6c505a18c2B6c6a6601bf",
              "type": "Smart Contract - JumpRateModel"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x6a1A771C7826596652daDC9145fEAaE62b1cd07f",
              "type": "Smart Contract - Moonwell MOVR"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x6E745367F4Ad2b3da7339aee65dC85d416614D90",
              "type": "Smart Contract - Moonwell BTC"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x6503D905338e2ebB550c9eC39Ced525b612E77aE",
              "type": "Smart Contract - Moonwell ETH"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0xd0670AEe3698F66e2D4dAf071EB9c690d978BFA8",
              "type": "Smart Contract - Moonwell USDC"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x36918B66F9A3eC7a59d0007D8458DB17bDffBF21",
              "type": "Smart Contract - Moonwell USDT"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x93Ef8B7c6171BaB1C0A51092B2c9da8dc2ba0e9D",
              "type": "Smart Contract - Moonwell FRAX"
            },
            {
              "target": "https://moonriver.moonscan.io/token/0xbb8d88bcd9749636bc4d2be22aac4bb3b01a58f1",
              "type": "Smart Contract - MFAM Token"
            },
            {
              "target": "http://moonwell.fi",
              "type": "Web/App"
            },
            {
              "target": "https://moonwell.fi/apollo",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Moonwell is an open lending, borrowing, and decentralized finance protocol built on Moonbeam and Moonriver. Moonwell’s composable design can accommodate a full range of DeFi applications in the greater Polkadot and Kusama (DotSama) ecosystem.\n\nFor more information about Moonwell, please visit [https://moonwell.fi/](https://moonwell.fi/). \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Loss of protocol or user funds\n  - Smart contract vulnerabilities\n  - Denial of service issues\n  - Infrastructure vulnerabilities\n  - Social media administrative control breaches",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nAll known issues previously highlighted in the following audit report is considered out of scope: \n  - [https://github.com/HalbornSecurity/PublicReports/blob/master/Solidity%20Smart%20Contract%20Audits/Moonwell_Finance_Smart_Contract_Security_Audit_Report_Halborn_Final.pdf ](https://github.com/HalbornSecurity/PublicReports/blob/master/Solidity%20Smart%20Contract%20Audits/Moonwell_Finance_Smart_Contract_Security_Audit_Report_Halborn_Final.pdf)\n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 100 000__ for Critical bug reports. \n\nPayouts are handled by the __Moonwell__ team directly and are denominated in USD. Payouts will be done in __USDC__ or __USDT__, at the discretion of the team. ",
            "assets_body": null,
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds by permanent freezing or direct theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 hour\n  - Inability to call smart contract\n  - Smart contract gas drainage\n  - Smart contract emissions manipulation vulnerabilities\n  - Governance vote manipulation\n  - Incorrect polling actions or sequence\n\n__Web/App__\n\n  - Denial of service for the website or access mechanisms to the Moonwell Protocol\n  - DNS, routing, or proxy hijacking issues\n  - Defacement or content manipulation vulnerabilities (including XSS or clickjacking where a user can be tricked into a loss-of-funds event)\n  - Unpatched and vulnerable software running the Moonwell infrastructure (3rd party providers are out of scope) which can be abused to manipulate content\n  - Any other issues allowing an attacker to manipulate content on moonwell.fi leading to a user losing funds or interacting with malicious contracts inadvertently",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - 3rd party services (AWS, Datadog, etc)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ondofinance",
          "project": "Ondo Finance",
          "date": "2022-01-25T22:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1pMdyya54YnFbhOraeMjkB/9c85995591b2ad493f41cf68fa9960c1/Ondo_Logo.jpg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x2BB8de958134AFd7543d4063CaFAD0b7c6de08BC",
              "type": "Smart Contract - AllPairVault"
            },
            {
              "target": "https://etherscan.io/address/0xf69C52Bf2CF76250647C0bb5390d4ba8854a1d4a",
              "type": "Smart Contract - Registry"
            },
            {
              "target": "https://etherscan.io/address/0x104cf83C1899598d7cF60fbf3f60777e5B373bc0",
              "type": "Smart Contract - Sushi V2 Staking"
            },
            {
              "target": "https://etherscan.io/address/0xb279d1ed3848cee8ba6dba426be620a289ccef10",
              "type": "Smart Contract - TrancheToken"
            },
            {
              "target": "https://etherscan.io/address/0x63ac60C9288d863cc4e35FC27456000ce4a48e64",
              "type": "Smart Contract - UniswapStrategy1"
            },
            {
              "target": "https://etherscan.io/address/0x5ee54bffd7bb35d8f27d5d1068d637ea3d3076aa",
              "type": "Smart Contract - UniswapStrategy2"
            },
            {
              "target": "https://etherscan.io/address/0x9d9ba567dd13a6ec56f116bedc3fff68eea30fe3",
              "type": "Smart Contract - UniswapStrategy3"
            },
            {
              "target": "https://etherscan.io/address/0x76750e4D709CFA3577b75e1FB04a827867e9E6Bb",
              "type": "Smart Contract - UniswapStrategy4"
            },
            {
              "target": "https://etherscan.io/address/0x855f366525a11af5d35967c0e7f14661133365bb",
              "type": "Smart Contract - UniswapStrategy5"
            },
            {
              "target": "https://etherscan.io/address/0xE559F428a2386B4eED30a8C9273091A5B3D5AE4B",
              "type": "Smart Contract - UniswapStrategy6"
            },
            {
              "target": "https://etherscan.io/address/0x5A93f0C33E48BaF6b436486EFE8e83345aA49780",
              "type": "Smart Contract - UniswapStrategy7"
            }
          ],
          "mdx": {
            "program_overview": "Ondo Finance allows crypto-asset investors to trade the risk and reward balance of pooled assets. Existing yield in crypto-asset markets is in the form of volatile rates derived from a complex source of inputs. Ondo significantly broadens the investor base that can capitalize on these yields by establishing fixed yield positions with reduced risk and comprehensible exposure, while simultaneously providing new forms of leveraged exposure to experienced crypto-asset investors.\n\nIn this implementation, Ondo restricts investors into two groups: fixed and variable yield positions. The fixed yield position will receive a fixed percentage over its initial investment. The variable tranche will receive all excess returns after the fixed yield receives its payout.\n\nFor more information about Ondo Finance, please visit [https://ondo.finance/](https://ondo.finance/).   \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and losses of principal of any amount\n  - Thefts and losses of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Critical and High severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nOndo Finance occasionally uses feature flags in their contracts. All disabled features will be considered out-of-scope. \n\nFor the TrancheToken contract with deployment address: 0xb279d1ed3848cee8ba6dba426be620a289ccef10, only bugs that can directly affect existing users with provided proof are considered as in-scope. Bugs involving functionality that is not currently used are not in-scope.\n\nCritical vulnerabilities are further capped at 10% of economic damage, up to $250,000, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 25 000__ for Critical bug reports. \n\nPayouts are handled by the __Ondo Finance__ team directly and are denominated in USD. However, payouts are done in __USDC__, __BTC__ or __ETH__, at the discretion of the team.",
            "assets_body": "All smart contracts of Ondo Finance can be found at [https://github.com/ondoprotocol/ondo-protocol](https://github.com/ondoprotocol/ondo-protocol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Any sort of theft/loss of funds (principal vs. yield; user vs. protocol; bug vs. economic exploits; etc)\n  - Any accounting/economic/financial bugs\n  - Any bug where the admin loses control of the contract (e.g. cannot use administrative functions)\n  - Any bug related to role misappropriation (e.g. role escalation) – Ondo uses Open Zeppelin’s RBAC library",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "furucombo",
          "project": "FURUCOMBO",
          "date": "2022-01-25T21:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2EePaIGoyGaflyKxP7XRhW/ba793ab57b3a82ab439107d4f4d4e378/Furucombo_logo.jpeg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/Proxy.sol",
              "type": "Smart Contract - Proxy"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/Registry.sol",
              "type": "Smart Contract - Registry"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/compound/HCEther.sol",
              "type": "Smart Contract - HCEther"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/compound/HCToken.sol",
              "type": "Smart Contract - HCToken"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/maker/HMaker.sol",
              "type": "Smart Contract - HMaker"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/uniswapv2/HUniswapV2.sol",
              "type": "Smart Contract - HUniswapV2"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/compound/HComptroller.sol",
              "type": "Smart Contract - HComptroller"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/funds/HFunds.sol",
              "type": "Smart Contract - HFunds"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/curve/HCurve.sol",
              "type": "Smart Contract - HCurve"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/weth/HWeth.sol",
              "type": "Smart Contract - HWeth"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/curve/HCurveDao.sol",
              "type": "Smart Contract - HCurveDao"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/yearn/HYVault.sol",
              "type": "Smart Contract - HYVault"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/gastokens/HGasTokens.sol",
              "type": "Smart Contract - HGasToken"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/compound/HSCompound.sol",
              "type": "Smart Contract - HSCompound"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/furucombo/HFurucomboStaking.sol",
              "type": "Smart Contract - HFurucomboStaking"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/aavev2/HAaveProtocolV2.sol",
              "type": "Smart Contract - HAaveProtocolV2"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/staking/HStakingRewardsAdapter.sol",
              "type": "Smart Contract - HStakingRewardsAdapter"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/sushiswap/HSushiSwap.sol",
              "type": "Smart Contract - HSushiSwap"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/bprotocol/HBProtocol.sol",
              "type": "Smart Contract - HBProtocol"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/furucombo/HFurucomboRCOMBO.sol",
              "type": "Smart Contract - HFurucomboRCOMBO"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/uniswapv3/HUniswapV3.sol",
              "type": "Smart Contract - HUniswapV3"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/gelatov2/HGelatoV2LimitOrder.sol",
              "type": "Smart Contract - HGelatoV2LimitOrder"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/polygon/HPolygon.sol",
              "type": "Smart Contract - HPolygon"
            },
            {
              "target": "https://github.com/dinngodev/furucombo-contract/blob/master/contracts/handlers/oneinchV3/HOneInchV3.sol",
              "type": "Smart Contract - HOneInchV3"
            }
          ],
          "mdx": {
            "program_overview": "Furucombo is the cornerstone of trading strategies where users can track the movement of funds by following the transactions on the Furucombo proxy contract. This means one can maximize their profits or develop ideas about a unique strategy by monitoring what other trendy strategies are being developed.\n\nOn top of that, we are introducing Furucombo V2 Prime, where investors can invest in the top DeFi strategies directly without managing the execution themselves. This allows users to take advantage of the highest yields around the ecosystem right from one sleek and easy-to-use interface.\nFor more information about Furucombo, please visit https://furucombo.app/. \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds during a transaction by freezing or theft\n  - Loss of user funds approved to smart contracts by theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Interaction with unauthorized handler logic\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Low, Medium, High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nAll vulnerabilities found in [https://github.com/dinngodev/furucombo-contract/tree/master/audit](https://github.com/dinngodev/furucombo-contract/tree/master/audit) are not eligible for a reward.\n\nFURUCOMBO requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Name and Email Address. The collection of this information will be done by the FURUCOMBO team.\n\nPayouts are handled by the __FURUCOMBO__ team directly and are denominated in USD. However, payouts are done in __ETH, DAI, USDC and COMBO__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. ",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds during a transaction by freezing or theft\n  - Loss of user funds approved to smart contracts by theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Interaction with unauthorized handler logic",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\nAttacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)\n\nSmart Contracts and Blockchain\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "revault",
          "project": "Revault",
          "date": "2021-12-28T12:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/VbojL1eCqoPLxoJ0XhWxe/67e1a2165c89977de7b69ab1c7a4194b/revault.jpeg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B#code",
              "type": "Smart Contract - REVA Token"
            },
            {
              "target": "https://bscscan.com/address/0x774D9103dc027b707812aCF0e0B40A34DcAeF658#code",
              "type": "Smart Contract - vREVA Token"
            },
            {
              "target": "https://bscscan.com/address/0x7647C329AdDf5a88E3290C0a2C64CFD0e1e68152#code",
              "type": "Smart Contract - vREVA Token Deployment"
            },
            {
              "target": "https://bscscan.com/address/0xd7550285532f1642511b16Df858546F2593d638B#code",
              "type": "Smart Contract - Reva Chef (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x5ad9b8732ee6745ba6b73ba51e3495b1f18d00d0#code",
              "type": "Smart Contract - Reva Chef (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd#code",
              "type": "Smart Contract - Revault (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0xa4c23fb11eae7741fb897a1ea071024d4461b065#code",
              "type": "Smart Contract - Revault (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0xEdA62c8710F245463cE362a5E52Fa3B046E0fd0d#code",
              "type": "Smart Contract - REVA Fee Receiver (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x8b106d0fe071988ceda949536d3980114a271e9a#code",
              "type": "Smart Contract - REVA Fee Receiver (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0xa66aF20F23AB0e5eeD726f62AE60ea58D25960C8#code",
              "type": "Smart Contract - REVA LP Fee Receiver (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x8b106d0fe071988ceda949536d3980114a271e9a#code",
              "type": "Smart Contract - REVA LP Fee Receiver (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A#code",
              "type": "Smart Contract - REVA Staking Pool (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x7037cc15a917772007e26299256ebe2a6af1c88d#code",
              "type": "Smart Contract - REVA Staking Pool (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x785ffB6e2825E62d1416B17659Bb728667caBe2c#code",
              "type": "Smart Contract - REVA LP Staking Pool (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0xe47bbe5eb6836eb75da646177f933a813012a6e4#code",
              "type": "Smart Contract - REVA LP Staking Pool (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0xc01123Bb1b01B3540eDD270F2FA5DBCD66292BE6#code",
              "type": "Smart Contract - Zap (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0xfc45658563671b83f2adab376e785bee6fd1733b#code",
              "type": "Smart Contract - Zap (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x141683F38A13b3311098A28C91898BA0dA651cfB#code",
              "type": "Smart Contract - ZapAndDeposit (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x4c2d2f29cf6ef07cb6f0473642006797818ba1f1#code",
              "type": "Smart Contract - ZapAndDeposit (Implementation)"
            },
            {
              "target": "https://www.bscscan.com/address/0xe8f1CDa385A58ae1C1c1b71631dA7Ad6d137d3cb#read",
              "type": "Smart Contract - REVA autocompund Stacking Pool (Proxy)"
            },
            {
              "target": "https://www.bscscan.com/address/0xc1d945ffe55d21f33bb1800e9a650dd5ff0906e7#code",
              "type": "Smart Contract - REVA autocompund Stacking Pool (Implementation)"
            }
          ],
          "mdx": {
            "program_overview": "Revault brings the power of easy search navigation to the DeFi ecosystem, enabling anyone to find and deposit funds in the best performing vaults on any blockchain at any given time.\n\nThe REVA token incentivizes users to use Revault as their go-to gateway to DeFi. Using Revault, users will receive all the rewards from their selected vault plus rewards of our REVA tokens, making depositing through Revault’s search & maximize engine the best choice for any asset. Revault simply relays funds — they don’t compete with other vault projects on strategies or APY. \n\nFor more information about Revault, please visit [https://www.revault.network/](https://www.revault.network/).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nFor  smart contract bugs, a PoC must be provided for High and Critical vulnerabilities, and a suggestion for a fix must be provided for Medium smart contract bug reports and higher.\n\nPlease note that all resolved issues, and any open or partially resolved issues from either of our audits ([Certik](https://www.certik.com/projects/revault-network), [Paladin](https://paladinsec.co/projects/revault-network/)) are out of the scope of the bug bounty.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports. \n\nPayouts are handled by the __Revault__ team directly and are denominated in USD. However, payouts are done in __BUSD__ or __REVA__, at the discretion of the team.",
            "assets_body": "Further information about Revault can be found at [https://github.com/Revault-network](https://github.com/Revault-network). However, only those in the assets in scope table are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "marinade",
          "project": "Marinade",
          "date": "2021-12-01T12:30-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2frWdK3ryfQBfzOadBi4xf/4a0a61ac6b3dccfb39bf6474b2e09f1f/Marinade_icon_white.png",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $15,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/marinade-finance/liquid-staking-program",
              "type": "Smart Contracts"
            }
          ],
          "mdx": {
            "program_overview": "Marinade.Finance is the first non-custodial liquid staking protocol built on Solana. You can stake your SOL tokens with Marinade and receive \"marinated SOL\" tokens (mSOL) that you can use in decentralized finance (DeFi).\n\nThe price of mSOL goes up relative to SOL each epoch, with rewards being accrued into the underlying staked SOL. Marinade stakes in 400+ validators that are selected automatically by an open-source fair formula based on performance, commission and decentralization.\n\nMarinade includes mSOL->SOL swap, so you can “Unstake Now!” and receive your SOL immediately with a small fee. You can also directly exchange between mSOL and SOL on secondary markets at the current rate. Finally, you can unstake your SOL with zero-fee by waiting 4-6 days for the Solana cool-down period (delayed-unstake). \n\nAs of November 2021, Marinade’s TVL is around 1.5b USD\n\nFor more information about Marinade Finance, please visit [https://marinade.finance/](https://marinade.finance/) and [https://docs.marinade.finance](https://docs.marinade.finance) \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nPayouts are handled by the __Marinade Finance__ team directly and are denominated in USD. However, payouts are done in __mSOL__ and __MNDE__.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 6 days (2 epochs)\n  - Unable to call smart contract",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\nAttacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "origindollarousd",
          "project": "Origin Dollar (OUSD)",
          "date": "2021-11-22T01:15-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/vnibB6fbR7hfXGN73S247/1f539c58b51eb6aedfb6cab8b17b8c82/Origin_Dollar_Logo__1_.jpeg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x2A8e1E676Ec238d8A992307B495b45B3fEAa5e86",
              "type": "Smart Contract - OUSD"
            },
            {
              "target": "https://etherscan.io/address/0xe75d77b1865ae93c7eaa3040b038d7aa7bc02f70",
              "type": "Smart Contract - Vault"
            },
            {
              "target": "https://etherscan.io/address/0xa7695eED05094E28AA575CB0cCa3CF17848a7981",
              "type": "Smart Contract - Oracle Router"
            },
            {
              "target": "https://etherscan.io/address/0x5e3646A1Db86993f73E6b74A57D8640B69F7e259",
              "type": "Smart Contract - Aave Strategy"
            },
            {
              "target": "https://etherscan.io/address/0x9c459eeb3FA179a40329b81C1635525e9A0Ef094",
              "type": "Smart Contract - Compound Strategy"
            },
            {
              "target": "https://etherscan.io/address/0xea2ef2e2e5a749d4a66b41db9ad85a38aa264cb3",
              "type": "Smart Contract - Convex Strategy"
            },
            {
              "target": "https://etherscan.io/address/0x72426BA137DEC62657306b12B1E869d43FeC6eC7",
              "type": "Smart Contract - Governor / Timelock"
            },
            {
              "target": "https://etherscan.io/address/0x77314EB392b2be47C014cde0706908b3307Ad6a9",
              "type": "Smart Contract - OGN Buyback"
            },
            {
              "target": "https://etherscan.io/address/0x501804B374EF06fa9C427476147ac09F1551B9A0",
              "type": "Smart Contract - OGN Staking"
            },
            {
              "target": "https://etherscan.io/address/0xcecaD69d7D4Ed6D52eFcFA028aF8732F27e08F70",
              "type": "Smart Contract - OUSD Swap"
            },
            {
              "target": "https://www.ousd.com/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Created by cryptocurrency and fintech veterans, the Origin Dollar is brought to you by the team at Origin Protocol that includes serial entrepreneurs, early cryptocurrency investors, early employees at YouTube, engineering managers at Google/Dropbox, and one of the Paypal co-founders, Yu Pan.\n\nOrigin Dollar (OUSD) is a new, fully backed stablecoin that was initially launched in September 2020 on the Ethereum network. Its design is superior to existing stablecoins because OUSD captures competitive yields while being passively held in wallets.\n\nFor more information about Origin Dollar, please visit [https://www.ousd.com/](https://www.ousd.com/).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of funds\n  - Loss of more than 10% of yield\n  - Freezing of funds that cannot be undone by admin actions\n  - Ability for an unauthorized user to use admin actions\n  - Governance process failures\n  - Redirected funds by address modification\n  - Shell access on server\n  - Injection of text\n  - Ability to have other users run arbitrary code on the site",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract and Web/app bug reports must come with a PoC in order to be considered for a reward.\n\nThe known issues listed below are considered out of scope: \n\n  - All issues found in their past audits here: [https://docs.ousd.com/security-and-risks/audits](https://docs.ousd.com/security-and-risks/audits)\n\n  - OUSD does not guarantee which stablecoins will make up the backing stablecoins nor the value of those backing stable coins. Attacks which only change the mix of stablecoins, but do not reduce the total number of stablecoins held are excluded.\n\n  - Reductions in the number of backing stablecoins due to governance or strategist actions that move coins into or out of strategies, where the reduction comes from the normal fees of the underlying strategy or the price difference of stablecoins being moved in or out are excluded.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports on smart contracts. \n\nPayouts are handled by the __Origin Protocol__ team directly and are denominated in USD. However, payouts are done in __OUSD__.",
            "assets_body": "In addition, the current implementation contracts of all the listed proxy contracts are in scope. \n\nAll smart contracts of Origin Dollar can be found at [https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts](https://github.com/OriginProtocol/origin-dollar/tree/master/contracts/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of funds\n  - Loss of more than 10% of yield\n  - Freezing of funds that cannot be undone by admin actions and last more than 24 hours\n  - Ability for an unauthorized user to use admin actions\n  - Governance process failures\n\n__Web/App__\n\n  - Theft of user funds\n  - Redirected funds by address modification\n  - Shell access on server\n  - Injection of text\n  - Ability to have other users run arbitrary code on the site",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n   - including flash loan attacks\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "barnbridge",
          "project": "BarnBridge",
          "date": "2021-08-05T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5NnnF8iwtc0IlCWjlAlTi3/eac832a9c5b36c87cd6dc67142bde758/BarnBridge.jpeg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xb0Fa2BeEe3Cf36a7Ac7E99B885b48538Ab364853",
              "type": "Smart Contract - Yield Farming Staking contract"
            },
            {
              "target": "https://etherscan.io/address/0xA3C299eEE1998F45c20010276684921EBE6423D9",
              "type": "Smart Contract - Yield Farming Community Vault"
            },
            {
              "target": "https://etherscan.io/address/0xC25c37c387C5C909a94055F4f16184ca325D3a76",
              "type": "Smart Contract - Yield Farming Pool2 (BOND/USDC LP Pool)"
            },
            {
              "target": "https://etherscan.io/address/0x10e138877df69ca44fdc68655f86c88cde142d7f",
              "type": "Smart Contract - DAO & Governance - Barn"
            },
            {
              "target": "https://etherscan.io/address/0x4cAE362D7F227e3d306f70ce4878E245563F3069",
              "type": "Smart Contract - DAO Governance & Treasury"
            },
            {
              "target": "https://etherscan.io/address/0x9d0CF50547D848cC4b6A12BeDCF7696e9b334a22",
              "type": "Smart Contract - DAO & Governance - DAO Rewards"
            },
            {
              "target": "https://etherscan.io/address/0x4454c6Cce1CF066f7E773a686A7fC6c8142A9ebd",
              "type": "Smart Contract - SMART Yield cDAI bondModel"
            },
            {
              "target": "https://etherscan.io/address/0xe6c1A8E7a879d7feBB8144276a62f9a6b381bd37",
              "type": "Smart Contract - SMART Yield cDAI compoundProvider"
            },
            {
              "target": "https://etherscan.io/address/0x673f9488619821aB4f4155FdFFe06f6139De518F",
              "type": "Smart Contract - SMART Yield cDAI smartYield (bb_cDAI)"
            },
            {
              "target": "https://etherscan.io/address/0x7785d69512296eC83634C283C923719E2306d133",
              "type": "Smart Contract - SMART Yield cDAI seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x7F46E3cA055d3Fe08Cc5C1bFB9C4995E7de36fa3",
              "type": "Smart Contract - SMART Yield cDAI juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0xaA963524E65c671EF7A5485ADF9e342C401A46fF",
              "type": "Smart Contract - SMART Yield cDAI controller"
            },
            {
              "target": "https://etherscan.io/address/0x6B9eE6C8B24dcd1A1e7D7B64D7b2867e30151b78",
              "type": "Smart Contract - SMART Yield cDAI oracle"
            },
            {
              "target": "https://etherscan.io/address/0x02A83b64466333F227303407d37c7e8e8fefd5b6",
              "type": "Smart Contract - SMART Yield cUSDC bondModel"
            },
            {
              "target": "https://etherscan.io/address/0xDAA037F99d168b552c0c61B7Fb64cF7819D78310",
              "type": "Smart Contract - SMART Yield cUSDC compoundProvider"
            },
            {
              "target": "https://etherscan.io/address/0x4B8d90D68F26DEF303Dcb6CFc9b63A1aAEC15840",
              "type": "Smart Contract - SMART Yield cUSDC smartYield (bb_cUSDC)"
            },
            {
              "target": "https://etherscan.io/address/0xa7382ebCca0602Df60833B612476B20d631555De",
              "type": "Smart Contract - SMART Yield cUSDC seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x6Fbfa597575e152c683AF7d8D6349904Bb4a8d3D",
              "type": "Smart Contract - SMART Yield cUSDC juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x41Ab25709e0C3EDf027F6099963fE9AD3EBaB3A3",
              "type": "Smart Contract - SMART Yield cUSDC controller"
            },
            {
              "target": "https://etherscan.io/address/0xbd45Dba10b4E2A81040b7511FF4c210Eb590b817",
              "type": "Smart Contract - SMART Yield cUSDC oracle"
            },
            {
              "target": "https://etherscan.io/address/0xbea4E317B4C3e8951D3e70Cb04F4fc50ee447cBb",
              "type": "Smart Contract - SMART Yield crDAI bondModel"
            },
            {
              "target": "https://etherscan.io/address/0x37923EB0F4a9097B2774eAB9D928AFaD6196cf76",
              "type": "Smart Contract - SMART Yield crDAI provider"
            },
            {
              "target": "https://etherscan.io/address/0x89d82FdF095083Ded96B48FC6462Ed5dBD14151f",
              "type": "Smart Contract - SMART Yield crDAI smartYield"
            },
            {
              "target": "https://etherscan.io/address/0xf08EDBd80C61E024121F3E2EB9f819f2f46A8dC6",
              "type": "Smart Contract - SMART Yield crDAI seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x831F05aE69EAAAAe5c91B7b9A3Cf5186716F371b",
              "type": "Smart Contract - SMART Yield crDAI juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0xA7DaD944581638ad570ce50E3E66E8cDEa4f78Ba",
              "type": "Smart Contract - SMART Yield crDAI controller"
            },
            {
              "target": "https://etherscan.io/address/0xF3fCfd7C8b64591ADbCE4cb893caDe8b9ad2BE37",
              "type": "Smart Contract - SMART Yield crDAI oracle"
            },
            {
              "target": "https://etherscan.io/address/0x97E9bba296d661a979A82176ABC50EB0FC65Fd31",
              "type": "Smart Contract - SMART Yield crUSDC bondModel"
            },
            {
              "target": "https://etherscan.io/address/0xA4f8310CD972b1fc3CA9F130b235A91bc882baDb",
              "type": "Smart Contract - SMART Yield crUSDC provider"
            },
            {
              "target": "https://etherscan.io/address/0x62e479060c89C48199FC7ad43b1432CC585BA1b9",
              "type": "Smart Contract - SMART Yield crUSDC smartYield"
            },
            {
              "target": "https://etherscan.io/address/0xcD8012DAb23b9A9E849e61fc44062E774050c93f",
              "type": "Smart Contract - SMART Yield crUSDC seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0xAc12EE813B60404701F65E9FeC6A12Ec01b0B1E2",
              "type": "Smart Contract - SMART Yield crUSDC juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x4594BAb27825d662064d20Eb8Eb75195c5D98C8B",
              "type": "Smart Contract - SMART Yield crUSDC controller"
            },
            {
              "target": "https://etherscan.io/address/0xc9e24B9ff1969714C3049CF31f40A483c0070143",
              "type": "Smart Contract - SMART Yield crUSDC oracle"
            },
            {
              "target": "https://etherscan.io/address/0xeAA0d16960909050a1B9f6CC91986d2CA343C1B0",
              "type": "Smart Contract - SMART Yield crUSDT bondModel"
            },
            {
              "target": "https://etherscan.io/address/0x7B1E1A841afE589F1b5337a2Eec41A18a58475Be",
              "type": "Smart Contract - SMART Yield crUSDT provider"
            },
            {
              "target": "https://etherscan.io/address/0xc45F49bE156888a1C0C93dc0fE7dC89091E291f5",
              "type": "Smart Contract - SMART Yield crUSDT smartYield"
            },
            {
              "target": "https://etherscan.io/address/0x3316c919E0Fd26500627Bf7D0FB12150BCE60cfF",
              "type": "Smart Contract - SMART Yield crUSDT seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x705ae5A358FDbEE6c2B652446AcB10D8bC57029e",
              "type": "Smart Contract - SMART Yield crUSDT juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0xceE88909be73D07d557EF2648ab60F7c8C90ac9f",
              "type": "Smart Contract - SMART Yield crUSDT controller"
            },
            {
              "target": "https://etherscan.io/address/0x86cAAE275d44BA32CC813415bacFbEA68E1C4443",
              "type": "Smart Contract - SMART Yield crUSDT oracle"
            },
            {
              "target": "https://etherscan.io/address/0x6391251c2eecE392C4b168f8b2fee119563Eb340",
              "type": "Smart Contract - SMART Yield aDAI bondModel"
            },
            {
              "target": "https://etherscan.io/address/0x372d02e58a8Fcf42114232F614D57f31401d4C7D",
              "type": "Smart Contract - SMART Yield aDAI provider"
            },
            {
              "target": "https://etherscan.io/address/0x6c9DaE2C40b1e5883847bF5129764e76Cb69Fc57",
              "type": "Smart Contract - SMART Yield aDAI smartYield"
            },
            {
              "target": "https://etherscan.io/address/0x295f257E1D12013E4431eF04fd75b453401C7B40",
              "type": "Smart Contract - SMART Yield aDAI seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x4a8F559fe216ae733e5cA2F02DFfB3527eD082B5",
              "type": "Smart Contract - SMART Yield aDAI juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x26984a19e3C6FC8D3e8Ff124CD72D71f6B603Ff3",
              "type": "Smart Contract - SMART Yield aDAI controller"
            },
            {
              "target": "https://etherscan.io/address/0xe372492E067A1A1a01724Fee946bc87b76b88933",
              "type": "Smart Contract - SMART Yield aDAI oracle"
            },
            {
              "target": "https://etherscan.io/address/0x68eeab3Fb9CFE7a15F19F3294127A396AF650D93",
              "type": "Smart Contract - SMART Yield aGUSD bondModel"
            },
            {
              "target": "https://etherscan.io/address/0x5cFcFb6171db72a26b84bc50EdD2d80b0F3fc094",
              "type": "Smart Contract - SMART Yield aGUSD provider"
            },
            {
              "target": "https://etherscan.io/address/0x6324538cc222b43490dd95CEBF72cf09d98D9dAe",
              "type": "Smart Contract - SMART Yield aGUSD smartYield"
            },
            {
              "target": "https://etherscan.io/address/0x19D1c0f25dE323D8BE208fba7DaDDa680297b2f0",
              "type": "Smart Contract - SMART Yield aGUSD seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x0EfC5AcFC571B4C3DFfc622627A45aD4A88361aC",
              "type": "Smart Contract - SMART Yield aGUSD juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x2ff662a35e7f66Adc10469ddbA3cD45A62854718",
              "type": "Smart Contract - SMART Yield aGUSD controller"
            },
            {
              "target": "https://etherscan.io/address/0x48e5df54c67fe31f6aDb0cB39Ef9f4410B02B3f4",
              "type": "Smart Contract - SMART Yield aGUSD oracle"
            },
            {
              "target": "https://etherscan.io/address/0x84fa1FC288DD944a73C172A930497ed3358830BE",
              "type": "Smart Contract - SMART Yield aUSDC bondModel"
            },
            {
              "target": "https://etherscan.io/address/0x99230f93135f3650ab5706b7B6D4B30b4EE961C9",
              "type": "Smart Contract - SMART Yield aUSDC provider"
            },
            {
              "target": "https://etherscan.io/address/0x3cf46DA7D65E9aa2168a31b73dd4BeEA5cA1A1f1",
              "type": "Smart Contract - SMART Yield aUSDC smartYield"
            },
            {
              "target": "https://etherscan.io/address/0x4C745B67a96b44DCB8e8416731D74451425AaFF9",
              "type": "Smart Contract - SMART Yield aUSDC seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0xD0C453CECAaf2daAC14562e1b342d198C5D790d2",
              "type": "Smart Contract - SMART Yield aUSDC juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x39A84FcF5C22f227f2108a9d214090EE4C334893",
              "type": "Smart Contract - SMART Yield aUSDC controller"
            },
            {
              "target": "https://etherscan.io/address/0x6A3D2A96507a6F35dD030725AeD4A3f8Ef07b0a7",
              "type": "Smart Contract - SMART Yield aUSDC oracle"
            },
            {
              "target": "https://etherscan.io/address/0x276Fe92189799e484286Ef6Ab5d3d4827a4697bD",
              "type": "Smart Contract - SMART Yield aUSDT bondModel"
            },
            {
              "target": "https://etherscan.io/address/0xbF5649526aa1DC1dAA82ED29dDc65149278CA5d8",
              "type": "Smart Contract - SMART Yield aUSDT provider"
            },
            {
              "target": "https://etherscan.io/address/0x660dAF6643191cF0eD045B861D820F283cA078fc",
              "type": "Smart Contract - SMART Yield aUSDT smartYield"
            },
            {
              "target": "https://etherscan.io/address/0xc61155E5AE3Dac16bb461dbA62c59BAAdDf69C20",
              "type": "Smart Contract - SMART Yield aUSDT seniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x3591e1736050367B755Ee73296236A96fDD8C6eD",
              "type": "Smart Contract - SMART Yield aUSDT juniorBond"
            },
            {
              "target": "https://etherscan.io/address/0x1050716f239e13A803B7D1BA55b187303B14374a",
              "type": "Smart Contract - SMART Yield aUSDT controller"
            },
            {
              "target": "https://etherscan.io/address/0xf59ea412FFe3B70264590abCA47a107E63A323a0",
              "type": "Smart Contract - SMART Yield aUSDT oracle"
            },
            {
              "target": "https://etherscan.io/address/0x27FE2BFBb6be96D64Db0e741078A1f29Aa20226B",
              "type": "Smart Contract - SMART Yield Reward Pools Single Factory"
            },
            {
              "target": "https://etherscan.io/address/0x68Af34129755091E22F91899cEAC48657e5a5062",
              "type": "Smart Contract - SMART Yield Reward Pools cUSDC"
            },
            {
              "target": "https://etherscan.io/address/0x707c1bD52C4718BF040f350F7FE6ba0AdB484E8d",
              "type": "Smart Contract - SMART Yield Reward Pools crDAI"
            },
            {
              "target": "https://etherscan.io/address/0x7f7D4dFd9733ae12e6a5991d42aF16418f227b6E",
              "type": "Smart Contract - SMART Yield Reward Pools crUSDC"
            },
            {
              "target": "https://etherscan.io/address/0xEA32E4E751D49757906E1153eF7A30fCAb1b6462",
              "type": "Smart Contract - SMART Yield Reward Pools crUSDT"
            },
            {
              "target": "https://etherscan.io/address/0x53a44A97cD2E9fb9d92ADe742a3C284695A4d72e",
              "type": "Smart Contract - SMART Yield Reward Pools Multi Factory"
            },
            {
              "target": "https://etherscan.io/address/0x69951B60B6253697F29c8311bFcEA6Da09BBac0d",
              "type": "Smart Contract - SMART Yield Reward Pools aDAI"
            },
            {
              "target": "https://etherscan.io/address/0xF4bde50CdF4ee4CF3FB8702fceb6fD499A92792d",
              "type": "Smart Contract - SMART Yield Reward Pools aUSDC"
            },
            {
              "target": "https://etherscan.io/address/0x51d924bF2FF813a68BD5f86Cdcc98918f2AE5868",
              "type": "Smart Contract - SMART Yield Reward Pools aUSDT"
            },
            {
              "target": "https://etherscan.io/address/0xEAdFc8b994BF3eE23dC0033e6f11dEe4b166672E",
              "type": "Smart Contract - SMART Yield Reward Pools aGUSD"
            },
            {
              "target": "https://etherscan.io/address/0x913d3924c2e52b500d5acc6f6080120045dc507b",
              "type": "Smart Contract - SMART Exposure Controller"
            },
            {
              "target": "https://etherscan.io/address/0x8a63822d8c1be5590bbf72fb58e69285a776a5df",
              "type": "Smart Contract - SMART Exposure EPool Helper"
            },
            {
              "target": "https://etherscan.io/address/0x33c8d6f8271675eda1a0e72558d4904c96c7a888",
              "type": "Smart Contract - SMART Exposure EPool Periphery"
            },
            {
              "target": "https://etherscan.io/address/0x3e2f548954a7f8169486936e2bb616aabce979e9",
              "type": "Smart Contract - SMART Exposure EToken Factory"
            },
            {
              "target": "https://etherscan.io/address/0x9625885db4e75e9dccf856e640886853bc6d6584",
              "type": "Smart Contract - SMART Exposure EPool WETH/USDC"
            },
            {
              "target": "https://etherscan.io/address/0x1ff76b7cc4252f8281f49f005ccf2ea477344830",
              "type": "Smart Contract - SMART Exposure EPool WETH/WBTC"
            },
            {
              "target": "https://etherscan.io/address/0xa3991e7fe9e51e7b6fd116c36f8aafdf7e431758",
              "type": "Smart Contract - SMART Exposure EToken WETH/USDC 25/75"
            },
            {
              "target": "https://etherscan.io/address/0x894b65cfae8a48f2098411a9e0ff3b138722ed12",
              "type": "Smart Contract - SMART Exposure EToken WETH/USDC 50/50"
            },
            {
              "target": "https://etherscan.io/address/0xe59b4c22ba42e93029ded3bd1a1de1e3ce175d48",
              "type": "Smart Contract - SMART Exposure EToken WETH/USDC 75/25"
            },
            {
              "target": "https://etherscan.io/address/0x57977c37f1be0406cf0960f3d1ed1328341149f7",
              "type": "Smart Contract - SMART Exposure EToken WETH/WBTC 25/75"
            },
            {
              "target": "https://etherscan.io/address/0xc2227743d7462f710bced7f35145fd3cea67bb43",
              "type": "Smart Contract - SMART Exposure EToken WETH/WBTC 50/50"
            },
            {
              "target": "https://etherscan.io/address/0x09c1723110382bba314c1fb69081582ba2265eac",
              "type": "Smart Contract - SMART Exposure WToken WETH/WBTC 75/25"
            },
            {
              "target": "https://etherscan.io/address/0xd45ee2f2b70df3b7fb5e9f1053a38205cffca058",
              "type": "Smart Contract - SMART Exposure Keeper Subsidy Pool"
            },
            {
              "target": "https://polygonscan.com/address/0xb919b48146ede1bf405ee4b8173cce5dc52a5683",
              "type": "Smart Contract - SMART Yield amDAI bondModel"
            },
            {
              "target": "https://polygonscan.com/address/0x02a83b64466333f227303407d37c7e8e8fefd5b6",
              "type": "Smart Contract - SMART Yield amDAI aaveProvider"
            },
            {
              "target": "https://polygonscan.com/address/0xdaa037f99d168b552c0c61b7fb64cf7819d78310",
              "type": "Smart Contract - SMART Yield amDAI smartYield (bb_amDAI)"
            },
            {
              "target": "https://polygonscan.com/address/0x4b8d90d68f26def303dcb6cfc9b63a1aaec15840",
              "type": "Smart Contract - SMART Yield amDAI seniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0xa7382ebcca0602df60833b612476b20d631555de",
              "type": "Smart Contract - SMART Yield amDAI juniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0x6fbfa597575e152c683af7d8d6349904bb4a8d3d",
              "type": "Smart Contract - SMART Yield amDAI controller"
            },
            {
              "target": "https://polygonscan.com/address/0x41ab25709e0c3edf027f6099963fe9ad3ebab3a3",
              "type": "Smart Contract - SMART Yield amDAI oracle"
            },
            {
              "target": "https://polygonscan.com/address/0xeb09858f542e8b51ea066a4a0a78c7a7237c244c",
              "type": "Smart Contract - SMART Yield amUSDC bondModel"
            },
            {
              "target": "https://polygonscan.com/address/0x3a362046cd5d1d1495b08dcbf5610a510c66db68",
              "type": "Smart Contract - SMART Yield amUSDCaaveProvider"
            },
            {
              "target": "https://polygonscan.com/address/0x7d0bdcdf61655d2ef3d339d2b15421f4f6a28d2f",
              "type": "Smart Contract - SMART Yield amUSDC smartYield (bb_amUSDC)"
            },
            {
              "target": "https://polygonscan.com/address/0xa9c5f643c24627e184bc01b4382821946cd4d44a",
              "type": "Smart Contract - SMART Yield amUSDC seniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0x58e0b10834d2eba288fc39848b05efacedc938f2",
              "type": "Smart Contract - SMART Yield amUSDC juniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0xf241c917a5de589c2519e6010f588c1225b84e6c",
              "type": "Smart Contract - SMART Yield amUSDC controller"
            },
            {
              "target": "https://polygonscan.com/address/0xff15e953c188efb3764235d04149f3c2ca0bf20d",
              "type": "Smart Contract - SMART Yield amUSDC oracle"
            },
            {
              "target": "https://polygonscan.com/address/0x1afa5502bd15319bdbc72869049a81f3a136e73b",
              "type": "Smart Contract - SMART Yield amUSDT bondModel"
            },
            {
              "target": "https://polygonscan.com/address/0x6b297847283c7748d461674f62a7feb26af78512",
              "type": "Smart Contract - SMART Yield amUSDT aaveProvider"
            },
            {
              "target": "https://polygonscan.com/address/0x18efbf54e18efbdd55e94176c65959864efc7d8e",
              "type": "Smart Contract - SMART Yield amUSDT smartYield (bb_amUSDT)"
            },
            {
              "target": "https://polygonscan.com/address/0xdedc19a79d7702d7f56cf86cd51d590ca26d8c68",
              "type": "Smart Contract - SMART Yield amUSDT seniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0x85df1f7332fdc52f4a433e143b17017e2fe2c7fd",
              "type": "Smart Contract - SMART Yield amUSDT juniorBond"
            },
            {
              "target": "https://polygonscan.com/address/0x20af53aaaa9359ffbe3c547b2620529997306e5d",
              "type": "Smart Contract - SMART Yield amUSDT controller"
            },
            {
              "target": "https://polygonscan.com/address/0xc22ba61b02aeb68894d726e8c6a6490382b19a7c",
              "type": "Smart Contract - SMART Yield amUSDT oracle"
            },
            {
              "target": "https://polygonscan.com/address/0xfb49f6a2b52f5e19c44a84ed124ce68d8b071a73",
              "type": "Smart Contract - SMART Yield Reward Pools bb_amDAI"
            },
            {
              "target": "https://polygonscan.com/address/0x65afad3769726da7ee125379be8a5d0c75b57b73",
              "type": "Smart Contract - SMART Yield Reward Pools bb_amUSDC"
            },
            {
              "target": "https://polygonscan.com/address/0x8348bcb6cac6034f0e7a52aec1a423054be19de1",
              "type": "Smart Contract - SMART Yield Reward Pools bb_amUSDT"
            },
            {
              "target": "https://polygonscan.com/address/0xCbCc0dA1c8fC31C45Aa84931338178ada74F1017",
              "type": "Smart Contract - SMART Exposure Controller"
            },
            {
              "target": "https://polygonscan.com/address/0x4018b283aeC2D2287D9578bAB434d35235ec8E8B",
              "type": "Smart Contract - SMART Exposure EToken Factory"
            },
            {
              "target": "https://polygonscan.com/address/0xb9556a673f2e01333570e68d95dDd17d92A0511A",
              "type": "Smart Contract - SMART Exposure EPool Periphery"
            },
            {
              "target": "https://polygonscan.com/address/0x32f8E7FB11432263E545faA368a6a1f8eFB58314",
              "type": "Smart Contract - SMART Exposure EPool Helper"
            },
            {
              "target": "https://polygonscan.com/address/0xa272764f3403459099806fece54369c39489ccec",
              "type": "Smart Contract - SMART Exposure Epool WETH/USDC"
            },
            {
              "target": "https://polygonscan.com/address/0xd8124bbb4bf94c5d2850011b64bea9a47266a768",
              "type": "Smart Contract - SMART Exposure Epool WETH/WBTC"
            },
            {
              "target": "https://polygonscan.com/address/0x9e24f4fb6e17b30413680cecdcdd197f08813049",
              "type": "Smart Contract - SMART Exposure Etoken WETH/USDC 75/25"
            },
            {
              "target": "https://polygonscan.com/address/0xd23f55ac0538c9e53a39d024fc1ad57d457b8e88",
              "type": "Smart Contract - SMART Exposure Etoken WETH/USDC 25/75"
            },
            {
              "target": "https://polygonscan.com/address/0x6d144f3641fbe5938068c2c193ff43aeb25ec961",
              "type": "Smart Contract - SMART Exposure Etoken WETH/USDC 50/50"
            },
            {
              "target": "https://etherscan.io/address/0x7e6951fcb0f07e026e6e01ad427d9c528a7b1c32",
              "type": "Smart Contract - SMART Exposure Etoken WETH/WBTC 75/25"
            },
            {
              "target": "https://polygonscan.com/address/0x078a32a1381e230990fdf55d06986beb6eb59133",
              "type": "Smart Contract - SMART Exposure Etoken WETH/WBTC 25/75"
            },
            {
              "target": "https://polygonscan.com/address/0xe9c5679864150aefb0bd6ea367512acee37f2c33",
              "type": "Smart Contract - SMART Exposure Etoken WETH/WBTC 5050"
            },
            {
              "target": "https://polygonscan.com/address/0xB7427Be57a8f084697ca680A55838BCea54f2899",
              "type": "Smart Contract - PolygonCommunityVault"
            },
            {
              "target": "https://polygonscan.com/address/0x2D55369b2e04AFeFf55b56E782A7D9206DFFA591",
              "type": "Smart Contract - PolygonTokenHarvester"
            },
            {
              "target": "https://polygonscan.com/address/0xdBe3C9D09F039693E46Ba5bd2746FAd0DCbe1C1a",
              "type": "Smart Contract - PolygonDAORoot"
            }
          ],
          "mdx": {
            "program_overview": "BarnBridge is a risk tokenization protocol. It aims to reduce the risks associated with DeFi, such as interest rate fluctuations and asset price volatility. By letting users select a risk profile, BarnBridge can redistribute risk via tokenized, liquid tranches. BarnBridge does this with its SMART Yield, SMART Exposure, and upcoming SMART Alpha products, all of which address a specific DeFi risk category.\n\nThe continued development of the dApps is governed by the community through the BarnBridge DAO.\n\nFor more information about BarnBridge, please visit [https://barnbridge.com/](https://barnbridge.com/).\n\nThe bug bounty program covers its smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of SMART Yield capital\n  - Thefts and freezing of SMART Exposure capital\n  - Thefts and freezing of SMART Alpha (to be launched in September 2021) capital\n  - Thefts and freezing of future applications’ capital\n  - Theft and freezing of DAO treasury funds\n  - Theft and freezing of Governance Staking vault (e.g. “Barn” smart contract)",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract vulnerabilities are required to have a PoC for the consideration of a reward.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. \n\nPayouts up to __USD 250 000__ are handled by the __BarnBridge__ team directly and are denominated in USD. Payouts under __USD 1 000__ are paid in a stablecoin at the discretion of the team. For larger payouts up to USD 250 000, the reward is split in a 80:20 BOND:stablecoin mix, where the team also decides on the stablecoin to be used.",
            "assets_body": "For additional reference, the following links have been provided. However, only the smart contracts within the assets in scope table are in-scope of the bug bounty program.\n\nYield Farming - Staking contract\n\n[https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/Staking.sol](https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/Staking.sol)\n\nYield Farming - Community Vault\n\n[https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/CommunityVault.sol](https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/CommunityVault.sol)\n\nYield Farming - Pool2 (BOND/USDC LP Pool)\n\n[https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/YieldFarmLP.sol](https://github.com/BarnBridge/BarnBridge-YieldFarming/blob/master/contracts/YieldFarmLP.sol)\n\nDAO & Governance - Barn\n\n[https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Barn.sol](https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Barn.sol) \n\nDAO Governance & Treasury\n\n[https://github.com/BarnBridge/BarnBridge-DAO/blob/master/contracts/Governance.sol](https://github.com/BarnBridge/BarnBridge-DAO/blob/master/contracts/Governance.sol)\n\nDAO & Governance - DAO Rewards\n\n[https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Rewards.sol](https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Rewards.sol)\n\nSMART Yield\n\n[https://github.com/BarnBridge/BarnBridge-SmartYieldBonds/tree/master/contracts](https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Rewards.sol)\n\nSMART Exposure\n\n[https://github.com/BarnBridge/BarnBridge-SmartExposure](https://github.com/BarnBridge/BarnBridge-Barn/blob/master/contracts/Rewards.sol)\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "polybunny",
          "project": "PolyBunny",
          "date": "2021-07-20T12:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6WeOvYFhXwel7Sg7bzUG9f/297c25180e25be7ce9f756886baaa167/token-bunny.a8b61846.png",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x4C16f69302CcB511c5Fac682c7626B9eF0Dc126a",
              "type": "Smart Contract - Bunny Token"
            },
            {
              "target": "https://polygonscan.com/address/0xB45BBE3E0F2f6E2879144478eD1751DF4c3f624A",
              "type": "Smart Contract - Bunny Minter V2"
            },
            {
              "target": "https://polygonscan.com/address/0x3048d5B8EC1B034Ae947597a6A30a42F2e1fd82F",
              "type": "Smart Contract - BunnyChef"
            },
            {
              "target": "https://polygonscan.com/address/0x4B0844e656AFdf78490a84d4bd3023e31cD6F38F",
              "type": "Smart Contract - Proxy Admin"
            },
            {
              "target": "https://polygonscan.com/address/0x4Ad69DC9eA7Cc01CE13A37F20817baC4bF0De1ba",
              "type": "Smart Contract - BUNNY Maximizer (Earn BUNNY)"
            },
            {
              "target": "https://polygonscan.com/address/0x7a526d4679cDe16641411cA813eAf7B33422501D",
              "type": "Smart Contract - BUNNY-ETH Pool (Earn BUNNY-ETH + BUNNY)"
            },
            {
              "target": "https://polygonscan.com/address/0x4beB900C3a642c054CA57EfCA7090464082e904F",
              "type": "Smart Contract - USDC-ETH"
            },
            {
              "target": "https://polygonscan.com/address/0x54E1feE2182d0d96D0D8e592CbFd4debC8EEf7Df",
              "type": "Smart Contract - wBTC-ETH"
            },
            {
              "target": "https://polygonscan.com/address/0x3cba7b58b4430794fa7a37F042bd54E3C2A351A8",
              "type": "Smart Contract - ETH-MATIC "
            },
            {
              "target": "https://polygonscan.com/address/0x4964e4d8E17B86e15A2f0a4D8a43D8E4AbeC3E78",
              "type": "Smart Contract - MATIC-QUICK"
            },
            {
              "target": "https://polygonscan.com/address/0xf066208Fb16Dc1A06e31e104bEDb187468206a92",
              "type": "Smart Contract -  ETH-AAVE"
            },
            {
              "target": "https://polygon.pancakebunny.finance",
              "type": "Web/App"
            },
            {
              "target": "https://polygonscan.com/address/0x16CeE21c231E2c3cf2778Fe568230c145C8591cA",
              "type": "Sushiswap pool USDC-ETH"
            },
            {
              "target": "https://polygonscan.com/address/0x45F10bAE59Ff9D4Be78eD20F0AAfDE532b254707",
              "type": "Sushiswap pool wBTC-ETH"
            },
            {
              "target": "https://polygonscan.com/address/0x87c743C1418864c9799FdE4C8612D1Ba64188ECe",
              "type": "Sushiswap pool ETH-MATIC"
            },
            {
              "target": "https://polygonscan.com/address/0xdF0BE663C84322f55aD7b40A4120CdECBa4C4B45",
              "type": "Sushiswap pool USDC-USDT"
            },
            {
              "target": "https://polygonscan.com/address/0x39D28Db6742a457BCfB927D4539bEea55Dc5Dd87",
              "type": "Sushiswap pool wBTC-ibBTC"
            },
            {
              "target": "https://polygonscan.com/address/0x51C30ee94052baAABA60Db6b931c1f4657FFe174",
              "type": "Sushiswap pool FRAX-USDC"
            }
          ],
          "mdx": {
            "program_overview": "PolyBunny is a fork of PancakeBunny, one of the largest yield aggregators on BSC. By utilizing the same successful strategies as PancakeBunny, PolyBunny will be able to maximize returns while minimizing risk and continue building incentives for the PolyBUNNY token. The strategic importance of the Polygon fork is two-fold. First, conditions on Polygon substantially recapitulate the early conditions on BSC for which the tokenomics of PancakeBunny is optimized. We expect that, subject to the effective execution of the fork, we will be able to replicate on Polygon the virtuous cycle that PancakeBunny successfully created on BSC.\n\nSecond, over time, the Polygon fork will contribute significant cross-chain liquidity and fees to the PancakeBunny ecosystem, further amplifying important product innovations such as our Cross Chain Multiplexer suite.\n\nFor more information about PancakeBunny, please go to [https://polygon.pancakebunny.finance/](https://polygon.pancakebunny.finance/).  \n\nThe bug bounty program covers its smart contracts and apps and is focused on receiving bug reports of the following impacts and attacks:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website going down\n  - Flashloan attacks\n  - Oracle Manipulation attacks\n  - Reentrancy attacks",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC. High and Critical smart contract bug reports are required to come with a proof of concept (PoC) for consideration of a reward. \n\nCritical vulnerabilities for smart contract and blockchain vulnerabilities only get the classification if they have an impact of USD 100 000 or greater. If the impact is below that amount, the bug report is reclassified as High even if it would normally classify as Critical. Additionally, if a smart contract bug report with a classification of High has an impact of USD 100 000 or greater, it gets reclassified as Critical.\n\nIf a bug report is submitted to this bug bounty program and is validated and accepted, it cannot be resubmitted for the PancakeBunny bug bounty program.\n\nPayouts are handled by the __Pancake Bunny__ team directly and are denominated in USD. Payouts are done in __USDT__ for rewards under __USD 1 000__ and are done in __polyBUNNY__ for rewards that are greater. All rewards are paid over __Polygon__.",
            "assets_body": "Only web/app vulnerabilities that directly affect the web/app assets listed in this table are accepted within the bug bounty program. All others, including anything only within [https://pancakebunny.finance](https://pancakebunny.finance), are out-of-scope.\n\nFor added reference, please take a look at their GitHub - [https://github.com/PancakeBunny-finance/PolygonBUNNY](https://github.com/PancakeBunny-finance/PolygonBUNNY). However, only the contracts listed as in-scope here are considered as part of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n\n__Website and Apps__\n\n  - Redirected Funds by address modification\n  - Site goes down",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Oracle Manipulation\n  - Novel Governance Attacks\n  - Economic Exploit (including flash loans)\n  - Susceptibility to block timestamp manipulation\n  - Re-Entrancy \n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Logic errors\n  - Congestion and scalability\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by the bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pancakebunny",
          "project": "Pancake Bunny",
          "date": "2021-06-28T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/48Xy85rDLCyUNUl9zqNQRW/56f86c138768369695f819b53505a52a/100054100110_143963__1_.jpg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51",
              "type": "Smart Contract - Bunny Token"
            },
            {
              "target": "https://bscscan.com/address/0x8cb88701790f650f273c8bb2cc4c5f439cd65219",
              "type": "Smart Contract - Bunny Minter V2"
            },
            {
              "target": "https://bscscan.com/address/0x85c9162A51E03078bdCd08D4232Bab13ed414cC3",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://bscscan.com/address/0x9ceE40FE28FC9de2195dC611291ae810C6B265a8",
              "type": "Smart Contract - Proxy Admin"
            },
            {
              "target": "https://bscscan.com/address/0x60D8a581d519397E870c5376228cd7E7aBBC243B",
              "type": "Smart Contract - Bunny Pot (pool together lottery)"
            },
            {
              "target": "https://bscscan.com/address/0xe0D17B4695862B0A2590730762EC25ee562B2CA4",
              "type": "Smart Contract - Bunny (Premium) Pot"
            },
            {
              "target": "https://bscscan.com/address/0xa9b005d891414E0d6E0353490e099D0CA4C778Fc",
              "type": "Smart Contract - Cake Pot"
            },
            {
              "target": "https://bscscan.com/address/0xD601966588E812218a45f3ec06D3A89602348183",
              "type": "Smart Contract - Cake Premium Pot"
            },
            {
              "target": "https://bscscan.com/address/0xCADc8CB26c8C7cB46500E61171b5F27e9bd7889D",
              "type": "Smart Contract - Bunny Pool"
            },
            {
              "target": "https://bscscan.com/address/0xC004a3b5Af216e9c2c59a9EA8BC3Ee07aF667329",
              "type": "Smart Contract - Bunny Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xa6C29a422D1612293669156a34f2793526783622",
              "type": "Smart Contract - Bunny-Bnb Pool"
            },
            {
              "target": "https://bscscan.com/address/0xEDfcB78e73f7bA6aD2D829bf5D462a0924da28eD",
              "type": "Smart Contract - Cake Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0x203Ee29ba85BbDfA23bFaE5D77620AeFDaf92cB1",
              "type": "Smart Contract - Cake-Bnb Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xac20925e6615ad6871987e199783Fa80Bf24EB39",
              "type": "Smart Contract - BTCB-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0x7D52a1697F2dF08E6fb2b5A88E0E8e4D7C11a921",
              "type": "Smart Contract - ETH-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0x81fa6F9F4599c5316Cc53B782DE7c01EFf4f9551",
              "type": "Smart Contract - BUSD-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xac7D40638271D349cb2DeDfdC6268A77738403Fa",
              "type": "Smart Contract - USDT-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0x7f0320cef62C88CE1DB7d77c1849082C053E2344",
              "type": "Smart Contract - VAI-BUSD Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0x74fdc215f8309Ec58Fd34455bf3Fee95FB3416dD",
              "type": "Smart Contract - USDT-BUSD Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xc1d9Ead28Fc4CB9658C62594A695a53bfD306f77",
              "type": "Smart Contract - DOT-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xD2220455E760Fb27ED8aaA6F9C7E143A687BB0aD",
              "type": "Smart Contract - BTCB-BNB Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xf92f12b505594EedF65CB8B973819dfA242c61D7",
              "type": "Smart Contract - DAI-BUSD Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xFeED0bb79035c61CF6519795a02a6a2A69A11aAC",
              "type": "Smart Contract - USDC-BUSD Maximizer Pool"
            },
            {
              "target": "https://bscscan.com/address/0xA599d6b81eC4a5DDd8eCa85e3AAc31E006aF00AA",
              "type": "Smart Contract - CAKE-BNB FLIP"
            },
            {
              "target": "https://bscscan.com/address/0x285F793CE97079D4a5712E616AFBbb971Dbf1f1f",
              "type": "Smart Contract - BTCB-BNB FLIP"
            },
            {
              "target": "https://bscscan.com/address/0x0d17e7B77C678C79C3ab5176e164FF0BCceb8EAa",
              "type": "Smart Contract - ETH-BNB FLIP"
            },
            {
              "target": "https://bscscan.com/address/0xE0aca387C6600b455CCFC32B253e2DB13b71ca62",
              "type": "Smart Contract - BUSD-BNB FLIP"
            },
            {
              "target": "https://bscscan.com/address/0x633e538EcF0bee1a18c2EDFE10C4Da0d6E71e77B",
              "type": "Smart Contract - USDT-BNB FLIP"
            },
            {
              "target": "https://bscscan.com/address/0xFdb7D4AbD0109b36667946726dF943E83570286C",
              "type": "Smart Contract - VAI-BUSD FLIP"
            },
            {
              "target": "https://bscscan.com/address/0xC341c6a006cab105E8CD2518e25aaB311Cb22FF6",
              "type": "Smart Contract - USDT-BUSD FLIP"
            },
            {
              "target": "https://bscscan.com/address/0x52cFa188A1468A521A98eaa798E715Fbb9eb38a3",
              "type": "Smart Contract - BNB Single Asset Vault"
            },
            {
              "target": "https://bscscan.com/address/0x549d2e2B4fA19179CA5020A981600571C2954F6a",
              "type": "Smart Contract - BTCB Single Asset Vault"
            },
            {
              "target": "https://bscscan.com/address/0x22af73683dee5D266B0c36c37D0Fd62c402Fd250",
              "type": "Smart Contract - ETH Single Asset Vault"
            },
            {
              "target": "https://bscscan.com/address/0x0243A20B20ECa78ddEDF6b8ddb43a0286438A67A",
              "type": "Smart Contract - BUSD Single Asset Vault"
            },
            {
              "target": "https://bscscan.com/address/0x0Ba950F0f099229828c10a9B307280a450133FFc",
              "type": "Smart Contract - USDT Single Asset Vault"
            },
            {
              "target": "https://pancakebunny.finance/pool",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "PancakeBunny is a decentralized finance (DeFi) yield aggregator and optimizer for the Binance Smart Chain, which is used for PancakeSwap (CAKE) and Venus (XVS), and will soon launch on Polygon (MATIC). The PancakeBunny protocol gives farmers the opportunity to reap the benefits of auto compounding. PancakeBunny is one of the largest yield aggregators across ETH and BSC, in terms of TVL. Farmers at PancakeBunny get permission from private individuals for automatic summation and reinvestment of yield on their behalf through mono-contracts. Users can farm on their own, but doing so involves a complex process of determining the optimal frequency and time at which to increase and reinvest profitability. The primary goal of the platform is to support the DeFi ecosystem by providing users with an easy way to automatically increase their profitability across a variety of different chains. The team has a mission of lowering the barrier to entry to DeFi. \n\nFor more information about PancakeBunny, please go to [https://docs.pancakebunny.finance/](https://docs.pancakebunny.finance/). \n\nThe bug bounty program covers its smart contracts and apps and is focused on receiving bug reports of the following impacts and attacks:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website going down\n  - Flashloan attacks\n  - Oracle Manipulation attacks\n  - Reentrancy attacks\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC. High and Critical smart contract bug reports are required to come with a proof of concept (PoC) for consideration of a reward. \n\nCritical vulnerabilities for smart contract and blockchain vulnerabilities only get the classification if they have an impact of USD 100 000 or greater. If the impact is below that amount, the bug report is reclassified as High even if it would normally classify as Critical. Additionally, if a smart contract bug report with a classification of High has an impact of USD 100 000 or greater, it gets reclassified as Critical.\n\nIf a bug report is submitted to this bug bounty program and is validated and accepted, it cannot be resubmitted for the Polybunny bug bounty program.\n\nPayouts are handled by the __Pancake Bunny__ team directly and are  denominated in USD. Payouts are done in __USDT__ for rewards under __USD 1 000__ and are done in __BUNNY__ for rewards that are greater. All rewards are paid over the __Binance Smart Chain__. ",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nFor added reference, please take a look at their GitHub - [https://github.com/PancakeBunny-finance/Bunny](https://github.com/PancakeBunny-finance/Bunny). However, only the contracts listed as in-scope here are considered as part of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n\n__Website and Apps__\n\n  - Redirected Funds by address modification\n  - Site goes down",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Oracle Manipulation\n  - Novel Governance Attacks\n  - Economic Exploit (including flash loans)\n  - Susceptibility to block timestamp manipulation\n  - Re-Entrancy \n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Logic errors\n  - Congestion and scalability\n  - Websites and Apps\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by the bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pendle",
          "project": "Pendle",
          "date": "2021-06-17T00:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/14hUM20Rje5ERaKlMEGATT/6c87c32f2b4b5019bd2810ce6de081a0/Pendle.jpeg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x8849d0d4c35679aA78Df1b5B4CecA358d57635dF#code",
              "type": "Smart Contract - PendleTeamTokens"
            },
            {
              "target": "https://etherscan.io/address/0xc21A74c7150fed22C7CA0Bf9A15BBe0DdB4977CC#code",
              "type": "Smart Contract - PendleEcosystemFund"
            },
            {
              "target": "https://etherscan.io/address/0x808507121B80c02388fAd14726482e061B8da827#code",
              "type": "Smart Contract - PENDLE"
            },
            {
              "target": "https://etherscan.io/address/0x9b528BF0639fC31Ae6D698c48D830873227741F1#code",
              "type": "Smart Contract - PendleGovernanceManagerMain"
            },
            {
              "target": "https://etherscan.io/address/0x5a05a64115bd86f220a26461fDe3A011c7142476#code",
              "type": "Smart Contract - PendleGovernanceManagerLiqMining"
            },
            {
              "target": "https://etherscan.io/address/0x0EF44218209D7d64737dD36f179d5e448df3EEd4#code",
              "type": "Smart Contract - PendlePausingManagerMain"
            },
            {
              "target": "https://etherscan.io/address/0xea2575F82C881b223208FA53982e6e09aB55CcDa#code",
              "type": "Smart Contract - PendlePausingManagerLiqMining"
            },
            {
              "target": "https://etherscan.io/address/0xE8A6916576832AA5504092C1cCCC46E3bB9491d6#code",
              "type": "Smart Contract - PendleData"
            },
            {
              "target": "https://etherscan.io/address/0x16b4AD69d414a197F9Cb98d06dB224646dc7CDc7#code",
              "type": "Smart Contract - PendleMarketReader"
            },
            {
              "target": "https://etherscan.io/address/0x1b6d3E5Da9004668E14Ca39d1553E9a46Fe842B3#code",
              "type": "Smart Contract - PendleRouter"
            },
            {
              "target": "https://etherscan.io/address/0x3f83805D7d2A6b7BF35E5c3131D684d914B98472#code",
              "type": "Smart Contract - PendleRedeemProxy"
            },
            {
              "target": "https://etherscan.io/address/0x6fa13469428e85E6aC12c84B73A19aeF7c53332A#code",
              "type": "Smart Contract - PendleWhitelist"
            },
            {
              "target": "https://etherscan.io/address/0x17dF69a3a30dAE5Ad0F3734c93ddf94dBdC898dE#contracts",
              "type": "Smart Contract - PendleRewardManagerCompound"
            },
            {
              "target": "https://etherscan.io/address/0xA023FfA56e5672FDB87499144c96D481e6Aa55ce#code",
              "type": "Smart Contract - PendleCompoundYieldContractDeployer"
            },
            {
              "target": "https://etherscan.io/address/0xc02aC197a4D32D93D473779Fbea2DCA1fb313eD5#code",
              "type": "Smart Contract - PendleCompoundForge"
            },
            {
              "target": "https://etherscan.io/address/0x0f8e3237d074ce8a59aF5D0d476BCd5B85aEFe09#code",
              "type": "Smart Contract - PendleCompoundMarketFactory"
            },
            {
              "target": "https://etherscan.io/address/0xC93471fBC686bc0Aa5Fd102ad706ec180061461a#code",
              "type": "Smart Contract - PendleRewardManagerAaveV2"
            },
            {
              "target": "https://etherscan.io/address/0x2Ae9bCDF80871F5BA4bd591Bb07eB690951B3b93#code",
              "type": "Smart Contract - PendleAaveV2YieldContractDeployer"
            },
            {
              "target": "https://etherscan.io/address/0x9902475a6Ffc0377b034Bf469EE0879f3Bd273FB#code",
              "type": "Smart Contract - PendleAaveV2Forge"
            },
            {
              "target": "https://etherscan.io/address/0x753aE83C85daC24A91eF31D60B8400dDbCd53d62#code",
              "type": "Smart Contract - PendleAaveMarketFactory"
            },
            {
              "target": "https://etherscan.io/address/0x6f40A68E99645C60F14b497E75aE024777d61726#code",
              "type": "Smart Contract - PendleAaveLiquidityMining"
            },
            {
              "target": "https://etherscan.io/address/0x5B1C59Eb6872f88a92469751a034B9B5ADA9A73F#code",
              "type": "Smart Contract - PendleCompoundLiquidityMining"
            },
            {
              "target": "https://etherscan.io/address/0x07282F2CEEbD7a65451Fcd268b364300D9e6D7f5#code",
              "type": "Smart Contract - SingleStaking"
            },
            {
              "target": "https://etherscan.io/address/0x747fc744837DEDa8D1c568d8e90839e5D4495255#code",
              "type": "Smart Contract - SingleStakingManager"
            }
          ],
          "mdx": {
            "program_overview": "Pendle is the first protocol that enables the trading of tokenized future yield on an AMM system. The project aims to give holders of yield-generating assets the opportunity to generate additional yield and to lock in future yield upfront, while offering traders direct exposure to future yield streams, without the need for an underlying collateral.\n\nPendle exists on top of first-degree protocols and currently supports Aave and Compound, with more platforms to be integrated in the future.\n\nThere are four components that makeup Pendle’s system:\n\n-Yield tokenization \n\n-Pendle’s Automated Market Maker (AMM)\n\n-Liquidity mining contracts\n\n-Governance (Coming soon)\n\nFurther resources regarding the Pendle can be found on their website, [https://pendle.finance/](http://pendle.finance/). \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical vulnerabilities are capped at 10% of economic damage, with the funds at risk being the primary determinant with considerations for PR impact and other factors such as exploitability, with a minimum base reward of __USD 50 000__.\n\nPayouts are handled by the __Pendle__ team directly and are denominated in USD. However, payouts are done in __USDT__ or __USDC__ for payouts under __USD 25 000__. For payouts above that amount, the reward will have  80% paid in __PENDLE__ with 20% in __USDT__ or __USDC__.",
            "assets_body": "For additional reference, these and other smart contracts of Pendle can be found on the following Github links:\n\n[https://github.com/pendle-finance/pendle-core/tree/b34d265e4fe8e3a6f79bdec1ab88ab2fd49a882c/contracts](https://github.com/pendle-finance/pendle-core/tree/b34d265e4fe8e3a6f79bdec1ab88ab2fd49a882c/contracts)\n\n[https://github.com/pendle-finance/pendle-staking/tree/3708b93a9b93eb11ff005b6da436c914c82008f8/contracts](https://github.com/pendle-finance/pendle-staking/tree/3708b93a9b93eb11ff005b6da436c914c82008f8/contracts)\n\nHowever, only the smart contracts in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nAdditionally, all vulnerabilities found in the [audit reports](https://github.com/pendle-finance/pendle-core/tree/master/docs/audits) are considered as out-of-scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "defisaver",
          "project": "DeFi Saver",
          "date": "2021-04-21T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1S8ggfDmWMZTN2T6wcMNaS/b56ce9699295511536c8e970e550ee9c/Defisaver-logo.jpg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/DecenterApps/defisaver-v3-contracts",
              "type": "Smart Contract - Defi Saver V3"
            },
            {
              "target": "https://etherscan.io/address/0x47d9f61bADEc4378842d809077A5e87B9c996898#code",
              "type": "Smart Contract - MCDMonitorProxyV2"
            },
            {
              "target": "https://etherscan.io/address/0xc45d4f6b6bf41b6edaa58b01c4298b8d9078269a#code",
              "type": "Smart Contract - SubscriptionsV2"
            },
            {
              "target": "https://etherscan.io/address/0xB1cF8DE8e791E4Ed1Bd86c03E2fc1f14389Cb10a#code",
              "type": "Smart Contract - CompoundMonitorProxy"
            },
            {
              "target": "https://etherscan.io/address/0x52015EFFD577E08f498a0CCc11905925D58D6207#code",
              "type": "Smart Contract - CompoundSubscriptions"
            },
            {
              "target": "https://etherscan.io/address/0xD6049E1F5F3EfF1F921f5532aF1A1632bA23929C#code",
              "type": "Smart Contract - DFSRegistry"
            },
            {
              "target": "https://etherscan.io/address/0xb3e5371d55e1e84bfFE7D0b57Bd9c6A4C6b3C635#code",
              "type": "Smart Contract - TaskExecutor"
            },
            {
              "target": "https://etherscan.io/address/0x9E702937F42Db2cE58342Ca5F213Ef33D51AEF6b#code",
              "type": "Smart Contract - WrapEth"
            },
            {
              "target": "https://etherscan.io/address/0x5cD02A169CfE5B0596B352547879Dd60B7033488#code",
              "type": "Smart Contract - UnwrapEth"
            },
            {
              "target": "https://etherscan.io/address/0x795a89f6D4E97A959fe81aa22772441323783479#code",
              "type": "Smart Contract - PullToken"
            },
            {
              "target": "https://etherscan.io/address/0xBbe0D7f2AF01aE678f8A873CB2d2EB73871C9b5A#code",
              "type": "Smart Contract - SendToken"
            },
            {
              "target": "https://etherscan.io/address/0xCdef35425579fc566B6Ee0499A79256ac88d25cf#code",
              "type": "Smart Contract - SumInputs"
            },
            {
              "target": "https://etherscan.io/address/0x3f71c5b806c2aCFA88bd7Ae5F7f8A14121E0FcA6#code",
              "type": "Smart Contract - SubInputs"
            },
            {
              "target": "https://etherscan.io/address/0xFEb82445aEaA675D59A43CD5833f5A6807f97ea2#code",
              "type": "Smart Contract - TokenBalance"
            },
            {
              "target": "https://etherscan.io/address/0xd3D70313d1E2ab6ae47674C88390Fd9865806201#code",
              "type": "Smart Contract - AutomationV2Unsub"
            },
            {
              "target": "https://etherscan.io/address/0xcAE220B5398AfAad75bfeb946164f6C23CF65A98#code",
              "type": "Smart Contract - UniSupply"
            },
            {
              "target": "https://etherscan.io/address/0x847aF4eFDf64E4F54Af95D3b867DfC92f4Ea91B4#code",
              "type": "Smart Contract - UniWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x4D49FB2Cc0DF856b936CCA1816A9e6DD0ADFa232#code",
              "type": "Smart Contract - UniCollectV3"
            },
            {
              "target": "https://etherscan.io/address/0x488794Aa06Ec668fDeC29375CB8B6629f4692B0B#code",
              "type": "Smart Contract - UniMintV3"
            },
            {
              "target": "https://etherscan.io/address/0x1dc3C2c16195bD6e49f6ED05F1f482c3C7FD35Af#code",
              "type": "Smart Contract - UniSupplyV3"
            },
            {
              "target": "https://etherscan.io/address/0xe5FAB89bdC01130c686B35540531EB1cBbaE8ff3#code",
              "type": "Smart Contract - UniWithdrawV3"
            },
            {
              "target": "https://etherscan.io/address/0x3B8538B070a0890ef7E13FF60c9d19F893a93B8a#code",
              "type": "Smart Contract - YearnSupply"
            },
            {
              "target": "https://etherscan.io/address/0x5BDf949c3a74E4F78328f6ad1F3697CC8edbe1A2#code",
              "type": "Smart Contract - YearnWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x9C563dc9F8e3FcCF996DAB4b6B6003fb7Bbca90f#code",
              "type": "Smart Contract - LiquityClose"
            },
            {
              "target": "https://etherscan.io/address/0x46e8fE6bbE3C08eCc250295583490be9ac97B969#code",
              "type": "Smart Contract - LiquityBorrow"
            },
            {
              "target": "https://etherscan.io/address/0x50D69350E2629987551C563E19D29dee6Faf3A78#code",
              "type": "Smart Contract - LiquityOpen"
            },
            {
              "target": "https://etherscan.io/address/0x86eCa72dF81ae76AfF0dEeC01521154F33147e46#code",
              "type": "Smart Contract - LiquityPayback"
            },
            {
              "target": "https://etherscan.io/address/0x8CDA51bB0D7E03252d554Ba5Bbb9254f3deB8441#code",
              "type": "Smart Contract - LiquityWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x7d9157a022A263EFd34C867Fd261235D45B48453#code",
              "type": "Smart Contract - LiquitySupply"
            },
            {
              "target": "https://etherscan.io/address/0x20D85391A69E9906b67238cb82E51114dE7116a9#code",
              "type": "Smart Contract - LiquitySPDeposit"
            },
            {
              "target": "https://etherscan.io/address/0x621ac2A927cc9323C23f7792e8FD25aAbc9cC04B#code",
              "type": "Smart Contract - LiquitySPWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0xF0782DE9d734e54aa080B985d6a9235880C48Fe5#code",
              "type": "Smart Contract - LiquityStake"
            },
            {
              "target": "https://etherscan.io/address/0xc39DdBa031D014BFC1E3b6158842Ffb43f8D47e9#code",
              "type": "Smart Contract - LiquityUnstake"
            },
            {
              "target": "https://etherscan.io/address/0x5a2E638DE65323c55f1245f920B84dB4603002eE#code",
              "type": "Smart Contract - LiquityClaim"
            },
            {
              "target": "https://etherscan.io/address/0x60427bD08785527FDca7d84d2A75871273E9F209#code",
              "type": "Smart Contract - LiquityEthGainToTrove"
            },
            {
              "target": "https://etherscan.io/address/0x6C5Dd88D033c8857254Cc94098BF75Ac275B17c7#code",
              "type": "Smart Contract - LiquityRedeem"
            },
            {
              "target": "https://etherscan.io/address/0x71D44c05B94438fe09a4A7F4dB75fb421dEC1067#code",
              "type": "Smart Contract - LidoStake"
            },
            {
              "target": "https://etherscan.io/address/0x752e08eB2882DA273Cb8b70151f6c6c33f34D62b#code",
              "type": "Smart Contract - LidoWrap"
            },
            {
              "target": "https://etherscan.io/address/0x37800CF1Fe630efc5F2E15A2e182E5C5084861D9#code",
              "type": "Smart Contract - LidoUnwrap"
            },
            {
              "target": "https://etherscan.io/address/0xa329263fFac25F86E03481Ec39307bbf5DbeDD83#code",
              "type": "Smart Contract - GUniWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0xe943958f01630038c23f8471a2d0ea4378e58b0d#code",
              "type": "Smart Contract - GUniDeposit"
            },
            {
              "target": "https://etherscan.io/address/0xA8D1C1eea86573cBcC919fbf28Db542bDfE7Ed5b#code",
              "type": "Smart Contract - DyDxSupply"
            },
            {
              "target": "https://etherscan.io/address/0x55AA33F42D79DbD3f1885b410e4796d641549bC3#code",
              "type": "Smart Contract - DyDxWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0xf4adae649B2c3B2795608b2D222c852929944898#code",
              "type": "Smart Contract - DFSSell"
            },
            {
              "target": "https://etherscan.io/address/0x939dCad6A3D1fEACccB60Af90876D904468CbF66#code",
              "type": "Smart Contract - DFSBuy"
            },
            {
              "target": "https://etherscan.io/address/0x46aafdbc76a8b412909985d0a2c51073ff33c02e#code",
              "type": "Smart Contract - FLAaveV2"
            },
            {
              "target": "https://etherscan.io/address/0x973065599BACa33FC9CAD2823710f1332D2B7805#code",
              "type": "Smart Contract - FLDyDx"
            },
            {
              "target": "https://etherscan.io/address/0xEA2C6B373Ea3e596995d2523a74592E22EE49BFF#code",
              "type": "Smart Contract - FLMaker"
            },
            {
              "target": "https://etherscan.io/address/0x81c69A428fDB21bBaB8A7434fF511382058c29dC#code",
              "type": "Smart Contract - FLBalancer"
            },
            {
              "target": "https://etherscan.io/address/0xEdBbF97C505309e5174E164fbec3cAE774d310Ea#code",
              "type": "Smart Contract - AaveBorrow"
            },
            {
              "target": "https://etherscan.io/address/0xb583Bc7603E5E482F475Ec9Ea90129029D53fbc8#code",
              "type": "Smart Contract - AavePayback"
            },
            {
              "target": "https://etherscan.io/address/0xC71113E9122465e8bCd42123f840Df99abaF29F1#code",
              "type": "Smart Contract - AaveSupply"
            },
            {
              "target": "https://etherscan.io/address/0xE06Fc1CBD78Eb0799d5B0ca62D51B065886e08FC#code",
              "type": "Smart Contract - AaveWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x27d77c80A88665342C98Ea31B687A5fc8ca9a445#code",
              "type": "Smart Contract - AaveCollateralSwitch"
            },
            {
              "target": "https://etherscan.io/address/0xde1b05266f2D05Bf9216B76500583c2b7785b7e9#code",
              "type": "Smart Contract - CompBorrow"
            },
            {
              "target": "https://etherscan.io/address/0xAA165C03fF61301b79f35649157f6738263739A3#code",
              "type": "Smart Contract - CompClaim"
            },
            {
              "target": "https://etherscan.io/address/0x67D2CC825730cCb70FD4579E55cDb3cf3152fcb6#code",
              "type": "Smart Contract - CompPayback"
            },
            {
              "target": "https://etherscan.io/address/0x1F22890C166B30cE8769b7B55354064C254e063F#code",
              "type": "Smart Contract - CompSupply"
            },
            {
              "target": "https://etherscan.io/address/0xD326a003bcfDbad0E9A4Ccc37a76Ce264345F38a#code",
              "type": "Smart Contract - CompWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x009109AB7b8CAFf748cdA2F272F36043528Bef2C#code",
              "type": "Smart Contract - CompGetDebt"
            },
            {
              "target": "https://etherscan.io/address/0x1c0BD1E4da2c3108f6caA64609E89a37531B0f86#code",
              "type": "Smart Contract - CompCollateralSwitch"
            },
            {
              "target": "https://etherscan.io/address/0x24C537A93A9ab75b5A593BA0B2dc03200345A844#code",
              "type": "Smart Contract - ReflexerSupply"
            },
            {
              "target": "https://etherscan.io/address/0xcA99fB3430180E43bC1929a3a84d0500E3118e0A#code",
              "type": "Smart Contract - ReflexerWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x0c8320033340277791C5dCD9BC87d20f086BB34b#code",
              "type": "Smart Contract - ReflexerPayback"
            },
            {
              "target": "https://etherscan.io/address/0x28E78093dF6d370Ca9ea1aC85668d8a097f09087#code",
              "type": "Smart Contract - ReflexerGenerate"
            },
            {
              "target": "https://etherscan.io/address/0xcf174aFFbB7be200afa37Dfc4CD067ae3Cb91054#code",
              "type": "Smart Contract - ReflexerOpen"
            },
            {
              "target": "https://etherscan.io/address/0x5F66CC360657Bf224aa280Ae104550b5042E185a#code",
              "type": "Smart Contract - ReflexerNativeUniV2SaviourDeposit"
            },
            {
              "target": "https://etherscan.io/address/0x9C7518F7a0f5bC4D57702fcE8C0778F7Fb2f09f8#code",
              "type": "Smart Contract - ReflexerNativeUniV2SaviourGetReserves"
            },
            {
              "target": "https://etherscan.io/address/0x6a61363243Cad1BE5caaE5e53284520592deB154#code",
              "type": "Smart Contract - ReflexerNativeUniV2SaviourWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x28C568A2C7216e8b61C71527C4b9ce2b92d217aa#code",
              "type": "Smart Contract - McdGenerate"
            },
            {
              "target": "https://etherscan.io/address/0xD2dc5DA4172a3901C9f26c7cd29eFE656Fc20332#code",
              "type": "Smart Contract - McdGive"
            },
            {
              "target": "https://etherscan.io/address/0x66c7f4C7e59b6e780142aaD5c9f427FA5F8dfFc6#code",
              "type": "Smart Contract - McdMerge"
            },
            {
              "target": "https://etherscan.io/address/0x6467a24950451b3abd6654Fb6d8ae01635dcFe00#code",
              "type": "Smart Contract - McdOpen"
            },
            {
              "target": "https://etherscan.io/address/0xF8811168BDb3665de94c05B8DbA42588D038ce1b#code",
              "type": "Smart Contract - McdPayback"
            },
            {
              "target": "https://etherscan.io/address/0xD3C50623F44E97B59CFbfC1232146858be18e6cc#code",
              "type": "Smart Contract - McdSupply"
            },
            {
              "target": "https://etherscan.io/address/0x19654613812850081D80e7EC992e8F71DcbD30B4#code",
              "type": "Smart Contract - McdWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x37FC940Be30e11d578243dEBea4f9B950E22aC99#code",
              "type": "Smart Contract - InstPullTokens"
            },
            {
              "target": "https://etherscan.io/address/0x15E22A8160F0bDb619C6846C982F8D208A5670D2#code",
              "type": "Smart Contract - ClaimInstMaker"
            },
            {
              "target": "https://etherscan.io/address/0x32cEdFfF6e64f6cD1907Ae0b27b78c36320587E7#code",
              "type": "Smart Contract - ChangeProxyOwner"
            },
            {
              "target": "https://etherscan.io/address/0xD78E5D95A28a67F7851b0a94505790813A92E405#code",
              "type": "Smart Contract - BalancerV2Supply"
            },
            {
              "target": "https://etherscan.io/address/0xCcf4b96407BEF25D7df1c95045CCF64950e73E97#code",
              "type": "Smart Contract - BalancerV2Withdraw"
            },
            {
              "target": "https://etherscan.io/address/0x259Ae83567858B7960d2De0D00F3717a764aD73B#code",
              "type": "Smart Contract - BalancerV2Claim"
            },
            {
              "target": "https://etherscan.io/address/0xC627A3F12c4f7236218a511DC10e3f5ead1a1D7c#code",
              "type": "Smart Contract - RariDeposit"
            },
            {
              "target": "https://etherscan.io/address/0x8408EeCcC2c2FC25F2cF720398DAAD0A05EfE487#code",
              "type": "Smart Contract - RariWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x1887235CFE1927782a3e7eD15fb073586c949858#code",
              "type": "Smart Contract - MStableDeposit"
            },
            {
              "target": "https://etherscan.io/address/0xb164456190577fbBe8FB8bF5Fa48a106b328A579#code",
              "type": "Smart Contract - MStableWithdraw"
            },
            {
              "target": "https://etherscan.io/address/0x28279A806aDeDedFD33e39C7375dc0c0ee943847#code",
              "type": "Smart Contract - MStableClaim"
            },
            {
              "target": "https://app.defisaver.com/",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "DeFi Saver is an advanced management app for decentralized finance protocols such as MakerDAO, Compound, Aave and Reflexer, with a special focus on creating and managing leveraged positions.\n\nSome of the specific things you can use DeFi Saver for include:\n  - Creating and managing collateralized debt positions in any of the most popular DeFi lending protocols, with 1-tx instant leveraging and deleveraging options\n  - Automating your position for automatic liquidation protection, as well as automatic leverage management, based on market movements\n  - Refinancing your position with options to change collateral or debt assets, or to move to a different protocol altogether with the Loan Shifter\n  - Creating your own custom set of actions to execute within one transaction in their recently introduced Recipe Creator.\n\nFor more information about DeFi Saver, visit their website at [https://defisaver.com/](https://defisaver.com/). \n\nThe bug bounty program is focused around its smart contracts, website and app and is mostly concerned with the loss of user funds and approval/auth attacks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nAll vulnerabilities marked in the [security reviews](https://github.com/DecenterApps/defisaver-v3-contracts/tree/main/audits) are not eligible for a reward.\n\nPayouts are handled by the __Defi Saver__ team directly and are denominated in USD. However, payouts are done in __DAI and USDC__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of Defi Saver can be found at [https://github.com/DecenterApps/defisaver-v3-contracts](https://github.com/DecenterApps/defisaver-v3-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Any sort of loss of funds \n  - Temporary freezing of funds for any amount of time\n  - Unauthorized access\n  - Causing any sort of economical damage to the protocol or the users\n\n__Web/App__\n\n  - Site goes down\n  - XSS (injecting code into the website)\n  - Shell access on server\n  - Persistent injection of text",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "integral",
          "project": "Integral",
          "date": "2021-04-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5dHTFAc230t6p8vYxgilO2/38e96d7cbe65593285dfec560c736985/Integral-logo.jpg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x3EeDC524c234a5b72c09A4B052e7da695e9e7713",
              "type": "Smart Contract - IntegralDelay"
            },
            {
              "target": "https://etherscan.io/address/0x5dFAe56E344B18bC7cd3B8350721FfdD12Ff2b3C#tokentxns",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x8b0Bb0d0D8B3D83EBb7c1B49d79D74dF396634c6#tokentxns",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x3eD27247A8abF40d3D85171536ea98e5eEd94F40#tokentxns",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x5FB51deDd29b8C065cA3Ac4545b6c58b635616C5#tokentxns",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x4370cfd2c62b6e2900d04af97c4d9552484c0e48",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x01d9984489bD4c5f372a6e6Eca1F22c27A77e355",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0xcddD3B9EACce44DDf9d5748C8e8b5F8d630f17EB",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0x3fFecc12a6B46C3Aa32aEA38ac34EfbB6C9B6052",
              "type": "Smart Contract - IntegralPair"
            },
            {
              "target": "https://etherscan.io/address/0xD502F487e1841Fdc805130e13eae80c61186Bc98",
              "type": "Smart Contract - IntegralToken"
            },
            {
              "target": "https://etherscan.io/address/0xc8805cebd927941a3b26e2edced20d666fb118ba",
              "type": "Smart Contract - TimeReleaseSC"
            },
            {
              "target": "https://etherscan.io/address/0x36bD665392236b20bd42e161f02Bf0ae1d9441Ff",
              "type": "Smart Contract - Integral Staking"
            },
            {
              "target": "https://etherscan.io/address/0xFFc0EAC1a1aE79C697607229Aca43Ef422625a40",
              "type": "Smart Contract - Integral Staking"
            }
          ],
          "mdx": {
            "program_overview": "At Integral we build products that rival those of centralized exchanges, in\nservice of our self-custodial decentralized homeland and its users. Most\nimportantly, we address these economic injustices by distributing the upside of\nnetwork effects to our community of users so that using the product means\nowning the product. Each new product we build creates on-chain stickiness that\nfurther counters the centralized exchange product lines.\n\nFurther information about Integral can be found here\n<Link href=\"https://docs.integral.link/\">https://docs.integral.link</Link>.\n\nThe bug bounty program is focused around its smart contracts and is mostly\nconcerned with the loss of user funds in their pools.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to be considered for a reward, all bug reports must include as much\ninformation about the vulnerability including:\n\n- The conditions on which reproducing the bug is contingent.\n- The steps needed to reproduce the bug or, preferably, a proof of concept.\n- The potential implications of the vulnerability being abused.\n\nThe final reward for critical bounty payouts is capped at 10% of economic damage __up to USD 250 000__, primarily based on the funds at risk, but with potentially some additional considerations for PR and branding reasons, at the discretion of the team. However, the minimum reward is __USD 50 000__.\n\nPayouts are handled by the **Integral team** directly and are denominated in\n**USD**. However, payouts can be done as per the bug bounty hunter’s preference\nin **ETH, stablecoins (e.g DAI, USDT, USDC)**, or **ITGR** with vesting.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ribbon",
          "project": "Ribbon",
          "date": "2021-04-12T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1ORcP6RE6HcGhV4bTAv8AN/8ce035bee832701401c4576fda63117c/Ribbon-logo.svg",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $250,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x0FABaF48Bbf864a3947bdd0Ba9d764791a60467A",
              "type": "Smart Contract - ETH Theta Vault"
            },
            {
              "target": "https://etherscan.io/address/0x8b5876f5B0Bf64056A89Aa7e97511644758c3E8c",
              "type": "Smart Contract - WBTC Theta Vault"
            },
            {
              "target": "https://etherscan.io/address/0x16772a7f4a3ca291C21B8AcE76F9332dDFfbb5Ef",
              "type": "Smart Contract - USDC Put ETH Theta Vault"
            },
            {
              "target": "https://etherscan.io/address/0x8FE74471F198E426e96bE65f40EeD1F8BA96e54f",
              "type": "Smart Contract - yvUSDC Put ETH Theta Vault "
            },
            {
              "target": "https://etherscan.io/address/0x25751853Eab4D0eB3652B5eB6ecB102A2789644B",
              "type": "Smart Contract - ETH Theta Vault v2"
            },
            {
              "target": "https://etherscan.io/address/0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F",
              "type": "Smart Contract - WBTC Theta Vault v2"
            }
          ],
          "mdx": {
            "program_overview": "Ribbon is a new protocol that creates crypto structured products for\nDeFi. Structured products are packaged financial instruments that use a\ncombination of derivatives to achieve some specific risk-return objective, such as betting on volatility, enhancing yields or principal protection.  \n\nOne of its products, Theta Vault, is a yield-focused strategy on ETH and WBTC. The first Theta Vault will run a covered call strategy, which earns yield on a weekly basis through writing out of the money covered calls and collecting the premiums.\n\nThe bug bounty program is focused around its smart contracts and is mostly\nconcerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Ribbon** team directly and are denominated in USD.\nHowever, payouts are done in **USDC**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Economic/financial attacks\n  - including flash loan attacks\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Oracle failure/manipulation\n- Novel governance attacks \n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n- Weak encryption\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "idlefinance",
          "project": "Idle Finance",
          "date": "2021-03-25T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7eUa1a0JmUJiA9tfSl2VLP/ad633575bf75d705951196f3bf55c27d/Idlefinance-logo.png",
          "maximum_reward": 250000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $250,000"
            },
            {
              "level": "high",
              "payout": "up to USD $50,000"
            },
            {
              "level": "medium",
              "payout": "up to USD $10,000"
            },
            {
              "level": "low",
              "payout": "up to USD $5,000"
            },
            {
              "level": "none",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://developers.idle.finance/contracts-and-codebase",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Idle is a decentralized protocol dedicated to bringing automatic asset\nallocation and aggregation to the interest-bearing tokens economy. This\nprotocol bundles stable crypto-assets (stablecoins) into tokenized baskets that\nare programmed to automatically rebalance based on different management logics.\n\nThe Idle Protocol employs a strategy-token system. Every allocation strategy\nhas its own set of tokens that represent a pool of yield-generating assets\nspread across different DeFi protocols. These tokens represent the investor’s\nproportional ownership of the whole pool and the interest accrued over\ntime. This issuing method is similar to traditional mutual funds shares\nstructure, and it allows Idle to be non-custodial.\n\nCurrently, Idle uses two different allocation strategies:\n\n- **Best-Yield**: this strategy combines multiple money markets to\nautomatically provide the highest interest rates, beating the best traditional\nofferings across interest-bearing tokens and DeFi protocols.\n\n- **Risk-Adjusted**: this strategy automatically changes the asset allocation\nin order to find the optimal mix between risk scores and yield.\n\nConsequently, users can hold IdleTokens related to a specific strategy and a\nspecific stablecoin.\n\nIdle aims to unlock the power of decentralized finance for everyone by a single\nvehicle that automatically rebalances between underlying providers to always\nmaintain the highest rates or the optimal risk/return allocation.\n\nThe bug bounty program is focused around the Idle protocol V4 smart contracts\nand the prevention of loss of user funds. It was created due to an <Link href=\"https://snapshot.org/#/idlefinance.eth/proposal/QmakuMytvpec6TTThEkBr6M4YGKfCssFcQyAa8LcbB9fff\">approved poll</Link> within the Idle community.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward for critical bounty payouts is capped at 10% of the funds at\nrisk based on the vulnerability reported.\n\nTheft of yield or interest is considered as Medium but may be considered High depending on the amount of funds at risk.\n\nBest practices critiques are not accepted under this program. This None/Very Low \nlevel is for bugs that may be considered “Low” but have an even lower impact level.\n\nThe likelihood of exploitability is also taken into consideration in the\ndetermination of the final payout amount based on the severity of the bug\nreported according to the table below:\n\n| | Very Low/None | Low | Medium | High | Critical |\n| :-- | :-- | :-- | :-- | :-- | :-: |\n| Almost Certain | $1,000 | $5,000 | $10,000 | $50,000 | $250,000 |\n| Likely | $500 | $1,000 | $5,000 | $10,000 | $50,000 | \n| Possible | $100 | $500 | $1,000 | $5,000 | $10,000 |\n| Unlikely  | $100 | $100 | $500 | $1,000 | $5,000 |\n| Almost Possible | $100 | $100 | $100 | $500 | $1,000 |\n\nPayouts are handled by **Idle Finance** governance directly and are denominated\nin **USD**. Payouts under $10,000 are done in **USDC**. When payouts are over\n$10,000, the first $10,000 is paid in **USDC** and then the rest are paid in\n**IDLE** up to the total of $250 000.",
            "assets_body": "Governance and Utilities contracts are not covered under this bug bounty program.\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "superfluid",
          "project": "Superfluid",
          "date": "2022-02-10T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2OOJdM7H7ZWI54ZO8sv9NX/fc52c455ed577f0aa83b99ba45beef22/Superfluid_Logo.png",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $30,000 - $200,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000 - $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0xE0cc76334405EE8b39213E620587d815967af39C",
              "type": "​Smart Contract - Resolver​"
            },
            {
              "target": "https://polygonscan.com/address/0x3E14dC1b13c488a8d5D310918780c983bD5982E7",
              "type": "​​Smart Contract - Host​"
            },
            {
              "target": "https://polygonscan.com/address/0x3ad3f7a0965ce6f9358ad5cce86bc2b05f1ee087",
              "type": "Smart Contract - Governance"
            },
            {
              "target": "https://polygonscan.com/address/0x6EeE6060f715257b970700bc2656De21dEdF074C",
              "type": "​Smart Contract - ​CFAv1​"
            },
            {
              "target": "https://polygonscan.com/address/0xB0aABBA4B2783A72C52956CDEF62d438ecA2d7a1",
              "type": "​​Smart Contract - IDAv1​"
            },
            {
              "target": "https://polygonscan.com/address/0x2C90719f25B10Fc5646c82DA3240C76Fa5BcCF34",
              "type": "​​Smart Contract - SuperTokenFactory​"
            },
            {
              "target": "https://polygonscan.com/address/0x15F0Ca26781C3852f8166eD2ebce5D18265cceb7",
              "type": "​​Smart Contract - SuperfluidLoader v1​"
            },
            {
              "target": "https://polygonscan.com/address/0x1b18770E5198983AF04B3735d01E09A57d27bD43",
              "type": "​Smart Contract - ​TOGA​"
            },
            {
              "target": "https://polygonscan.com/address/0x3aD736904E9e65189c3000c7DD2c8AC8bB7cD4e3",
              "type": "​​Smart Contract - MATICx​ - SETH Super Token "
            },
            {
              "target": "https://polygonscan.com/address/0x27e1e4E6BC79D93032abef01025811B7E4727e85",
              "type": "​Smart Contract - ETHx​ - Super Token Wrapper"
            },
            {
              "target": "https://polygonscan.com/address/0x263026e7e53dbfdce5ae55ade22493f828922965",
              "type": "Smart Contract - RIC - Custom Super Token"
            }
          ],
          "mdx": {
            "program_overview": "Superfluid is an asset streaming protocol that has the power to describe cash flows and execute them automatically on-chain over time in a non-interactive way. Superfluid streams are programmable, composable and modular. The first cash flow type allows constant streams of value and one-to-many distributions. All streams are settled at the same time, based on block timestamps. No capital is locked up, and all inflows and outflows are netted in real time, drastically increasing capital efficiency. With a single on-chain transaction, the money will flow from your wallet to the receiver in real time! No further transactions required - it works like magic.\n\nSuperfluid enables:\n  - Real money streaming - constant token flows on-chain with no capital lockups.\n  - Rewards distributions - Fixed cost distribution in a single transaction for any number of receivers.\n  - Anything you can imagine - Superfluid is a flexible developer toolbox to build entirely new applications.\n\nFor more information about Superfluid, please visit [https://www.superfluid.finance](https://www.superfluid.finance).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Superfluid framework bugs\n  - Bugs in CFA/IDA in general\n    - Anything that would avoid streams from being closed\n    - Anything that would result in the sum of all account balances drifting significantly from the total supply\n  - Theft of tokens in third party wrapper contracts \n  - Other unexpected behaviour in any of their token contracts",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical/High smart contract reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThis program has the following severity classification and reward structure. In cases where this conflicts with Immunefi’s own classification system, the structure below will be followed. \n\nCritical: Reward - USD 30 000 - USD 200 000\n  - A reproducible vulnerability discovered in the core protocol that can be exploited by anyone that results in the loss of a portion or all user funds in the Superfluid protocol:\n    - Critical bug which results in the drainage of all user funds (USD 200 000).\n    - Critical bug which results in the drainage of a portion of user funds (USD 30 000 + 15% of user funds at risk or stuck, up to USD 200 000).\n\nHigh: Reward - USD 10 000 - USD 30 000\n  - A reproducible bug by anyone that results in the core protocol not functioning properly where funds are stuck. If funds are stuck: you get a base reward of USD 10 000 + 15% of the total amount of funds that are stuck.\n    - If not reproducible (requires special conditions which can’t be affected by anyone): USD 10 000 + 7.5% of the total amount of funds that are stuck\n\nMedium: Reward - USD 5 000\n  - An unknown vulnerability which results in any of the Superfluid contracts consuming unbounded gas for any operation.\n\nLow: Reward - USD 2 000\n  - A vulnerability that causes any of the contracts to behave in an unintended manner (which leads to a negative user experience) without resulting in loss of user funds or user funds being stuck.\n\nGas griefing attacks in general are classified as Low severity.\n\nThe following known issues are considered to be out of scope: \n  - Gas griefing specifically by spam attacks \n  - Gas griefing specifically in SuperApp termination callbacks \n  - Re-entrance issues:\n    - SuperApp framework allowing callbacks \n    - Super Token is ERC-777, which also allows callbacks \n\nRewards for critical vulnerabilities are further capped at 15% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 30 000__ for Critical bug reports. \n\nSuperfluid requires bug bounty hunters to pass a successful KYC screening in order to be eligible for rewards. By submitting a report, bug bounty hunters agree to share the following information: Name, Surname, Address, Citizenship Country, Wallet Address. The collection of this information will be done by Superfluid Finance Ltd.\n\nPayouts are handled by __Superfluid__ directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Superfluid can be found at [https://github.com/superfluid-finance/protocol-monorepo/tree/dev/packages/ethereum-contracts/](https://github.com/superfluid-finance/protocol-monorepo/tree/dev/packages/ethereum-contracts/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect a contract in the Assets in Scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Superfluid framework bugs\n  - Bugs in CFA/IDA in general\n    - Anything that would avoid streams from being closed\n    - Anything that would result in the sum of all account balances drifting greatly from the total supply\n  - Theft of tokens in wrapper contracts\n  - Frozen/stuck funds \n  - Unbounded gas consumption by contract\n  - Other unexpected behavior in any of the token contracts",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Spam attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "solidly",
          "project": "Solidly",
          "date": "2022-02-03T21:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/aO2rBKx0t1LTE6w0VdgHB/961c40d47e2576296589e765239ba586/Solidly_Logo.jpg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/BaseV1-core.sol",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/BaseV1-gauges.sol",
              "type": "Smart Contract - Gauges"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/BaseV1-minter.sol",
              "type": "Smart Contract - Minter"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/BaseV1-periphery.sol",
              "type": "Smart Contract - Periphery"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/BaseV1-voter.sol",
              "type": "Smart Contract - Voter"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/ve.sol",
              "type": "Smart Contract - veNFT"
            },
            {
              "target": "https://github.com/andrecronje/solidly/blob/master/contracts/ve_dist.sol",
              "type": "Smart Contract - veNFT-dist"
            }
          ],
          "mdx": {
            "program_overview": "Solidly allows low cost, near 0 slippage trades on uncorrelated or tightly correlated assets. The protocol incentivizes fees instead of liquidity.\n\nFor more information about Solidly, please visit [https://github.com/andrecronje/solidly/blob/master/readme.md](https://github.com/andrecronje/solidly/blob/master/readme.md). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical/High smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All Critical/High smart contract bug reports must also come with a suggestion for a fix in order to be considered for a reward. \n\nRewards for critical smart contract vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum reward of __USD 50 000__ for Critical bug reports.\n\nThe following known issues are considered to be out-of-scope of this bug bounty program:\n  - Front running approvals/transfers \n  - All known issues highlighted in the following audit report: [https://github.com/andrecronje/solidly/blob/master/audits/e456a816-3802-4384-894c-825a4177245a.pdf ](https://github.com/andrecronje/solidly/blob/master/audits/e456a816-3802-4384-894c-825a4177245a.pdf)\n\nPayouts are handled by the __Solidly__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Solidly can be found at [https://github.com/andrecronje/solidly](https://github.com/andrecronje/solidly). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 60 minutes\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "debridge",
          "project": "deBridge",
          "date": "2022-01-21T14:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4gJ8bOnkVhbdw5Q0ifWOts/e6a561b18bee2eaa58c815dd5de35591/deBridge_logo.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $200,000 and unique deBridge NFT"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
              "type": "Smart Contract - ProxyAdmin ETH"
            },
            {
              "target": "https://bscscan.com/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
              "type": "Smart Contract - ProxyAdmin BSC"
            },
            {
              "target": "https://polygonscan.com/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
              "type": "Smart Contract - ProxyAdmin MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
              "type": "Smart Contract - ProxyAdmin HECO"
            },
            {
              "target": "https://arbiscan.io/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
              "type": "Smart Contract - ProxyAdmin ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
              "type": "Smart Contract - deBridgeGate Proxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
              "type": "Smart Contract - deBridgeGate Proxy BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
              "type": "Smart Contract - deBridgeGate Proxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
              "type": "Smart Contract - deBridgeGate Proxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
              "type": "Smart Contract - deBridgeGate Proxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x51bFD427D06B2a5FC3588f9d023994A9f70e0Ce0",
              "type": "Smart Contract - deBridgeGate ETH"
            },
            {
              "target": "https://bscscan.com/address/0x51bFD427D06B2a5FC3588f9d023994A9f70e0Ce0",
              "type": "Smart Contract - deBridgeGate BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x51bFD427D06B2a5FC3588f9d023994A9f70e0Ce0",
              "type": "Smart Contract - deBridgeGate MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x51bFD427D06B2a5FC3588f9d023994A9f70e0Ce0",
              "type": "Smart Contract - deBridgeGate HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x51bFD427D06B2a5FC3588f9d023994A9f70e0Ce0",
              "type": "Smart Contract - deBridgeGate ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
              "type": "Smart Contract - deBridgeToken Proxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
              "type": "Smart Contract - deBridgeToken Proxy BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
              "type": "Smart Contract - deBridgeToken Proxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
              "type": "Smart Contract - deBridgeToken Proxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
              "type": "Smart Contract - deBridgeToken Proxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
              "type": "Smart Contract - deBridgeToken ETH"
            },
            {
              "target": "https://bscscan.com/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
              "type": "Smart Contract - deBridgeToken BSC"
            },
            {
              "target": "https://polygonscan.com/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
              "type": "Smart Contract - deBridgeToken MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
              "type": "Smart Contract - deBridgeToken HECO"
            },
            {
              "target": "https://arbiscan.io/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
              "type": "Smart Contract - deBridgeToken ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
              "type": "Smart Contract - deBridgeTokenDeployer ETH"
            },
            {
              "target": "https://bscscan.com/address/0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
              "type": "Smart Contract - deBridgeTokenDeployer BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
              "type": "Smart Contract - deBridgeTokenDeployer MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
              "type": "Smart Contract - deBridgeTokenDeployer HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
              "type": "Smart Contract - deBridgeTokenDeployer ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
              "type": "Smart Contract - SignatureVerifier Proxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
              "type": "Smart Contract - SignatureVerifier Proxy BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
              "type": "Smart Contract - SignatureVerifier Proxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
              "type": "Smart Contract - SignatureVerifier Proxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
              "type": "Smart Contract - SignatureVerifier Proxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
              "type": "Smart Contract - SignatureVerifier ETH"
            },
            {
              "target": "https://bscscan.com/address/0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
              "type": "Smart Contract - SignatureVerifier BSC"
            },
            {
              "target": "https://polygonscan.com/address/0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
              "type": "Smart Contract - SignatureVerifier MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
              "type": "Smart Contract - SignatureVerifier HECO"
            },
            {
              "target": "https://arbiscan.io/address/0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
              "type": "Smart Contract - SignatureVerifier ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
              "type": "Smart Contract - CallProxy Proxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
              "type": "Smart Contract - CallProxy Proxy BSC"
            },
            {
              "target": " https://polygonscan.com/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
              "type": "Smart Contract - CallProxy Proxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
              "type": "Smart Contract - CallProxy Proxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
              "type": "Smart Contract - CallProxy Proxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0xd5317E82BFEFf70b4773f0fcab5e2ABFA3c7D63b",
              "type": "Smart Contract - CallProxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0xd5317E82BFEFf70b4773f0fcab5e2ABFA3c7D63b",
              "type": "Smart Contract - CallProxy BSC"
            },
            {
              "target": "https://polygonscan.com/address/0xd5317E82BFEFf70b4773f0fcab5e2ABFA3c7D63b",
              "type": "Smart Contract - CallProxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xd5317E82BFEFf70b4773f0fcab5e2ABFA3c7D63b",
              "type": "Smart Contract - CallProxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0xd5317E82BFEFf70b4773f0fcab5e2ABFA3c7D63b",
              "type": "Smart Contract - CallProxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
              "type": "Smart Contract - SimpleFeeProxy Proxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
              "type": "Smart Contract - SimpleFeeProxy Proxy BSC"
            },
            {
              "target": " https://polygonscan.com/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
              "type": "Smart Contract - SimpleFeeProxy Proxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
              "type": "Smart Contract - SimpleFeeProxy Proxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
              "type": "Smart Contract - SimpleFeeProxy Proxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0x27406EbF0b76923d93b4C6c6224bCaB7fFf11f87",
              "type": "Smart Contract - SimpleFeeProxy ETH"
            },
            {
              "target": "https://bscscan.com/address/0x27406EbF0b76923d93b4C6c6224bCaB7fFf11f87",
              "type": "Smart Contract - SimpleFeeProxy BSC"
            },
            {
              "target": "https://polygonscan.com/address/0x27406EbF0b76923d93b4C6c6224bCaB7fFf11f87",
              "type": "Smart Contract - SimpleFeeProxy MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0x27406EbF0b76923d93b4C6c6224bCaB7fFf11f87",
              "type": "Smart Contract - SimpleFeeProxy HECO"
            },
            {
              "target": "https://arbiscan.io/address/0x27406EbF0b76923d93b4C6c6224bCaB7fFf11f87",
              "type": "Smart Contract - SimpleFeeProxy ARBI"
            },
            {
              "target": "https://etherscan.io/address/0xFCf83648b8cDeF62e5d03319a6f1FCE16e4D6A59",
              "type": "Smart Contract - WethGate ETH"
            },
            {
              "target": "https://bscscan.com/address/0xFCf83648b8cDeF62e5d03319a6f1FCE16e4D6A59",
              "type": "Smart Contract - WethGate BSC"
            },
            {
              "target": "https://polygonscan.com/address/0xFCf83648b8cDeF62e5d03319a6f1FCE16e4D6A59",
              "type": "Smart Contract - WethGate MATIC"
            },
            {
              "target": "https://hecoinfo.com/address/0xFCf83648b8cDeF62e5d03319a6f1FCE16e4D6A59",
              "type": "Smart Contract - WethGate HECO"
            }
          ],
          "mdx": {
            "program_overview": "[deBridge](https://debridge.finance/) __is a cross-chain interoperability and liquidity transfer protocol__ that allows decentralized transfer of data and assets between various blockchains. The deBridge protocol is an infrastructure platform and hooking service for:\n\n  - cross-chain composability of smart contracts\n  - cross-chain swaps\n  - bridging of any arbitrary asset and data\n  - interoperability and bridging of NFTs\n\nMore information about the project can be also found in the [documentation portal](https://docs.debridge.finance/) or at the website \n[https://debridge.finance/](https://debridge.finance/).\n\nExamples of how users can interact with the protocol from the command line can be found in the repository: [https://github.com/debridge-finance/debridge-contracts-v1/tree/main/examples](https://github.com/debridge-finance/debridge-contracts-v1/tree/main/examples).\n\nStatus of transactions can be tracked through the [deBridge explorer](https://mainnet-explorer.debridge.finance/).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds locked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed assets\n  - Permanent freezing of unclaimed assets\n  - Smart contract fails to deliver promised returns\n  - Unauthorized minting of wrapped assets that will lead them to loosing peg",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nIn addition to Immunefi’s Vulnerability Severity Classification System, deBridge classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\n\nCritical\n  - More than 5% of the loss of TVL or an unauthorized minting of deAssets in an amount that leads to substantial loss of the peg of the wrapped asset (Total supply of deAsset exceeds amount of underlying collateral locked for more than 5%)\n\nHigh\n  - Up to 5% of the loss of TVL or an unauthorized minting of deAssets in an amount that leads to substantial loss of the peg of the wrapped asset (Total supply of deAsset is on up to 5% exceeds the amount of underlying collateral locked)\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Default bridging functionality doesn’t support non-standard assets (e.g. rebase assets, assets with elastic supply or tokens with fees during transfer) \n  - If a user sets an incorrect receiver or fallback address he won’t be able to claim his transfer in the destination chain and funds might be locked forever\n  - If user passes ​​REVERT_IF_EXTERNAL_FAIL flag and specifies \"data\" and \"receiver address\" params that will lead to tx being constantly reverted\n  - Framework used by the deBridge node exploitation of which requires knowledge of IP address unless information about IP address was obtained during the attack\n  - Problem with the callProxy smart contract when gas limit specified by claimer is not enough for the proper execution of the externalCall that leads to externalCall being reverted even though transaction itself is completed\n\nPayouts are handled by the __deBridge__ team directly and are denominated in USD. However, payouts are done in __USDT and USDC__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of deBridge can be found at [https://github.com/debridge-finance/debridge-contracts-v1](https://github.com/debridge-finance/debridge-contracts-v1) at main branch. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For deBridge contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds locked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed assets\n  - Permanent freezing of unclaimed assets\n  - Smart contract fails to deliver promised returns\n  - Unauthorized minting of wrapped assets that will lead them to loosing peg",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Gas optimizations\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "cap",
          "project": "Cap",
          "date": "2021-12-14T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7JGVoJ8jvtTiDBTSVL7esK/d198a575bfe76fe6fdf8c93466270bac/Cap_logo.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0x5ABFF8F8D5b13253dCAB1e427Fdb3305cA620119#code",
              "type": "Smart Contract - Router"
            },
            {
              "target": "https://arbiscan.io/address/0xCAEc650502F15c1a6bFf1C2288fC8F819776B2eC#code",
              "type": "Smart Contract -Trading"
            },
            {
              "target": "https://arbiscan.io/address/0xE195a15533c01c8cD6b28f09066842486f80F8f2#code",
              "type": "Smart Contract - Oracle"
            },
            {
              "target": "https://arbiscan.io/address/0x283C41b726634fBD6B72aA22741B202DB7E56aaC#code",
              "type": "Smart Contract - Treasury"
            },
            {
              "target": "https://arbiscan.io/address/0xE0cCd451BB57851c1B2172c07d8b4A7c6952a54e#code",
              "type": "Smart Contract - Pool ETH"
            },
            {
              "target": "https://arbiscan.io/address/0x958cc92297e6F087f41A86125BA8E121F0FbEcF2#code",
              "type": "Smart Contract - Pool USDC"
            },
            {
              "target": "https://arbiscan.io/address/0x29163356bBAF0a3bfeE9BA5a52a5C6463114Cb5f#code",
              "type": "Smart Contract - Pool Rewards ETH"
            },
            {
              "target": "https://arbiscan.io/address/0x9190338f23bE9024A9F9628E44cd169926fE7795#code",
              "type": "Smart Contract - Rewards"
            },
            {
              "target": "https://arbiscan.io/address/0x10f2f3B550d98b6E51461a83AD3FE27123391029#code",
              "type": "Smart Contract - Pool Rewards USDC"
            },
            {
              "target": "https://arbiscan.io/address/0xC8CDd2Ea6A5149ced1F2d225D16a775ee081C67D#code",
              "type": "Smart Contract - Pool CAP"
            },
            {
              "target": "https://arbiscan.io/address/0x1E91F67a5aa0137aD86eEbAD64E2C2a1B6ae30E5#code",
              "type": "Smart Contract - CAP Rewards ETH"
            },
            {
              "target": "https://arbiscan.io/address/0xCEFFAc2522b837012B576770b6F5DD75a3F75C38#code",
              "type": "Smart Contract - CAP Rewards USDC"
            }
          ],
          "mdx": {
            "program_overview": "Cap is a decentralized trading protocol. It's designed to be fast, cheap, and easy to use by anyone.\n\n  - Trade directly from your wallet, no account needed. Optionally select leverage up to 50x to multiply potential profits and losses. Trades are executed by a dark oracle network in seconds.\n  - Pool funds to back trader profits and receive a share of trader losses and fees.\n  - Stake CAP, Cap's native token, to receive a share of protocol fees.\n\nCap is maintained by a community of internet friends.\n\nFor more information about Cap, please visit [https://www.cap.finance/](https://www.cap.finance/). \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Theft of treasury funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __Cap__ team directly and are denominated in USD. However, payouts are done in __ETH or CAP__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Cap can be found at [https://github.com/0xcap/protocol](https://github.com/0xcap/protocol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of treasury funds",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "lixir",
          "project": "Lixir",
          "date": "2021-11-04T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/88y16tZAUjwYmKupDboav/eec7cc98ffc21d2c94af5b834c544039/Lixir_logo.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xda559e686B7BB1eaeC95B3548555866e4174A3ac",
              "type": "Smart Contract - LIX / ETH vault"
            },
            {
              "target": "https://etherscan.io/address/0x453a9f40a24dbe3cdb4edc988af9bfe0f5602b15",
              "type": "Smart Contract - USDC/ ETH vault"
            },
            {
              "target": "https://etherscan.io/address/0x9e815d1c9a4be458e7f9a0add703e7545eda7c28",
              "type": "Smart Contract - WBTC/ETH vault"
            },
            {
              "target": "https://etherscan.io/address/0x29AdcCF67821E9236b401dF02080BAC67F84192D",
              "type": "Smart Contract - Escrow"
            },
            {
              "target": "https://etherscan.io/address/0xeE88c0bAd3471b15F5A4ea651C5E715986E1C3E3",
              "type": "Smart Contract - Gauge Controller"
            },
            {
              "target": "https://etherscan.io/address/0x5352efb4bccec5dfbe122864af94c282ea566964#code",
              "type": "Smart Contract - Gauge Controller"
            },
            {
              "target": "https://etherscan.io/address/0x1AF8ef20E0F447329933753BAa28353EFE21f534",
              "type": "Smart Contract - Lix distributor"
            },
            {
              "target": "https://etherscan.io/address/0xdbfb227d9902207bc33be168ed0ee64dffe20b73#code",
              "type": "Smart Contract - Lix distributor"
            },
            {
              "target": "https://etherscan.io/address/0x18bf8A3eE39Be5730189A0C88D90f744e3c55B20",
              "type": "Smart Contract - Registry "
            },
            {
              "target": "https://etherscan.io/address/0x0D882F5101Ef587dbDFC474dc8bBF72BA89b5C2A",
              "type": "Smart Contract - Eth_vault_impl"
            },
            {
              "target": "https://etherscan.io/address/0xdD0ed51D13eF62dda5060Fe3A7c3a3cDf83B0E1f#code",
              "type": "Smart Contract - Factory"
            },
            {
              "target": "https://etherscan.io/address/0x1e7A7a5205dfB0a26f5430fD9335e7Cb5C6D41c0#code",
              "type": "Smart Contract - vault_impl "
            }
          ],
          "mdx": {
            "program_overview": "Lixir Finance is a concentrated liquidity manager designed to automate liquidity management and optimize returns. Lixir sets out to integrate the next generation of Automated Market Makers (AMMs) that offer the ability to provide liquidity in a tight range, such as Uniswap V3. Concentrated liquidity allows liquidity providers to greatly increase the revenue from \n\nLiquidity Provider fees (LP fees), but there are trade-offs. Lixir is designed to simplify and optimize these trade-offs through a user-friendly interface that hides all the complexity that concentrated liquidity introduces.\n\nFor more information about Lixir, please visit https://lixir.finance/  \nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical Smart Contract bug reports require a PoC, and a suggestion for a fix for Medium, High and Critical bugs is required to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 15% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the Lixir team directly and are denominated in USD. However, payouts are done in __Lix__.\n",
            "assets_body": "All smart contracts of Lixir can be found at [https://github.com/LIXIR-FINANCE](https://github.com/LIXIR-FINANCE). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "reaperfarm",
          "project": "Reaper Farm",
          "date": "2021-11-02T04:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4QCx4iRA3foAWikoaUPI5n/2e894eef68ccb98731dcbb328567c7f1/Reaper_Farm_Logo.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://ftmscan.com/address/0x5c98dc41a468389ff5b83217ea8a3e33ee975a2a#code",
              "type": "Smart Contract - ReaperAutoCompoundBeethoven"
            }
          ],
          "mdx": {
            "program_overview": "Reaper is an auto-compounding yield farm which maximizes user's yields by leveraging the power of compound interest.\n\nSimply deposit your liquidity tokens with them and they will farm for you. Whenever a reward is emitted they swap it for more liquidity tokens and put them back to work.\n\nFor more information about Reaper Farm, please visit [https://docs.reaper.farm/reaper-farms/](https://docs.reaper.farm/reaper-farms/)\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical/High/Medium smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of USD 75 000 for Critical bug reports. \n\nTheft of Yield is considered Critical if the theft is greater than the equivalent of __USD 100 000__.\n\nPayouts are handled by the __Reaper Farm__ team directly and are denominated in USD. However, payouts are done in __FTM__, __USDC__ or a mix of both, at the discretion of the team.",
            "assets_body": "Impacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield for at least 2 weeks",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n Smart Contracts and Blockchain \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "betafinance",
          "project": "Beta Finance",
          "date": "2021-08-17T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/01NeyncoRLpODkUA9xtj3U/d670eaf856d095aa5c2ae33814f96330/beta.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x0673418735981C0b54eCb483076F1de0372E5171",
              "type": "Smart Contract - ProxyAdmin"
            },
            {
              "target": "https://etherscan.io/address/0x39a31eff10631ef94d2f34b7d72ca01b0f0f84de",
              "type": "Smart Contract - BetaOracleUniswapV2"
            },
            {
              "target": "https://etherscan.io/address/0xfb4beadab802560ba29d575211cd4bf8f477f405",
              "type": "Smart Contract - BetaInterestModelV1"
            },
            {
              "target": "https://etherscan.io/address/0x59334e2693168c3f8c9e0fcbe029dab9daf6b9c5",
              "type": "Smart Contract - BetaConfig"
            },
            {
              "target": "https://etherscan.io/address/0xaf152394f6928d40678ee7bbdd59ec83b3f166ae",
              "type": "Smart Contract - BTokenDeployer"
            },
            {
              "target": "https://etherscan.io/address/0x42e1f3f490a6000f6f74f224151e38b371f76d32",
              "type": "Smart Contract - BetaBank (impl)"
            },
            {
              "target": "https://etherscan.io/address/0x972a785b390D05123497169a04c72dE652493BE1",
              "type": "Smart Contract - BetaBank (proxy)"
            },
            {
              "target": "https://etherscan.io/address/0x74cac868f2254f1a6b7ca951f0d86eac4a65c132",
              "type": "Smart Contract - BToken (bweth)"
            },
            {
              "target": "https://etherscan.io/address/0xbf3e3e6c558102f52057b87d385e03ea064c904b",
              "type": "Smart Contract - WETHGateway"
            },
            {
              "target": "https://etherscan.io/address/0x068af1ec336344cd122b9811ef90d2384519005f",
              "type": "Smart Contract - BetaRunnerLending"
            },
            {
              "target": "https://etherscan.io/address/0x9136dfac5435cd0bc627b9400415a19690134a63",
              "type": "Smart Contract - BetaRunnerUniswapV2"
            },
            {
              "target": "https://etherscan.io/address/0x28130d2f98C3130A04D338Df6081Ef607664A0b9",
              "type": "Smart Contract - BetaRunnerUniswapV2 (Sushiswap)"
            },
            {
              "target": "https://etherscan.io/address/0x05f8f2bB588c8E3303769AfD0CD3f4B90f684a40",
              "type": "Smart Contract - BetaRunnerUniswapV3"
            }
          ],
          "mdx": {
            "program_overview": "Beta Finance is the permissionless money market for borrowing, lending, and shorting crypto assets. This means that anyone at any time is able to create a money market for any crypto asset. Their mission is to offset the volatility in DeFi today by developing critical infrastructure and user tooling to facilitate market efficiency. They stand by the DeFi ethos of \"Open Finance For All\" and seek to re-define finance by providing a foundational block in DeFi that future projects will be built upon.\n\nFor more information about Beta Finance, please visit [https://betafinance.org/](https://betafinance.org/).  \n\nThe bug bounty program covers its smart contracts and is focused on preventing thefts and freezing of principal of any amount.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical bug reports are further capped at 10% of economic damage, primarily based on funds at risk, though considerations may be given to PR and branding effects, at the discretion of the team. \n\nPayouts are handled by the __Beta Finance__ team directly and are denominated in USD. Payouts are done in __USDT__.",
            "assets_body": "For further reference, all other BTokens can be tracked on Create method here: \n[https://etherscan.io/address/0x38a466b5c0f1d09918fc8e795945bf3ad32d0080](https://etherscan.io/address/0x38a466b5c0f1d09918fc8e795945bf3ad32d0080) \n\nAdditionally, the GitHub repo for Beta Finance can be found at \n[https://github.com/beta-finance/beta](https://github.com/beta-finance/beta)\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 hour",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "router",
          "project": "Router",
          "date": "2021-08-06T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/76RFX4B9jmLtRSPhSGVsUQ/51bf95cc0fa626c08870f825e41c486d/Router.jpeg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x2D7D5f298067E81e8827eB686428881f4c988dC1",
              "type": "Smart Contract: BSC Voter"
            },
            {
              "target": "https://bscscan.com/address/0xf18aCC02628009231d7BAAF9a7a24C0860Dda6cb",
              "type": "Smart Contract: BSC Bridge"
            },
            {
              "target": "https://bscscan.com/address/0x00b8F3E184e5DaAadB8fdA995bbabBCC1b35Ae93",
              "type": "Smart Contract: BSC ERC20Handler"
            },
            {
              "target": "https://bscscan.com/address/0xA63f3147C6bAE70A53a30e30421b1a992e60Aac2",
              "type": "Smart Contract: BSC Feemanager"
            },
            {
              "target": "https://bscscan.com/address/0x6e14f48576265272B6CAA3A7cC500a26050Be64E",
              "type": "Smart Contract: BSC HandlerReserve"
            },
            {
              "target": "https://polygonscan.com/address/0x2D7D5f298067E81e8827eB686428881f4c988dC1",
              "type": "Smart Contract: Polygon Mainnet Voter"
            },
            {
              "target": "https://polygonscan.com/address/0xf18aCC02628009231d7BAAF9a7a24C0860Dda6cb",
              "type": "Smart Contract: Polygon Mainnet Bridge"
            },
            {
              "target": "https://polygonscan.com/address/0x00b8F3E184e5DaAadB8fdA995bbabBCC1b35Ae93",
              "type": "Smart Contract: Polygon Mainnet ERC20Handler"
            },
            {
              "target": "https://polygonscan.com/address/0xA63f3147C6bAE70A53a30e30421b1a992e60Aac2",
              "type": "Smart Contract: Polygon Mainnet Feemanager"
            },
            {
              "target": "https://polygonscan.com/address/0x6e14f48576265272B6CAA3A7cC500a26050Be64E",
              "type": "Smart Contract: Polygon Mainnet HandlerReserve"
            },
            {
              "target": "https://www.routerprotocol.com/",
              "type": "Web/App"
            },
            {
              "target": "https://app.routerprotocol.com/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Router is a cross chain liquidity infrastructure primitive that aims to seamlessly provide bridging infra between various current and emerging layer-1 and layer-2 blockchain solutions, such as Matic and Ethereum.\n\nThis is achieved with Router's Cross-Chain Liquidity Protocol, (XCLP) acts as a bridging infrastructure between these blockchain solutions to allow contract-level data flow across them, thus enabling asset-level data transfer with stablecoins being the medium of value transfer. Aside from connecting blockchains and enabling a free flow of information, Router will also make smart order-routing possible, enabling users to swap their assets from different networks seamlessly.\n\nFor more information about Router, please visit [https://routerprotocol.com/](https://routerprotocol.com/). \n\nThe bug bounty program covers its smart contracts and app and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Product App goes down\n  - Access to sensitive pages without authorization\n  - Economic Attacks of any kind",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be accepted. Additionally, all bug reports that are Medium or higher are required to include a suggestion for a fix in order to be considered for a reward.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. However, the minimum reward amount is USD 25 000. \n\nPayouts are handled by the __Router__ team directly and are denominated in USD. Payouts are done in __ETH__, __USDT__, or __ROUTE__, at the discretion of the team. All payouts above __USD 25 000__ are only completed in __ROUTE__.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 30 minutes (any lower is out of scope)\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Loss of user funds staked (principal) by freezing or theft\n  - Stealing funds from Bridge contract\n  - Attacking bridge to get user deposits\n  - Preventing users from withdrawing liquidity\n\n__Web/App__\n\nOnly impacts resulting in direct economic damage are accepted in this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Inline Assembly Vulnerabilities\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - Horizontal Privilege Escalation\n  - CSRF with impact\n  - Internal SSRF\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "beltfinance",
          "project": "Belt Finance",
          "date": "2021-07-14T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1Cs2KNUqh33RMSJTA8JNxd/6c4a17f2303fd30ee7293773684a4238/Belt.fi.png",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $50,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x67fc8d24A4E59357eFD3614D5122E9e3bAD1FC6E",
              "type": "Smart Contract - StrategyAlpha (asset: BNB, strategy: Alpha Finance)"
            },
            {
              "target": "https://bscscan.com/address/0xEcB589831eefBdbBc48D1f86294724c76Acd3314",
              "type": "Smart Contract - SingleStrategyToken2 (asset: BNB, strategy: StrategyAlpha)"
            },
            {
              "target": "https://bscscan.com/address/0xbFC72d6421352e2E25fD5E1a1f11eBA138c6910f",
              "type": "Smart Contract - StrategyFortubeV2 (asset: BNB, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0x5AcE08Ff6D79663f9bF90686744C214317d0Df8E",
              "type": "Smart Contract - SingleStrategyToken (asset: BNB, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0x1e89dd751Ba1C77B39e62131dE5266796d2D201D",
              "type": "Smart Contract - StrategyVenusV3 (asset: BNB, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x24E91AC6D37655474B3e2F01118FF0e8CEafE019",
              "type": "Smart Contract - SingleStrategyToken (asset: BNB, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0x0843cba3fB7FAc1e12Ad3945457Aa6f9816d1577",
              "type": "Smart Contract - StrategyAlpaca (asset: BNB, strategy: Alpaca Finance)"
            },
            {
              "target": "https://bscscan.com/address/0xE096B123f854A107AB96318B236eac40a30EAf67",
              "type": "Smart Contract - SingleStrategyToken2 (asset: BNB, strategy: StrategyAlpaca)"
            },
            {
              "target": "https://bscscan.com/address/0xC43eB5201002C8df77d1Ab3038a3B0cBdE25b7a0",
              "type": "Smart Contract - StrategyVoidV2 (asset: BNB, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0x5142F6857f029BED5dDF6247D8a1f75984a3a380",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: BNB, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0xa8Bb71facdd46445644C277F9499Dd22f6F0A30C",
              "type": "Smart Contract - MultiStrategyToken (asset: BNB, strategies:SST2Alpha, SSTFortube, SSTVenusV2, SST2Alpaca, VST)"
            },
            {
              "target": "https://bscscan.com/address/0xB29bb76895438514764b1E62dF409088b04d6F01",
              "type": "Smart Contract - StrategyFortubeV2 (asset: BTCB, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0x4F52533c9504Df756ecdFD311A8B846a59422e4e",
              "type": "Smart Contract - SingleStrategyToken (asset: BTCB, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0xb6d97Ec31048610289a2D04A5eb76697D6b936AC",
              "type": "Smart Contract - StrategyVenusV3 (asset: BTCB, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x3cdd556c882dBEB4A0F3444de6d76E12618c9100",
              "type": "Smart Contract - SingleStrategyToken (asset: BTCB, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0xf6D764cCA871876767d8E00779FE80267BF25dA9",
              "type": "Smart Contract - StrategyAlpaca (asset: BTCB, strategy: Alpaca Finance)"
            },
            {
              "target": "https://bscscan.com/address/0x3bD71Fd8633aE42c2496C6BdF9Dcb141157e6492",
              "type": "Smart Contract - SingleStrategyToken2 (asset: BTCB, strategy: StrategyAlpaca)"
            },
            {
              "target": "https://bscscan.com/address/0xFD9895BaA9bD393DAD2b0D5a9D043c2608F093fd",
              "type": "Smart Contract - StrategyVoidV2 (asset: BTCB, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0xcb3346AD40C947A2228b2E224C3931A5224bA7Ad",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: BTCB, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0x51bd63F240fB13870550423D208452cA87c44444",
              "type": "Smart Contract - MultiStrategyToken (asset: BTCB, strategy: SSTFortube, SSTVenusV2, SST2Alpaca, VST)"
            },
            {
              "target": "https://bscscan.com/address/0x5798C3573f06f5bD1ACCcf07De3B647734714076",
              "type": "Smart Contract - StrategyFortubeV2 (asset: BUSD, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0x090F22Ca2E3429f1f4Dd38052Cb451653e98F0C2",
              "type": "Smart Contract - SingleStrategyToken (asset: BUSD, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0x7A8FCEAF603cf0710CF55113D6AE7fFE38D19862",
              "type": "Smart Contract - StrategyVenusV3 (asset: BUSD, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x53a53A9E10aBe9d18D009F6F962f51dC8b1D6EDc",
              "type": "Smart Contract - SingleStrategyToken (asset: BUSD, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0x4cDB64Df300A2B8F6F0e5c72909b9fBcf3b3F135",
              "type": "Smart Contract - StrategyEllipsis (asset: BUSD, strategy: Ellipsis)"
            },
            {
              "target": "https://bscscan.com/address/0x2ec2DDD12566B66f4Da248B1Ecdee8619b5C56cd",
              "type": "Smart Contract - SingleStrategyToken2 (asset: BUSD, strategy: StrategyEllipsis)"
            },
            {
              "target": "https://bscscan.com/address/0xcce88A5AA1e82CD8b765472Ced6D56fF2c8d3Df6",
              "type": "Smart Contract - StrategyAlpaca (asset: BUSD, strategy: Alpaca Finance)"
            },
            {
              "target": "https://bscscan.com/address/0xe12135207747d2eC1D1F0Aabd4535E6EE08B853B",
              "type": "Smart Contract - SingleStrategyToken2 (asset: BUSD, strategy: StrategyAlpaca)"
            },
            {
              "target": "https://bscscan.com/address/0xFa9D55956BECFB41dB1c9c001Bb3fE67a10e4538",
              "type": "Smart Contract - StrategyVoidV2 (asset: BUSD, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0x87c6668D33f224FE00ADb3EF85A4a5AB4d5BF257",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: BUSD, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0x9171Bf7c050aC8B4cf7835e51F7b4841DFB2cCD0",
              "type": "Smart Contract - MultiStrategyToken (asset: BUSD, strategies: SSTFortube, SSTVenusV2, SST2Ellipsis, SST2Alpaca, VST)"
            },
            {
              "target": "https://bscscan.com/address/0x3AE8BE1A6D52C3c6ad90906f526D06A315915451",
              "type": "Smart Contract - StrategyFortubeV2 (asset: DAI, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0x4b91Dac1229F41c4D322f5F0feA246F069Fb81a3",
              "type": "Smart Contract - SingleStrategyToken (asset: DAI, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0x0E6Ddcf8F1BF0879BDD50fB314757feA7b71fA9E",
              "type": "Smart Contract - StrategyVenusV3 (asset: DAI, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x77328E0564D40430222fbc2cFAd333c032B01591",
              "type": "Smart Contract - SingleStrategyToken (asset: DAI, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0x36a4BCb808288112F2934d57cab654DAf30a85AA",
              "type": "Smart Contract - StrategyVoidV2 (asset: DAI, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0x27932f578128211f4C593F864ee2054B78F94992",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: DAI, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0x9A86fc508a423AE8a243445dBA7eD5364118AB1D",
              "type": "Smart Contract - MultiStrategyToken (asset: DAI, strategy: SSTFortube, SSTVenusV2, VST)"
            },
            {
              "target": "https://bscscan.com/address/0x6Ef9f79C4cD898843F960F3d5Eb025Bb32cC6c82",
              "type": "Smart Contract - StrategyFortubeV2 (asset: ETH, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0xDCfE3Ca4863059AE2DA63C7fdea04541BEa178F9",
              "type": "Smart Contract - SingleStrategyToken (asset: ETH, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0x504ff86d1165f120eaFD5bF3bBa2Cc50B0F9b1D7",
              "type": "Smart Contract - StrategyVenusV3 (asset: ETH, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x7d0168E0bC515c3501D293C18354DA2623b7C310",
              "type": "Smart Contract - SingleStrategyToken (asset: ETH, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0xA81650535Be191Df2ac2A7900f3b675dC83076e8",
              "type": "Smart Contract - StrategyAlpaca (asset: ETH, strategy: Alpaca Finance)"
            },
            {
              "target": "https://bscscan.com/address/0x50Cd943D2d572E2eB35F75E06102162B72DB35D2",
              "type": "Smart Contract - SingleStrategyToken2 (asset: ETH, strategy: StrategyAlpaca)"
            },
            {
              "target": "https://bscscan.com/address/0x656b810cf085093b3a018Ad9D3E533B803bf829c",
              "type": "Smart Contract - StrategyVoidV2 (asset: ETH, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0x9A144edD7309bCc4e106A1a04E7Fc402115a0980",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: ETH, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0xAA20E8Cb61299df2357561C2AC2e1172bC68bc25",
              "type": "Smart Contract - MultiStrategyToken (asset: ETH, strategy: SSTFortube, SSTVenusV2, SST2Alpaca, VST)"
            },
            {
              "target": "https://bscscan.com/address/0x3Cfd23f5d819adc91b3ca97722692FA13e137124",
              "type": "Smart Contract - StrategyFortubeV2 (asset: USDC, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0x94065E5740b9C0560bE9B830dA0b2896Da5F86D8",
              "type": "Smart Contract - SingleStrategyToken (asset: USDC, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0xC4857453b83201f5359FCb4eF43928DfC55c63FC",
              "type": "Smart Contract - StrategyVenusV3 (asset: USDC, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0x1bAf2F9c47D142BE08ec3b73b92137752f1121ce",
              "type": "Smart Contract - SingleStrategyToken (asset: USDC, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0xb7Ba6296c577E67a908304AfFE744C6838157195",
              "type": "Smart Contract - StrategyEllipsis (asset: USDC, strategy: Ellipsis)"
            },
            {
              "target": "https://bscscan.com/address/0xaCd9c79ae50D483f88cF94Fb09fcDCe9c678fB8d",
              "type": "Smart Contract - SingleStrategyToken2 (asset: USDC, strategy: StrategyEllipsis)"
            },
            {
              "target": "https://bscscan.com/address/0xe4BA5Ae3C47c9Ae2e7FC288D5A466FC1F5E35E14",
              "type": "Smart Contract - StrategyVoidV2 (asset: USDC, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0xeD8487acC0d124eFb5e8CfB5CF391CAEfbf99cbf",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: USDC, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0x7a59bf07D529A5FdBab67D597d63d7D5a83E61E5",
              "type": "Smart Contract - MultiStrategyToken (asset: USDC, strategies: SSTFortube, SSTVenusV2, SST2Ellipsis, VST)"
            },
            {
              "target": "https://bscscan.com/address/0x708b41de7E38aEA812B5Bd37eB906067cE9EC6B8",
              "type": "Smart Contract - StrategyFortubeV2 (asset: USDT, strategy: Fortube)"
            },
            {
              "target": "https://bscscan.com/address/0xBa2F7cB88d818bBa7E932310f49D754Eb29eb2eF",
              "type": "Smart Contract - SingleStrategyToken (asset: USDT, strategy: StrategyFortubeV2)"
            },
            {
              "target": "https://bscscan.com/address/0xf31D585c18e411b956388CaD051F31be235A854e",
              "type": "Smart Contract - StrategyVenusV3 (asset: USDT, strategy: Venus)"
            },
            {
              "target": "https://bscscan.com/address/0xdBCb0FAEbEd3484f0F66A08A2551EF6C92667841",
              "type": "Smart Contract - SingleStrategyToken (asset: USDT, strategy: StrategyVenusV3)"
            },
            {
              "target": "https://bscscan.com/address/0x5aDDC4C70eeCd53945ab75E2a86865C20F4a52dD",
              "type": "Smart Contract - StrategyEllipsis (asset: USDT, strategy: Ellipsis)"
            },
            {
              "target": "https://bscscan.com/address/0x52f5159335569889092582Da9086Ed36B1C72452",
              "type": "Smart Contract - SingleStrategyToken2 (asset: USDT, strategy: StrategyEllipsis)"
            },
            {
              "target": "https://bscscan.com/address/0x8D6bc5ac45f847Ca5a21bd947662309f4b19B700",
              "type": "Smart Contract - StrategyAlpaca (asset: USDT, strategy: Alpaca Finance)"
            },
            {
              "target": "https://bscscan.com/address/0x190a6f733E0Cd19d4040Ac4A2D9999ec90Cb5181",
              "type": "Smart Contract - SingleStrategyToken2 (asset: USDT, strategy: StrategyAlpaca)"
            },
            {
              "target": "https://bscscan.com/address/0x4e1Af52DB55DF2c802C597dcF2638c49fa367687",
              "type": "Smart Contract - StrategyVoidV2 (asset: USDT, strategy: None)"
            },
            {
              "target": "https://bscscan.com/address/0x48F7FBEA3781b95a9AC1ceDb3d277BC3570BDcab",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: USDT, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://bscscan.com/address/0x55E1B1e49B969C018F2722445Cd2dD9818dDCC25",
              "type": "Smart Contract - MultiStrategyToken (asset: USDT, strategies: SSTFortube, SSTVenus, SST2Ellipsis, SST2Alpaca, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0xFd3608D1397162F48d0B12bBd937E3A08C170567",
              "type": "Smart Contract - StrategyChannels (asset: HBTC, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0xe8f67d3Dd4587E065d4abE8dCBe454E84526A715",
              "type": "Smart Contract - SingleStrategyToken (asset: HBTC, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0xA11a82838b63BB0a2af07701Aa8F465B948756ce",
              "type": "Smart Contract - StrategyFilda (asset: HBTC, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x6D8C89C937B68352916904Cb9FB39BA3aCd05c75",
              "type": "Smart Contract - SingleStrategyToken (asset: HBTC, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x80a95f5C832682c652de979cd06825c6E9830dcb",
              "type": "Smart Contract - StrategyLendHub (asset: HBTC, strategy: LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x0bd7a237672BB287E31B80671704f83335E571f2",
              "type": "Smart Contract - SingleStrategyToken (asset: HBTC, strategy: Strategy)"
            },
            {
              "target": "https://hecoinfo.com/address/0x13f88eae908e5a59341074caa66b463c0913f1bb",
              "type": "Smart Contract - StrategyVoidV2 (asset: HBTC, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x46e0898B8C480Bc3bF864a5C64Cd06940Ff33B4b",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: HBTC, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0x4Cd59EEB3a4D2fa5c35FD3dE0BA1723EeaF1D258",
              "type": "Smart Contract - MultiStrategyToken (asset: HBTC, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0x2DE913D321C2efAC73e2E1cA8Aa92e5eBe5A86a8",
              "type": "Smart Contract - StrategyChannels (asset: DAI, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x2c03530b77699F08c69eCc4D33F801fb667f3406",
              "type": "Smart Contract - SingleStrategyToken (asset: DAI, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0xf6b3177cE068263DA4cAa42A857526b179d8BAcC",
              "type": "Smart Contract - StrategyFilda (asset: DAI, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xBB550cDE1C88C2041Db27DC2fCf67f5354ECa0Ae",
              "type": "Smart Contract - SingleStrategyToken (asset: DAI, strategy:StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xbdda28abc1d0841ee62032c1c9e000b3ce2410e8",
              "type": "Smart Contract - StrategyLendHub (asset: DAI, strategy: LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x44F95Fa54b2ac1cEF14F5085dB2B1a7850b6881C",
              "type": "Smart Contract - SingleStrategyToken (asset: DAI, strategy: StrategyLendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0xc4867cEfC83583B8CE9896466Fe4CBA4E49Ded35",
              "type": "Smart Contract - StrategyVoidV2 (asset: DAI, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x25D6A0133CF98E98e462a2a1AD127a5faEB01602",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: DAI, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0xA8714b9c86Fb590bF2CEE12bdFccC575aB454272",
              "type": "Smart Contract - MultiStrategyToken (asset: DAI, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0xb8b00A34Ab71e4c715aC961fb6F1b22D053d8564",
              "type": "Smart Contract - StrategyChannels (asset: ETH, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x9d5E7AC92a7495EbCC0190964A3b90dfaFc2CF51",
              "type": "Smart Contract - SingleStrategyToken (asset: ETH, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x67Bb0bD833b61a4Fd87d0a6c26217eAA372F65E8",
              "type": "Smart Contract - StrategyFilda (asset: ETH, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x7840c4C08ab91AB23F57018BF6202a64C7C67588",
              "type": "Smart Contract - SingleStrategyToken (asset: ETH, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x44F0e999a18f5B9c4F9dF1CB144dcCC4BB2d197b",
              "type": "Smart Contract - StrategyLendHub (asset: ETH, strategy: LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x923C5DD2449d7DCc54a86635F9196BEB2a4921a1",
              "type": "Smart Contract - SingleStrategyToken (asset: ETH, strategy: StrategyLendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x082D78ea12d7B6D46a7A3Db8D35A705557C62CFc",
              "type": "Smart Contract - StrategyVoidV2 (asset: ETH, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x8434b37b493B27a1e679062210B74B4B22a66F38",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: ETH, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0xB1493B7bc8e260B0b25235ae5c34B0dC201ce8C3",
              "type": "Smart Contract - MultiStrategyToken (asset: ETH, strategy: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0xc666caf40c9163ee15d303d420eedb814e02caa3",
              "type": "Smart Contract - StrategyChannels (asset: HT, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x8d3a8a05e74c41edc6cd2cba2ec7fca0e1c611bb",
              "type": "Smart Contract - SingleStrategyToken (asset: HT, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0xb8bd90e32f37ced177de4340eabac0d2bada52d1",
              "type": "Smart Contract - StrategyFilda (asset: HT, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xff8376a18db1889abdf325cd28f37a12d2685b86",
              "type": "Smart Contract - SingleStrategyToken (asset: HT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x689854e72bd5226162b7a71b34e9d4c14dfb2f40",
              "type": "Smart Contract - StrategyLendHub (asset: HT, strategy:LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0xeb751332103b713b40321f86f5ab5468143c45aa",
              "type": "Smart Contract - SingleStrategyToken (asset: HT, strategy: StrategyLendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x2FCDD04cc45a2c6014144D6Cdd11673aDe985dC8",
              "type": "Smart Contract - StrategyVoidV2 (asset: HT, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0xD3E341FDfa1c71C138e59c088EeBC069e2CfF96e",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: HT, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0x86f5c8eb736c95dd687182779edd792fef0fa674",
              "type": "Smart Contract - MultiStrategyToken (asset: HT, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0xc33A04be25b465C44832678714651120a22198a1",
              "type": "Smart Contract - StrategyChannels (asset: HUSD, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x5d790E3485aa6Dfe5b4F810C77CD7A41dF7B4CAC",
              "type": "Smart Contract - SingleStrategyToken (asset: HUSD, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x08230aEb73CFB139A55DFE0A4540B72241425105",
              "type": "Smart Contract - StrategyFilda (asset: HUSD, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xCC6c6d6a68f303DaEE2F75C3D0E8688987cad2d8",
              "type": "Smart Contract - SingleStrategyToken (asset: HUSD, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xf44158F6D184897aa0f30284Bd4477A419CbeF95#code",
              "type": "Smart Contract - StrategyLendHub (asset: HUSD, strategy: LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0x00e517A416827720F00e61d9033E99426a6C3C63",
              "type": "Smart Contract - SingleStrategyToken (asset: HUSD, strategy: StrategyLendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0xF59069CF2C1d4f50c3725444138A774E8165dCa4",
              "type": "Smart Contract - StrategyVoidV2 (asset: HUSD, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x96a020e1B07089e92f67FbFf1b870E638bf5a711",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: HUSD, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0x0e564BC863c2072C47FB8f952062BD5bc673E142",
              "type": "Smart Contract - MultiStrategyToken (asset: HUSD, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0x80044D8a41c10911dc161cA16fbc82b893E4Eb57",
              "type": "Smart Contract - StrategyChannels (asset: USDC, strategy: Channels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x2df074959D0f3FCfE9b5bFc18E4f9a3F7f56EDCc",
              "type": "Smart Contract - SingleStrategyToken (asset: USDC, strategy: StrategyChannels)"
            },
            {
              "target": "https://hecoinfo.com/address/0x5CF9625A0509b58aBe5fE9930dEEDE082Ca69013",
              "type": "Smart Contract - StrategyFilda (asset: USDC, strategy: Filda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x50Cb33F99e05688b4969F728431041f6AA83A086",
              "type": "Smart Contract - SingleStrategyToken (asset: USDC, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x9e0B64e4C99b4A5685F405a1704c276b47Cf94d3",
              "type": "Smart Contract - StrategyLendHub (asset: USDC, strategy: LendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0xF95a075F57887405a424BAE3825086DeEa5c2a99",
              "type": "Smart Contract - SingleStrategyToken (asset: USDC, strategy: StrategyLendHub)"
            },
            {
              "target": "https://hecoinfo.com/address/0xB939E447C930D10E24144949d2731C253059B84c",
              "type": "Smart Contract - StrategyVoidV2 (asset: USDC, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x50eBED91FDf0dD0bBf2a46eCfB00e31F897dc870",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: USDC, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0xC04a84d0E3f290D0777c233E0945678469adF353",
              "type": "Smart Contract - MultiStrategyToken (asset: USDC, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://hecoinfo.com/address/0x4bE21765F43CbA527e33D32d7655a3e8c56a88e2",
              "type": "Smart Contract - StrategyChannels (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xbca98b7049562B3BDA2E095fEf40626cf77Bc2f3",
              "type": "Smart Contract - SingleStrategyToken (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x24619e16fbFC26caFE2f1739a7df72fE632A94Ea",
              "type": "Smart Contract - StrategyFilda (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x871dA29944D9CAeB25e048e6196D27c683C33796",
              "type": "Smart Contract - SingleStrategyToken (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x69C8953D79f3C6A6Ee718c9d3f0f5b41a392358C",
              "type": "Smart Contract - StrategyLendHub (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0xCD70C61807130FcD68d8E2d0F32b2FB8be7A6C40",
              "type": "Smart Contract - SingleStrategyToken (asset: USDT, strategy: StrategyFilda)"
            },
            {
              "target": "https://hecoinfo.com/address/0x27599467dd2454FD01C88cA6724c793BF1e83D3f",
              "type": "Smart Contract - StrategyVoidV2 (asset: USDT, strategy: None)"
            },
            {
              "target": "https://hecoinfo.com/address/0x280Ae883FD219a56ef5182799f324451eaFE201D",
              "type": "Smart Contract - VoidStrategyTokenV2 (asset: USDt, strategy: StrategyVoidV2)"
            },
            {
              "target": "https://hecoinfo.com/address/0x9bC7a8ec3a8b9d9AEc0C5808456e35A934f457e5",
              "type": "Smart Contract - MultiStrategyToken (asset: USDT, strategies: SSTChannels, SSTFilda, SSTLendHub, VST)"
            },
            {
              "target": "https://belt.fi",
              "type": "Website/App"
            },
            {
              "target": "https://belt.fi/bsc",
              "type": "Website/App"
            },
            {
              "target": "https://belt.fi/heco",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "Belt.fi is a stableswap AMM protocol that incorporates multi-strategy yield optimizing on Binance Smart Chain (BSC) and HECO Chain with low fees/slippage that also provides aggregation through vault compounding, lending and yield generation for maximum returns. \n\nBelt Finance’s stableswap AMM offers users the most efficient way to swap their stablecoins by offering significantly lower slippage than alternative swap protocols. Belt Finance is also focused on giving users the best yield through a combination of trading fee rewards and a multi-strategy optimization vault system. By utilizing multiple strategies simultaneously, \nBelt.fi minimizes dependence on any one protocol while generating users the best possible yield rates in DeFi. This also protects users from low-liquidity withdrawal issues.\n\nFor more information about Belt Finance, please visit their website at [https://belt.fi/](https://belt.fi/). \n\nThe bug bounty program covers its smart contracts and website and is focused on the prevention of:\n\n  - Miscalculating/misjudging asset values stored in various protocols\n  - Loss of user funds staked (principal) by freezing and/or theft\n  - Flashloan attack activity \n  - Thefts of unclaimed yield of any amount\n  - Website is unresponsive/ taken over \n  - Access to sensitive user information without authorization \n  - Temporary freezing of funds through exploits/attacks for any amount of time \n  - Unable to call smart contract\n  - Smart contract fails to function as intended \n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nBug reports must come with the following in order to be considered for a reward:\n\n  - Proof of Concept (PoC) - All bug reports\n  - Suggestions for a fix - Critical reports only \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into consideration the funds at risk, though other considerations may also be accounted for, such as branding and PR, under the discretion of the Belt Finance team.\n\nHigh smart contract vulnerabilities involving theft of yield are further capped at 10% of economic damage, but with a minimum reward of USD __6,000__. For vulnerabilities involving temporary freezing of funds, the full reward is only paid out if the funds are locked for at least 30 minutes. For temporary freezing below that, the reward is adjusted pro rata rounded up to the nearest minute. However, there is also a minimum reward of USD __6,000__.\n\nWeb and app vulnerabilities will be counted as critical if they achieve any of the impacts listed in the Impacts in Scope section below. The reward amount is dependent on the economic damage that could be inflicted.\n\nPayouts are handled by the __Belt Finance__ team directly and are denominated in USD. All payouts are done in __USDT__.",
            "assets_body": "SingleStrategyToken = SST in short\n\nSingleStrategyToken2 = SST2 in short\n\nVoidStrategyTokenV2  = VST in short\n\nOnly web/app vulnerabilities that affect the homepage as well as the pages explicitly listed in the assets in the scope table are considered as in-scope of the bug bounty program. \n\nFor further reference, the GitHub of BeltFinance containing the smart contracts listed here are found on [https://github.com/BeltFi/belt-contract.git](https://github.com/BeltFi/belt-contract.git). However, only the smart contracts explicitly listed in the table are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Unintended behavior of gov functions\n  - Miscalculating/misjudging asset values stored in various protocols\n  - Loss of user funds staked (principal) by freezing or theft\n  - Flashloan attack activity \n  - Thefts and freezing of unclaimed yield of any amount\n  - Temporary freezing of funds through exploits/attacks for any amount of time\n  - Unable to call smart contract\n  - Smart contract fails to function as intended \n\n__Websites/Apps__\n\n  - Transaction issues based on inputted values and actually transacted values via swap (whether the user inputted value accurately is converted to transaction data)\n  - Whether the accurate, wanted transaction occurs (e.g. the stake button should not call an unstake transaction)\n  - Redirected funds by address modification\n  - Users spoofing other users \n  - Website goes down/ taken over \n  - Access to sensitive user information without authorization",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types, as long as they result in the impacts highlighted in the Impacts in Scope section:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters) ",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "yearnfinance",
          "project": "Yearn Finance",
          "date": "2021-07-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Dpad2OkwlP4SAfEzsQk5j/9064a1846d23ecad7b306fe81d5bb501/Yearn.png",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000 - $USD 200,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - $USD 20,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $100 - USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://github.com/yearn/yearn-security/blob/master/SECURITY.md",
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x5b4F3BE554a88Bd0f8d8769B9260be865ba03B4a#code ",
              "type": "Smart Contract - StrategiesHelper - list of production strategy addresses"
            },
            {
              "target": "https://etherscan.io/address/0x437758D475F70249e03EDa6bE23684aD1FC375F0#code ",
              "type": "Smart Contract - AddressesGeneratorV2Vaults - list of endorsed v2 vault addresses"
            },
            {
              "target": "https://etherscan.io/address/0xa0B57619A980DFEfD50f24F310EE1b55A40A9D46#code ",
              "type": "Smart Contract - AddressesGeneratorIronBank - list of iron bank market addresses"
            }
          ],
          "mdx": {
            "program_overview": "Yearn Finance is a suite of products in Decentralized Finance (DeFi) that provides lending aggregation and yield generation on the Ethereum blockchain. The protocol is maintained by various independent developers and is governed by YFI holders. Their products include: \n\n__Vaults__\nCapital pools that automatically generate yield based on opportunities present in the market. Vaults benefit users by socializing gas costs, automating the yield generation and rebalancing process, and automatically shifting capital as opportunities arise. End users also do not need to have a proficient knowledge of the underlying protocols involved or DeFi, thus the Vaults represent a passive-investing strategy.\n\nFurther resources regarding Yearn Finance can be found on their website, [https://yearn.finance/](https://yearn.finance/) and [documentation](https://docs.yearn.finance/).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the prevention of the loss of user funds. ",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nTo determine the final reward amount, the likelihood to have a meaningful impact on availability, integrity, and/or loss of funds is considered. The final decision on the payout amount will be determined by the Yearn Finance team at its discretion.\n\nPayouts are handled by the __Yearn Finance__ team directly and are denominated in USD. Payouts can be made in USDC, DAI, ETH, YFI, or their Yearn Vault counterparts. ",
            "assets_body": "Yearn adds and removes Vaults and Strategies from Production on an ongoing basis. This assets in scope table includes onchain lists of smart contracts for which all contracts within them are considered as in-scope of the bug bounty program.\n\nThe following functions can be called to obtain a list of smart contract addresses that are currently in Production and that are covered by the program:\n\nStrategiesHelper - assetsStrategiesAddresses()\n\nAddressesGeneratorV2Vaults - assetsAddresses()\n\nAddressesGeneratorIronBank - assetsAddresses()\n\nOther contracts, outside of the ones mentioned here, might be considered on a case by case basis, as long as economic damage can be achieved. \n\nFor more further information about these smart contracts, please refer to their GitHub repository - [https://github.com/yearn/yearn-vaults](https://github.com/yearn/yearn-vaults). Additionally, you may refer to https://yearn.watch and [https://yearn.watch/stats](https://yearn.watch/stats) for more information about each smart contract. \n\n__Submission Requirements__\n\nIn order to be considered for a reward, all bug reports must contain the following:\n\n- Description of suspected vulnerability\n- Steps to reproduce the issue\n- Your name and/or colleagues if you wish to be later recognized\n- (Optional) A patch and/or suggestions to resolve the vulnerability\n\n__Ethical Behavior Requirements__\n\nResponsible disclosure is predicated on ethical behavior. These guidelines outline best practices for the community as whole, whether you are reporting, or the recipient of a report. By stating that you adhere to this policy, you’re claiming to handle vulnerability information ethically, and abide by the following:\n\n- Do not attempt to leverage a vulnerability, or information of its existence, as part of a financial trading strategy or otherwise for financial gain.\n- Do not attempt to compromise systems upon which development of a product relies; including but not limited to compromising development systems, accounts, domains, email etc..\n- Do not attempt to sell vulnerability information or exploits.\n- Do not ask for any form of compensation from an affected party.\nYou may compensate a disclosing party if you would like to after all known vulnerability details have been disclosed.\n- Do not disclose a bug or vulnerability on mailing lists, public boards, forums, social media or any other channel prior to Responsibly Disclosing to the organizations you have a published relationship with\n- Do not attempt any illegal acts, including phishing, physical attacks, DDoS, or any attempt to gain access without authorization\n\n__3rd Party Affected Projects__\n\nIn the case where we become aware of security issues affecting other projects that has never affected Yearn, our intention is to inform those projects of security issues on a best effort basis.\n\nIn the case where we fix a security issue in Yearn that also affects the following neighboring projects, our intention is to engage in responsible disclosures with them as described in the adopted standard, subject to the deviations described in the deviations section below.\n\n__Deviations from the Standard__\n\nIn the case of a counterfeiting or fund-stealing bug affecting Yearn, however, we might decide not to include those details with our reports to partners ahead of coordinated release, as long as we are sure that they are not vulnerable.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n- Signature malleability\n- Susceptibility to replay attacks\n- Weak randomness\n- Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Rules__\n\nThe rules of this bug bounty are as follows:\n\n- Bug has not been publicly disclosed.\n- Vulnerabilities that have been previously submitted by another contributor or already known by the Yearn development team are not eligible for rewards.\n- The size of the bounty payout depends on the assessment of the severity of the exploit. Please refer to the rewards section below for additional details.\n- Bugs must be reproducible in order for us to verify the vulnerability.\n- Rewards and the validity of bugs are determined by the Yearn security team and any payouts are made at their sole discretion.\n- Terms and conditions of the Bug Bounty program can be changed at any time at the discretion of Yearn.\n- Details of any valid bugs may be shared with complementary protocols utilized in the Yearn ecosystem in order to promote ecosystem cohesion and safety.\n\n__Bug Bounty FAQ__\n\nQ: Is there a time limit for the Bug Bounty program?\nA: No. The Bug Bounty program currently has no end date, but this can be changed at any time at the discretion of Yearn.\n\nQ: Can I submit bugs anonymously and still receive payment?\nA: Yes. If you wish to remain anonymous you can do so and still be eligible for rewards as long as they are for valid bugs. Rewards will be sent to the valid Ethereum address that you provide.\n\nQ: Can I donate my reward to charity?\nA: Yes. You may donate your reward to a charity of your choosing, or to a gitcoin grant."
          }
        },
        {
          "id": "tranchess",
          "project": "Tranchess",
          "date": "2021-06-22T10:30-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6NNBYNKONDM4mwNU4Y5ik/a719c3c7861f9b647c9d012884236356/Tranchess_logo.jpg",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/tranchess/contract-core",
              "type": "Smart Contract - Source Code"
            },
            {
              "target": "https://docs.tranchess.com/faq/contracts",
              "type": "Smart Contract - Deployed Addresses"
            },
            {
              "target": "https://tranchess.com/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Tranchess is a yield enhancing asset tracker with varied risk-return solutions. Tranchess provides a different risk/return matrix out of a single main fund that tracks a specific underlying asset.\n\nMore information about Tranchess can be found on their website, [https://tranchess.com/](https://tranchess.com/).    \n\nThis bug bounty program is focused around its smart contracts and app and is mostly concerned with the prevention of the loss of user funds.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nVulnerability reports concerning rounding errors with an effect of less than the equivalent of USD 0.01 are not eligible for a reward. Additionally, vulnerability impacts of the Exchange smart contract resulting in “contract consumes unbounded gas”, classified as __Medium__ in the Immunefi Vulnerability Severity Classification System, is not eligible for a reward as it is by design.\n\nCritical vulnerabilities are capped at 10% of economic damage, primarily taking into consideration the funds at risk, but also factoring in PR and branding considerations, at the discretion of the team.                     \nHowever, there is a minimum reward of __USD 50 000__.\n\nPayouts are handled by the __Tranchess__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 2 days\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text\n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contract & Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "balanced",
          "project": "Balanced",
          "date": "2021-04-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/unKPc2L4szZMTMxVINCGT/f46e0e8cb246861970a5cd185d9d5227/Balanced-logo.png",
          "maximum_reward": 200000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $200,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://tracker.icon.foundation/contract/cx44250a12074799e26fdeee75648ae47e2cc84219#code",
              "type": "Smart Contract - Balanced Governance"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx66d4d90f5f113eba575bf793570135f9b10cece1#code",
              "type": "Smart Contract - Balanced Loans"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cxa0af3165c08318e988cb30993b3048335b94af6c#code",
              "type": "Smart Contract - Balanced DEX"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx10d59e8103ab44635190bd4139dbfd682fa2d07e#code",
              "type": "Smart Contract - Balanced Rewards"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cxf58b9a1898998a31be7f1d99276204a3333ac9b3#code",
              "type": "Smart Contract - Balanced Reserve"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx203d9cd2a669be67177e997b8948ce2c35caffae#code",
              "type": "Smart Contract - Balanced Dividends"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx835b300dcfe01f0bdb794e134a0c5628384f4367#code",
              "type": "Smart Contract - Balanced DAOfund"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx40d59439571299bca40362db2a7d8cae5b0b30b0#code",
              "type": "Smart Contract - Balanced Rebalancing"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cx88fd7df7ddff82f7cc735c871dc519838cb235bb#code",
              "type": "Smart Contract - Balanced Dollar"
            },
            {
              "target": "https://tracker.icon.foundation/contract/cxf61cd5a45dc9f91c15aa65831a30a90d59a09619#code",
              "type": "Smart Contract - Balance Token"
            }
          ],
          "mdx": {
            "program_overview": "Balanced is a DAO (Decentralized Autonomous Organization) consisting of a \ndecentralized balance sheet of ICX collateral, with the vision of creating \na vibrant ecosystem of tokens pegged to the value of real-world assets. It \nallows users to mint, borrow, and retire pegged assets, while also providing \nmarket makers with clearly defined arbitrage opportunities. The initial \niteration of Balanced will support the minting and retiring of USD-pegged \nassets referred to as Balance Dollars (bnUSD). \n\nFor further information about Balanced, you can check their white paper \nhere: <Link href=\"https://docs.balanced.network/technical/white-paper\">https://docs.balanced.network/technical/white-paper</Link>.\n\nThe bug bounty program is focused around their smart contracts and is mostly \nconcerned with the loss of user funds and the shutdown of the contracts. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn addition to the Immunefi Severity Classification System, the Balanced Bug \nBounty Program considers any vulnerability resulting in the cessation of \nfunctionality of a smart contract to be of **high** severity. In the event of \nconflict between this rule and the Immunefi Severity Classification System, \nthis rule will prevail.\n\nCritical vulnerabilities are further capped at 10% of economic damage, primarily focusing on the funds at risk, though consideration for branding and PR may also be applied, only at the discretion of the team. However, there is a minimum reward of __USD 50 000.__\n\nPayouts are handled by the **Balanced** team directly and are denominated in USD. \nHowever, payouts are done in **ICX**. In the event of multiple submissions of the same vulnerability, the first complete bug report is the only one that shall receive a reward.",
            "assets_body": "Only the development branch is within the scope of this bug bounty \nprogram. Bug reports in any other branch will not be accepted. ",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "foundersbounty",
          "project": "Founders Bounty",
          "date": "2021-02-17T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3Wz69bfhkVjcGsJCAT24Rd/1328e72314e6b0e60c4d4770f56abfc5/Rbounty-logo.png",
          "maximum_reward": 163750,
          "is_external": false,
          "is_special": true,
          "technologies": [
            "Smart Contract"
          ],
          "kyc": false,
          "verification_link": null,
          "mdx": {
            "program_overview": "Robert Forster, CTO of ArmorFi, a smart insurance aggregator for DeFi which\nprovides Pay as You Go and Only Pay What You Owe ᴰᵀᴹ coverage for user funds\nacross various protocols, is interested in securing the wider Ethereum\necosystem by encouraging responsible disclosures to prevent catastrophic hacks\non any project on Ethereum. In light of the <Link href=\"https://www.coindesk.com/defi-insurance-project-armorfi-bug-bounty-hacker\">success from ArmorFi’s bug bounty program</Link> where Alexander Schlindwein <Link href=\"https://twitter.com/bobface16\">@bobface16</Link> from IdeaMarkets disclosed a critical bug via Immunefi, Robert Forster is launching \nthe Founders Bounty program with a reward of 125 000 ARMOR and to get a tattoo inspired by the whitehat's name.\n\nThe bug bounty program covers critical smart contract bugs across the Ethereum\necosystem according to the <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link> that could result in the immediate loss of the equivalent of at least USD 1 million.\n\nIf the affected project is covered by the [Armor Alliance Bug Bounty Challenge](https://medium.com/immunefi/armor-alliance-bug-bounty-challenge-launched-with-immunefi-250df9219ebc), the structure of the reward and the eligibility for the Founders Bounty is affected. Further details in the Reward section below.\n\n### Bug Disclosure Process \n\n- After you find a serious smart contract bug that causes over at least USD 1m\n  of user funds to be at risk, submit your smart contract bug report here\n  according to our bug report process\n- Immunefi will assess the reproducibility of the smart contract bug to\n  validate it as well as the threat level\n- Immunefi will then contact the project on your behalf and facilitate the\n  disclosure communications according to the requirements of the\n  project. Immunefi will keep you updated throughout the process\n\n**The fine print:** Robert Forster, CTO of ArmorFi, provides Founders Bounty as a\nservice to the Ethereum community. Robert Forster and the ArmorFi team receive\nno compensation for any of its activities under the Founders Bounty program. Robert\nForster, ArmorFi, and Immunefi cannot guarantee a response from the affected\nproject for bugs submitted through the Founders Bounty program. Additionally, the \nUSD amount mentioned in this bug bounty program is only an estimate based on the \nexchange rate at the time of the posting of this bug bounty program. The stated \namount of ARMOR in this program will be the awarded amount.\n\n### Bugs in Scope \n\nThe scope of the Founders Bounty program is only around smart contract bugs of\nprojects on Ethereum that could result in the loss of a total of at least USD 1\nmillion worth of user funds, either by loss of access or by theft.\n\n### Reward \n\nRobert Forster will reward successful disclosures with 125 000 ARMOR, with vesting up to 24 months.\n\nIf a project has an existing bug bounty program, or if the project decides to\nreward you as well, you’ll get the full payout reward they have for the\ncritical bug in addition to the reward in ARMOR.\n\nIf the value of the total reward of 125 000 ARMOR and the existing bug bounty \nprogram, if any, is greater than USD 1 million, the reward is capped at 100% of \nthe funds at risk.\n\nRobert Forster will also be getting a tattoo inspired by the name of whitehats \nwho successfully submit a report, per report.\n\nIn the event that the affected program is part of the [Armor Alliance Bug Bounty Challenge](https://medium.com/immunefi/armor-alliance-bug-bounty-challenge-launched-with-immunefi-250df9219ebc), the Founders Bounty reward will not take effect if the total Alliance reward in ARMOR is equal to or greater than 125 000 ARMOR. In the event that the reward is less than 125 000 ARMOR, the Founders Bounty will only cover the remaining amount until the total amount of ARMOR rewarded is 125 000 ARMOR.\n\n### Accepted Vulnerability Types \n\nHere’s a list of the vulnerability types that the program accepts to give you a\nbetter idea on what Founders Bounty is able to support. However, this is by no means an exhaustive list of all vulnerabilities that are accepted in the\nprogram. Note that only the vulnerability types under “Smart Contracts and\nBlockchain” are accepted.\n\n<Link href=\"/common-vulnerabilities/\">Accepted Vulnerabilities</Link>\n\n### Unaccepted Vulnerability Types and Rules\n\nThe following vulnerabilities are not accepted by our Disclosure Assistance\nprogram, as well as all web and app vulnerabilities.\n\n<Link href=\"/common-vulnerabilities-to-exclude/\">Unaccepted Vulnerabilities</Link>\n\nWe also generally do not work with bug reports that have violated any of our\nstandard rules:\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode"
          }
        },
        {
          "id": "gearbox",
          "project": "Gearbox",
          "date": "2022-02-08T07:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5GOsjS01FpGEPA6hXdth5H/ce653a8ad09690883d2184043b04d552/Gearbox_logo.jpeg",
          "maximum_reward": 150000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $150,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xcF64698AFF7E5f27A11dff868AF228653ba53be0",
              "type": "Smart Contract - AddressProvider"
            },
            {
              "target": "https://etherscan.io/address/0xA50d4E7D8946a7c90652339CDBd262c375d54D99",
              "type": "Smart Contract - ContractsRegister"
            },
            {
              "target": "https://etherscan.io/address/0x444cd42baeddeb707eed823f7177b9abcc779c04",
              "type": "Smart Contract - AccountFactory"
            },
            {
              "target": "https://etherscan.io/address/0x373a292b93ff9017d28e64154ef83b99d5c4e270",
              "type": "Smart Contract - CreditAccount"
            },
            {
              "target": "https://etherscan.io/address/0x523da3a8961e4dd4f6206dbf7e6c749f51796bb3",
              "type": "Smart Contract - ACL"
            },
            {
              "target": "https://etherscan.io/address/0x0050b1abd1dd2d9b01ce954e663ff3dbca9193b1",
              "type": "Smart Contract - DataCompressor"
            },
            {
              "target": "https://etherscan.io/address/0xe11ac30edcfb16d0fcc2540d2c8253051ac93d49",
              "type": "Smart Contract - LeveragedActions"
            },
            {
              "target": "https://etherscan.io/address/0x0e74a08443c5e39108520589176ac12ef65ab080",
              "type": "Smart Contract - PriceOracle"
            },
            {
              "target": "https://etherscan.io/address/0x4f952c4c5415b2609899abdc2f8f352f600d14d6",
              "type": "Smart Contract - WETHGateway"
            },
            {
              "target": "https://etherscan.io/address/0xba3335588d9403515223f109edc4eb7269a9ab5d",
              "type": "Smart Contract - GEAR token"
            },
            {
              "target": "https://etherscan.io/address/0xA7D5DDc1b8557914F158076b228AA91eF613f1D5",
              "type": "Smart Contract - Protocol Multisig"
            },
            {
              "target": "https://etherscan.io/address/0xdab5dc22350f9a6aff03cf3d9341aad0ba42d2a6#code",
              "type": "Smart Contract - GnosisSafe Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xd9db270c1b5e3bd161e8c8503c55ceabee709552#code",
              "type": "Smart Contract - GnosisSafe"
            },
            {
              "target": "https://etherscan.io/address/0x7b065Fcb0760dF0CEA8CFd144e08554F3CeA73D1",
              "type": "Smart Contract - Treasury Multisig"
            },
            {
              "target": "https://etherscan.io/address/0xBF57539473913685688d224ad4E262684B23dD4c",
              "type": "Smart Contract - TokenDistributor"
            },
            {
              "target": "https://etherscan.io/address/0x24946bcbbd028d5abb62ad9b635eb1b1a67af668",
              "type": "Smart Contract - DAI Pool contract"
            },
            {
              "target": "https://etherscan.io/address/0x6cfaf95457d7688022fc53e7abe052ef8dfbbdba",
              "type": "Smart Contract - Diesel Token (dDAI)"
            },
            {
              "target": "https://etherscan.io/address/0xf37d605f6428576529657e24dfb439803f602118",
              "type": "Smart Contract - DAI Interest Rate Model"
            },
            {
              "target": "https://etherscan.io/address/0x777e23a2acb2fcbb35f6ccf98272d03c722ba6eb",
              "type": "Smart Contract - DAI Credit Manager"
            },
            {
              "target": "https://etherscan.io/address/0x948d33a9537cf13bcc656218b385d19e5b6693e8",
              "type": "Smart Contract - DAI Credit Filter"
            },
            {
              "target": "https://etherscan.io/address/0x457Ef4713933689D1FF13412DAC2683E4E8bb0A8",
              "type": "Smart Contract - DAI UniV3Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x815E1373f2932b1C4D0B710f80100de8D1165e2D",
              "type": "Smart Contract - DAI UniV2Adapter Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xEdBf8F73908c86a89f4D42344c8e01b82fE4Aaa6",
              "type": "Smart Contract - DAI UniV2Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x49b34e58baB86B3cD23b0bE0aF4A152bE1056902",
              "type": "Smart Contract - DAI CurveV1Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x2a3e48cF8485FEFc05d40049B0EfA237E869D7D7",
              "type": "Smart Contract - DAI YearnAdapter Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x403E98b110a4DC89da963394dC8518b5f0E2D5fB",
              "type": "Smart Contract - DAI YearnAdapter"
            },
            {
              "target": "https://etherscan.io/address/0x86130bdd69143d8a4e5fc50bf4323d48049e98e4",
              "type": "Smart Contract - USDC Pool contract "
            },
            {
              "target": "https://etherscan.io/address/0xc411db5f5eb3f7d552f9b8454b2d74097ccde6e3",
              "type": "Smart Contract - Diesel Token (dUSDC)"
            },
            {
              "target": "https://etherscan.io/address/0x82a8c58f05e7c79065846fe495c7328b3338320a",
              "type": "Smart Contract - USDC Interest Rate Model"
            },
            {
              "target": "https://etherscan.io/address/0x2664cc24cbad28749b3dd6fc97a6b402484de527",
              "type": "Smart Contract - USDC Credit Manager"
            },
            {
              "target": "https://etherscan.io/address/0x301e7ed8ac816747a65cf67d8901659e637a4383",
              "type": "Smart Contract - USDC Credit Filter"
            },
            {
              "target": "https://etherscan.io/address/0xbA7B57D7E4d4A7516FC1CbfF1CA5182eBC0c1491",
              "type": "Smart Contract - USDC UniV3Adapter "
            },
            {
              "target": "https://etherscan.io/address/0xC73Fd4828f1C47451c798078679d5e975967e489",
              "type": "Smart Contract - USDC UniV2Adapter"
            },
            {
              "target": "https://etherscan.io/address/0xF37Db520d0cfe8B9C5Ddf18d12bE6325990A2787",
              "type": "Smart Contract - USDC UniV2Adapter "
            },
            {
              "target": "https://etherscan.io/address/0x1de3f4ECD616EDd4613F107Bc91078B8C08F0e4a",
              "type": "Smart Contract - USDC CurveV1Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x529E11F05FE7aC1635CD98a29350925b7E6BF740",
              "type": "Smart Contract - USDC YearnAdapter "
            },
            {
              "target": "https://etherscan.io/address/0x252B3D943dCE0FE5b35006Ff87Aa87D9350c483c",
              "type": "Smart Contract - USDC YearnAdapter "
            },
            {
              "target": "https://etherscan.io/address/0xb03670c20f87f2169a7c4ebe35746007e9575901",
              "type": "Smart Contract - WETH Pool contract"
            },
            {
              "target": "https://etherscan.io/address/0xf21fc650c1b34eb0fde786d52d23da99db3d6278",
              "type": "Smart Contract - Diesel Token (dWETH)"
            },
            {
              "target": "https://etherscan.io/address/0x596528c2ebe7c85f2a9f68347ab3314c986ffb96",
              "type": "Smart Contract - WETH Interest Rate Model"
            },
            {
              "target": "https://etherscan.io/address/0x968f9a68a98819e2e6bb910466e191a7b6cf02f0",
              "type": "Smart Contract - WETH Credit Manager"
            },
            {
              "target": "https://etherscan.io/address/0x790d170c12e62ada6cd2d409a50177680c4ddf29",
              "type": "Smart Contract - WETH Credit Filter"
            },
            {
              "target": "https://etherscan.io/address/0x31955E787c46137A1F1a3e29C6128f9CFc2B0E27",
              "type": "Smart Contract - WETH UniV3Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x99457B9EE91c813b4E23518c24bd9171d665629a",
              "type": "Smart Contract - WETH UniV2Adapter "
            },
            {
              "target": "https://etherscan.io/address/0x7C44d28b1ff05F49858Aa2ed12C758a538E1B19f",
              "type": "Smart Contract - WETH UniV2Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x817eC9F7b2fC67840b5453EBdCf6C93353485BE2",
              "type": "Smart Contract - WETH CurveV1Adapter"
            },
            {
              "target": "https://etherscan.io/address/0xEFddD62A929A0D8276998C0aCDB765A5F579edf8",
              "type": "Smart Contract - WETH YearnAdapter "
            },
            {
              "target": "https://etherscan.io/address/0xACD52Cfb9Bac91A4e55fbccB50360a617B7f757f",
              "type": "Smart Contract - WETH YearnAdapter "
            },
            {
              "target": "https://etherscan.io/address/0xb2a015c71c17bcac6af36645dead8c572ba08a08",
              "type": "Smart Contract - WBTC Pool contract "
            },
            {
              "target": "https://etherscan.io/address/0xe753260f1955e8678dcea8887759e07aa57e8c54",
              "type": "Smart Contract - Diesel Token (dWBTC)"
            },
            {
              "target": "https://etherscan.io/address/0x23bd849b40272a9081a92f6e9123523463d9e58b",
              "type": "Smart Contract - WBTC Interest Rate Model Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xC38478B0A4bAFE964C3526EEFF534d70E1E09017",
              "type": "Smart Contract - WBTC Credit Manager"
            },
            {
              "target": "https://etherscan.io/address/0xcf223eb26da2bf147d01b750d2d2393025cea7ca",
              "type": "Smart Contract - WBTC Credit Filter"
            },
            {
              "target": "https://etherscan.io/address/0xCBeed191339AF6f600853E493FAD9F8E8A46D273",
              "type": "Smart Contract - WBTC UniV3Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x66B450de8028DA06df75A952215702EcaB583710",
              "type": "Smart Contract - WBTC UniV2Adapter "
            },
            {
              "target": "https://etherscan.io/address/0x362121583e180aD056dE62bEBD80dbE95fD5c8Ee",
              "type": "Smart Contract - WBTC UniV2Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x8F46a26150a80d5F32DEbC7a37af71Bc4CF16529",
              "type": "Smart Contract - WBTC CurveV1Adapter"
            },
            {
              "target": "https://etherscan.io/address/0x1f3bc865c368e672Bda8C829b1Baf53E8BEFAaeb",
              "type": "Smart Contract - WBTC YearnAdapter "
            },
            {
              "target": "https://etherscan.io/address/0x759cF6ab3F9c6Edc504572d735bD383eF4e3Ce59",
              "type": "Smart Contract - WBTC YearnAdapter"
            }
          ],
          "mdx": {
            "program_overview": "Gearbox is a generalized leverage protocol: it allows you to take leverage in one place and then use it across various DeFi protocols and platforms in a composable way. The protocol has two sides to it: passive liquidity providers who earn higher APY by providing liquidity; and active traders, farmers, or even other protocols who can borrow those assets to trade or farm with x4+ leverage.\n\nThe core vision is to become a backend composable leverage protocol that all kinds of users have but don’t even need to interact directly with any interface. \n\nFor more information about Gearbox, please visit: [https://docs.gearbox.finance/](https://docs.gearbox.finance/) \n\nTo see the dApp, please visit: [https://app.gearbox.fi/accounts/](https://app.gearbox.fi/accounts/). \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Unexpected sandwiching or manipulation of user trades\n  - Incorrect use of oracles or their malfunction\n  - Any Cream-style mathematic attack on the protocol work \n  - Theft of governance funds ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Smart Contract bug reports require a PoC to be eligible for a reward. A suggestion for a fix is preferred but not compulsory for Low and Medium Smart Contract bug reports. Explanations and statements are not accepted as PoC and code is required. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nAll vulnerabilities marked in the [https://github.com/Gearbox-protocol/gearbox-contracts/issues](https://github.com/Gearbox-protocol/gearbox-contracts/issues) are not eligible for a reward.\n\nPayouts are handled by the __Gearbox__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Gearbox can be found at [https://github.com/Gearbox-protocol/gearbox-contracts](https://github.com/Gearbox-protocol/gearbox-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of Pools Funds\n  - Loss funds of Credit Account\n  - Loss of Treasury Funds\n  - Freezing of funds on Credit Account or in Pool for any amount of time\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "popcornnetwork",
          "project": "Popcorn Network",
          "date": "2022-01-26T20:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6P2LM1k2XG9JgGimSnuczu/1cdfa5ae5918b13ddfd3299977ce914a/Popcorn_Network_Logo.jpeg",
          "maximum_reward": 150000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $150,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xe1CaA1216B2D9Fd88EC700C66D8Bff36bAB4eb6F",
              "type": "Smart Contract - ButterBatchProcessing"
            },
            {
              "target": "https://etherscan.io/address/0x709bC6256413D55a81d6f2063CF057519aE8a95b",
              "type": "Smart Contract - ButterBatchZapper"
            },
            {
              "target": "https://etherscan.io/address/0x8A41aAa4B467ea545DDDc5759cE3D35984F093f4",
              "type": "Smart Contract - ACLRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x85831b53AFb86889c20aF38e654d871D8b0B7eC3",
              "type": "Smart Contract - ContractRegistry"
            },
            {
              "target": "https://etherscan.io/address/0xCD4f7582b32d90BD9FC7DC9F8116C43Ab17dE011",
              "type": "Smart Contract - KeeperIncentive"
            },
            {
              "target": "https://etherscan.io/address/0xeEE1d31297B042820349B03027aB3b13a9406184#code",
              "type": "Smart Contract - PopLocker"
            },
            {
              "target": "https://etherscan.io/address/0xb5cb5710044D1074097c17B7535a1cF99cBfb17F#code",
              "type": "Smart Contract - RewardsEscrow"
            },
            {
              "target": "https://etherscan.io/address/0x633b32573793A67cE41A7D0fFe66e78Cd3379C45#code",
              "type": "Smart Contract - PopUsdcLpStaking"
            }
          ],
          "mdx": {
            "program_overview": "[Popcorn](https://popcorn.network/) is a new paradigm for DeFi where yield-generating products simultaneously fund social impact beneficiaries at no additional cost to the user. These beneficiaries are nonprofits, charities, and grassroot projects working in the areas of environment, education, open source, and inequality. Members of the PopcornDAO (POP token holders) are eligible to participate in all aspects of DAO governance, including beneficiary nominations and grant elections. They determine which beneficiaries receive a percentage of earned protocol fees on a recurring basis, and are incentivized to do so with POP rewards.\n\nAlong with directly funding community-selected beneficiaries, one of Popcorn’s key goals is to be a bridge between the social impact world and DeFi, helping them onramp into DeFi and educating them about the opportunities of DeFi and web3 to achieve social impact goals through community-led and equitable means. Popcorn will introduce them not only to DeFi but all the benefits of decentralization. In summary, Popcorn’s purpose is to aid the current revolutionary shift in global systems through accessible DeFi products that align financial wellbeing with positive global impact.\n\nFor more information about Popcorn Network, please visit [https://popcorn.network/](https://popcorn.network/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Temporary freezing of funds\n  - Unable to call contract\n  - Gas drainage / freezing of funds caused by gas overflow\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 25 000__ for Critical bug reports.\n\nPayouts are handled by the __Popcorn Network__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Popcorn Network can be found at [https://github.com/popcorndao/contracts-v1](https://github.com/popcorndao/contracts-v1).  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call contract\n  - Gas drainage / freezing of funds caused by gas overflow\n  - Smart contract fails to deliver promised returns\n  - Bad slippage occurred by keeper\n  - Access by unauthorized user\n  - Change of contract address in registry",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "blank",
          "project": "Blank",
          "date": "2021-11-30T06:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1wagODsuElJSzMVnjJlTrO/cf0b2c9ea34421bd73d4eae3827d89b0/Blank_wallet_logo__1_.jpeg",
          "maximum_reward": 150000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $150,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $10,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,500"
            },
            {
              "level": "low",
              "payout": "Up to USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Blank-Wallet/blank-extension",
              "type": "Web/App - Extension"
            }
          ],
          "mdx": {
            "program_overview": "Blank is the most private, non-custodial Ethereum browser wallet. Blank uses smart contracts that allow users to hide the amounts and origins of cryptocurrency held, in a decentralized and frictionless manner.\nEach time you want to make a withdrawal, Blank will create a new wallet address for you with the amount of crypto that you requested, which originates from the smart contract where everyone’s funds are pooled.\n\nFor more information about Blank, please visit [https://www.goblank.io/](https://www.goblank.io/).  \nThis bug bounty program is focused on their app and is focused on preventing:\n\n  - Thefts of funds of any amount\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll app bug reports must come with a PoC in order to be considered for a reward. All Medium and Low app bug reports require a suggestion for a fix to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Any vulnerability that can only be abused by a local attacker\n  - Local Attackers (with access to the user’s machine/browser) are not part of our threat model\n\nBug reports involving the ability to correctly determine the seed phrase will be paid at __USD 150 000__. All other extension bugs that are critical and result in loss of funds are paid at __USD 50 000__.  High, Medium, and Low Web/App bug reports have the final reward determined by the Blank team depending on exploitability, final impact, and ease of attack.  \n\nPayouts are handled by the __Blank__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All repositories of the Blank wallet can be found at [Blank · GitHub](https://github.com/Blank-Wallet/) \n\n[https://github.com/Blank-Wallet/blank-extension](https://github.com/Blank-Wallet/blank-extension)\n\n[https://github.com/Blank-Wallet/blank-extension-ui](https://github.com/Blank-Wallet/blank-extension-ui)\n\n[https://github.com/Blank-Wallet/blank-extension-background](https://github.com/Blank-Wallet/blank-extension-background)\n\n[https://github.com/Blank-Wallet/blank-extension-provider ](https://github.com/Blank-Wallet/blank-extension-provider)\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__App__\n\n  - Thefts of funds of any amount\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive data without authorization",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Attacks that require access to the user's machine or browser, physical or remote\n\n__Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "holdefi",
          "project": "Holdefi",
          "date": "2021-07-14T05:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/21crcctrIVergN7E7qKGcl/5bfcb84c6af551a858a8997156d5588c/Holdefi.jpeg",
          "maximum_reward": 150000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $150,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/Holdefi.sol",
              "type": "Smart Contract - Holdefi.sol"
            },
            {
              "target": "https://etherscan.io/address/0x959D3DdC42740F13A2de31Fb21642B0D332f7203#code",
              "type": "Smart Contract - Holdefi.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/HoldefiCollaterals.sol",
              "type": "Smart Contract - HoldefiCollaterals.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/HoldefiOwnable.sol",
              "type": "Smart Contract - HoldefiOwnable.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/HoldefiPausableOwnable.sol",
              "type": "mart Contract - HoldefiPausableOwnable.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/HoldefiPrices.sol",
              "type": "Smart Contract - HoldefiPrices.sol"
            },
            {
              "target": "https://etherscan.io/address/0x0175Fe30A07Dd4E70318Ef830Db083DCDfEF35e5#code",
              "type": "Smart Contract - HoldefiPrices.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/HoldefiSettings.sol",
              "type": "Smart Contract - HoldefiSettings.sol"
            },
            {
              "target": "https://etherscan.io/address/0xb9b1e85d4B61182C6FF510d70140680DB711b929#code",
              "type": "Smart Contract - HoldefiSettings.sol"
            },
            {
              "target": "https://github.com/holdefi/Holdefi/blob/master/contracts/Migrations.sol",
              "type": "Smart Contract - Migrations.sol"
            }
          ],
          "mdx": {
            "program_overview": "Holdefi is a decentralized open-source non-custodial money market protocol where users can participate as depositors or borrowers. Depositors provide liquidity to the market to earn a passive income, and everyone can borrow from this liquidity and repay it after a while. The Borrower must add collateral before borrowing any tokens. The value of the collateral should be greater than the value of the assets they want to borrow. This collateral is, in fact, a guarantee that they will repay the borrowed assets. \n\nFor more information about Holdefi, please visit their website at [https://holdefi.com/](https://holdefi.com/).  \n\nThe bug bounty program is focused on the prevention of negative impacts to its smart contracts. Please see the Impacts in Scope section below for more information on the specific impacts it wishes to prevent.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the __Holdefi__ team directly and are denominated in USD. All payouts are done in __BUSD__ or __USDC__, at the discretion of the Holdefi team. Bug bounty hunters must indicate whether the address they are providing is an Ethereum address or one on the Binance Smart Chain (BSC).",
            "assets_body": "For additional information, please reference their GitHub link for their smart contracts here - \n\n[https://github.com/holdefi/Holdefi/tree/master/contracts](https://github.com/holdefi/Holdefi/tree/master/contracts). \n\nHowever, only the smart contracts listed as in-scope in this table are considered for the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed interest\n  - Freezing of unclaimed interest\n  - Temporary freezing of funds for 1 hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types, as long as they result in impacts stated in the Impacts in Scope section of this bug bounty program:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces ",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "aztecnetwork",
          "project": "Aztec Network",
          "date": "2021-06-15T03:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/78NbD2QB9OVBtvCEUwwtnG/cd35b64b5935cbc31eed34c3140c8e58/aztec.jpeg",
          "maximum_reward": 150000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000 - USD $150,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000 - USD $75,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - USD $10,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/AztecProtocol/aztec-2-bug-bounty/tree/master/contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/AztecProtocol/aztec-2-bug-bounty/tree/master/barretenberg/src/aztec/rollup/proofs",
              "type": "ZK-SNARK Circuits"
            }
          ],
          "mdx": {
            "program_overview": "Aztec Network is an open source layer 2 network bringing scalability and privacy to Ethereum. Aztec Network uses zkSNARK proofs to provide privacy and scaling via our zkRollup service. \n\nFurther resources regarding Aztec Network can be found in their documentation, [https://developers.aztec.network/](https://developers.aztec.network/).  A draft of their protocol specification can also be found here, [https://hackmd.io/@aztec-network/ByzgNxBfd](https://hackmd.io/@aztec-network/ByzgNxBfd). \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and deanonymization of their ZK-SNARK circuits.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nRewards for ZK-SNARK Circuits vulnerabilities are distributed according to the CVSS v3.1 Scoring System.\n\n__ZK-SNARK Circuits__\n\n| Level |              | \n|-------|--------------|\n| Critical  | USD $100,000 - USD $150,000 |\n| high | USD $20,000 - USD $50,000 |\n| medium | USD $1,000 - USD $10,000 |\n| low | Up to USD $1,000 |\n\nFor vulnerabilities covering ZK-SNARK Circuits, Critical vulnerabilities are those with a CVSS score of 9.0 - 10.0, High are those with a CVSS score of 7.0 - 8.9, Medium are those with a CVSS score of 4.0 - 6.9, and Low are those with a CVSS score of 0.0 - 3.9.\n\nThe exploitability of the vulnerability reported will be taken into consideration when determining the final reward. Higher significance will also be attributed for vulnerabilities around the RollupProcessor.sol and TurboVerifier.sol contracts and files within the barrentenberg/src/aztec/rollup/proofs/ folder.\n\nPayouts up to __USD 150 000__ are handled by the __Aztec Network__ team directly and are denominated in USD. However, payouts are done in __DAI__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "__Prioritized Smart Contract/Blockchain vulnerabilities__\n\nWe are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Prioritized ZK-SNARK vulnerabilities__\n\n  - Attacks on “balance soundness” - i.e. being able to spend more funds than one has deposited, e.g. by a double spend reusing the same note somehow.\n  - Deanonymization attacks - i.e. obtaining information about sender, receiver or amounts sent in a transfer. \n  - “Faerie gold” attacks - where one manages to send funds to a receiver, who is convinced the funds were indeed received but cannot later spend them.\n  - Malleability attacks - where a rollup provider or other party can alter the transaction somehow from the sender’s original one.\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n  - Problems with rollup circuit\n  - Problems with escape hatch circuit",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Smart contract code that does not conform to standard heuristics but is not exploitable\n  - An example would be a case of not checking for integer overflow for an addition that cannot overflow, because of prior checks on the input operands.\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "liquiddriver",
          "project": "Liquid Driver",
          "date": "2022-01-24T06:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/gdQRur9G2twRmGbVPiPx4/fa7378229a55023ee1f87c7b703a99dd/liquid_driver_logo.png",
          "maximum_reward": 120000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $120,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://ftmscan.com/address/0x6e2ad6527901c9664f016466b8da1357a004db0f#code",
              "type": "Smart Contract - MasterChef Proxy"
            },
            {
              "target": "https://ftmscan.com/address/0x5cee2988184afe3cd807e0178b394259e8cdc56c#code",
              "type": "Smart Contract - MasterChef "
            },
            {
              "target": "https://ftmscan.com/address/0x3D29859B742427065B459DD1c6e7E29B0343425a#code",
              "type": "Smart Contract - Distributor V1"
            },
            {
              "target": "https://ftmscan.com/address/0xBA4284DF6566D967b80F71f9aF544D104491b2d3#code",
              "type": "Smart Contract - Distributor V2"
            },
            {
              "target": "https://ftmscan.com/address/0x095010A79B28c99B2906A8dc217FC33AEfb7Db93#code",
              "type": "Smart Contract - Distributor V3"
            },
            {
              "target": "https://ftmscan.com/address/0x10b620b2dbac4faa7d7ffd71da486f5d44cd86f9#code",
              "type": "Smart Contract - LQDR"
            },
            {
              "target": "https://ftmscan.com/address/0x3Ae658656d1C526144db371FaEf2Fff7170654eE#code",
              "type": "Smart Contract - xLQDR"
            },
            {
              "target": "https://ftmscan.com/address/0xc5713b6a0f26bf0fdc1c52b90cd184d950be515c#code",
              "type": "Smart Contract - linSpirit"
            },
            {
              "target": "https://ftmscan.com/address/0xF4230d880f52eDefdEaE5D1dEbB269AFe4dBcc36#code",
              "type": "Smart Contract - linSpirit Manager"
            },
            {
              "target": "https://ftmscan.com/address/0xbBf62f98D2F15F4D92a71a676a9baAC84eaB37d8#code",
              "type": "Smart Contract - linSpirit Strategy Proxy"
            },
            {
              "target": "https://ftmscan.com/address/0x61419bc78bc46c3ea3f770ba8764a056bad539f5#code",
              "type": "Smart Contract - linSpirit Strategy"
            },
            {
              "target": "https://ftmscan.com/address/0x1CC765cD7baDf46A215bD142846595594AD4ffe3#code",
              "type": "Smart Contract - linSpirit Chef"
            },
            {
              "target": "https://ftmscan.com/address/0x32d51B43cd2869A75DE0f24f05A0FA793fc42100#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-ETH"
            },
            {
              "target": "https://ftmscan.com/address/0x3a9a86e2C162dA0F9543E038Ad05985574b212A4#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-SPIRIT"
            },
            {
              "target": "https://ftmscan.com/address/0x13C3f0f484932595795C755B2e90C69C320E1e32#code",
              "type": "Smart Contract - SPIRIT-LP LQDR-SPIRIT"
            },
            {
              "target": "https://ftmscan.com/address/0x06C07B2763fddB63d7eDdB2A662EeF0DC6bbb0Ff#code",
              "type": "Smart Contract - SPIRIT-LP fUSDT-WFTM"
            },
            {
              "target": "https://ftmscan.com/address/0x0FBf3072dfc8AeD98924A4306F10D73ed8Cc463C#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-BTC"
            },
            {
              "target": "https://ftmscan.com/address/0x3eC0CD0a5dBCb6eFaF32a6a8BB6E80B7232F5879#code",
              "type": "Smart Contract - SPIRIT-LP USDC-WFTM"
            },
            {
              "target": "https://ftmscan.com/address/0xA7D9A49bCE5B285A0CaBEd6b19bf2dBb260F364e#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-MIM"
            },
            {
              "target": "https://ftmscan.com/address/0x30f2E775361BC373ECf90DADEA06f88195bCdef8#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-SUSHI"
            },
            {
              "target": "https://ftmscan.com/address/0x02A72cd1D6D837deAf12672811c904C15D0e610C#code",
              "type": "Smart Contract - SPIRIT-LP WFTM-LINK"
            },
            {
              "target": "https://ftmscan.com/address/0x12e5964aDfecbb49bbAb8B4C109Ea0b8278aCdF8#code",
              "type": "Smart Contract - spLP WFTM-BOO"
            },
            {
              "target": "https://ftmscan.com/address/0xEAE9bB24dbfC71309606703eEA7058dea996B4d3#code",
              "type": "Smart Contract - spLP USDC-WFTM"
            },
            {
              "target": "https://ftmscan.com/address/0xE3560B6E6c807100Aa8e0D3CEd64C97E3359405F#code",
              "type": "Smart Contract - spLP WFTM-DAI"
            },
            {
              "target": "https://ftmscan.com/address/0x646F4315442FB70aF2EA5bd4B0EFAd250d5387b2#code",
              "type": "Smart Contract - spLP WFTM-SUSHI"
            },
            {
              "target": "https://ftmscan.com/address/0x319FA2F3322766920c85ad6A708A7647C4f0f1A1#code",
              "type": "Smart Contract - spLP WFTM-LINK"
            },
            {
              "target": "https://ftmscan.com/address/0x1e9100D7dB709Ee89EFB0a509D0f3efb149aF7b1#code",
              "type": "Smart Contract - spLP WFTM-ETH"
            },
            {
              "target": "https://ftmscan.com/address/0x7c7a429C412718221c78A8076d79Fe805cf71Ca0#code",
              "type": "Smart Contract - spLP fUSDT-WFTM"
            },
            {
              "target": "https://ftmscan.com/address/0x1ee61D8c39B25a66D30addbc1795e43E35D435AE#code",
              "type": "Smart Contract - spLP WFTM-MIM"
            },
            {
              "target": "https://ftmscan.com/address/0x10Be6F295a05477cE29E173916fabf8F64b15e0C#code",
              "type": "Smart Contract - SPIRIT-LP fUSDT-SPELL"
            },
            {
              "target": "https://ftmscan.com/address/0x9cF86fBFe8A2af9b0a53Be973c27B7b6bc76f43E#code",
              "type": "Smart Contract - spLP WFTM-SCREAM"
            },
            {
              "target": "https://ftmscan.com/address/0xf164e0308D1137bA232ce96EDF47Cd06DD4c72cc#code",
              "type": "Smart Contract - 3poolV2-f"
            }
          ],
          "mdx": {
            "program_overview": "LiquidDriver is the first liquidity mining dApp providing liquidity-as-a-service in the Fantom ecosystem.\n\nWe aim to bring its users more utility, rewards, and long-term benefits through our native token, LQDR, and ultimately become the leading liquidity-on-demand platform for dApps on the Fantom Opera Mainnet.\n\nFor more information about Liquid Driver, please visit [https://www.liquiddriver.finance/](https://www.liquiddriver.finance/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Masterchef: 0x6e2ad6527901c9664f016466b8da1357a004db0f\n    - Loss of user funds (principal)\n    - Gain control of the contract\n    - Mint LQDR\n\n  - Masterchef Strategies:\n    - Loss of user funds (principal)\n    - Gain control of the contract\n\n  - Distributor V1, V2, V3:\n    - Steal user rewards\n    - Gain control of the contract\n    - Manipulate the mathematics (eg. earn more rewards)\n\n  - LinSpirit, LinSpiritManager and LinSpiritStrategy:\n    - Gain control of the contract\n\n  - LinSpiritStrategy:\n    - Gain control of the contract\n    - Loss of user funds (principal)\n\n  - xLQDR:\n    - Lock time and vote power manipulation\n    - Transfer xLQDR\n    - Drain of locked LQDR",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All High Smart Contract bug reports require a PoC to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nAll vulnerabilities marked in the [Solidity Finance security review](https://solidity.finance/audits/LiquidDriver/) are not eligible for a reward.\n\nPayouts are handled by the__ Liquid Driver__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Liquid Driver can be found at [https://github.com/LiquidDriver-finance](https://github.com/LiquidDriver-finance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\nAccepted impacts for smart contract vulnerabilities are dependent on the assets that they affect\n\n  - Masterchef: 0x6e2ad6527901c9664f016466b8da1357a004db0f\n    - Loss of user funds (principal)\n    - Gain control of the contract\n    - Mint LQDR\n\n  - Masterchef Strategies:\n    - Loss of user funds (principal)\n    - Gain control of the contract\n\n  - Distributor V1, V2, V3:\n    - Steal user rewards\n    - Gain control of the contract\n    - Manipulate the mathematics (eg. earn more rewards)\n\n  - LinSpirit, LinSpiritManager and LinSpiritStrategy:\n    - Gain control of the contract\n\n  - LinSpiritStrategy:\n    - Gain control of the contract\n    - Loss of user funds (principal)\n\n  - xLQDR:\n    - Lock time and vote power manipulation\n    - Transfer xLQDR\n    - Drain of locked LQDR",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "88mphv3",
          "project": "88mphV3",
          "date": "2021-07-03T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/zXb98ZktA4Iz4lbX9K9DZ/7644b389e284d4405290d8eadea36627/88mph_logo.png",
          "maximum_reward": 100420,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,420.69"
            },
            {
              "level": "high",
              "payout": "USD $21,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/88mphapp/88mph-contracts/tree/v3/contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/88mphapp/88mph-contracts/tree/v3/deployments/mainnet",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "88mph is a DeFi protocol for providing fixed-term fixed-rate interest. It does so by pooling deposits with differing maturations and fixed-rates together and putting the funds in a yield-generating protocol, such as Compound, Aave, and yEarn, to earn floating-rate interest. The debt incurred by the promised fixed-rate interest of a deposit is offered as floating-rate bonds (or fundings as referred to in the contracts), which someone can purchase in exchange for the floating-rate interest generated by the corresponding deposit. Buyers of floating-rate bonds thus speculate on the floating-rate yield generated by the underlying protocol, while decreasing the debt of the pool and the risk of insolvency.\n\n88mph is interested in securing its V3 smart contracts and is primarily interested in preventing the loss of user funds, permanent impairment of the protocol state, or severe damage to the protocol state, in addition to any issue that might cause user dissatisfaction or minimal failure. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final payout amount may be affected by the exploitability of the vulnerability. Payouts are handled by __88mph__ directly and are denominated in USD. However, payouts are done in __MPH__.",
            "assets_body": "The Mocks folder is not considered as in-scope of this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts/Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks that rely on social engineering\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks that rely on spamming\n  - Attacks that rely on Denial of Service\n  - Any physical attacks against 88mph property or data centers\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Disassembly or reverse engineering of binaries for which source code is not published, not including smart contract bytecode\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "positionexchange",
          "project": "Position Exchange",
          "date": "2022-02-16T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/57uroK45HJpV259gClTMud/2551fdc46d0446794d0d08088f6329d7/Position_Exchange_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x5ca42204cdaa70d5c773946e69de942b85ca6706",
              "type": "Smart Contract - Position Token"
            },
            {
              "target": "https://bscscan.com/address/0x0c54b0b7d61de871db47c3ad3f69feb0f2c8db0b",
              "type": "Smart Contract - PosiStakingManager"
            },
            {
              "target": "https://bscscan.com/address/0x89a0380d83a53310141308ea6b113173ff6f1200",
              "type": "Smart Contract - Governance (Control Token)"
            },
            {
              "target": "https://bscscan.com/address/0xecA16dF8D11d3a160Ff7A835A8DD91e0AE296489",
              "type": "Smart Contract - POSI NFT"
            },
            {
              "target": "https://bscscan.com/address/0x9D95b5eA6C8f678B7486Be7a6331ec10A54156BD",
              "type": "Smart Contract - Mint Factory (Cast NFTs)"
            },
            {
              "target": "https://bscscan.com/address/0xbE9FF181BFA9dd78191B81B23Fd4ff774a3fB4F1",
              "type": "Smart Contract - NFT Staking"
            },
            {
              "target": "https://bscscan.com/address/0xD4c9123e011066A971FB78D4015CD3f0B8126E75",
              "type": "Smart Contract - Bond 001"
            },
            {
              "target": "https://bscscan.com/address/0x77d2E86C25792eD30d17e6FC8334a09f6347F5A4",
              "type": "Smart Contract - Bond 002"
            },
            {
              "target": "https://bscscan.com/address/0x0385665ac09aa35c6e7ea58a0a9b63915fc60f38",
              "type": "Smart Contract - BUSD Vault"
            },
            {
              "target": "https://bscscan.com/address/0x43c2b319901be27b11dda5c5daea1e0d34c62de5",
              "type": "Smart Contract - BNB Vault"
            },
            {
              "target": "https://testnet.bscscan.com/address/0xa83d4aa2131e1f6bef7f3fae855c2c546a7064cd",
              "type": "Smart Contract - Futures Trading Testnet"
            },
            {
              "target": "https://position.exchange/",
              "type": "Web/App"
            },
            {
              "target": "https://app.position.exchange/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Position Exchange is a Decentralized Crypto platform with a complete Ecosystem aiming to bridge the gap between people and cryptocurrency and enhance DeFi experience. The protocol is fully owned & governed by its community and offers a wide range of DeFi products for all kinds of users in an open, transparent and trustless system where everything runs on-chain.\n\nThe platform is designed to deliver all the advantages of Decentralized Finance whilst bringing the traditional Centralized Finance experience and tools onboard. Users can Trade Crypto Derivatives, Generate passive income through farming and staking, Invest and borrow, Dive in the NFT world, Participate in Governance and Community activities in a True Decentralized system.\n\nPosition Exchange with its large Ecosystem and long-term vision is aiming to be the Decentralized Crypto Platform of choice.\n\nFor more information about Position Exchange, please visit [https://position.exchange/](https://position.exchange/).   \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll web/app bug reports and Critical/High/Medium severity smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all Critical/High/Medium bug reports must also come with a suggestion for a fix to be considered for a reward. \n\nAll known issues highlighted in the following audit report is considered out-of-scope: \n  - [https://www.certik.com/projects/positionexchange](https://www.certik.com/projects/positionexchange)\n\nPayouts are handled by the __Position Exchange__ team directly and are denominated in USD. However, payouts are done in __POSI__ or __BUSD__, at the discretion of the team.",
            "assets_body": "All smart contracts of Position Exchange can be found at [https://github.com/PositionExchange/](https://github.com/PositionExchange/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Position Exchange that isn’t on this table but for which the impact is in the Impacts in Scope section, you are encouraged to submit it for the consideration of the project.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Block stuffing without fund transfers blocked\n  - Checkpoint manipulation\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Smart contract gas drainage\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Persistent injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "moola",
          "project": "Moola",
          "date": "2022-02-09T12:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5tmX46NlkvQqK0jSX3z9MC/a43ce6d140d084229a9e10f884b12808/MOO_blue_white_icon.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://explorer.celo.org/address/0xD1088091A174d33412a968Fa34Cb67131188B332",
              "type": "Smart Contract - LendingPoolAddressesProvider"
            },
            {
              "target": "https://explorer.celo.org/address/0x8e6779F2AC23F196ef9a6b446e557A6f81fD4F51",
              "type": "Smart Contract - ReserveLogic"
            },
            {
              "target": "https://explorer.celo.org/address/0xeC98172BcF583f2A40e7414cD9252404550fda87",
              "type": "Smart Contract - StableAndVariableTokensHelper"
            },
            {
              "target": "https://explorer.celo.org/address/0x22060a5e21921d1cFbebd301fF40f91F2D4c26F1",
              "type": "Smart Contract - ATokensAndRatesHelper"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/configuration/LendingPoolAddressesProviderRegistry.sol",
              "type": "Smart Contract - LendingPoolAddressesProviderRegistry"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/libraries/logic/GenericLogic.sol",
              "type": "Smart Contract - GenericLogic"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/libraries/logic/ValidationLogic.sol",
              "type": "Smart Contract - ValidationLogic"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/lendingpool/LendingPool.sol",
              "type": "Smart Contract - LendingPoolImpl"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/lendingpool/LendingPoolConfigurator.sol",
              "type": "Smart Contract - LendingPoolConfiguratorImpl"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/mocks/oracle/LendingRateOracle.sol",
              "type": "Smart Contract - LendingRateOracle"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/misc/AaveProtocolDataProvider.sol",
              "type": "Smart Contract - AaveProtocolDataProvider"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/tokenization/StableDebtToken.sol",
              "type": "Smart Contract - StableDebtToken"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/tokenization/VariableDebtToken.sol",
              "type": "Smart Contract - VariableDebtToken"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/tokenization/AToken.sol",
              "type": "Smart Contract - AToken"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/lendingpool/DefaultReserveInterestRateStrategy.sol",
              "type": "Smart Contract - rateStrategyStableTwo"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/lendingpool/DefaultReserveInterestRateStrategy.sol",
              "type": "Smart Contract - rateStrategyWETH"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/protocol/lendingpool/LendingPoolCollateralManager.sol",
              "type": "Smart Contract - LendingPoolCollateralManager"
            },
            {
              "target": "https://github.com/moolamarket/moola-v2/blob/main/contracts/misc/WalletBalanceProvider.sol",
              "type": "Smart Contract - WalletBalanceProvider"
            },
            {
              "target": "https://moola.market/",
              "type": "Web/App"
            },
            {
              "target": "https://alfajores.moola.market",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Moola is a non-custodial liquidity protocol built on the Celo blockchain that is democratizing access to yield and credit. Depositors actively earn yield which is paid for by borrowers who are able to take over-collateralized loans in perpetuity, under-collateralized credit delegated or flash loans. Moola has shared ancestry with Aave v2.\n\nFor more information about Moola, please visit [https://moola.market/](https://moola.market/). \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\n\nMoola requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. Bug bounty hunters will need to show a government-issued ID, including a physical address.\n\nPayouts are handled by the __Moola__ team directly and are denominated in USD. However, payouts are done in __cUSD__ or __MOO__ at the discretion of the team. For payouts done in __MOO__, the price of __MOO__ will be calculated based on a 30-day average USD price. MOO payments may incur a linear unlock period up to twelve months.",
            "assets_body": "All smart contracts of Moola can be found at [https://github.com/moolamarket/moola-v2](https://github.com/moolamarket/moola-v2). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any period\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\nAttacks that the reporter has already exploited themselves, leading to damage\nAttacks requiring access to leaked keys/credentials\nAttacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bitcoinsv",
          "project": "Bitcoin SV",
          "date": "2022-02-06T12:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1QGKUeaqBrYdlFTXnKGA0u/50e4d6da4e4758c3422e4e7e946e5d74/BitcoinSV-removebg-preview.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/bitcoin-sv/bitcoin-sv",
              "type": "   Blockchain - Node Repository (see added restrictions)"
            }
          ],
          "mdx": {
            "program_overview": "Bitcoin Satoshi Vision (BSV) was created to restore the original Satoshi protocol, keep it stable, and enable it to massively scale. Unlike other Bitcoin projects, only Bitcoin SV has the plan for a stable protocol and plan for massive on-chain scaling to become the world’s new money and the global public blockchain for enterprise.\n\nThe bug bounty program is focused around the code base for BSV and spans end-to-end, ranging from the soundness of protocols (blockchain consensus model, the wire and p2p protocols, proof of work, etc.), protocol implementation, and compliance to network security and consensus integrity. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability with the following categorization:\n\n__Critical__ - Catastrophic impact on the network as a whole; network availability compromised; loss of funds\n__High__ - Impacts individual nodes; individual node crashes; potential for a loss of funds\n__Medium__ - Not easily exploitable; medium impact; no loss of funds\n__Low__ - Not easily exploitable; low impact\n\nThe level of exploitability is determined by the Bitcoin Association for BSV.\n\nA proof of concept is not required but is recommended to allow faster processing of the bug report. This proof of concept should be code.\n\nPayouts are handled by the [Bitcoin Association for BSV](https://bitcoinassociation.net) directly and are denominated in USD. However, payouts are done in __BSV__.",
            "assets_body": "Not all of [https://github.com/bitcoin-sv/bitcoin-sv](https://github.com/bitcoin-sv/bitcoin-sv) is considered in-scope of the bug bounty program. \nPlease note the following details with regards to what is in-scope and what is out-of-scope:\n\n__Branches in scope:__\n\nmaster branch\nmost recently updated branch with prefix: rc-*\nbranches prefixed with: review-*\n\n__Branches out of scope:__\n\nbranches prefixed with: dev-*, exp-* or research-*\nbranches suffixed with: *-beta\nall other branches not specified as in scope\n\nIf you believe that your bug report that covers a branch in scope is critical and wish to use a secure method of communication, please see our PGP key at the bottom.\n\nThe scope is further limited to those Operating Systems & hardware platforms for which binaries are released by the Bitcoin SV Node implementation team. Any external code in the GitHub link is out-of-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Network availability compromised\n  - Loss of user funds (potential loses of funds are downgraded)\n  - Nodes shut down or crashes \n  - Resource exhaustion attack\n\n“Resource exhaustion attack” is defined as an exploit designed to consume large amounts of CPU, memory, bandwidth, or storage resources whether by normal operation of the Bitcoin SV protocol or by intentionally crafting blocks or transactions with unusual behavioural characteristics. Resource exhaustion attacks, as defined, are generally out of scope for the bug bounty program.However, we acknowledge that there is value in documenting all possible attack vectors and will consider disclosures of such attacks for rewards in the “low” category and in exceptional cases in the “medium” category. Awarding of bounties in this category are subject to the following conditions:\n\n  - The award is completely discretionary\n  - The attack much not be previously known to us\n  - The attack must be demonstrably executable on a version of the software that would otherwise be deemed in scope if not for the resource exhaustion attack exclusion",
            "prioritized_vulnerabilities": "See above: __Impacts in Scope__",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks that rely on social engineering\n  - Attacks requiring access to leaked keys/credentials\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Best practice critiques\n- Sybil attacks\n- Findings from physical testing such as office access (e.g. open doors, tailgating)\n- UI bugs and spelling mistakes on this or any associated website\n- Network level Denial of Service (DoS/DDoS) vulnerabilities\n- Resource exhaustion attacks not satisfying all 3 conditions above\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Violating the privacy of others, disrupting our systems, destroying data, and/or harming user experience.\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty*\n  - Interacting with anything other than test accounts you own or with explicit permission from the account holder.\n  - Any testing with mainnet or public testnet; all testing should be done on private testnets\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Disassembly or reverse engineering of binaries for which source code is not published, not including smart contract bytecode\n\nIf a vulnerability provides unintended access to data: Limit the amount of data you access to the minimum required for effectively demonstrating a Proof of Concept; and cease testing and submit a report immediately if you encounter any user data during testing, such as Personally Identifiable Information (PII), or proprietary information.\n\n*An embargo period is a fixed period of time from when a bug is reported to when a bug reporter can publicly disclose it. Bug reporters must not publicly discuss or disclose the presence or details of a bug during the embargo period. Once the embargo period is over bug reporters will be free to publicly discuss and disclose the details of the bug they’ve found and any proof-of-concept exploits that they may have written to validate the bug, with the exception of reports related to resource exhaustion attacks.\n\n__Other Notes__\n\nPlease note, we do not want to receive any sensitive data during any disclosure, such as personally identifiable information (PII) or any data associated with private/public keys.\n\n__Bitcoin SV Security Team PGP Key__\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: SKS 1.1.6\n\nmQINBFukzJcBEAC6P81ADa4ftaBqS4ABbFCcxCaRju/+z1nF7AbTBmvVZme8vKFj8NgKnKgG\n3YxcoiuByAaR9yBMQ3ALTrNbYowjHgbm37Z2MQTfMXPXtSkvMJU2aqp3F+R3QPE6DYfPiTV3\nbRvvTCWI2XzKCaJzVjEGqN/hq2BN12zrh6Y9cdCTQ0gwLe07gGdcQn4EyEu4NhRa1umJm/bv\nXUCP0dHzFX/43DACgnAZgDSbeyPaRio1XG4BRLgIB2RQ4aL+bqEhCwllY8DRiqMjbPn9iHH3\n3EfmimwGzYWyP6gjKEO9wkoFmURosCub/XLbRwgSxy6Cw2UGD9vIY9EGis5ehwaoJf8YZPwY\n5umue0zlBK3kN+HXuVPAB2+ug6ZZXIuaxhMG6JmWTozuJAQ8sWGdyQlC3u8kMZ9vPCI6cyTo\nUFD7ss8dC50ZGs6XglMoaZDjTOpuG4mhXPfoUhLuZPGhtHVYRYik4P/hslBDIDbNMIywkkf3\nJOtxmDAFQivVfV8055/TOIYdGweOKhyqlp2kRN++6skexOSKyZ9+CM+3d+BW4wSmUfrleOUw\nn4Ys4qFkBxUfbIa7Y5zhyeAo/qngmMjqomgFI5yQ+jzYHBSeEUqnp1ACY6I6HiqpQYQmpCHn\nnQk2MypW456db15Xd0xkd33+1nkioBPMFGBQaj73RwhXH3d0vQARAQABtDBCaXRjb2luIFNW\nIFNlY3VyaXR5IFRlYW0gPHNlY3VyaXR5QGJpdGNvaW5zdi5pbz6JAlQEEwEIAD4WIQTo65cK\nHGB98IIuE4j5aXb9eiCrYgUCW6TMlwIbAwUJAme9KQULCQgHAgYVCgkICwIEFgIDAQIeAQIX\ngAAKCRD5aXb9eiCrYqxaD/wN/r0Fwv8Xhkc+gMmXN/SjKl4a8Cp32e9737bzLlMHaXyNVw2V\nIj8/MM45MnIU/BaKi3Em2Ber6p5XaUYy81CmjEgnRfsQ9AqbVHqA6sgjI1iF/LWm86O6ZLF2\n6oJENk0s56JDptYuHGxJRGL0Q6z2iY8wOIDx7kwvMitUJqm5tsYX+Ekeci6lfwilbpyUWdqQ\niUh8Gv4P6ckAt3qUwqepFkgPbMpoz0n1WzRzbg+d/lDcDI6BgDjUa4qb93m4epGKprc/ESkw\n/zB1LCZw2RBBsTJmnkpe5Q+aldUFUuWHcZ79lm+s30MBnqQ9d8q2wblYUH3crJBgYR1c7v2s\nvqHQlB2CnCSq9nwmsadPMYKkBUN8GWSLqw4t8c/0bXcw0Kkl2iwOAIN4KRfO6sM57BfL0pTq\nsk+onfnimYNUdFAm0Awxspupq8hZWy2L1K4meW4nB1cvJjBHUi9QGEzfk2gzkAn4VMYhD8UI\nB5yKcKK58dp7IVQgRc8djskxTwl1jhe8/Dez/II39yvKPK+hoo5hpq3KxQcJoGktxog4QM9z\nEOpJRCfnjJD2ijOCBUiejy3LIwqzH+cAMly0LS0W93UD2pLi1R494kkZ/VnMTZVc4cSz0A2w\nUkqWcbGQ/oLkq5Q1ilPS4FCSsJ60/UXSoWGV3ncZ+XnOX43M7D9z0v6SDbkCDQRbpMyXARAA\ny9LNLHRWEq4ThTtbNmuItKTMLTYFdDFkKHiexxCyF0jQuMv4bxfx3cCZJ+6ty7DTeSw9oG2K\nnYN/d6vyyJ1r0sPAyWODDb6ekqlwsCSiM2DEVy3tQITisWXMg4D0/ys+Q+1bi0MTYve4I6XL\n8mKnomgzaeFSBAvYfGQ2Oz5GDZfj8/yNWmInjoSWRZxOpTYgOf6UedJ56ew2aejno+Y4h4Cf\nwnBdAWn3FIeFho+MllcSQbMbDBaDX3MGNeE6ZkXV7WD7xLcD39Xn2nS3IVQx9LcEkbRIWzFY\nf8Arbi33gtT35jOBpSW3a/xFOoxVt+t7YWHuAYXYL67bh+OpMAr/XowQuV5+ICfXW53CEg7i\nVsYEikms7lkEGz89tyCDdYCr8lV3/Ka2cTSirh22Y5rravtYMubZUoCMYHgmrEiA8vQz3wLQ\npG3wnBs4E3PtFk4QIK6VjLdnFWAHY8ULM0XRY98hrZ5LZ8WNCv+0JIbKSS8afasM/HOXFFUw\n69HsGbMJo0YmVe8y7sSyLRFwVraafy5NQpjl9Vp+zoiBtt5dD4DPjbqlZqfTpX1EHmMt07vI\n1CYUJcJ7PHg8VabK3+4V1Q4HMWbbpAPYRZXXeej7gOcTJDEvCSOzKkreU/DUG+lEJedN+tOD\n7PyKGbV/VSjzLGG1U77ZXJqbPdrInPUJzPcAEQEAAYkCPAQYAQgAJhYhBOjrlwocYH3wgi4T\niPlpdv16IKtiBQJbpMyXAhsMBQkCZ70pAAoJEPlpdv16IKtiO+oP/35OA/hZmHZQEqWp5Lty\nbV3tzz//zhDfEK4wK52POmnVO/hynsygoH2Ws7GWTrKLkVvevmc0S4+pC8cpahVrI9mpzEJw\n9zoFuJjKSmyyDwrxaV/NskU7QI68PKEvNQfqAinMy9pB9q32+B9So87vKdcINaYmInU3B7Ef\nYtzE9MZKG18lma4bXgdNFrVkRFJoJTYVd6T86dK7NQnIgA67q1Dp5A+zO/fi8qP6chmpfrcU\nps8bMtL8YiCTzYAaXX+S8v9tVza9U6JxV2902/drkacnVsK1YWzJQgm9vHWjSl7T0x06qqKS\n8oSEICufSxJ2PcrKNPsUL4OXgIRJaa/5JpdvK1Dckr9rukZgsctxu3vJW/XhbLYWVs79UrkM\naVjF19Mm3/m3XINjSUL4rqw2CFEydvIN/a/o2OTh++Zcr4a17/u/teBllHAtfiaBayC8PrCf\nLHm8AmTq65RQ0S9V8rxVQhpEUumXh+jzbeXPjVs7Y/d0EaKAU6MbR4EWu4JWBm799sLSzXFO\nc7ipgGLAx1qCZYmxsFzzB7VsAAA85Qcow9tMHi7JrTLnlU5bb8FA18mmG7T8F9M69Iknwb73\nrf8atunC+GiS2/6RRwtTbVfO2LVPxLlqQovSsjCoWgifHH4rg1OCs1T0v7ed0V4eU8p5fzla\n7auhB+wyIkulnJbt\n=zYLL\n-----END PGP PUBLIC KEY BLOCK-----"
          }
        },
        {
          "id": "wepiggy",
          "project": "WePiggy",
          "date": "2022-01-28T20:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5khU3RhSO4s3BSbZKNEn8J/18550ff20037e45de976d690b58efad2/WePiggy_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Mobile App",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $4,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x311aEA58Ca127B955890647413846E351df32554",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://etherscan.io/address/0xe212829Ca055eD63279753971672c693C6C6d088",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://etherscan.io/address/0xE4A1E73157EB4b58b1347E2BE2df7ac83467b288",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://etherscan.io/address/0x0C8c1ab017c3C0c8A48dD9F1DB2F59022D190f0b",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://etherscan.io/address/0x8158B34fF8A36dD9E4519d62C52913C24ad5554b",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://etherscan.io/address/0xA0a75821220bfC74f8012d5D5745FE472F510075",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://etherscan.io/address/0x678C86dBD6965D65Bf74b73d75b615A37428a87d",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://etherscan.io/address/0x82413f75f0DA101e0FE7F6FF6cBa3461F7e04f29",
              "type": "Smart Contract - P_UNI"
            },
            {
              "target": "https://etherscan.io/address/0x82dE3959c09f665a82C794fAfC1eb34CFCb555Ee",
              "type": "Smart Contract - P_YFII"
            },
            {
              "target": "https://etherscan.io/address/0x85166b72c87697a6acfF24101B43Fd54fE28a179",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://etherscan.io/address/0x5cFad792C4Df1323188180778AeC58E00eAcE32a",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://etherscan.io/address/0xf8E5b9738BF63ADFFf36a849F9b9C9617c8D8c1f",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://etherscan.io/address/0xc12B9D620bFCB48be3e0CCbf0ea80C717333b46F",
              "type": "Smart Contract - P_WBTC"
            },
            {
              "target": "https://etherscan.io/address/0x27A94869341838D5783368a8503FdA5fbCd7987c",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://etherscan.io/address/0x97F3763F8C0bE87Cab0e99Ee4b7806acA772FeDA",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://etherscan.io/address/0x3e5496E50793E72e6143a15Bed1c2535F0B0b9b0",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://etherscan.io/address/0x690Aa2591e57180cBA5A6123e9D462907A5e1c95",
              "type": "Smart Contract - P_LRC"
            },
            {
              "target": "https://etherscan.io/address/0x4008e986b7eb0Ff82c916cF0d8AF9956215DdeF5",
              "type": "Smart Contract - XLON_ORACLE_ADAPTER"
            },
            {
              "target": "https://etherscan.io/address/0xEf86384Cf696929C3227428f539e740EE12fcdc7",
              "type": "Smart Contract - pxLON"
            },
            {
              "target": "https://etherscan.io/address/0x959F30F765a44273EcCaA0FAc094160aa7c238E2",
              "type": "Smart Contract - P_RAI"
            },
            {
              "target": "https://etherscan.io/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://etherscan.io/address/0x6afca10b87becc9d48374bad028a815aa861d3cb#code",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1 (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x81ed5efd9477106f898733e47e9ec7738fa3e00c#code",
              "type": "Smart Contract - COMPTROLLER (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0xd828f7029cc58c4e9cab3b1e0726cefab411bc65#codevvv",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x465461657b4175c1676ecea1fb0e8d0174d8d7f6#code",
              "type": "Smart Contract - PERC20 (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x6c26c3abd3b8ac89adeb34db9d3a9fbb54a0060a#code",
              "type": "Smart Contract - P_ETH (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x5601911e4bd18349a4e2a200676a87896fdb7dc0#code",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)\\"
            },
            {
              "target": "https://etherscan.io/address/0xf1f06e7971db11d609eabf5e495e8913314cf651#code",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://explorer.harmony.one/address/0xb205d0AeF84C666FBBe441C61DC04fEb844444E6",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://explorer.harmony.one/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/oracle/WePiggyPriceOracleV1.sol",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/comptroller/Comptroller.sol",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/rate/JumpRateModel.sol",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/rate/JumpRateModel.sol",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/rate/JumpRateModel.sol",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PEther.sol",
              "type": "Smart Contract - P_ONE"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_BUSD"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/PERC20.sol",
              "type": "Smart Contract - P_WBTC"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/token/Maximillion.sol",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://github.com/WePiggy/wepiggy-contracts/blob/harmony/contracts/farm/PiggyDistribution.sol",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://polygonscan.com/address/0x4C78015679FabE22F6e02Ce8102AFbF7d93794eA",
              "type": "Smart Contract - WP_PIGGY_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://polygonscan.com/address/0x5Ea2321aBFF78E81702cE877319cD775E0dc865B",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://polygonscan.com/address/0x3ae45395f0EdC9e72c26c8DfacA1035DdDdA5464",
              "type": "Smart Contract - dQUICK_ORACLE"
            },
            {
              "target": "https://polygonscan.com/address/0x451032C55F813338b6e73c1c4B24217614165454",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://polygonscan.com/address/0xa43BF6193a89D28edB529ab5ca9Ad7506798f9f1",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://polygonscan.com/address/0xd58fb16Eace4693b2c641cae6850A82763C00a34",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://polygonscan.com/address/0xFfceAcfD39117030314A07b2C86dA36E51787948",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://polygonscan.com/address/0x16b321C99Ab31A84D565ea484F035693718c3E71",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://polygonscan.com/address/0xd1121aDe04EE215524aeFbF7f8D45029214d668D",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://polygonscan.com/address/0xC1B02E52e9512519EDF99671931772E452fb4399",
              "type": "Smart Contract - P_MATIC"
            },
            {
              "target": "https://polygonscan.com/address/0x12D803497D1e58dD4D4A4F455D754f1d0F937C8b",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://polygonscan.com/address/0x0C8c1ab017c3C0c8A48dD9F1DB2F59022D190f0b",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://polygonscan.com/address/0x5cFad792C4Df1323188180778AeC58E00eAcE32a",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://polygonscan.com/address/0xf4B6d5d432F1C7A9EfC9E0b04acDe479F9FD1f72",
              "type": "Smart Contract - P_WETH"
            },
            {
              "target": "https://polygonscan.com/address/0xf19200b30a0416322d58e6B6b1d6B5F832936729",
              "type": "Smart Contract - P_WBTC"
            },
            {
              "target": "https://polygonscan.com/address/0x1b1CD0fDb6592fe482026b8E47706EAC1ee94a7c",
              "type": "Smart Contract - P_SUSHI"
            },
            {
              "target": "https://polygonscan.com/address/0x3A9CAD689a510A7C410EE1bE17929cdf78efAC8C",
              "type": "Smart Contract - P_LINK"
            },
            {
              "target": "https://polygonscan.com/address/0xc28E11040c529a6828c20A641f8F75B7C0ea92E3",
              "type": "Smart Contract - P_CRV"
            },
            {
              "target": "https://polygonscan.com/address/0xd0199bA93031bA37aA4e17C885a47edeeb23aE04",
              "type": "Smart Contract - P_DQUICK"
            },
            {
              "target": "https://polygonscan.com/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://polygonscan.com/address/0x7a5c6998eef25004a60a08986c4a20a3fc44f58d#code",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1 (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0xbbf1c250e46ee41b3d01a9d0d15da19dad7c3845#code",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0x81c0e0b46ec6717698bb13f9190608af4b203b15#code",
              "type": "Smart Contract - COMPTROLLER (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0xb5f4c61e002125caf2f96a54aa7128bde32ffd15#code",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0xa08c94ca9071043d316537d9d3bf1bb31ef78de3#code",
              "type": "Smart Contract - P_MATIC (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0xa10b953f75e022316d5285288e9bd46d2a55b785#code",
              "type": "Smart Contract - P_WETH (Implementation)"
            },
            {
              "target": "https://polygonscan.com/address/0x2b8b4d10008ea6176cfd53cf26d5207bccf8d03f#code",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0x896aecb9E73Bf21C50855B7874729596d0e511CB",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://arbiscan.io/address/0x04d2944394b70d6e56fcf1CaD3aa6b5a43Ec8A5C",
              "type": "Smart Contract - WP_PIGGY_PRICE_PROVIDER_ARB"
            },
            {
              "target": "https://arbiscan.io/address/0x5676Eb997C30140606965CeBd4CA829Ab89A6CaC",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://arbiscan.io/address/0x0944eB1060cBD8a7923b1e7b7a10a17603261D2C",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://arbiscan.io/address/0x6d4D85C417aabdD2923165d5C66D92BA2eC56104",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://arbiscan.io/address/0xaa87715E858b482931eB2f6f92E504571588390b",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://arbiscan.io/address/0x77401FF895BDe043d40aae58F98de5698682c12a",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://arbiscan.io/address/0x417FDfC74503d8008AeEB53248E5C0f1960c2C1d",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://arbiscan.io/address/0x17933112E9780aBd0F27f2B7d9ddA9E840D43159",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://arbiscan.io/address/0x3393cD223f59F32CC0cC845DE938472595cA48a1",
              "type": "Smart Contract - P_WBTC"
            },
            {
              "target": "https://arbiscan.io/address/0x2Bf852e22C92Fd790f4AE54A76536c8C4217786b",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://arbiscan.io/address/0x8F87c9c6Efe9CA6997d6FEC8BC930C1fEd90ccC7",
              "type": "Smart Contract - P_LINK"
            },
            {
              "target": "https://arbiscan.io/address/0xB65Ab7e1c6c1Ba202baed82d6FB71975D56F007C",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://arbiscan.io/address/0xDe39Adfb2025D2aA51f6fD967e7C1753215f1905",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://arbiscan.io/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://arbiscan.io/address/0xa43bf6193a89d28edb529ab5ca9ad7506798f9f1#code",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1 (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0x3157e0bbdc7e5dea0f4c33a0ad7211b9a4ff19ee#code",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0xf0fe1cb691c4153bbcf7ef03cd26e1d85848042a#code",
              "type": "Smart Contract - COMPTROLLER (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0xcd5f13b00014853e063ce6c795d89bfd9ba67270#code",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0x811cd5cb4cc43f44600cfa5ee3f37a402c82aec2#code",
              "type": "Smart Contract - P_ETH (Implementation)"
            },
            {
              "target": "https://arbiscan.io/address/0x22f934a1bb68ea7e7893ef8f76249afe904af6ae#code",
              "type": "Smart Contract - P_WBTC (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x4C78015679FabE22F6e02Ce8102AFbF7d93794eA",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://bscscan.com/address/0xFfceAcfD39117030314A07b2C86dA36E51787948",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://bscscan.com/address/0xb205d0AeF84C666FBBe441C61DC04fEb844444E6",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://bscscan.com/address/0xE6320460Aca9E4A4385058EEfD7D4D70123fC9c9",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://bscscan.com/address/0x8c925623708A94c7DE98a8e83e8200259fF716E0",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://bscscan.com/address/0xC1B02E52e9512519EDF99671931772E452fb4399",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://bscscan.com/address/0xd1121aDe04EE215524aeFbF7f8D45029214d668D",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://bscscan.com/address/0x621CE6596E0B9CcF635316BFE7FdBC80C3029Bec",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://bscscan.com/address/0xe212829Ca055eD63279753971672c693C6C6d088",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://bscscan.com/address/0x33A32f0ad4AA704e28C93eD8Ffa61d50d51622a7",
              "type": "Smart Contract - P_BNB"
            },
            {
              "target": "https://bscscan.com/address/0x849C37A029B38D3826562697Ccc40c34477C6293",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://bscscan.com/address/0x311aEA58Ca127B955890647413846E351df32554",
              "type": "Smart Contract - P_BTCB"
            },
            {
              "target": "https://bscscan.com/address/0x12D803497D1e58dD4D4A4F455D754f1d0F937C8b",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://bscscan.com/address/0x2a8Cd78bFb91ACF53f589961D213d87c956e0d7f",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://bscscan.com/address/0x2B7F68170a598E507B19Bca41ED745eABc936B3F",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://bscscan.com/address/0x2dd8FFA7923a17739F70C34759Af7650e44EA3BE",
              "type": "Smart Contract - P_BUSD"
            },
            {
              "target": "https://bscscan.com/address/0x811Cd5CB4cC43F44600Cfa5eE3F37a402C82aec2",
              "type": "Smart Contract - P_DOT"
            },
            {
              "target": "https://bscscan.com/address/0x17933112E9780aBd0F27f2B7d9ddA9E840D43159",
              "type": "Smart Contract - P_UNI"
            },
            {
              "target": "https://bscscan.com/address/0x417FDfC74503d8008AeEB53248E5C0f1960c2C1d",
              "type": "Smart Contract - P_CAKE"
            },
            {
              "target": "https://bscscan.com/address/0x6a05BD123d780055c38526cC05d3c9B90D0E471c",
              "type": "Smart Contract - P_LTC"
            },
            {
              "target": "https://bscscan.com/address/0x00FF07204C3b27D72cF83Ef521Adb7066167561a",
              "type": "Smart Contract - P_LINK"
            },
            {
              "target": "https://bscscan.com/address/0xBc52BCE2C73Fec358ABBf047c50377183B9EAd0d",
              "type": "Smart Contract - P_ADA"
            },
            {
              "target": "https://bscscan.com/address/0xDF21D42a0fC6746718F2CFe2798F91C9d7277F32",
              "type": "Smart Contract - P_FIL"
            },
            {
              "target": "https://bscscan.com/address/0x23cf81eeAA61C1C7607Ee1a3Bfcff1f99AC26c85",
              "type": "Smart Contract - P_NULS"
            },
            {
              "target": "https://bscscan.com/address/0x33d295Aaa719fD756310eB42DE2847d0E7Be294E",
              "type": "Smart Contract - P_MASK"
            },
            {
              "target": "https://bscscan.com/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://bscscan.com/address/0xd58fb16eace4693b2c641cae6850a82763c00a34#code",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1 (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x4dccd53c9f1e2cb5eb9cda98bb41bf7694760ea7#code",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x77401ff895bde043d40aae58f98de5698682c12a#code",
              "type": "Smart Contract - COMPTROLLER (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x3401d01e31bb6defcfc7410c312c0181e19b9dd5#code",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x8e1e582879cb8bac6283368e8ede458b63f499a5#code",
              "type": "Smart Contract - P_BNB (Implementation)"
            },
            {
              "target": "https://bscscan.com/address/0x75dcd2536a5f414b8f90bb7f2f3c015a26dc8c79#code",
              "type": "Smart Contract - P_ETH (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x4c78015679fabe22f6e02ce8102afbf7d93794ea",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xffceacfd39117030314a07b2c86da36e51787948",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xaa87715e858b482931eb2f6f92e504571588390b",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x8c925623708a94c7de98a8e83e8200259ff716e0",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x77401ff895bde043d40aae58f98de5698682c12a",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x3401d01e31bb6defcfc7410c312c0181e19b9dd5",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x12d803497d1e58dd4d4a4f455d754f1d0f937c8b",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x3ec77d16a5dbfbf2e22be99a4533fa4333343a3b",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x621ce6596e0b9ccf635316bfe7fdbc80c3029bec",
              "type": "Smart Contract - P_OKT"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x8e1e582879cb8bac6283368e8ede458b63f499a5",
              "type": "Smart Contract - P_OKB"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x33a32f0ad4aa704e28c93ed8ffa61d50d51622a7",
              "type": "Smart Contract - P_BTCK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x75dcd2536a5f414b8f90bb7f2f3c015a26dc8c79",
              "type": "Smart Contract - P_ETHK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x849c37a029b38d3826562697ccc40c34477c6293",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x311aea58ca127b955890647413846e351df32554",
              "type": "Smart Contract - P_DAIK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xadf040519fe24ba9df6670599b2de7fd6049772f",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xe0bac94cd406ef59065b083ba347fcc95dfdd3a2",
              "type": "Smart Contract - P_DOTK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xea567f5355765ec40b70caa09a8836ae696d06d6",
              "type": "Smart Contract - P_UNIK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x733c7DDeC16aF34a998e17A122c70FBA10910258",
              "type": "Smart Contract - P_LINKK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xD6a78766514CdFC1a1fA188a7782b52313133705",
              "type": "Smart Contract - P_ETCK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x12BD9eDE4941f2c4aC8Fc9B4F15C1D9FC960B8AC",
              "type": "Smart Contract - P_SUSHIK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x6067fd56Dc969bffc5441F96c9389a95CcD8D32b",
              "type": "Smart Contract - P_FILK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x324Dab2dfE9f1341577e91b991D9d8e16419A190",
              "type": "Smart Contract - P_WBTCK"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xd58fb16eace4693b2c641cae6850a82763c00a34",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1 (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xf0fe1cb691c4153bbcf7ef03cd26e1d85848042a",
              "type": "Smart Contract - COMPTROLLER (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x9a9b2bf1d1c96332c55d0b6acb8c2b441381116d",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0x070f93412559a95bdd7f30c2b597578dcb34bc25",
              "type": "Smart Contract - PIGGY_DISTRIBUTION (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xd1121ade04ee215524aefbf7f8d45029214d668d",
              "type": "Smart Contract - P_OKT (Implementation)"
            },
            {
              "target": "https://www.oklink.com/en/oec/address/0xc1b02e52e9512519edf99671931772e452fb4399",
              "type": "Smart Contract - P_OKB (Implementation)"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0xb205d0AeF84C666FBBe441C61DC04fEb844444E6",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0xFfceAcfD39117030314A07b2C86dA36E51787948",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x9a9b2bF1d1c96332C55d0B6aCb8C2B441381116d",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x389844367fFa7660c6d98ae0f792d2473Ad72405",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x8c925623708A94c7DE98a8e83e8200259fF716E0",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x3401D01E31BB6DefcFc7410c312C0181E19b9dd5",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0xC1B02E52e9512519EDF99671931772E452fb4399",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x2dd8FFA7923a17739F70C34759Af7650e44EA3BE",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x621CE6596E0B9CcF635316BFE7FdBC80C3029Bec",
              "type": "Smart Contract - P_MOVR"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x33A32f0ad4AA704e28C93eD8Ffa61d50d51622a7",
              "type": "Smart Contract - P_BUSD"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x75DCd2536a5f414B8F90Bb7F2F3c015a26dc8c79",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x849C37A029B38D3826562697Ccc40c34477C6293",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x311aEA58Ca127B955890647413846E351df32554",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x12D803497D1e58dD4D4A4F455D754f1d0F937C8b",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x2a8Cd78bFb91ACF53f589961D213d87c956e0d7f",
              "type": "Smart Contract - P_WBTC"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x2B7F68170a598E507B19Bca41ED745eABc936B3F",
              "type": "Smart Contract - P_BNB"
            },
            {
              "target": "https://moonriver.moonscan.io/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xf18D727C034f47AE2C0FE221C1cf4A15f0557b5F",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xd58fb16Eace4693b2c641cae6850A82763C00a34",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x5Ea2321aBFF78E81702cE877319cD775E0dc865B",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xFfceAcfD39117030314A07b2C86dA36E51787948",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x896aecb9E73Bf21C50855B7874729596d0e511CB",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x3157e0bbDc7E5DEa0f4c33a0Ad7211B9a4FF19Ee",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x2B7F68170a598E507B19Bca41ED745eABc936B3F",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x8e1e582879Cb8baC6283368e8ede458B63F499a5",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x811Cd5CB4cC43F44600Cfa5eE3F37a402C82aec2",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x8158B34fF8A36dD9E4519d62C52913C24ad5554b",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xc12B9D620bFCB48be3e0CCbf0ea80C717333b46F",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x48a5322c3021d5eD5CE4293112141045d12c7EFC",
              "type": "Smart Contract - P_BTC"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x8F00a5E13b3F2AaAddc9708AD5c77FbCc300b0EE",
              "type": "Smart Contract - P_LINK"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://hecoinfo.com/address/0x4C78015679FabE22F6e02Ce8102AFbF7d93794eA",
              "type": "Smart Contract - WP_PRICE_PROVIDER_V1"
            },
            {
              "target": "https://hecoinfo.com/address/0xFfceAcfD39117030314A07b2C86dA36E51787948",
              "type": "Smart Contract - WE_PIGGY_PRICE_ORACLE_V1"
            },
            {
              "target": "https://hecoinfo.com/address/0x3401D01E31BB6DefcFc7410c312C0181E19b9dd5",
              "type": "Smart Contract - COMPTROLLER"
            },
            {
              "target": "https://hecoinfo.com/address/0x8b4397A92D53916f24a8E06777CEf4485281224C",
              "type": "Smart Contract - PIGGY_DISTRIBUTION"
            },
            {
              "target": "https://hecoinfo.com/address/0xd1121aDe04EE215524aeFbF7f8D45029214d668D",
              "type": "Smart Contract - STABLECOIN_JUMP_RATE_MODEL"
            },
            {
              "target": "https://hecoinfo.com/address/0x621CE6596E0B9CcF635316BFE7FdBC80C3029Bec",
              "type": "Smart Contract - BTC_ETH_JUMP_RATE_MODEL"
            },
            {
              "target": "https://hecoinfo.com/address/0x8e1e582879Cb8baC6283368e8ede458B63F499a5",
              "type": "Smart Contract - MAINSTREAM_JUMP_RATE_MODEL"
            },
            {
              "target": "https://hecoinfo.com/address/0x8158B34fF8A36dD9E4519d62C52913C24ad5554b",
              "type": "Smart Contract - MAX_IMILLION"
            },
            {
              "target": "https://hecoinfo.com/address/0x75DCd2536a5f414B8F90Bb7F2F3c015a26dc8c79",
              "type": "Smart Contract - P_HT"
            },
            {
              "target": "https://hecoinfo.com/address/0x311aEA58Ca127B955890647413846E351df32554",
              "type": "Smart Contract - P_HUSD"
            },
            {
              "target": "https://hecoinfo.com/address/0x12D803497D1e58dD4D4A4F455D754f1d0F937C8b",
              "type": "Smart Contract - P_USDT"
            },
            {
              "target": "https://hecoinfo.com/address/0x2a8Cd78bFb91ACF53f589961D213d87c956e0d7f",
              "type": "Smart Contract - P_USDC"
            },
            {
              "target": "https://hecoinfo.com/address/0x2B7F68170a598E507B19Bca41ED745eABc936B3F",
              "type": "Smart Contract - P_ETH"
            },
            {
              "target": "https://hecoinfo.com/address/0x2dd8FFA7923a17739F70C34759Af7650e44EA3BE",
              "type": "Smart Contract - P_HBTC"
            },
            {
              "target": "https://hecoinfo.com/address/0x811Cd5CB4cC43F44600Cfa5eE3F37a402C82aec2",
              "type": "Smart Contract - P_HPT"
            },
            {
              "target": "https://hecoinfo.com/address/0x17933112E9780aBd0F27f2B7d9ddA9E840D43159",
              "type": "Smart Contract - P_HDOT"
            },
            {
              "target": "https://hecoinfo.com/address/0x417FDfC74503d8008AeEB53248E5C0f1960c2C1d",
              "type": "Smart Contract - P_HLTC"
            },
            {
              "target": "https://hecoinfo.com/address/0xe212829Ca055eD63279753971672c693C6C6d088",
              "type": "Smart Contract - P_HBCH"
            },
            {
              "target": "https://hecoinfo.com/address/0x30ac79B557973771c931D8d765E0728261A742a0",
              "type": "Smart Contract - P_MDX"
            },
            {
              "target": "https://hecoinfo.com/address/0x0C8c1ab017c3C0c8A48dD9F1DB2F59022D190f0b",
              "type": "Smart Contract - P_HFIL"
            },
            {
              "target": "https://hecoinfo.com/address/0xd828F7029CC58C4E9Cab3B1E0726CEFab411bc65",
              "type": "Smart Contract - P_UNI"
            },
            {
              "target": "https://hecoinfo.com/address/0xC24230002c3386F0bCe325CB04FAC789fE66460a",
              "type": "Smart Contract - P_DAI"
            },
            {
              "target": "https://hecoinfo.com/address/0x6F620EC89B8479e97A6985792d0c64F237566746",
              "type": "Smart Contract - WPC"
            },
            {
              "target": "https://app.wepiggy.com/",
              "type": "Web App (Desktop)"
            },
            {
              "target": "https://m.app.wepiggy.com/",
              "type": "Web App (Mobile)"
            }
          ],
          "mdx": {
            "program_overview": "WePiggy is an open source, non-custodial crypto asset lending market protocol. In WePiggy's market, users can deposit their crypto assets to earn interest, or borrow others by paying interests.\n\nFor more information about WePiggy, please visit [https://www.wepiggy.com/](https://www.wepiggy.com/).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must come with a suggestion for a fix to be considered for a reward.\n\nAll known issues highlight in the following audit reports are considered to be out-of-scope:\n  - [https://github.com/WePiggy/wepiggy-contracts/tree/master/docs/audits ](https://github.com/WePiggy/wepiggy-contracts/tree/master/docs/audits)\n\nWePiggy requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are the name, affiliated company (if any) and an email address or Telegram handle.\n\nIn addition, WePiggy has the following requirements for bug bounty hunters to be eligible for rewards:\n  - Be at least 18 years of age.\n  - Be reporting in an individual capacity, or if employed by a company, reporting with the company's written approval to submit a disclosure to WePiggy.\n  - Not be a current or former WePiggy employee, vendor, contractor, or employee of a WePiggy vendor or contractor.\n\nPayouts are handled by the __WePiggy__ team directly and are denominated in USD. However, payouts are done in __WPC__.",
            "assets_body": "All smart contracts of WePiggy can be found at [https://github.com/WePiggy](https://github.com/WePiggy). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield for at least 24 hours\n\n__Web/App__\n\n  - Shell access on server\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tinyman",
          "project": "Tinyman",
          "date": "2022-01-21T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4UlrKSIPpMRMuGG06spCHw/c4470d0f4bf6ec163133669afffb41af/Tinyman_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/tinymanorg/tinyman-contracts-v1/tree/13acadd1a619d0fcafadd6f6c489a906bf347484/contracts",
              "type": "Smart Contracts"
            }
          ],
          "mdx": {
            "program_overview": "Tinyman is a decentralised exchange (DEX) on Algorand. More specifically, it is an Automated Market Maker (AMM) exchange employing the Constant Product Market Maker algorithm.\n\nThe exchange is fully decentralized and non-custodial. Funds are held in permissionless smart contract accounts. This means the only methods to withdraw funds from the pool accounts are those encoded in the smart contract. At a high level this code only allows withdrawals in exchange for an appropriate amount of another asset or by the liquidity owners in exchange for their Pool Tokens.\n\nFurthermore the contracts are fully permissionless. This means that any account can create a pool by issuing the correct set of transactions. It means that no account has authority over the pool's assets or functionality. This also means there is no mechanism to revert or adjust transactions even if they are made in error.\n\nThe contracts are also fully immutable. This means no account has the authority to update or delete the contracts that control the pools. This means that funds cannot be stolen by an update to the contracts.\n\nFor more information about Tinyman, please visit [https://tinyman.org/](https://tinyman.org/).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of liquidity pools\n  - Unauthorized and fraudulent calls to Tinyman v1.1 smart contracts",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nNo PoC is required, but all bug reports must be detailed with either step-by-step exploit instructions or pointers to specific lines of code in order to be considered for a reward. The Tinyman team may ask for further explanations for bug reports to prove validity. \n\nTinyman will also issue an NFT reward for valid High severity reports, and a single edition Tinyman NFT reward for valid Critical severity reports.\n\nThe following impacts are considered to be out of scope of this bug bounty program: \n  - Issues due to Freeze or Clawback of pooled assets\n  - Rounding issues when swapping/minting/burning with <1000 microunits of an asset\n  - Overflow errors when attempting to swap/mint/burn very large amounts \n  - Attacks against accounts not created from the Pool LogicSig Template\n  - MEV style attacks\n  - Pool ratio/price manipulation due to donations to the pool account\n\nAll known issues listed here are also considered as out-of-scope of the bug bounty program: [https://github.com/tinymanorg/docs/tree/main/known-issues](https://github.com/tinymanorg/docs/tree/main/known-issues).   \n\nPayouts are handled by the __Tinyman__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __ALGO__, at the discretion of the team.",
            "assets_body": "This bug bounty program applies only for Tinyman v1.1 contracts which includes validator approval, validator clear state and pool logic sig (stateless) programs. The Pool accounts are LogicSignature Contract accounts. The unique LogicSignature contract for each is generated from [pool_logicsig.teal.tmpl](https://github.com/tinymanorg/tinyman-contracts-v1/blob/8be3e7f8005bb131c51e10e82885a8e764d7a336/contracts/pool_logicsig.teal.tmpl). It does not exist on-chain.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Theft of pooled assets\n  - Theft of Pool Tokens (LP tokens)\n  - Theft of excess amounts\n  - Theft of protocol fee Pool Tokens\n  - Taking signer authority of pool accounts\n  - Modification/deletion of Validator App\n  - Making pool accounts pay unnecessary fees\n  - Causing a pool account to become unable to process further operations\n  - Bootstrapping a pool with incorrect Pool Token properties\n  - Loss of funds due to flaws in implementation of calculations",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "woofi",
          "project": "WOOFi",
          "date": "2022-01-17T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/11hxnxgrTQdOtcvzTXw3Na/a0c87fdf3e8a150b0f453224d3f0aae6/WOOFi_Logo_Option_1.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x114f84658c99aa6EA62e3160a87A16dEaF7EFe83",
              "type": "Smart Contract - WooRouter"
            },
            {
              "target": "https://bscscan.com/address/0xbf365Ce9cFcb2d5855521985E351bA3bcf77FD3F",
              "type": "Smart Contract - WooPP"
            },
            {
              "target": "https://bscscan.com/address/0x6b6fBEc7934b104e81b2046D24A990e03e17afDC",
              "type": "Smart Contract - Wooracle"
            },
            {
              "target": "https://bscscan.com/address/0xaa6c60d638d34261b764fedb551e50ab02c34c90",
              "type": "Smart Contract - WooFeeManager"
            },
            {
              "target": "https://bscscan.com/address/0xf704eaf4A68Ac424C809f7c4595451b9414d2b76",
              "type": "Smart Contract - WooVaultManager"
            },
            {
              "target": "https://bscscan.com/address/0x2AEab1a338bCB1758f71BD5aF40637cEE2085076",
              "type": "Smart Contract - WooStakingVault"
            },
            {
              "target": "https://bscscan.com/address/0xa9eDb6F411e49358B515dE26543815770a739FB0",
              "type": "Smart Contract - WooAccessManager"
            }
          ],
          "mdx": {
            "program_overview": "As one of the major DeFi liquidity providers and trading firms, WOO Network launched WOOFi to enhance trading execution and capital efficiency in DeFi. Currently WOOFi consists of swap and stake functions. \n\nSwap is a multi-chain decentralized exchange with high capital efficiency, providing high quality trade execution and lowest swap fees. It utilizes sPMM algorithm which allows market makers to simulate the price and depth of centralized exchange order books. \n\nStake allows users to stake WOO tokens to capture the swap fee from WOOFi and earn yields on WOO tokens. \n\nWOOFi plans to launch earn features soon. \n\nFor more information about WOOFi, please visit [https://fi.woo.org/](https://fi.woo.org/) \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds\n  - Economic exploits",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nAll known issues previously highlighted in the following audit reports are considered to be out-of-scope:\n  - [https://www.certik.org/projects/woofiswap](https://www.certik.org/projects/woofiswap) \n  - [https://hackmd.io/@verilog/woofi-swap](https://hackmd.io/@verilog/woofi-swap)\n\nPayouts are handled by the __WOO Network__ team directly and are denominated in USD. However, payouts are done in __WOO__.",
            "assets_body": "All smart contracts of WOOFi can be found at [https://github.com/woonetwork/woofi_swap_smart_contracts](https://github.com/woonetwork/woofi_swap_smart_contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for 1 day\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Incorrect polling actions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "neo",
          "project": "Neo",
          "date": "2022-01-06T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/58geaDlgfAExuX3WhGHYI/3d1a9283f18f6a95528789acd9cfd89c/OCDuOiZ__400x400.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to $100,000"
            },
            {
              "level": "high",
              "payout": "Up to $50,000"
            },
            {
              "level": "medium",
              "payout": "Up to $20,000"
            },
            {
              "level": "low",
              "payout": "Up to $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/neo-project/neo",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-vm",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-compiler",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-gui",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-devpack-dotnet",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-node",
              "type": "Blockchain"
            },
            {
              "target": "https://github.com/neo-project/neo-modules",
              "type": "Blockchain"
            }
          ],
          "mdx": {
            "program_overview": "Neo is a distributed network which utilizes blockchain technology and digital identity to digitize assets and automate the management of digital assets using smart contracts. Neo network has two tokens, NEO representing the right to manage Neo blockchain and GAS representing the right to use the Neo Blockchain.\n\nThe purpose of the Neo vulnerability bounty program is to be proactive about blockchain security by providing a channel for security researchers to report potential security vulnerabilities identified related to our underlying infrastructure. Everyone who finds the vulnerabilities can submit a bug report through Immunefi. Neo will try their best to investigate those eligible vulnerabilities and fix the valid issues. All rewards will be paid in the equivalent amount of NEO.\n\nNote: Higher rewards will be paid out in case of vulnerabilities of certain interest and criticality. Before reporting any issues, please check the following disclosures on responsibilities, program rules, and reporting manner notice.\n\nFor more information about Neo, please visit [https://neo.org/](https://neo.org/).  \n\nThis bug bounty program has a different reward timeline than other bug bounty programs on Immunefi, though the 48 hours for acknowledgement is observed. Please check the “Program Rules and Response Terms” section for more information.",
            "rewards_body": "Bounties are paid out after a risk assessment ([OWASP risk rating methodology](https://www.owasp.org/index.php/OWASP_Risk_Rating_Methodology)) has been made by the Neo DAU team. There are four rates of severity, Critical, High, Medium, Low. All rewards will be paid in the equivalent amount of NEO. Roughly speaking, we calculate the severity of an issue with the following formula:\n\nSeverity = Impact * Likelihood\nBase bounty amounts related to severity are as follows:\n\n| Vulnerability Severity | Bounty | Example |\n| :-- | :-: | --: |\n| **Critical** | Up to $100,000 | Issues leading to severe asset loss | \n| **High** | Up to $50,000 | Issues leading to total networks failure |\n| **Medium** | Up to $20,000 | Single node failure |\n| **Low** | Up to $5,000 | Other valid issues |\n\nTo be eligible for a reward, bug bounty hunters must never attempt to access anyone else's data and do not engage in any activity that would be disruptive or damaging to the Neo production network and testing network, you can investigate with your own built private chain on a private network. The full rules of the bug bounty program can be found further below, which need to be followed. \n\nAll bug reports must include the following in the report:\n  - Asset - What software asset the vulnerability is related to (e.g. Neo core software/products)\n  - Severity - Your opinion on the severity of the issue (e.g. high, moderate, low)\n  - Summary - Add a summary of the vulnerability\n  - Description - Any additional details about this vulnerability\n  - Steps - Steps to reproduce, getting Neo staff or technical team clearly informed of every detailed step.\n  - Supporting Material/References - Source code to replicate, list any additional material (e.g. screenshots, logs, etc.)\n  - Impact - What security impact could an attacker achieve?\n  - Your name and country.\n\nNeo may require more KYC information to be submitted over the Immunefi bug reporting dashboard at its discretion.\n\nPayouts are handled by the __Neo__ team directly and are denominated in USD. However, payouts are done in __NEO__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "Vulnerabilities fitting in any of the following descriptions will not be eligible for the rewards:\n  - Those published or known ones are not eligible for rewards.\n  - If you unveil such vulnerabilities before Neo fixes or publish them, the reward becomes null and void.\n  - Participants who use submitted vulnerabilities to damage the Neo ecosystem, infringe on users' interests and perform pilferage on users' assets will be disqualified for rewards; meanwhile, Neo is rightful to resort to justice.",
            "out_of_scope_and_rules": "The level of feedback on its website and social media channels. Rewards will be distributed within three (3) days following the official announcement. Neo reserves the right to the final interpretation of the event.\n\nTo finally achieve the self-worthy reward the submitters should abide by the following event rules:\n  - Only issues related to stability and security with design and implementation are within the scope, vulnerabilities with the Neo website and related infrastructure on the Neo blockchain are out of the scope. Find more details at the Scope of Vulnerability Bounty Program.\n  - Submitted reports should contain detailed reproduction procedures, in the absence of which, the reports will be excluded from the rewarding list. The more detailed the proof of vulnerabilities and the descriptions are, the higher your reward will be.\n  - For those who report the same vulnerability, the reward goes to whoever comes first.\n  - Serial vulnerabilities caused by one vulnerability will be considered as one vulnerability, e.g., a series of computing errors caused by data overflow."
          }
        },
        {
          "id": "connext",
          "project": "Connext",
          "date": "2021-12-21T09:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1bzzh4XoaNOkOzFZTqff24/6a60319ea667ba1d02a52e0fe386fce6/Connext_logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x31eFc4AeAA7c39e54A33FDc3C46ee2Bd70ae0A09",
              "type": "Smart Contract - Transaction Manager"
            },
            {
              "target": "https://etherscan.io/address/0x5b9E4D0Dd21f4E071729A9eB522A2366AbeD149a",
              "type": "Smart Contract - Fulfill Interpreter"
            },
            {
              "target": "https://etherscan.io/address/0xB6c1F8fa235333407AE394EbE65cb02018D7681a#code",
              "type": "Smart Contract - Multicall"
            },
            {
              "target": "https://etherscan.io/address/0x373ba9aa0f48b27A977F73423039E6dE341a0C7C",
              "type": "Smart Contract - Connext Price Oracle"
            },
            {
              "target": "https://arbiscan.io/address/0xcF4d2994088a8CDE52FB584fE29608b63Ec063B2",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://arbiscan.io/address/0x8a0bd1773139C6609e861B9ab68082587a3cD581",
              "type": "Multicall.sol"
            },
            {
              "target": "https://arbiscan.io/address/0x6461dC57aEad54b02e28D1C01De6FDfc9D6692d2",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://snowtrace.io/address/0x31eFc4AeAA7c39e54A33FDc3C46ee2Bd70ae0A09",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://snowtrace.io/address/0x5b9e4d0dd21f4e071729a9eb522a2366abed149a",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://snowtrace.io/address/0xE2eeefCeAdf63Dd0dba1F660001946209cA4cBAf",
              "type": "Multicall.sol"
            },
            {
              "target": "https://snowtrace.io/address/0x665D6802d22B7FE74cF8328eB384F575c8Be2302",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://bscscan.com/address/0x2A9EA5e8cDDf40730f4f4F839F673a51600C314e",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://bscscan.com/address/0x3940a0a4cb508da64cb11b13cdba7e3b04fb9b34",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://bscscan.com/address/0x67F61B7A0F9E8048098aAf05e9da71666B8116A2",
              "type": "Multicall.sol"
            },
            {
              "target": "https://bscscan.com/address/0xa408CbBEF74CeE1c4014D7A3f2F7DBbdbad846e2",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://ftmscan.com/address/0x0d29d9fa94a23e0d2f06efc79c25144a8f51fc4b",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://ftmscan.com/address/0x0e893a2ca06da26a483d03c14a260847b218a231",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://ftmscan.com/address/0x67F61B7A0F9E8048098aAf05e9da71666B8116A2",
              "type": "Multicall.sol"
            },
            {
              "target": "https://ftmscan.com/address/0xA57669968867e6D0d57Db1fc0Bf56f9640e6eBd6",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://polygonscan.com/address/0x6090De2EC76eb1Dc3B5d632734415c93c44Fd113",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://polygonscan.com/address/0x7d34b2be5190299a778d367bc1b171e66f53a065",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://polygonscan.com/address/0xae6b4E753242927FFF02D9120083183d2ED6175b",
              "type": "Multicall.sol"
            },
            {
              "target": "https://polygonscan.com/address/0x60f536FFa588980e46f8d4c7FaF646083473Ba8A",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://blockscout.moonriver.moonbeam.network/address/0x373ba9aa0f48b27A977F73423039E6dE341a0C7C/transactions",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://blockscout.moonriver.moonbeam.network/address/0xF55161B286C6713A3887E5551A6D71cCC2CB844b/transactions",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://blockscout.moonriver.moonbeam.network/address/0x665D6802d22B7FE74cF8328eB384F575c8Be2302/transactions",
              "type": "Multicall.sol"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x31eFc4AeAA7c39e54A33FDc3C46ee2Bd70ae0A09",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x5b9e4d0dd21f4e071729a9eb522a2366abed149a",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x35A6Cdb2C9AD4a45112df4a04147EB07dFA01aB7",
              "type": "Multicall.sol"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x3E0fDc863607D0a3d50EBc90a1385F8caE29b9B2",
              "type": "ConnextPriceOracle.sol"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x115909BDcbaB21954bEb4ab65FC2aBEE9866fa93/transactions",
              "type": "TransactionManager.sol"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x514b6F48F37852D6877d7dd680b18D8473392a24/transactions",
              "type": "FulfillInterpreter.sol"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x8a0bd1773139C6609e861B9ab68082587a3cD581/transactions",
              "type": "Multicall.sol"
            }
          ],
          "mdx": {
            "program_overview": "Connext is the interoperability protocol of L2 Ethereum. You can use Connext to send transactions of value or call data across chains and/or rollups. Unlike most other interoperability systems, Connext enables this without introducing any new trust assumptions or external validators.\n\nFor more information about Connext, please visit [https://connext.network/](https://connext.network/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of user funds\n  - Thefts and freezing of liquidity on the contract\n  - Network shutdown\n  - Abuse of auction process\n  - Abuse of virtual AMM pricing\n  - Abuse of system to create fraudulent slashing conditions",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical smart contract bug reports must come with a detailed written explanation in order to be considered for a reward. \n\nVulnerabilities marked in the [Consensys Diligence Audit](https://consensys.net/diligence/audits/private/rrcm4t83gvyj6a/) are not eligible for a reward.\n\nPayouts are handled by the __Connext__ team directly and are denominated in USD. However, payouts are done in __USDC__, __USDT__, __DAI__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Connext can be found at [https://github.com/connext/nxtp/tree/main/packages/contracts/contracts](https://github.com/connext/nxtp/tree/main/packages/contracts/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For similar contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of user funds\n  - Thefts and freezing of liquidity on the contract\n  - Network shutdown\n  - Abuse of auction process\n  - Abuse of virtual AMM pricing\n  - Abuse of system to create fraudulent slashing conditions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n  - All smart contract vulnerabilities\n  - Double-spends from faulty off-chain logic\n  - Creating fraudulent slashing conditions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ambire",
          "project": "Ambire",
          "date": "2021-12-17T08:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4a5seFcJe2gN0TkXgSBrlX/972767e0ccae9a3e66350203e85c4934/Ambire_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xBf07a0Df119Ca234634588fbDb5625594E2a5BCA",
              "type": "Smart Contract - IdentityFactory"
            },
            {
              "target": "https://etherscan.io/address/0x2A2b85EB1054d6f0c6c2E37dA05eD3E5feA684EF",
              "type": "Smart Contract - Identity - base"
            },
            {
              "target": "https://etherscan.io/address/0xfF3f6D14DF43c112aB98834Ee1F82083E07c26BF",
              "type": "Smart Contract - QuickAccManager"
            },
            {
              "target": "https://etherscan.io/address/0x460fad03099f67391d84c9cc0ea7aa2457969cea",
              "type": "Smart Contract - Batcher"
            }
          ],
          "mdx": {
            "program_overview": "Ambire Wallet is a DeFi-focused smart wallet that aims to provide better UX than Metamask, while still having power user features. Ambire is a smart wallet, which enables paying gas in stablecoins, automatic Flashbots/Eden frontrunning protection, batching (doing multiple things in one tx!), hardware wallets (Trezor/Ledger). It is web based, there’s no extension required, and you can connect to any dApp with WalletConnect.\n\nFor more information about Ambire, please visit [https://www.ambire.com/](https://www.ambire.com/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount \n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All Low and Medium Smart contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n[https://github.com/AmbireTech/code4rena#known-tradeoffs](https://github.com/AmbireTech/code4rena#known-tradeoffs)\n\nPayouts are handled by the __Ambire__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "All smart contracts of Ambire can be found at [https://github.com/AmbireTech/wallet/tree/main/contracts](https://github.com/AmbireTech/wallet/tree/main/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "alex",
          "project": "ALEX",
          "date": "2021-12-12T18:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5tF3UdYVrbkjGeIg96gbd/d8bdfa09ca4945ae30cb4d6e90b029d7/ALEX_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/alex-launchpad.clar",
              "type": "Smart Contract - ALEX Launchpad"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/alex-reserve-pool.clar",
              "type": "Smart Contract - ALEX Reserve Pool"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/collateral-rebalancing-pool.clar",
              "type": "Smart Contract - Collateral Rebalancing Pool"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/fixed-weight-pool-v1-01.clar",
              "type": "Smart Contract - Fixed Weight Pool"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/liquidity-bootstrapping-pool.clar",
              "type": "Smart Contract - Liquidity Bootstrapping Pool"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/pool/yield-token-pool.clar",
              "type": "Smart Contract - Yield Token Pool"
            },
            {
              "target": "https://github.com/alexgo-io/alex-v1/blob/dev/clarity/contracts/alex-vault.clar",
              "type": "Smart Contract - ALEX Vault"
            }
          ],
          "mdx": {
            "program_overview": "ALEX is an open-source DeFi protocol built on Bitcoin via [Stacks Blockchain](https://www.stacks.co/) and modelled on the world’s financial markets. At ALEX you can launch and trade your tokens, deposit BTC, stablecoins, and any Stacks native tokens to earn fixed or variable interest, borrow without risk of liquidation and obtain high yield via yield farming. We strive to build a sound financial ‘world’ on Bitcoin, through Stacks’ smart contracts, with the most intuitive and clear user experience.\n\nFor more information about ALEX, please visit [https://alexgo.io/](https://alexgo.io/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll High and Critical Smart Contract bug reports require a PoC in order to be considered for a reward.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nVulnerabilities marked in the [CoinFabrik Security Review](https://drive.google.com/file/d/1sCxr-H_NpnN-nZ8GPdi_l7eGgtlBaxuz/view) are not eligible for a reward.\n\nVulnerabilities in the [CoinFabrik Launchpad Vault and Reserv-Pool audit](https://blog.coinfabrik.com/smart-contract-audit/alexgo-audit-launchpad-vault-and-reserve-pool/) are not eligible for a reward. \n\nALEX requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Name, Email address, Residential address ,Nationality ,Stacks wallet address, Identity Proof (Passport, / Driving License / National ID) and Address Proof (Utility Bill / Bank Statement). The collection of this information will be done by the ALEX team.\n\nPayouts are handled by the __ALEX__ team directly and are denominated in USD. However, payouts are done in __Stablecoins__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Vote manipulation",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "apwine",
          "project": "APWine",
          "date": "2021-12-08T10:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/FtIIRZhO9oz0KYkPbWQQ8/94068c7bc8e0b769806075157bcf34fb/APWine_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $15,000"
            },
            {
              "level": "low",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/APWine/apwine-smart-contracts-public",
              "type": "Smart Contract - Main"
            }
          ],
          "mdx": {
            "program_overview": "APWine is a protocol for tokenizing yield and an AMM for trading tokenized yield. The concept and function of tokenizing yield enables speculating, hedging, borrowing, and leveraging assets with new (to defi) strategies. Tokenizing yield has motivated several teams in the DeFi space, including yours truly, to develop products that will serve these functions.\n\nThe APWine protocol is currently in testnet phase. This program is due to evolve in parallel with the state of the protocol and its code.\n\nFor more information about APWine, please visit [https://www.apwine.fi/](https://www.apwine.fi/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPrior to the official launch of APWine this bug bounty program will also have a hard cap of USD 400 000. In the event that multiple bug reports are submitted that exceed this amount, the rewards will be provided on a first come first served basis. All remaining valid reports will have their rewards considered after the launch of the project.\n\nPayouts are handled by the __APWine__ team directly and are denominated in USD. However, payouts are done in __ETH,APW, USDC,USDT,DAI,__ with the choice of the ratio at the discretion of the team.",
            "assets_body": "However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n  - Loss of user funds (e.g. vaults drained/ exploit of amm weights mechanisms with flash loans)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "idex",
          "project": "IDEX",
          "date": "2021-12-03T10:00-08:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1BXOotUNaZuQzaVtlsFHP2/9b87768600d62f34cde44e080c5141d5/Idex_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0xab6912a6574af207a6b68276c204d39b97b9be69",
              "type": "Smart Contract - Exchange"
            },
            {
              "target": "https://polygonscan.com/address/0x82fe5999c996c3dbefea570ceb66e993d667fa05",
              "type": "Smart Contract - Governance"
            },
            {
              "target": "https://polygonscan.com/address/0x3bcc4eca0a40358558ca8d1bcd2d1dbde63eb468",
              "type": "Smart Contract - Custodian"
            },
            {
              "target": "https://polygonscan.com/address/0xc2f05d03915E7c2D9038830F7888c97e351dd3dB",
              "type": "Smart Contract - AssetRegistry (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x116310b243dd287d4285d0e8a34ce3d4adb63dac",
              "type": "Smart Contract - Depositing (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x7a246e4434dd31df784bb88d3443e309e3143adc",
              "type": "Smart Contract - LiquidityPoolAdmin (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x0f2c07f4ecc6c9d74d16e735d2a59d00985b1962",
              "type": "Smart Contract - LiquidityPools (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x6c539e6143f70408076f35d19e7e549850c021ad",
              "type": "Smart Contract - NonceInvalidations (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x4d3250014ea4ecddd857fad48c3d64d2e4f037e1",
              "type": "Smart Contract - Trading (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0xb3af24eeac0ee8b6f5798f8a75e3ecd51b18deb2",
              "type": "Smart Contract - Withdrawing (Library)"
            },
            {
              "target": "https://polygonscan.com/address/0x6680ed0b92bd226f50ab704a0226391add943e55",
              "type": "Smart Contract - LiquidityProviderToken"
            },
            {
              "target": "https://polygonscan.com/address/0xb9c951c85c8646dafcdc0ad99d326c621abbadce",
              "type": "Smart Contract - IDEXFarm"
            },
            {
              "target": "https://polygonscan.com/address/0x3Ea13761268fE53895dBe096dF57731CdEd89425",
              "type": "Smart Contract - EarningsEscrow"
            },
            {
              "target": "https://exchange.idex.io/",
              "type": "Web/App - Main Web App"
            },
            {
              "target": "https://farms.idex.io/",
              "type": "Web/App - Farm"
            }
          ],
          "mdx": {
            "program_overview": "IDEX is the first Hybrid Liquidity DEX, combining a high-performance order book and matching engine with Automated Market Making (AMM). The platform blends the best of centralized and decentralized exchanges, with the performance and features of a traditional order book and the security and liquidity of an AMM. IDEX allows traders to get the best spreads, avoid failed transactions, and easily provide liquidity, all with the power of real limit and stop-loss orders. \n\nFor more information about IDEX, please visit [https://idex.io/](https://idex.io/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of custodied funds or unclaimed yield of any amount ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Vulnerabilities marked as “Acknowledged” in the Quantstamp security review\n  - Issues involving token contracts that manipulate deposited funds or prevent deposited fund movement outside of the service’s control.\n  - Issues and behavior already described in documentation and linked sources:\n\n    - [https://api-docs-v3.idex.io/](https://api-docs-v3.idex.io/)\n\n    - [https://github.com/idexio/idex-contracts-silverton/blob/main/README.md](https://github.com/idexio/idex-contracts-silverton/blob/main/README.md)\n\n    - [https://github.com/idexio/idex-farm/blob/main/README.md](https://github.com/idexio/idex-farm/blob/main/README.md)\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, IDEX classifies the following vulnerabilities for websites and applications as follows. In case of discrepancy, the one below will be followed.\n\nCritical\n  - Access to user wallet private key \n  - Ability to steal or freeze user funds \n  - Admin access\n  - Ability to move user funds without wallet signature \n  - Ability to edit exchange configuration, especially contract addresses in the Get Exchange response\n  - Unauthorized access to critical infrastructure \n\nHigh\n  - SQL injection\n  - Unauthorized access to user data, eg name, email\n  - Access to private data without wallet signature\n  - Ability to access data using an API key that does not have the permission that is required by the endpoint \n  - Replay attacks\n\nIDEX requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are Name, Email address, Residential address. The collection of this information will be done by the IDEX team.\n\nPayouts are handled by the __IDEX__ team directly and are denominated in USD. However, payouts are done in __IDEX or stablecoins__, with the choice of the ratio at the discretion of the team.\n",
            "assets_body": "All smart contracts of IDEX can be found at [https://github.com/idexio/idex-contracts-silverton](https://github.com/idexio/idex-contracts-silverton), [https://github.com/idexio/idex-farm](https://github.com/idexio/idex-farm), and [https://github.com/idexio/idex-contracts-earnings-escrow](https://github.com/idexio/idex-contracts-earnings-escrow). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of custodied funds\n  - Frozen custodied funds\n  - Movement of funds without wallet signature authorization\n  - Balance tracking errors\n  - Admin function access\n  - Upgrade mechanism exploits\n\n__Web/App__ \n\n  - Web Site\n  - Access to user wallet private key\n  - Admin access\n  - SQL injection\n  - Unauthorized access to user data, eg name, email\n\nAPI\n  - Ability to steal or freeze user funds\n  - Ability to move user funds without wallet signature \n  - Ability to edit exchange configuration, especially contract addresses in the Get Exchange response\n  - Access to private data without wallet signature\n  - Ability to access data using an API key that does not have the permission that is required by the endpoint\n  - Replay attacks\n\nInfrastructure\n  - Unauthorized access to critical infrastructure\n",
            "prioritized_vulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "xtoken",
          "project": "xToken",
          "date": "2021-12-01T01:30-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/60wvQihbRD4FKlhmKK4Ed0/74f50d758418ce471b8df906189e68ab/xToken_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0x33Ad9e6158A17cE3936D79dc57222Cd0746ca953",
              "type": "Smart Contract - Comptroller Proxy"
            },
            {
              "target": "https://arbiscan.io/address/0x424A46A9521a37C6f0B2ADD502333bC65a565cf2",
              "type": "Smart Contract - Comptroller Implementation"
            },
            {
              "target": "https://arbiscan.io/address/0x8D35b8f4Ee0437EEe49CeA0Dc82F9ba82d52e578",
              "type": "Smart Contract - Liquidity PoolProxy"
            },
            {
              "target": "https://arbiscan.io/address/0x2d5B636b27a45c4C352f42111155c55C1E4F21De",
              "type": "Smart Contract - LiquidityPool Impl"
            },
            {
              "target": "https://arbiscan.io/address/0x5191F60315DA4E1F8e4dF3825801576B71Ac22db",
              "type": "Smart Contract - LPT"
            },
            {
              "target": "https://arbiscan.io/address/0xbCB8E5351F233d815a97145AdBa2aB828bbEB4B1",
              "type": "Smart Contract - Market Impl"
            },
            {
              "target": "https://arbiscan.io/address/0xf7C8A46762151951de8463FE8ea954fD5Ce4A230",
              "type": "Smart Contract - NativePrice Impl"
            },
            {
              "target": "https://arbiscan.io/address/0xE7BfdaF72D7E9E3EE9cb7F07C8287c659e0466DE",
              "type": "Smart Contract - WETH Price"
            },
            {
              "target": "https://arbiscan.io/address/0x56F9261EcA26d055A2ca5aa5a6D25A8648C96801",
              "type": "Smart Contract - WETH Market"
            },
            {
              "target": "https://arbiscan.io/address/0x54C2c17B7172638f1aFa9FbCA97C699dD0ae9Ced",
              "type": "Smart Contract - WBTC Price"
            },
            {
              "target": "https://arbiscan.io/address/0x769c382124Bd87c78D4316e3dDB77E925c008487",
              "type": "Smart Contract - WBTC Market"
            },
            {
              "target": "https://arbiscan.io/address/0x725e9141Bb8Ea2dBc42bD74eC475938597F49Fe6",
              "type": "Smart Contract - LINK Price"
            },
            {
              "target": "https://arbiscan.io/address/0xEA32195F8BFb435292aC38659fBB571E6963cFda",
              "type": "Smart Contract - LINK Market"
            }
          ],
          "mdx": {
            "program_overview": "The xToken protocol is the creation of xToken Labs, a group dedicated to experimentation and the decentralization of finance.\n\nxToken creates tokenized strategies that maximize yield, eliminate mental overhead, and maintain liquidity.These strategies are represented by ERC-20 tokens called xAssets which are accessible to anyone in the world with an Ethereum wallet and an internet connection.\n\nFor more information about xToken, please visit [https://xtoken.market/.](https://xtoken.market/)   \n\nThis bug bounty program is focused on their lending protocol smart contracts and is focused on preventing:\n\n  - Oracle failure or manipulation\n  - Economic financial attacks (including flash loan attacks)\n  - Susceptibility to Frontrunning\n  - Consensus failures\n  - Loss of user funds staked (principal) by freezing or theft",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical/High severity smart contract bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward. Medium severity smart contract bug reports must include a suggestion for a fix to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 30 000__ for Critical bug reports. \n\nPayouts are handled by the __xToken__ team directly and are denominated in USD. Payouts are done in __USDC__.",
            "assets_body": "The relevant xToken contracts can be found at [https://github.com/xtokenmarket/xLend](https://github.com/xtokenmarket/xLend). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n  - Smart Contracts/Blockchain\n  - Oracle failure or manipulation\n  - Economic financial attacks (including flash loan attacks)\n  - Susceptibility to Frontrunning\n  - Consensus failures\n  - Loss of user funds staked (principal) by freezing or theft",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "\nThe following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "mirror",
          "project": "Mirror",
          "date": "2021-11-23T06:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7FoiTGDaVtA4uTEh9YKYBp/8c432224d822a178dec704bac911b285/Mirror_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1s4fllut0e6vw0k3fxsg4fs6fm2ad6hn0prqp3s",
              "type": "Smart Contract - Collector"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1x35fvy3sy47drd3qs288sm47fjzjnksuwpyl9k",
              "type": "Smart Contract - Community"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1mzj9nsxx0lxlaxnekleqdy8xnyw2qrh3uz6h8p",
              "type": "Smart Contract - Factory"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1wh39swv7nq36pnefnupttm2nr96kz7jjddyt2x",
              "type": "Smart Contract - Gov"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1wfz7h3aqf4cjmjcvc6s8lxdhh7k30nkczyf0mj",
              "type": "Smart Contract - Mint"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1t6xe0txzywdg85n6k8c960cuwgh6l8esw6lau9",
              "type": "Smart Contract - Oracle"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra17f7zu97865jmknk7p2glqvxzhduk78772ezac5",
              "type": "Smart Contract - Staking"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1kalp2knjm4cs3f59ukr4hdhuuncp648eqrgshw",
              "type": "Smart Contract - Air Drop"
            },
            {
              "target": "https://finder.terra.money/columbus-4/address/terra1zpr8tq3ts96mthcdkukmqq4y9lhw0ycevsnw89",
              "type": "Smart Contract - Limit Order"
            },
            {
              "target": "https://finder.terra.money/columbus-4/address/terra1pmlh0j5gpzh2wsmyd3cuk39cgh2gfwk6h5wy9j",
              "type": "Smart Contract - Collateral Oracle"
            },
            {
              "target": "https://finder.terra.money/columbus-4/address/terra169urmlm8wcltyjsrn7gedheh7dker69ujmerv2",
              "type": "Smart Contract - Lock"
            },
            {
              "target": "https://finder.terra.money/columbus-4/address/terra16mlzdwqq5qs6a23250lq0fftke8v80sapc5kye",
              "type": "Smart Contract - Short Reward"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra15gwkyepfc6xgca5t5zefzwy42uts8l2m4g40k6",
              "type": "Smart Contract - MIR"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1vxtwu4ehgzz77mnfwrntyrmgl64qjs75mpwqaz",
              "type": "Smart Contract - mAAPL"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1h8arz2k547uvmpxctuwush3jzc8fun4s96qgwt",
              "type": "Smart Contract - mGOOGL"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra14y5affaarufk3uscy2vr6pe6w6zqf2wpjzn5sh",
              "type": "Smart Contract - mTSLA"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1jsxngqasf2zynj5kyh0tgq9mj3zksa5gk35j4k",
              "type": "Smart Contract - mNFLX"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1csk6tc7pdmpr782w527hwhez6gfv632tyf72cp",
              "type": "Smart Contract - mQQQ"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1cc3enj9qgchlrj34cnzhwuclc4vl2z3jl7tkqg",
              "type": "Smart Contract - mTWTR"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1227ppwxxj3jxz8cfgq00jgnxqcny7ryenvkwj6",
              "type": "Smart Contract - mMSFT"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra165nd2qmrtszehcfrntlplzern7zl4ahtlhd5t2",
              "type": "Smart Contract - mAMZN"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1w7zgkcyt7y4zpct9dw8mw362ywvdlydnum2awa",
              "type": "Smart Contract - mBABA"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra15hp9pr8y4qsvqvxf3m4xeptlk7l8h60634gqec",
              "type": "Smart Contract - mIAU"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1kscs6uhrqwy6rx5kuw5lwpuqvm3t6j2d6uf2lp",
              "type": "Smart Contract - mSLV"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1lvmx8fsagy70tv0fhmfzdw9h6s3sy4prz38ugf",
              "type": "Smart Contract - mUSO"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1zp3a6q6q4953cz376906g5qfmxnlg77hx3te45",
              "type": "Smart Contract - mVIXY"
            },
            {
              "target": "https://finder.terra.money/columbus-4/account/terra1mqsjugsugfprn3cvgxsrr8akkvdxv2pzc74us7",
              "type": "Smart Contract - mFB"
            },
            {
              "target": "https://finder.terra.money/columbus-4/address/terra18wayjpyq28gd970qzgjfmsjj7dmgdk039duhph",
              "type": "Smart Contract - mCOIN"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra18yqdfzfhnguerz9du5mnvxsh5kxlknqhcxzjfr",
              "type": "Smart Contract - mHOOD"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1qqfx5jph0rsmkur2zgzyqnfucra45rtjae5vh6",
              "type": "Smart Contract - mARKK"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1l5lrxtwd98ylfy09fn866au6dp76gu8ywnudls",
              "type": "Smart Contract - mGLXY"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1u43zu5amjlsgty5j64445fr9yglhm53m576ugh",
              "type": "Smart Contract - mSQ"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1g4x2pzmkc9z3mseewxf758rllg08z3797xly0n",
              "type": "Smart Contract - mABNB"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1aa00lpfexyycedfg5k2p60l9djcmw0ue5l8fhc",
              "type": "Smart Contract - mSPY"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra19ya4jpvjvvtggepvmmj6ftmwly3p7way0tt08r",
              "type": "Smart Contract - mDOT"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra18ej5nsuu867fkx4tuy2aglpvqjrkcrjjslap3z",
              "type": "Smart Contract - mAMD"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1m6j6j9gw728n82k78s0j9kq8l5p6ne0xcc820p",
              "type": "Smart Contract - mGME"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra1qelfthdanju7wavc5tq0k5r0rhsyzyyrsn09qy",
              "type": "Smart Contract - mAMC"
            },
            {
              "target": "https://finder.terra.money/columbus-5/address/terra137drsu8gce5thf6jr5mxlfghw36rpljt3zj73v",
              "type": "Smart Contract - mGS"
            },
            {
              "target": "https://etherscan.io/address/0xd2877702675e6cEb975b4A1dFf9fb7BAF4C91ea9",
              "type": "Smart Contract - LUNA"
            },
            {
              "target": "https://etherscan.io/address/0xa47c8bf37f92aBed4A126BDA807A7b7498661acD",
              "type": "Smart Contract - UST"
            },
            {
              "target": "https://etherscan.io/address/0xcAAfF72A8CbBfc5Cf343BA4e26f65a257065bFF1",
              "type": "Smart Contract - KRT"
            },
            {
              "target": "https://etherscan.io/address/0x676Ad1b33ae6423c6618C1AEcf53BAa29cf39EE5",
              "type": "Smart Contract - SDT"
            },
            {
              "target": "https://etherscan.io/address/0x156B36ec68FdBF84a925230BA96cb1Ca4c4bdE45",
              "type": "Smart Contract - MNT"
            },
            {
              "target": "https://etherscan.io/address/0x09a3EcAFa817268f77BE1283176B946C4ff2E608",
              "type": "Smart Contract - MIR"
            },
            {
              "target": "https://etherscan.io/address/0xd36932143F6eBDEDD872D5Fb0651f4B72Fd15a84",
              "type": "Smart Contract - mAAPL"
            },
            {
              "target": "https://etherscan.io/address/0x59A921Db27Dd6d4d974745B7FfC5c33932653442",
              "type": "Smart Contract - mGOOGL"
            },
            {
              "target": "https://etherscan.io/address/0x21cA39943E91d704678F5D00b6616650F066fD63",
              "type": "Smart Contract - mTSLA"
            },
            {
              "target": "https://etherscan.io/address/0xC8d674114bac90148d11D3C1d33C61835a0F9DCD",
              "type": "Smart Contract - mNFLX"
            },
            {
              "target": "https://etherscan.io/address/0x13B02c8dE71680e71F0820c996E4bE43c2F57d15",
              "type": "Smart Contract - mQQQ"
            },
            {
              "target": "https://etherscan.io/address/0xEdb0414627E6f1e3F082DE65cD4F9C693D78CCA9",
              "type": "Smart Contract - mTWTR"
            },
            {
              "target": "https://etherscan.io/address/0x41BbEDd7286dAab5910a1f15d12CBda839852BD7",
              "type": "Smart Contract - mMSFT"
            },
            {
              "target": "https://etherscan.io/address/0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7",
              "type": "Smart Contract - mAMZN"
            },
            {
              "target": "https://etherscan.io/address/0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72",
              "type": "Smart Contract - mBABA"
            },
            {
              "target": "https://etherscan.io/address/0x1d350417d9787E000cc1b95d70E9536DcD91F373",
              "type": "Smart Contract - mIAU"
            },
            {
              "target": "https://etherscan.io/address/0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676",
              "type": "Smart Contract - mSLV"
            },
            {
              "target": "https://etherscan.io/address/0x31c63146a635EB7465e5853020b39713AC356991",
              "type": "Smart Contract - mUSO"
            },
            {
              "target": "https://etherscan.io/address/0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86",
              "type": "Smart Contract - mVIXY"
            },
            {
              "target": "https://etherscan.io/address/0x0e99cC0535BB6251F6679Fa6E65d6d3b430e840B",
              "type": "Smart Contract - mFB"
            },
            {
              "target": "https://etherscan.io/address/0x1e25857931F75022a8814e0B0c3a371942A88437",
              "type": "Smart Contract - mCOIN"
            },
            {
              "target": "https://bscscan.com/address/0xECCF35F941Ab67FfcAA9A1265C2fF88865caA005",
              "type": "Smart Contract - LUNA"
            },
            {
              "target": "https://bscscan.com/address/0x23396cf899ca06c4472205fc903bdb4de249d6fc",
              "type": "Smart Contract - UST"
            },
            {
              "target": "https://bscscan.com/address/0xffbdb9bdcae97a962535479bb96cc2778d65f4dd",
              "type": "Smart Contract - KRT"
            },
            {
              "target": "https://bscscan.com/address/0x7d5f9F8CF59986743f34BC137Fc197E2e22b7B05",
              "type": "Smart Contract - SDT"
            },
            {
              "target": "https://bscscan.com/address/0x41D74991509318517226755E508695c4D1CE43a6",
              "type": "Smart Contract - MNT"
            },
            {
              "target": "https://bscscan.com/address/0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9",
              "type": "Smart Contract - MIR"
            },
            {
              "target": "https://bscscan.com/address/0x900AEb8c40b26A8f8DfAF283F884b03EE7Abb3Ec",
              "type": "Smart Contract - mAAPL"
            },
            {
              "target": "https://bscscan.com/address/0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f",
              "type": "Smart Contract - mGOOGL"
            },
            {
              "target": "https://bscscan.com/address/0xF215A127A196e3988C09d052e16BcFD365Cd7AA3",
              "type": "Smart Contract - mTSLA"
            },
            {
              "target": "https://bscscan.com/address/0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc",
              "type": "Smart Contract - mNFLX"
            },
            {
              "target": "https://bscscan.com/address/0x1Cb4183Ac708e07511Ac57a2E45A835F048D7C56",
              "type": "Smart Contract - mQQQ"
            },
            {
              "target": "https://bscscan.com/address/0x7426Ab52A0e057691E2544fae9C8222e958b2cfB",
              "type": "Smart Contract - mTWTR"
            },
            {
              "target": "https://bscscan.com/address/0x0ab06caa3Ca5d6299925EfaA752A2D2154ECE929",
              "type": "Smart Contract - mMSFT"
            },
            {
              "target": "https://bscscan.com/address/0x3947B992DC0147D2D89dF0392213781b04B25075",
              "type": "Smart Contract - mAMZN"
            },
            {
              "target": "https://bscscan.com/address/0xcA2f75930912B85d8B2914Ad06166483c0992945",
              "type": "Smart Contract - mBABA"
            },
            {
              "target": "https://bscscan.com/address/0x1658AeD6C7dbaB2Ddbd8f5D898b0e9eAb0305813",
              "type": "Smart Contract - mIAU"
            },
            {
              "target": "https://bscscan.com/address/0x211e763d0b9311c08EC92D72DdC20AB024b6572A",
              "type": "Smart Contract - mSLV"
            },
            {
              "target": "https://bscscan.com/address/0x9cDDF33466cE007676C827C76E799F5109f1843C",
              "type": "Smart Contract - mUSO"
            },
            {
              "target": "https://bscscan.com/address/0x92E744307694Ece235cd02E82680ec37c657D23E",
              "type": "Smart Contract - mVIXY"
            },
            {
              "target": "https://bscscan.com/address/0x5501F4713020cf299C3C5929da549Aab3592E451",
              "type": "Smart Contract - mFB"
            },
            {
              "target": "https://bscscan.com/address/0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f",
              "type": "Smart Contract - mCOIN"
            },
            {
              "target": "https://mirror.finance",
              "type": "Web/App"
            },
            {
              "target": "https://terra.mirror.finance",
              "type": "Web/App"
            },
            {
              "target": "https://mirrorprotocol.app",
              "type": "Web/App"
            },
            {
              "target": "https://mirrorprotocol.is",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Mirror is a DeFi protocol powered by smart contracts on the Terra network that enables the creation of synthetic assets called Mirrored Assets (mAssets). mAssets mimic the price behavior of real-world assets and give traders anywhere in the world open access to price exposure without the burdens of owning or transacting real assets.\n\nThe minting of mAssets is decentralized and is undertaken by users throughout the network by opening a position and depositing collateral. Mirror ensures that there is always sufficient collateral within the protocol to cover mAssets, and also manages markets for mAssets by listing them on Terraswap against UST.\n\nThe Mirror Token (MIR) is minted by the protocol and distributed as a reward to reinforce behavior that secures the ecosystem. With it, Mirror ensures liquid mAsset markets by rewarding MIR to users who stake LP Tokens obtained through providing liquidity. Also, to incentivize users to ensure mAssets mimic the price behavior of real-world assets, users who stake sLP Tokens obtained through shorting mAssets are rewarded with MIR. MIR is valuable as it can be staked to receive voting privileges and to earn a share of the protocol's CDP withdrawal fees.\n\nMirror is a project developed and steered by its community: its markets are maintained by its own users through MIR incentives, and the protocol evolves with new ideas through democratic governance.\n\nFor more information about Mirror, please visit [https://mirror.finance](https://mirror.finance).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Leak/deletion of user data\n - Redirected funds by address modification",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Low severity bug reports must come with a suggestion for a fix to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nPayouts are handled by the __Mirror__ team directly and are denominated in USD. Payouts are done in __UST__.",
            "assets_body": "All smart contracts of Mirror can be found at https://github.com/Mirror-Protocol. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 1 day\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tenfinance",
          "project": "TEN Finance",
          "date": "2021-11-15T10:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5omr3R2jB1nE9aRA38rEHR/168e15542595cf8c35b8169a10ff1429/TEN_Finance_Logo__1_.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xB2AaE2B1F2c33Bc809194aD1De2206fD130Cc5a4#code",
              "type": "Smart Contract - Yieldex"
            }
          ],
          "mdx": {
            "program_overview": "In this wild west of the yield farming boom where there are so many out there and unknown as to who and what to trust, TEN is committed to solely aggregate and optimize those farms that we deem to be of the highest caliber for the users of our platform.\n\nTEN aims to simplify this process by creating a seamless and streamlined process in staking your assets to earn a rewardingly high yet modest APY in the simplest and safest manner while ensuring sustainable growth within the TEN platform across multiple farming ecosystems and optimizing returns for maximum yields in a safe, sustainable and robust manner.\n\nFor more information about TEN Finance, please visit [https://ten.finance/](https://ten.finance/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC and a suggestion for a fix to be considered for a reward.\n\nPayouts are handled by the __TEN Finance__ team directly and are denominated in USD. However, payouts are done in __TENFI__.",
            "assets_body": "All smart contracts of TEN Finance can be found at [https://github.com/tenfinance/tenXimmunefi_YIELDEX](https://github.com/tenfinance/tenXimmunefi_YIELDEX). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "abracadabra",
          "project": "Abracadabra",
          "date": "2021-11-05T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/Q93ozYtQN7tb10OQP3sLa/b89b4ebe5882235ca4cdb779be83ef9e/Abracadabra_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cchain.explorer.avax.network/address/0x0824545b22Dd6dC644C8b66d7923e613816Ff63a/contracts",
              "type": "Smart Contract - AVAX oracle"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xc568a699c5B43A0F1aE40D3254ee641CB86559F4/contracts",
              "type": "Smart Contract - AVAX CauldronV2"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b/contracts",
              "type": "Smart Contract - AVAX wMEMO"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x130966628846BFd36ff31a822705796e8cb8C18D/contracts",
              "type": "Smart Contract - AVAX MIM"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x2150617Bc0b487112b52cc0Bc7Dc484B95E8f633/contracts",
              "type": "Smart Contract - AVAX Advanced withdrawer"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x69BfEa0307A071C3e6CD217486B16d20bD58c7B1/contracts",
              "type": "Smart Contract - AVAX LevSwapper"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x7386946A2e2A8412c09a63AfA6EC047CecC0423F/contracts",
              "type": "Smart Contract - wMEMO LevSwapper"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x2B727505fDF3650028C8dE0f5d73337Ba78f36A8/contracts",
              "type": "Smart Contract - AVAX Liq Swapper"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x13f193d5328d967076c5ED80Be9ed5a79224DdAb/contracts",
              "type": "Smart Contract - wMEMO Liq Swapper"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x3CFEd0439aB822530b1fFBd19536d897EF30D2a2/contracts",
              "type": "Smart Contract - Deployed Address AVAX pool 1"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x0824545b22Dd6dC644C8b66d7923e613816Ff63a/contracts",
              "type": "Smart Contract - oracle AVAX pool 1"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7/contracts",
              "type": "Smart Contract - wAVAX"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x56984F04d2d04B2F63403f0EbeDD3487716bA49d/contracts",
              "type": "Smart Contract - deployed wMEMO"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x694808221d4F31d5849F2aBA08584E2C8f4b99ff/contracts",
              "type": "Smart Contract - proxy oracle wMEMO"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xC9faCFA2fC50C9A30C77a2ad14E2dB107d591918/contracts",
              "type": "Smart Contract - oracle wMEMO"
            },
            {
              "target": "https://arbiscan.io/address/0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3#code",
              "type": "Smart Contract - Arbitrum CauldronV2Multichain"
            },
            {
              "target": "https://arbiscan.io/address/0xfea7a6a0b346362bf88a9e4a88416b77a57d6c2a#code",
              "type": "Smart Contract - Arbitrum MIM"
            },
            {
              "target": "https://arbiscan.io/address/0xC89958B03A55B5de2221aCB25B58B89A000215E6#code",
              "type": "Smart Contract - Arbitrum ETH pool 1"
            },
            {
              "target": "https://arbiscan.io/address/0xe4E58DF3956BC6423a62e87ddd99Ca3120F1dD4B#code",
              "type": "Smart Contract - Arbitrum oracle"
            },
            {
              "target": "https://arbiscan.io/address/0x82af49447d8a07e3bd95bd0d56f35241523fbab1#code",
              "type": "Smart Contract - Arbitrum wETH"
            },
            {
              "target": "https://arbiscan.io/address/0xC9faCFA2fC50C9A30C77a2ad14E2dB107d591918#code",
              "type": "Smart Contract - Arbitrum LevSwapper"
            },
            {
              "target": "https://arbiscan.io/address/0x4c56DbCC056655b8813539aF9C819ae128c07e17#code",
              "type": "Smart Contract - Arbitrum LiquidationSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3#code",
              "type": "Smart Contract - FTM KashiPairMediumRiskV2"
            },
            {
              "target": "https://ftmscan.com/address/0x9e006A1b461a37002a7d0137d890988876Fb0aE8#code",
              "type": "Smart Contract - FTM CombinedOracle"
            },
            {
              "target": "https://ftmscan.com/address/0x66F03B0d30838A3fee971928627ea6F59B236065#code",
              "type": "Smart Contract - FTM TWAPOracle0"
            },
            {
              "target": "https://ftmscan.com/address/0x0D51b575591F8f74a2763Ade75D3CDCf6789266f#code",
              "type": "Smart Contract - FTM TWAPOracle1"
            },
            {
              "target": "https://ftmscan.com/address/0x4F8251F8C8051f5EF136183E0D95d13d8B6dd2Af#code",
              "type": "Smart Contract - FTM LeverageSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0x113e0C94ba8E8b7f61479dc34c40243a322140dF#code",
              "type": "Smart Contract - FTM Deleverage Swapper"
            },
            {
              "target": "https://ftmscan.com/address/0xA5b4f31fB3Ca915C92560F528104FDBb2F8A823b#code",
              "type": "Smart Contract - FTM LiquidationSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0x82f0B8B456c1A451378467398982d4834b6829c1#code",
              "type": "Smart Contract - FTM MIM"
            },
            {
              "target": "https://ftmscan.com/address/0x69c744d3444202d35a2783929a0f930f2fbb05ad#code",
              "type": "Smart Contract - FTM sFTM"
            },
            {
              "target": "https://ftmscan.com/address/0x991f3fa6d9370469356e887f00c119b3cfe7883d#code",
              "type": "Smart Contract - FTM CauldronV1.5"
            },
            {
              "target": "https://ftmscan.com/address/0xe802823719f9d2520415854E6f95baE498FF1D52#code",
              "type": "Smart Contract - FTM CauldronV2FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xc09a7c3adecf7319e572d5c054da0963b5b82694#code",
              "type": "Smart Contract - FTM BandOracleFTM"
            },
            {
              "target": "https://ftmscan.com/address/0x8E45Af6743422e488aFAcDad842cE75A09eaEd34#code",
              "type": "Smart Contract - FTM pool 1 Deployed Address"
            },
            {
              "target": "https://ftmscan.com/address/0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83#code",
              "type": "Smart Contract - FTM pool 1 wFTM"
            },
            {
              "target": "https://ftmscan.com/address/0xd4357d43545f793101b592bacab89943dc89d11b#code",
              "type": "Smart Contract - FTM pool 2 Deployed Address"
            },
            {
              "target": "https://ftmscan.com/address/0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83#code",
              "type": "Smart Contract - FTM pool 2 wFTM"
            },
            {
              "target": "https://ftmscan.com/address/0xed745b045f9495b8bfc7b58eea8e0d0597884e12#code",
              "type": "Smart Contract - FTM yvFTM"
            },
            {
              "target": "https://ftmscan.com/address/0x0DEC85e74A92c52b7F708c4B10207D9560CEFaf0#code",
              "type": "Smart Contract - FTM Collateral"
            },
            {
              "target": "https://ftmscan.com/address/0x932c2c1b97e19DE3876D4128f7066fa709D5dA99#code",
              "type": "Smart Contract - FTM Oracle"
            },
            {
              "target": "https://ftmscan.com/address/0xf4766552D15AE4d256Ad41B6cf2933482B0680dc#code",
              "type": "Smart Contract - FTM divide"
            },
            {
              "target": "https://ftmscan.com/address/0x0DEC85e74A92c52b7F708c4B10207D9560CEFaf0#code",
              "type": "Smart Contract - FTM yearnVault"
            },
            {
              "target": "https://ftmscan.com/address/0xE8f1D5D6B83c59aC3Ba6D1CB9aFbfF54408EcBDC#code",
              "type": "Smart Contract - wFTM LiqSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0xfe2b09980d1f579e13a0ce3f45ab240d5b1c2f6b#code",
              "type": "Smart Contract - yvFTM LiqSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0x3d19f3Af2AA7A6fFec2324f92421A8f4156309D1#code",
              "type": "Smart Contract - wFTM LevSwapper"
            },
            {
              "target": "https://ftmscan.com/address/0x26FA3fFFB6EfE8c1E69103aCb4044C26B9A106a9#code",
              "type": "Smart Contract - yvFTM LevSwapper"
            },
            {
              "target": "https://polygonscan.com/address/0x01288e04435bFcd4718FF203D6eD18146C17Cd4b#code",
              "type": "Smart Contract - Polygon MIM"
            },
            {
              "target": "https://polygonscan.com/address/0x090185f2135308BaD17527004364eBcC2D37e5F6#code",
              "type": "Smart Contract - Polygon CauldonV2"
            },
            {
              "target": "https://polygonscan.com/address/0xf28164a485b0b2c90639e47b0f377b4a438a16b1#code",
              "type": "Smart Contract - Polygon dQuick"
            },
            {
              "target": "https://polygonscan.com/address/0xD766147Bc5A0044a6b4f4323561B162870FcBb48#code",
              "type": "Smart Contract - Matic Oracle"
            },
            {
              "target": "https://polygonscan.com/address/0x5ff7fb4d65d6250b1c7bab5d64d83d859e0d6cf5#code",
              "type": "Smart Contract - Matic Deployed"
            },
            {
              "target": "https://polygonscan.com/address/0xAB594600376Ec9fD91F8e885dADF0CE036862dE0#code",
              "type": "Smart Contract - Matic Divide"
            },
            {
              "target": "https://polygonscan.com/address/0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270#code",
              "type": "Smart Contract - Polygon wMatic"
            },
            {
              "target": "https://etherscan.io/address/0x6cc0cd7D25E291029B55C767B9A2D1d9A18Ae668#code",
              "type": "Smart Contract - Ethereum YearnChainLinkOracleV2"
            },
            {
              "target": "https://etherscan.io/address/0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3#code",
              "type": "Smart Contract - Ethereum MagicInternetMoneyV1"
            },
            {
              "target": "https://etherscan.io/address/0x26FA3fFFB6EfE8c1E69103aCb4044C26B9A106a9#code",
              "type": "Smart Contract - Ethereum sSpellV1"
            },
            {
              "target": "https://etherscan.io/address/0x090185f2135308BaD17527004364eBcC2D37e5F6#code",
              "type": "Smart Contract - Ethereum Spell"
            },
            {
              "target": "https://etherscan.io/address/0x4a9Cb5D0B755275Fd188f87c0A8DF531B0C7c7D2#code",
              "type": "Smart Contract - Ethereum CauldronMediumRiskV1"
            },
            {
              "target": "https://etherscan.io/address/0x1DF188958A8674B5177f77667b8D173c3CdD9e51#code",
              "type": "Smart Contract - Ethereum CauldronV2CheckpointV1"
            },
            {
              "target": "https://etherscan.io/address/0x469a991a6bB8cbBfEe42E7aB846eDEef1bc0B3d3#code",
              "type": "Smart Contract - Ethereum CauldronLowRiskV1"
            },
            {
              "target": "https://etherscan.io/address/0x63905bb681b9e68682f392Df2B22B7170F78D300#code",
              "type": "Smart Contract - Ethereum CauldronV2CheckpointV1"
            },
            {
              "target": "https://etherscan.io/address/0xe4e58df3956bc6423a62e87ddd99ca3120f1dd4b#code",
              "type": "Smart Contract - Ethereum xSushiOracleUSD"
            },
            {
              "target": "https://etherscan.io/address/0xFE2b09980D1f579E13a0Ce3f45AB240d5b1C2f6b#code",
              "type": "Smart Contract - Ethereum Timelock"
            },
            {
              "target": "https://etherscan.io/address/0x813c2B48f92006cE2CA315aCEF45BF96756CFc7A#code",
              "type": "Smart Contract - Ethereum Withdrawer"
            },
            {
              "target": "https://etherscan.io/address/0xD9A89aa4dAB9D1033f97890B7ffa6aE1564BF026#code",
              "type": "Smart Contract - Ethereum SpellSwapperV1"
            },
            {
              "target": "https://etherscan.io/address/0x663Ef4455A07243D9029bA0fC48297AE181aeb38#code",
              "type": "Smart Contract - Ethereum SpellSwapperV2"
            },
            {
              "target": "https://etherscan.io/address/0x5e89e5430cc8e234ea8bfd907a367340c297e981#code",
              "type": "Smart Contract - Ethereum IBOracle"
            },
            {
              "target": "https://etherscan.io/address/0x1ad386d647c216f3fe5a4fc04f6e4cb83e3048cf#code",
              "type": "Smart Contract - Ethereum SpellOracleV1"
            },
            {
              "target": "https://etherscan.io/address/0xa17e42d018c0a04da6f1642ce549c407597d7aa1#code",
              "type": "Smart Contract - Ethereum wOHMOracleV1"
            },
            {
              "target": "https://etherscan.io/address/0x942d5f657d5b48f82db530ad530e200e1caddc26#code",
              "type": "Smart Contract - Ethereum stETHOracleV1"
            },
            {
              "target": "https://etherscan.io/address/0xFDeBd11f8f821B7Bf404DfaFD4d2bC83DCb8bB26#code",
              "type": "Smart Contract - Ethereum AGLDOracle"
            },
            {
              "target": "https://etherscan.io/address/0x13f193d5328d967076c5ED80Be9ed5a79224DdAb#code",
              "type": "Smart Contract - Ethereum 3Crv"
            },
            {
              "target": "https://etherscan.io/address/0x9732D3Ee0f185D7c2D610E30DC5de28EF68Ad7c9#code",
              "type": "Smart Contract - Ethereum 3crypto"
            },
            {
              "target": "https://etherscan.io/address/0xd404BEF05E9e256765440A1B9a6B56750c4cedEc#code",
              "type": "Smart Contract - agld"
            },
            {
              "target": "https://etherscan.io/address/0x27F2bEc8890Fbc7920b88dDbA0Bf0e7faC3c7Bc2#code",
              "type": "Smart Contract - YFI Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x1b34Da94F48110b64B7a437E057AE3e794C625a2#code",
              "type": "Smart Contract - xSushi Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x1d7c1c99045c1c776607f8c1ec9ddd27a2d319d3#code",
              "type": "Smart Contract - USDT Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xCA78478456b044AC13954a9172583Dd1737E52d2#code",
              "type": "Smart Contract - USDC Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x4e5659446A8C42E36bEA73261285e569D1498A5e#code",
              "type": "Smart Contract - WETH Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x1945dC833570A040e28B6E02aAC913726e363180#code",
              "type": "Smart Contract - IB Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xB63Eb840dAEE054d9971DeDFeCBE0667A08C51F8#code",
              "type": "Smart Contract - ALCX Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x125238b61064ab2c00c3b22acb4b3b6e4732ae90#code",
              "type": "Smart Contract - SPELL Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xc2BBE07e57508d61989251e399f96d1218B90523#code",
              "type": "Smart Contract - wOHM Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xf314aD60C32F80671d00E3DE35E44A130829b795#code",
              "type": "Smart Contract - stETH Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xe1847Af8F3292aC831066bd288889596a1fD09bB#code",
              "type": "Smart Contract - FTM Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xef9c97E356bc5fF2460E25f40f608101CE15d70b#code",
              "type": "Smart Contract - 3crv Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x0E1eA2269D6e22DfEEbce7b0A4c6c3d415b5bC85#code",
              "type": "Smart Contract - 3crypto Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x184a07c9CFD6165D6ACCDc373Eb00Bc5Cd8733cF#code",
              "type": "Smart Contract - agld Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x41D65ce96342a3d9c3D878856e283E839d29dF42#code",
              "type": "Smart Contract - RenCrv Liquidation Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x40f64fF796ea941F2383ce579EEe147a8732f01B#code",
              "type": "Smart Contract - USDC Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x197De282d7b5cEFfFD8f8B0196c30e8401593CF6#code",
              "type": "Smart Contract - USDT Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x96ffaA1B3D647A2Ab4CFda942F411f4abf749cdb#code",
              "type": "Smart Contract - WETH Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xbF6F6654dB1c1742377ddF89cb42b3440B6E6699#code",
              "type": "Smart Contract - xSUSHI Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x69704cb6c34586F648bEB1634e692b8a09bf0D01#code",
              "type": "Smart Contract - YFI Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xC09FAaAac10b59ce3Fc6a56539d43786049f4436#code",
              "type": "Smart Contract - IB Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xf9BAE4c8C6e933d4D9dcAc611715024a1Ecb7527#code",
              "type": "Smart Contract - ALCX Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x985486e621c28452f444bBcc8C84868BdA920922#code",
              "type": "Smart Contract - wOHM Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x2764eae8481b1f463124c817feb310042618ca72#code",
              "type": "Smart Contract - stETH Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x83A56BA3CfC236f8923bd27258C6ABfC19b375F4#code",
              "type": "Smart Contract - FTM Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x1fC83f75499b7620d53757f0b01E2ae626aAE530#code",
              "type": "Smart Contract - 3crv Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xe02bf848395A538C7C624C2BFe377B039f067a62#code",
              "type": "Smart Contract - 3crypto Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0xd404BEF05E9e256765440A1B9a6B56750c4cedEc#code",
              "type": "Smart Contract - Agld Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x3BAB7207D4E27b5DE4A15D540B7297281B45Ed2a#code",
              "type": "Smart Contract - RenCrv Leverage Swappers"
            },
            {
              "target": "https://etherscan.io/address/0x35a0Dd182E4bCa59d5931eae13D0A2332fA30321#code",
              "type": "Smart Contract - Ethereum cvxRen"
            },
            {
              "target": "https://etherscan.io/address/0x2Be431EE7E74b1CB7CfA16Fc90578EF42eF361B0#code",
              "type": "Smart Contract -Ethereum Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xc1879bf24917ebE531FbAA20b0D05Da027B592ce#code",
              "type": "Smart Contract - Ethereum AGLD"
            },
            {
              "target": "https://etherscan.io/address/0x40cf1c8fd53c7b6473e53a3c71c543d0713394f6#code",
              "type": "Smart Contract - Ethereum oracle"
            },
            {
              "target": "https://etherscan.io/address/0x4EAeD76C3A388f4a841E9c765560BBe7B3E4B3A0#code",
              "type": "Smart Contract - 3crypto Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x5958A8DB7dfE0CC49382209069b00F54e17929C2#code",
              "type": "Smart Contract - 3crypto Collateral"
            },
            {
              "target": "https://etherscan.io/address/0x9732D3Ee0f185D7c2D610E30DC5de28EF68Ad7c9#code",
              "type": "Smart Contract - 3crypto Oracle"
            },
            {
              "target": "https://etherscan.io/address/0x05500e2ee779329698df35760bedcaac046e7c27#code",
              "type": "Smart Contract - FTM Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x4e15361fd6b4bb609fa63c81a2be19d873717870#code",
              "type": "Smart Contract - FTM Collateral"
            },
            {
              "target": "https://etherscan.io/address/0xEd3056e0AA92C8EA9732212b254A59e9bc57c378#code",
              "type": "Smart Contract - FTM oracle"
            },
            {
              "target": "https://etherscan.io/address/0x0bca8ebcb26502b013493bf8fe53aa2b1ed401c1#code",
              "type": "Smart Contract - stETH pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x942d5f657d5b48f82db530ad530e200e1caddc26#code",
              "type": "Smart Contract - stETH pool oracle"
            },
            {
              "target": "https://etherscan.io/address/0xdCD90C7f6324cfa40d7169ef80b12031770B4325#code",
              "type": "Smart Contract - stETH pool yearnVault"
            },
            {
              "target": "https://etherscan.io/address/0x806e16ec797c69afa8590a55723ce4cc1b54050e#code",
              "type": "Smart Contract - cvx3Crv Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x13f193d5328d967076c5ED80Be9ed5a79224DdAb#code",
              "type": "Smart Contract - cvx3Crv Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xd92494CB921E5C0d3A39eA88d0147bbd82E51008#code",
              "type": "Smart Contract - cvx3Crv collateral"
            },
            {
              "target": "https://etherscan.io/address/0xebfde87310dc22404d918058faa4d56dc4e93f0a#code",
              "type": "Smart Contract - yvIB Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x27b7b1ad7288079A66d12350c828D3C00A6F07d7#code",
              "type": "Smart Contract - yvIB Pool yearnVault"
            },
            {
              "target": "https://etherscan.io/address/0x551a7CfF4de931F32893c928bBc3D25bF1Fc5147#code",
              "type": "Smart Contract - USDT Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x3E7d1eAB13ad0104d2750B8863b489D65364e32D#code",
              "type": "Smart Contract - USDT Pool divide"
            },
            {
              "target": "https://etherscan.io/address/0x7Da96a3891Add058AdA2E826306D812C638D87a7#code",
              "type": "Smart Contract - USDT Pool yearnVault/collateral"
            },
            {
              "target": "https://etherscan.io/address/0xc319eea1e792577c319723b5e60a15da3857e7da#code",
              "type": "Smart Contract - sSpell Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x1ad386d647c216f3fe5a4fc04f6e4cb83e3048cf#code",
              "type": "Smart Contract - sSpell Pool Oracle"
            },
            {
              "target": "https://etherscan.io/address/0x26FA3fFFB6EfE8c1E69103aCb4044C26B9A106a9#code",
              "type": "Smart Contract - sSpell Pool collateral"
            },
            {
              "target": "https://etherscan.io/address/0x003d5a75d284824af736df51933be522de9eed0f#code",
              "type": "Smart Contract - wOHM Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x63905bb681b9e68682f392Df2B22B7170F78D300#code",
              "type": "Smart Contract - wOHM Pool Master contract"
            },
            {
              "target": "https://etherscan.io/address/0x1478551FF3Ee214409dB6D0d0182ACe2d6B25b88#code",
              "type": "Smart Contract - wOHM Pool Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xCa76543Cf381ebBB277bE79574059e32108e3E65#code",
              "type": "Smart Contract - wOHM Pool collateral"
            },
            {
              "target": "https://etherscan.io/address/0x7b7473a76d6ae86ce19f7352a1e89f6c9dc39020#code",
              "type": "Smart Contract - ALCX Pool V2 Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0xE0B858c2698598830256A005E1Ad3a2C5Ef5e6bC#code",
              "type": "Smart Contract - ALCX Pool V2 Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xdbdb4d16eda451d0503b854cf79d55697f90c8df#code",
              "type": "Smart Contract - ALCX Pool V2 collateral"
            },
            {
              "target": "https://etherscan.io/address/0x98a84eff6e008c5ed0289655ccdca899bcb6b99f#code",
              "type": "Smart Contract - xSushi Pool V3 Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB#code",
              "type": "Smart Contract - xSushi Pool V3 Oracle"
            },
            {
              "target": "https://etherscan.io/address/0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272#code",
              "type": "Smart Contract - xSushi Pool V3 collateral"
            },
            {
              "target": "https://etherscan.io/address/0xe4e58df3956bc6423a62e87ddd99ca3120f1dd4b#code",
              "type": "Smart Contract - xSushi Pool V3 divide"
            },
            {
              "target": "https://etherscan.io/address/0x920d9bd936da4eafb5e25c6bdc9f6cb528953f9f#code",
              "type": "Smart Contract - WETH Pool V2 Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419#code",
              "type": "Smart Contract - WETH Pool V2 Divide"
            },
            {
              "target": "https://etherscan.io/address/0xa258C4606Ca8206D8aA700cE2143D7db854D168c#code",
              "type": "Smart Contract - WETH Pool V2 yearnVault"
            },
            {
              "target": "https://etherscan.io/address/0xFFbF4892822e0d552CFF317F65e1eE7b5D3d9aE6#code",
              "type": "Smart Contract - YFI Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0xA027702dbb89fbd58938e4324ac03B58d812b0E1#code",
              "type": "Smart Contract - YFI Pool divide"
            },
            {
              "target": "https://etherscan.io/address/0xE14d13d8B3b85aF791b2AADD661cDBd5E6097Db1#code",
              "type": "Smart Contract - YFI Pool yearnVault"
            },
            {
              "target": "https://etherscan.io/address/0x6cbAFEE1FaB76cA5B5e144c43B3B50d42b7C8c8f#code",
              "type": "Smart Contract - USDC Pool Deployed address"
            },
            {
              "target": "https://etherscan.io/address/0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6#code",
              "type": "Smart Contract - USDC Pool divide"
            },
            {
              "target": "https://etherscan.io/address/0x5f18C75AbDAe578b483E5F43f12a39cF75b973a9#code",
              "type": "Smart Contract - USDC Pool yearnVault"
            },
            {
              "target": "https://abracadabra.money/",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Abracadabra is a lending platform that uses interest-bearing tokens (ibTKNs) as collateral to borrow a USD pegged stablecoin (Magic Internet Money - MIM), that can be used as any other traditional stablecoin.\n\nFor more information about Abracadabra, please visit [https://abracadabra.money/](https://abracadabra.money/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Theft of funds inside of the cauldrons\n  - Crashing of the cauldrons\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Abracadabra classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed. \n\n__Critical__\n  - Bug reports on Oracles and Cauldrons\n  - Bug reports on deployed Oracles \n\n__High__\n  - Bug reports on Swapper contracts \n  - Bug reports on undeployed Oracles\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Medium, High, and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n\nThe CauldronV1 don’t properly account for borrow opening fees\n\nPayouts are handled by the __Abracadabra__ team directly and are denominated in USD. However, payouts are done in __ETH__,__USDT__,__SPELL__,__MIM__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Abracadabra can be found at [https://github.com/Abracadabra-money/magic-internet-money/tree/main/contracts](https://github.com/Abracadabra-money/magic-internet-money/tree/main/contracts). All folders with “Degenbox”, “Outdated” and “BentoBoxFlat.sol” are out of scope. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of protocol funds\n  - Temporary freezing of funds for minimum of 12hrs\n  - Unable to call smart contract\n  - Forced liquidations through manipulation that does not stem from sustained price action (focused on flash loan and two block attacks)\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Shell access on server\n  - Injection of text \n  - Slippage incorrectly calculated leading to significant user loss (>= 5% divergence in minimum output)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Sustained price movements over minutes leading to a changed oracle price\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Websites and Apps\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "thorstarter",
          "project": "Thorstarter",
          "date": "2021-11-03T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/cOS9L5gZxUKwXFmr1KPLS/ea5ed8d9a0540b26bca7e68a05641270/Thorstarter_Logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x69fa0fee221ad11012bab0fdb45d444d3d2ce71c",
              "type": "Smart Contract - XRUNE Token"
            },
            {
              "target": "https://etherscan.io/address/0xEBCD3922A199cd1358277C6458439C13A93531eD",
              "type": "Smart Contract - Voters"
            },
            {
              "target": "https://etherscan.io/address/0x5b1b8BdbcC534B17E9f8E03a3308172c7657F4a3",
              "type": "Smart Contract - DAO"
            },
            {
              "target": "https://etherscan.io/address/0xf99b2a992d047e13761e0a601d2889ed5685f4d0",
              "type": "Smart Contract - Emissions Splitter"
            },
            {
              "target": "https://etherscan.io/address/0x2B9775942ecC36bF4DC449DdB828CF070b3CC71c",
              "type": "Smart Contract - Emissions Private Dispenser"
            },
            {
              "target": "https://etherscan.io/address/0x45cd79fA4faD4a2DfC2294B0315d45e41D8e9601",
              "type": "Smart Contract - Voters Investment Dispenser"
            },
            {
              "target": "https://etherscan.io/address/0x5fB164A1f1F8cAF86D4bB362A1D24c007fAe92B5",
              "type": "Smart Contract - LpTokenVestingKeeper"
            },
            {
              "target": "https://etherscan.io/address/0x7bc47D1632A598A79031e6f65958Aa0f681a3BD3",
              "type": "Smart Contract - LpTokenVesting (1 of n)"
            },
            {
              "target": "https://etherscan.io/address/0x9Aa3f4295431e6640f1D2ef50944BAe6cC5123D8",
              "type": "Smart Contract - SaleDutch (1 of n)"
            },
            {
              "target": "https://etherscan.io/address/0x1a4d12Ab7033483bEEf93b9faCDB818c0f039271",
              "type": "Smart Contract - SaleBatch (1 of n)"
            },
            {
              "target": "https://app.thorstarter.org/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Thorstarter is the first decentralized community-driven Venture DAO. By combining a unique launchpad model with liquidity grants, they fund and launch the most promising projects across THORfi and DeFi.\n\nThorstarter will act as an IDO platform for new projects, providing them with deep liquidity right from the start. Alternatively, Thorstarter will enable existing projects to reach investors and participants across multiple blockchains by creating a liquidity pool for their token paired with XRUNE. \n\nThorstarter complements the Thorchain ecosystem, and benefits from its liquidity and capabilities, while also extending its utility.\n\nFor more information about Thorstarter, please visit [https://thorstarter.org](https://thorstarter.org).   \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. A PoC is also required for Critical smart contract bug reports in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 50 000__ for Critical bug reports.\n\nPayouts are handled by the Thorstarter team directly and are denominated in USD. However, payouts are done in __USDC__, __XRUNE__ or a combination of both, up to the discretion of the team.",
            "assets_body": "All smart contracts of Thorstarter can be found at [https://github.com/Thorstarter/thorstarter-contracts](https://github.com/Thorstarter/thorstarter-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unfreezing of locked/vesting funds\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "chfryfinance",
          "project": "CHFRY Finance",
          "date": "2021-11-01T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/A9PsnxG24nqFdkroV3fp6/2e1fe6b4151362cfd8d4e2554aedd0bf/CHFRY_Finance_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $15,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x332E824e46FcEeB9E59ba9491B80d3e6d42B0B59#code",
              "type": "Smart Contract - Cheese"
            },
            {
              "target": "https://etherscan.io/address/0x42ef9077d8e79689799673ae588E046f8832CB95#code",
              "type": "Smart Contract - fUSD"
            },
            {
              "target": "https://etherscan.io/address/0xd1ffa2cbAE34FF85CeFecdAb0b33E7B1DC19024b#code",
              "type": "Smart Contract - Fryer - USDT"
            },
            {
              "target": "https://etherscan.io/address/0x87F6fAA87358B628498E8DCD4E30b0378fEaFD07#code",
              "type": "Smart Contract - Fryer - DAI"
            },
            {
              "target": "https://etherscan.io/address/0x7E271Eb034dFc47B041ADf74b24Fb88E687abA9C#code",
              "type": "Smart Contract - Fryer - USDC"
            },
            {
              "target": "https://etherscan.io/address/0xD334739B8C94a4B8Ae9ea468Aea97C8260187D58#code",
              "type": "Smart Contract - Oven - USDT"
            },
            {
              "target": "https://etherscan.io/address/0x84c6C1586c1594826985576e61f68442Cf4C3cd2#code",
              "type": "Smart Contract - Oven - DAI"
            },
            {
              "target": "https://etherscan.io/address/0x997A3b24f7C1D75986E391235B2a5a9e77b28a68#code",
              "type": "Smart Contract - Oven - USDC"
            },
            {
              "target": "https://etherscan.io/address/0x51749319266A3eEdd77CD17d994860a11Fb26591#code",
              "type": "Smart Contract - Fryer Config - USDT"
            },
            {
              "target": "https://etherscan.io/address/0x78001C780563291ED1224c997b6785e28886F642#code",
              "type": "Smart Contract - Fryer Config - DAI"
            },
            {
              "target": "https://etherscan.io/address/0x0824A617A6Cb87C79E50A14B51c7932A56827763#code",
              "type": "Smart Contract - Fryer Config - USDC"
            },
            {
              "target": "https://etherscan.io/address/0x689e42b8febcd66D48539Cd0fA18cA13d79b9822#code",
              "type": "Smart Contract - Cheese Factory"
            },
            {
              "target": "https://etherscan.io/address/0xC9E86C84c343E2aA0EB8259152F87291dbf8186f#code",
              "type": "Smart Contract - Cheese Stake Pool"
            },
            {
              "target": "https://etherscan.io/address/0x85Cfd17E40A6D369620515c6b580322dC60b0a98#code",
              "type": "Smart Contract - Cheese Private Stake Pool"
            },
            {
              "target": "https://etherscan.io/address/0x87e51ebF96eEB023eCc28536Ad0DBca83dEE0203#code",
              "type": "Smart Contract - Adapter - YFI - USDT"
            },
            {
              "target": "https://etherscan.io/address/0x782bc9B1F11cDBa13aCb030cDab04f04FB667846#code",
              "type": "Smart Contract - Adapter - YFI - USDC"
            },
            {
              "target": "https://etherscan.io/address/0xd5F38f4F1e0c157dd1AE8Fd66EE2761A14eF7324#code",
              "type": "Smart Contract - Adapter - YFI - DAI"
            },
            {
              "target": "https://chfry.finance/#/",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "CHFRY Finance is a DeFi lending platform with flash loans, self-repaying loans, and future-yield-backed assets, which powers the automated repayment of debt by deploying collateral to generate yields from yield aggregators and flash loans.\n\nFor more information about CHFRY Finance, please visit [https://chfry.finance/](https://chfry.finance/#/) \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All Medium Smart Contract bug reports require a PoC. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__.\n\nThe following vulnerabilities are not eligible for a reward:\n  - Broken Link Bypass\n\nPayouts are handled by the __CHFRY Finance__ team directly and are denominated in USD. However, payouts are done in __CHEESE__.",
            "assets_body": "All smart contracts of CHFRY Finance can be found at \n\n[https://github.com/chfry-finance/chfry-protocol/tree/master/contracts](https://github.com/chfry-finance/chfry-protocol/tree/master/contracts) \n\nand \n\n[https://docs-chfry.gitbook.io/doc/networks/contract-addresses](https://docs-chfry.gitbook.io/doc/networks/contract-addresses) \n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimum 6 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "spartanprotocol",
          "project": "Spartan Protocol",
          "date": "2021-11-01T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6pXJICgybcpkPwYQS1j0u9/1e9c32c24d863e0e5e2e7a3827474298/Spartan_Protocol_Logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $750"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x3910db0600eA925F63C36DdB1351aB6E2c6eb102#code",
              "type": "Smart Contract - SpartaV2"
            },
            {
              "target": "https://bscscan.com/address/0x518F746Ab25432146f15f583845cFe3F56d2Bb1c#code",
              "type": "Smart Contract - BondVault"
            },
            {
              "target": "https://bscscan.com/address/0x80531284f27d8b479aCA8dbA18fD6303B4bF1567#code",
              "type": "Smart Contract - DAO"
            },
            {
              "target": "https://bscscan.com/address/0x4102773565d82C8B0785f1262cfe75F04F170777#code",
              "type": "Smart Contract - DaoVault"
            },
            {
              "target": "https://bscscan.com/address/0x2C577706579E08A88bd30df0Fd7A5778A707c3AD#code",
              "type": "Smart Contract - PoolFactory"
            },
            {
              "target": "https://bscscan.com/address/0x5aB5bbe3044E58303A189d3D28f6da31e9217F9F#code",
              "type": "Smart Contract - Reserve"
            },
            {
              "target": "https://bscscan.com/address/0x03662D8347aC1487e01FCE1CA679e8484ef954a3#code",
              "type": "Smart Contract - Router"
            },
            {
              "target": "https://bscscan.com/address/0x8b2643D95DeaD636EC3ba5F720809541c3355f4e#code",
              "type": "Smart Contract - SynthFactory"
            },
            {
              "target": "https://bscscan.com/address/0xa6C3288C18505D134445cB4Fe8499da22002F1E0#code",
              "type": "Smart Contract - SynthVault"
            },
            {
              "target": "https://bscscan.com/address/0x82b67e7A325def377f62401126cc54eEE73719ec#code",
              "type": "Smart Contract - Utils"
            },
            {
              "target": "https://bscscan.com/address/0x972C7278ECFdCF97556F9C53075576a8bC6547ab#code",
              "type": "Smart Contract - Pool (BNB Example)"
            },
            {
              "target": "https://spartanprotocol.org",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Spartan Protocol provides community-governed and programmable token emissions functions to incentivize the formation of deep liquidity pools. This strong base of liquidity will be utilized to provide asset swaps, synthetic token generation, lending, derivatives and more. \n\nThe common base asset SPARTA provides an internal pricing mechanism without reliance on external oracles. Binance Smart Chain was chosen as the protocol's home to allow for near-instant settlement and extremely low gas fees.\n\nFor more information about Spartan Protocol, please visit [https://spartanprotocol.org/](https://spartanprotocol.org/) \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website going down",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Critical/High severity smart contract bug reports must also come with a PoC in order to be considered for a reward. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of USD 50 000 for Critical bug reports.\n\nPayouts are handled by the __Spartan Protocol__ team directly and are denominated in USD. However, payouts are done in __SPARTA__.",
            "assets_body": "All smart contracts of Spartan Protocol can be found at https://github.com/spartan-protocol/. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nImpacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked or added to pools by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than an hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Redirection funds by address modification\n  - Site goes down\n  - Injection of text ",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "baofinance",
          "project": "Bao Finance",
          "date": "2021-10-29T01:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3Kvv04t4t9W8XPDBGlYDA4/f453f71edf1dbef08827d9edbf1839e2/Bao_finance_logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x374cb8c27130e2c9e04f44303f3c8351b9de61c1",
              "type": "Smart Contract - Bao Token (ETH)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0xe0d0b1DBbCF3dd5CAc67edaf9243863Fd70745DA/transactions",
              "type": "Smart Contract - Baocx Token (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0x47DcC83a14aD53Ed1f13d3CaE8AA4115f07557C0",
              "type": "Smart Contract - PandaSwap Token (BSC)"
            },
            {
              "target": "https://polygonscan.com/address/0x4C392822D4bE8494B798cEA17B43d48B2308109C",
              "type": "Smart Contract - Polly Token (Polygon)"
            },
            {
              "target": "https://etherscan.io/address/0x374cb8c27130e2c9e04f44303f3c8351b9de61c1",
              "type": "Smart Contract - BaoMasterFarmer (ETH)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0xf712a82DD8e2Ac923299193e9d6dAEda2d5a32fd/transactions",
              "type": "Smart Contract - BaoMasterFarmer (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0x9942cb4c6180820E6211183ab29831641F58577A",
              "type": "Smart Contract - PandaSwapMasterFarmer (BSC)"
            },
            {
              "target": "https://polygonscan.com/address/0x850161bF73944a8359Bd995976a34Bb9fe30d398",
              "type": "Smart Contract - PollyMasterFarmer (Polygon)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x45DE240fbE2077dd3e711299538A09854FAE9c9b/transactions",
              "type": "Smart Contract - BaoSwap Factory (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0x9Ad32bf5DaFe152Cbe027398219611DB4E8753B3",
              "type": "Smart Contract - PandaSwap Factory (BSC)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x6093AeBAC87d62b1A5a4cEec91204e35020E38bE/transactions",
              "type": "Smart Contract - BaoSwap Router (xDAI)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0xd83E87B585656573e6BC7A9A93776C76e479B8d6/transactions",
              "type": "Smart Contract - Teahouse - tBao (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0xEF88e0d265dDC8f5E725a4fDa1871F9FE21B11E2",
              "type": "Smart Contract - Bamboo Token (BSC)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x7B993E0e3D4D02afBE42c65d3133CA8e9A70B102/transactions",
              "type": "Smart Contract - Teamaker (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0xe1a2CD535C4e7d9C2C187e529f9f491cceA41e07",
              "type": "Smart Contract - BambooMaker Staking Contract (BSC)"
            },
            {
              "target": "https://blockscout.com/xdai/mainnet/address/0x825b6a1548F8F019664b6Ae577b44bFb728435B0/transactions",
              "type": "Smart Contract - Bao / Bao.cx 1:1 redemption (xDAI)"
            },
            {
              "target": "https://bscscan.com/address/0x745c8e1c0315162c33408454b48e53c9f178eb68",
              "type": "Smart Contract - Panda / Rhino 1:1 Swap (BSC)"
            },
            {
              "target": "https://bscscan.com/address/0xd2eca3cff5f09cfc9c425167d12f0a005fc97c8c",
              "type": "Smart Contract - Rhino Token (BSC)"
            },
            {
              "target": "https://bscscan.com/address/0x745c8E1c0315162C33408454b48E53C9F178eB68",
              "type": "Smart Contract - Rhino Staking Contract (BSC)"
            },
            {
              "target": "https://polygonscan.com/address/0x6A10bB7Ac83Fdd9ceCDb13A8CFC3FC0A017912E2",
              "type": "Smart Contract - PieFactory (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x0589C472C35Fc7CaE089DBbAEFB050dD642Ce481",
              "type": "Smart Contract - Diamond (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x828125Ec1dAa708677b844ABb05f339741C81d25",
              "type": "Smart Contract - DiamondCutFacet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xdC1C3eE57e8D7a898671aF2634E57B6cc7c81F57",
              "type": "Smart Contract - DiamondLoupFacet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xe3fAA5d1feCbc4402Ff4a08684e3BcF70732C2e0",
              "type": "Smart Contract - OwnershipFacet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xE4f21842E5D7faD1FB360B7623946376db94fEF3",
              "type": "Smart Contract - BasketFacet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x92f0049c548B9ff3fe28F2FBd576c6DAF20bEcf2",
              "type": "Smart Contract - ERC20Facet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x1F3A8584691847edD43BC1eDCE83F9B1B7d7555B",
              "type": "Smart Contract - CallFacet (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xc94BC5C62C53E88d67C3874f5E8f91c6a99656ca",
              "type": "Smart Contract - LendingRegestry (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x51E2F57C346e189c5a41e785d1563f93CCb8FaA1",
              "type": "Smart Contract - PieRegistry (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xC47D9A6725fFEE67727d3aE8fFa2630A47d649C4",
              "type": "Smart Contract - Rebalancer (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x9eda65278543E2497701Fd5964D86b880d2DCB98",
              "type": "Smart Contract - AAVELendingLogic (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x3f323a6E3Bddff52529fA9ac94CFCc6E755A0242",
              "type": "Smart Contract - LendingManager (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x58aFFd9251e7147d46eb8614893dA2B37AdfcB28",
              "type": "Smart Contract - CREAMLendingLogic (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0x2E62EE5005c4069e82d37479f42D1a7Aa2C1B8ba",
              "type": "Smart Contract - Recipe (Polygon)"
            },
            {
              "target": "https://polygonscan.com/address/0xd3f07EA86DDf7BAebEfd49731D7Bbd207FedC53B",
              "type": "Smart Contract - Polly nDefi Nest (nDEFI) (Polygon)"
            },
            {
              "target": "https://pollyfinance.com/",
              "type": "Web/App - Website"
            }
          ],
          "mdx": {
            "program_overview": "Bao Finance is a new protocol that adds features to existing DeFi systems.\n\nFor more information about Bao Finance, please visit [https://www.bao.finance/](https://www.bao.finance/).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimum 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Medium, High, and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nPayouts are handled by the __Bao Finance__ team directly and are denominated in USD. However, payouts are done in __RAI__.",
            "assets_body": "All smart contracts of Bao Finance can be found at [https://github.com/baofinance](https://github.com/baofinance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimum 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n\n__Web/App__\n\n- Redirected funds by address modification\n- Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "decus",
          "project": "DeCus",
          "date": "2021-10-27T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2dthb8GwSeKQLZUkDKEWgF/7292affe732d330413256b910876bc99/DeCus_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xb4b9fca2553fce552aba3eb33dee2b9057bf88d1#code",
              "type": "Smart Contract - DeCus System"
            },
            {
              "target": "https://bscscan.com/address/0x750F90bB0764139568383AbE0784565a3cD6a318#code",
              "type": "Smart Contract - Keeper Registry"
            },
            {
              "target": "https://bscscan.com/address/0x00D8f5e3E727D8ADF0607D1a6ed6DDEB81E6a3B5#code",
              "type": "Smart Contract - Keeper Reward"
            },
            {
              "target": "https://app.decus.io",
              "type": "Web/App - Main Web app"
            }
          ],
          "mdx": {
            "program_overview": "DeCus is a decentralized and high-performance cross-chain platform dedicated to bringing Bitcoin to the DeFi ecosystem and making other blockchain assets flow freely across different chains.\n\nFor more information about DeCus, please visit [https://decus.io/](https://decus.io/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Smart contract fails to deliver promised returns\n  - Redirected funds by address modification\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThere is one exclusion from the above Severity Classification for this bug bounty program: \n - Medium Level Security - Excluded: - Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract).\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also PR and branding aspects, at the discretion of the team. However, there is a minimum reward of __USD 50 000__. \n\nThe following vulnerabilities listed in the [Audit Report of SLOWMIST](https://github.com/decus-io/decus-core-audits/blob/main/SlowMist%20Audit%20Report%20-%20DeCus.pdf) are not eligible for a reward:\n\n  - The issue of the minimum bid value \n  - Compatibility issue\n  - Access control issue\n  - Risk of excessive authority \n  - Redundant code \n  - Add confiscation issue\n  - Funds remaining after refund \n  - PayExtraBurnFee issue\n  - Malleable attack risk\n  - Other vulnerabilities listed in the Audit Report\n\nPayouts are handled by the __DeCus__ team directly and are denominated in USD. However, payouts are done in __USDT or DCS__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of DeCus can be found at https://github.com/decus-io/decus-core. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Smart contract fails to deliver promised returns\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Minting repeatedly to occupy all available Keeper groups and block system\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bifi",
          "project": "BiFi",
          "date": "2021-10-21T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/wWFjbdt3jrcKZ4OmOjvBc/84c670c9370bc2b2feb25fb721191d45/Bifi_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $100"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x06c8fec203be5b45fadc3f139efdf4444cf8828e",
              "type": "Smart Contract - Observer Oracle"
            },
            {
              "target": "https://etherscan.io/address/0x6bA1DDd63A5680B7C666b74a50be28B24D507BeB",
              "type": "Smart Contract - Oracle Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x320c3391d1dc3d36e0e1da26809db9e0463517c7",
              "type": "Smart Contract - Coin SI"
            },
            {
              "target": "https://etherscan.io/address/0x2438b33Ee508069bA1e3fEB0EE7eb1A47568ebae",
              "type": "Smart Contract - USDT SI"
            },
            {
              "target": "https://etherscan.io/address/0x257d6f962f23b7848792665ed9513a1ab72ecde4",
              "type": "Smart Contract - DAI SI"
            },
            {
              "target": "https://etherscan.io/address/0xC06B71ec195cCAa98a57DD4bA9e90a7469c37D13",
              "type": "Smart Contract - LINK/USDC/WBTC/BTC SI"
            },
            {
              "target": "https://etherscan.io/address/0x4acb9f0c1a266fbfbe455a4bbc85f14672a23b6f",
              "type": "Smart Contract - Observer"
            },
            {
              "target": "https://etherscan.io/address/0x34E45203669aADd0d6ac342538AA7b62C9128f4a",
              "type": "Smart Contract - Manager Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0x913F2DEe2746CdA2ab34106c47aBC4a8f4e36fa5",
              "type": "Smart Contract - Token Manager"
            },
            {
              "target": "https://etherscan.io/address/0xFeD2edDBDF201D6b5469cbd6866d19808d8879fb",
              "type": "Smart Contract - Handler Manager"
            },
            {
              "target": "https://etherscan.io/address/0xCD9632707EC422759bE2A5b348f8178ff280A453",
              "type": "Smart Contract - Manager Slot Setter"
            },
            {
              "target": "https://etherscan.io/address/0xE2F26b242107F4C6eE48039555d7211D018AcE37",
              "type": "Smart Contract - Manager Flash Loan"
            },
            {
              "target": "https://etherscan.io/address/0xFd514b33a361b82fE5D89070DB6917Cd4F73285D",
              "type": "Smart Contract - Ether Liquidation Manager"
            },
            {
              "target": "https://etherscan.io/address/0xbb0aee2fe7e9d73a5dc3354136231a617717db03",
              "type": "Smart Contract - Coin Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0xfdc7d058bede981ea865fb64d06382a2206a1c42",
              "type": "Smart Contract - USDT Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0x4596302baaaeae0732fbdd9cdf7aec5e83c3cfba",
              "type": "Smart Contract - DAI Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0xe4c383fb3d7046ce7f9e5c537493cd192e9ae23c",
              "type": "Smart Contract - LINK Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0x23219FF3b4d838C94a8C8AE37ab3FF0Ac0743047",
              "type": "Smart Contract - USDC Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0x2ed04cE9a032B9A101975172F59A8d33E877bB1f",
              "type": "Smart Contract - WBTC Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0x7146Ed71b1cb0D90E705eF20066b3453809E89e8",
              "type": "Smart Contract - BTC Handler Data Storage"
            },
            {
              "target": "https://etherscan.io/address/0xcbf361d934e2ac49b2c47c2910ea9489ab955829",
              "type": "Smart Contract - Coin Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x29ecabde2c57b6d4183f915ebca1a25804a60db1",
              "type": "Smart Contract - USDT Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x105ea44ffa77f517e31f20d7c22ebebf739bbf87",
              "type": "Smart Contract - DAI Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x7560ad17e2a0b790019734bf4f9790323cd68cb6",
              "type": "Smart Contract - LINK Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x24231014199e0c1a8ec2d963389008d85b658f7d",
              "type": "Smart Contract - USDC Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x75A7Ce14E9a07428384c63dc7dD0adeFe3B229C2",
              "type": "Smart Contract - WBTC Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x614661d42d81eb446f740424CCAc24F09e97417e",
              "type": "Smart Contract - BTC Interest Model"
            },
            {
              "target": "https://etherscan.io/address/0x13000c4a215efe7e414bb329b2f11c39bcf92d78",
              "type": "Smart Contract - Coin Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x808c3ba97268dbf9695b1ec10729e09c7e67a9e3",
              "type": "Smart Contract - USDT Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xd76b7060f1b646fa14740ff6ac670a4f0a6fc5e3",
              "type": "Smart Contract - DAI Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x25567603eb61a4a49f27e433652b5b8940d10682",
              "type": "Smart Contract - LINK Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x128647690C7733593aA3Dd149EeBC5e256E79217",
              "type": "Smart Contract - USDC Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x93948Aa8488F522d5b079AF84fe411FBCE476e9f",
              "type": "Smart Contract - WBTC Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x986Eb51E67e154901ff9B482835788B8f3054076",
              "type": "Smart Contract - BTC Handler Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x9c06a381bfDE2a14d8961057cb81a34b72fb0Fb6",
              "type": "Smart Contract - Coin SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0xba9b7567EF2B441c99f32a3Fb0EeAa248281586d",
              "type": "Smart Contract - LINK SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0x3fF1Dd4646f0db3B0a1FD8bB3AD7bE906E26F1A0",
              "type": "Smart Contract - DAI SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0xDb684577F71F8FeBfe6aF208461e948EaE255025",
              "type": "Smart Contract - USDT SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0xD0D87Cd79965841780022419bF3b8e0BeC0e0500",
              "type": "Smart Contract - USDC SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0x83e0bDD46831ee2b00fBfeb8e0488C7CD14284C0",
              "type": "Smart Contract - WBTC SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0x2146922c1D5a8A553afBC051da276814dD0629C0",
              "type": "Smart Contract - BTC SI Handler Date Storage"
            },
            {
              "target": "https://etherscan.io/address/0x64d18fd81A30150b8F881CB424677F178eA25C33",
              "type": "Smart Contract - Coin Handler"
            },
            {
              "target": "https://etherscan.io/address/0x47Be3d1DEF039Bd85e7570864bB5148E7491A65F",
              "type": "Smart Contract - Token Handler"
            }
          ],
          "mdx": {
            "program_overview": "BiFi is the Multichain DeFi Project built on BIFROST, the Universal Multichain Middleware. BiFi aims to create a decentralized financial infrastructure that connects all the capital markets currently isolated on each blockchain, and creates new products and services that interoperate across multiple blockchains. \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing of governance funds\n  - Thefts and freezing of permission among contracts\n  - Manipulations of the contract functionality (DoS, Malicious Re-entrancy, etc.)",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Using a single on-chain price oracle as a price feed source (e.g., Uniswap, Sushiswap)\n\nPayouts are handled by the __BiFi__ team directly and are denominated in USD. However, payouts are done in __BFC__, __ETH__, __Stablecoin__ __(USDT or USDC)__ with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Bifi can be found at [https://github.com/bifrost-platform/BIFI](https://github.com/bifrost-platform/BIFI). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing of governance funds\n  - Thefts and freezing of permission among contracts\n  - Manipulations of the contract functionality (DoS, Malicious Re-entrancy, etc.)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "halodao",
          "project": "HaloDAO",
          "date": "2021-09-27T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/64FjZVc3jx3x9LtHUZtbv/98d25274787f39ac727587fbf4c9c37d/HaloDAO_logo_09_2021.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,500"
            },
            {
              "level": "low",
              "payout": "Up to USD $700"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $8,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $4,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.halodao.com",
              "type": "Web/App"
            },
            {
              "target": "https://etherscan.io/address/0x9cFf4A10b6Fb163a4DF369AaFed9d95838222ca6",
              "type": "Smart Contract - ammRewards.sol"
            },
            {
              "target": "https://etherscan.io/address/0x47BE779De87de6580d0548cde80710a93c502405",
              "type": "Smart Contract - Halohalo.sol (Rainbow Pool)"
            },
            {
              "target": "https://github.com/HaloDAO/halo-rewards-v1/tree/master/contracts/amm",
              "type": "AMM v1 Contracts"
            }
          ],
          "mdx": {
            "program_overview": "HaloDAO is driving liquidity to regional, asset backed stablecoins by building a stablecoin optimized AMM and stablecoin focused Lending Market and linkages with existing wallets and exchanges around the world. With a greater supply of region specific stablecoins, users will be able to access the permissionless Decentralised Finance (DeFi) economy, thereby lowering the barrier to individual financial participation in a region of the world with a high potential of growth and impact.\n\nFor more information about HaloDAO, please visit their website at [https://www.halodao.com/](https://www.halodao.com/).  \n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Freezing of contract’s holdings\n  - Theft of yield\n  - Token holders temporarily unable to transfer holdings\n  - Transient consensus failures\n  - Smart contract drainage\n  - Smart contract failed to return promised returns\n  - Contract consumers unbounded gas\n  - Block stuffing\n  - Gas griefing \n  - Griefing denial of service\n  - Cryptographic flaws\n  - Leak of user data\n  - Deletion of user data\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Users spoofing other users\n  - UI level bugs\n  - Math formula discrepancies",
            "rewards_body": "Rewards are distributed according to the following vulnerability classification system:\n\n| Smart Contracts Severity Level | Impact |\n|:- | :--: |\n| **Critical** | - Empty or freeze the contract's holdings (e.g. economic attacks, flash loans, reentrancy, MEV, logic errors, integer  |\n|              | - Cryptographic flaws |\n| **High** | - Token holders temporarily unable to transfer holdings |\n|          | - Users spoof each other |\n|          | - Theft of yield | \n|          | - Transient consensus failures |\n| **Medium** | - Contract consumes unbounded gas | \n|            | - Block stuffing | \n|            | - Griefing denial of service (i.e. attacker spends as much in gas as damage to the contract) |\n|            | - Gas griefing | \n|            | - Math formula discrepancies | \n| **Low**  | - Contract fails to deliver promised returns, but doesn't lose value |\n\nRewards for web/app vulnerabilities are distributed according to the [Immunefi Vulnerability Severity Classification](https://immunefi.com/severity-updated/). Please refer to the portion under prioritized vulnerabilities to check the web/app vulnerabilities that are covered in the scope for rewards.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Additionally, all Medium, High, and Critical Smart Contract bug reports must come with a PoC.\n\nCritical web/app and smart contract bug reports are capped at 10% of economic damage, primarily taking into consideration funds at risk, but also taking into consideration branding and PR aspects, at the discretion of the team. However, for smart contract vulnerabilities, the reward is a minimum of __USD 50 000__.\n\nThe final reward amount for other severity levels will be determined by HaloDAO on a case-by-case basis. By submitting a bug report, you agree that HaloDAO has the final decision on the amount to be rewarded.\n\nThe final reward amount for other severity levels will be determined by HaloDAO on a case-by-case basis. By submitting a bug report, you agree that HaloDAO has the final decision on the amount to be rewarded.\n\nPayouts are handled by the __HaloDAO__ team directly and are denominated in USD. Payouts are only done in __RNBW__. ",
            "assets_body": "For additional reference, the HaloDAO GitHub can be found at [https://github.com/HaloDAO/](https://github.com/HaloDAO/). However, only the assets listed as in-scope in this table are considered covered under the bug bounty program. \n\nAmmRewards.sol () can be found as halo-rewards-v1/AmmRewards.sol at master · HaloDAO/halo-rewards-v1 and rHalohalo.sol() can be found as halo-rewards-v1/Halohalo.sol at master HaloDAO/halo-rewards-v1. \n\nOnly bugs that directly affect the web/app items listed in the Assets in Scope table are considered as in-scope of the bug bounty program. All others are out-of-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Freezing of contract’s holdings\n  - Theft of yield\n  - Token holders temporarily unable to transfer holdings\n  - Transient consensus failures\n  - Smart contract drainage\n  - Smart contract failed to return promised returns\n  - Contract consumers unbounded gas\n  - Block stuffing\n  - Gas griefing \n  - Gas griefing\n  - Griefing denial of service\n  - Cryptographic flaws\n\n__Web/App__\n\n  - Site goes down\n  - Users spoofing other users\n  - UI level bugs\n  - Math formula discrepancies",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Reports about outdated dependencies\n  - Reports about vulnerabilities in dependencies, when those vulnerabilities do not impact Solido’s use of the dependency\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n- Testing on [Mainnet HaloDAO](http://app.halodao.com/) is not allowed, all testing should be done on private testnets only.\n- Test must not violate any law or compromise any data that doesn’t belong to users. \n- Public disclosure of a bug, exploit, or vulnerability is strictly prohibited.\n- Using vulnerability testing tools that generate significant volumes of traffic, may disqualify you from getting a reward.\n- Social engineering, phishing, or physical attacks against HaloDAO employees, users, or the network infrastructure is not allowed.\n- Submission of issues will follow a first-come-first-serve basis. Duplicate issues are not eligible for a reward.\n- Determinations of eligibility and all terms related to an award are at the final discretion of the HaloDAO team.\n- Please read our [Disclosure Policy](https://immunefi.com/rules/). Submissions that do not adhere to the disclosure policy will not be eligible for a reward.\n"
          }
        },
        {
          "id": "alethea",
          "project": "Alethea",
          "date": "2021-09-15T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1sEcgyBszbyIKBgTgzUdPM/89c54fa6e8ebb9904b50a89596f7cbb9/alethea_new_logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $50,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://rinkeby.etherscan.io/address/0x3fd6B290332dba6ea4e5d8570349C4729b918E57#code",
              "type": "Smart Contract - AliERC20v2"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x5266B704946baA53EF62b30aA0eBC16Ee02Aa58C#code",
              "type": "Smart Contract - AiPersonalityERC721"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x4A01117d74c03a1beE48B2cfbf60e98D49Bda98a#code",
              "type": "Smart Contract - AletheaNFT"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x719B98B1a33cF0F0526433397fa95bbB4908Bf3e#code",
              "type": "Smart Contract - IntelligentNFTv2"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x1a0922C26BD9015f3fc715900E5F0Eb8CeFcAB0B#code",
              "type": "Smart Contract - IntelliLinker"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0xaD51D042543f404904C7284d95334f76C1a4F5f4#code",
              "type": "Smart Contract - FixedSupplySale"
            }
          ],
          "mdx": {
            "program_overview": "Alethea AI is a protocol to create intelligent and interactive NFTs powered by Open AI’s GPT-3 engine. We embed cutting edge AI animation, interaction and generative AI capabilities into NFTs. Through our award-winning AI Avatar studio, we enable the creation, monetization and ownership of Intelligent NFTs resulting in a thriving and diverse metaverse.\n\nAs creators of the First ever iNFT, Alethea partnered with the leading auction house Sotheby’s to create and auction the first interactive and intelligent NFT (iNFT), Alice. \n\nUsers can create a unique, intelligent, GPT-3 powered and interactive version of their digital asset.\n\nFor more information about Alethea, please visit [https://alethea.ai/](https://alethea.ai/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Loss of funds, nonoptimal gas usage\n  - Frozen/malfunctioning contract state\n  - Unexpected behavior (not as designed, documented, including undocumented, poorly documented, counterintuitive behaviour)",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the[ Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA suggestion for a fix is required for all bug reports.\n\nVulnerabilities indicating that any assets (including ERC20, ERC721, ERC1155, but not limited) accidentally sent to any of the deployed contracts may get lost are not in-scope of the bug bounty program.\n\nPayouts are handled by the __Alethea__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "The Alethea GitHub is currently private. As such, PoCs are not required for any of its severity levels.\n\nOnce Alethea’s code is published on mainnet, the contracts reflected here will be modified to their mainnet contracts. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of funds\n  - Nonoptimal gas usage\n  - Frozen/malfunctioning contract state\n  - Unexpected behavior (not as designed, documented, including undocumented, poorly documented, contr-intuitive behaviour)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n  - Sandwich attacks\n  - Frontrunning attacks",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "rocketpool",
          "project": "Rocket Pool",
          "date": "2021-09-08T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3q1XTgKfkqJW9nCVPRp7r5/8afa695989d14412d92dc2e26d4c1a47/Rocket_Pool__1_.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/Migrations.sol",
              "type": "Smart Contract - Migrations.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/auction/RocketAuctionManager.sol",
              "type": "Smart Contract - RocketAuctionManager.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/RocketDAOProposal.sol",
              "type": "Smart Contract - RocketDAOProposal.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/RocketDAONodeTrusted.sol",
              "type": "Smart Contract - RocketDAONodeTrusted.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/RocketDAONodeTrustedActions.sol",
              "type": "Smart Contract - RocketDAONodeTrustedActions.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/RocketDAONodeTrustedProposals.sol",
              "type": "Smart Contract - RocketDAONodeTrustedProposals.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/RocketDAONodeTrustedUpgrade.sol",
              "type": "Smart Contract - RocketDAONodeTrustedUpgrade.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettings.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettings.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsMembers.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettingsMembers.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/node/settings/RocketDAONodeTrustedSettingsProposals.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettingsProposals.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/RocketDAOProtocol.sol",
              "type": "Smart Contract - RocketDAOProtocol.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/RocketDAOProtocolActions.sol",
              "type": "Smart Contract - RocketDAOProtocolActions.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/RocketDAOProtocolProposals.sol",
              "type": "Smart Contract - RocketDAOProtocolProposals.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettings.sol",
              "type": "Smart Contract - RocketDAOProtocolSettings.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsAuction.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsAuction.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsDeposit.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsDeposit.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsInflation.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsInflation.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsMinipool.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsMinipool.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNetwork.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsNetwork.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsNode.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsNode.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/dao/protocol/settings/RocketDAOProtocolSettingsRewards.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsRewards.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/deposit/RocketDepositPool.sol",
              "type": "Smart Contract - RocketDepositPool.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipool.sol",
              "type": "Smart Contract - RocketMinipool.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolDelegate.sol",
              "type": "Smart Contract - RocketMinipoolDelegate.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolManager.sol",
              "type": "Smart Contract - RocketMinipoolManager.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolPenalty.sol",
              "type": "Smart Contract - RocketMinipoolPenalty.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolQueue.sol",
              "type": "Smart Contract - RocketMinipoolQueue.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolStatus.sol",
              "type": "Smart Contract - RocketMinipoolStatus.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/minipool/RocketMinipoolStorageLayout.sol",
              "type": "Smart Contract - RocketMinipoolStorageLayout.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/network/RocketNetworkBalances.sol",
              "type": "Smart Contract - RocketNetworkBalances.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/network/RocketNetworkFees.sol",
              "type": "Smart Contract - RocketNetworkFees.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/network/RocketNetworkPrices.sol",
              "type": "Smart Contract - RocketNetworkPrices.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/node/RocketNodeDeposit.sol",
              "type": "Smart Contract - RocketNodeDeposit.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/node/RocketNodeManager.sol",
              "type": "Smart Contract - RocketNodeManager.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/node/RocketNodeStaking.sol",
              "type": "Smart Contract - RocketNodeStaking.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/rewards/RocketRewardsPool.sol",
              "type": "Smart Contract - RocketRewardsPool.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/rewards/claims/RocketClaimDAO.sol",
              "type": "Smart Contract - RocketClaimDAO.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/rewards/claims/RocketClaimNode.sol",
              "type": "Smart Contract - RocketClaimNode.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/rewards/claims/RocketClaimTrustedNode.sol",
              "type": "Smart Contract - RocketClaimTrustedNode.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/token/RocketTokenRETH.sol",
              "type": "Smart Contract - RocketTokenRETH.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/token/RocketTokenRPL.sol",
              "type": "Smart Contract - RocketTokenRPL.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/util/AddressQueueStorage.sol",
              "type": "Smart Contract - AddressQueueStorage.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/util/AddressSetStorage.sol",
              "type": "Smart Contract - AddressSetStorage.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/auction/RocketAuctionManagerInterface.sol",
              "type": "Smart Contract - RocketAuctionManagerInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/casper/DepositInterface.sol",
              "type": "Smart Contract - DepositInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/RocketDAOProposalInterface.sol",
              "type": "Smart Contract - RocketDAOProposalInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/RocketDAONodeTrustedActionsInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedActionsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/RocketDAONodeTrustedInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/RocketDAONodeTrustedProposalsInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedProposalsInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/RocketDAONodeTrustedUpgradeInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedUpgradeInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettingsInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsMembersInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettingsMembersInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/node/settings/RocketDAONodeTrustedSettingsProposalsInterface.sol",
              "type": "Smart Contract - RocketDAONodeTrustedSettingsProposalsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/RocketDAOProtocolActionsInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolActionsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/RocketDAOProtocolInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/RocketDAOProtocolProposalsInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolProposalsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsAuctionInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsAuctionInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsDepositInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsDepositInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInflationInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsInflationInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsMinipoolInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsMinipoolInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNetworkInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsNetworkInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsNodeInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsNodeInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/dao/protocol/settings/RocketDAOProtocolSettingsRewardsInterface.sol",
              "type": "Smart Contract - RocketDAOProtocolSettingsRewardsInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/deposit/RocketDepositPoolInterface.sol",
              "type": "Smart Contract - RocketDepositPoolInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolFactoryInterface.sol",
              "type": "Smart Contract - RocketMinipoolFactoryInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolInterface.sol",
              "type": "Smart Contract - RocketMinipoolInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolManagerInterface.sol",
              "type": "Smart Contract - RocketMinipoolManagerInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolPenaltyInterface.sol",
              "type": "Smart Contract - RocketMinipoolPenaltyInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolQueueInterface.sol",
              "type": "Smart Contract - RocketMinipoolQueueInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/minipool/RocketMinipoolStatusInterface.sol",
              "type": "Smart Contract - RocketMinipoolStatusInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/network/RocketNetworkBalancesInterface.sol",
              "type": "Smart Contract - RocketNetworkBalancesInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/network/RocketNetworkFeesInterface.sol",
              "type": "Smart Contract - RocketNetworkFeesInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/network/RocketNetworkPricesInterface.sol",
              "type": "Smart Contract - RocketNetworkPricesInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/node/RocketNodeDepositInterface.sol",
              "type": "Smart Contract - RocketNodeDepositInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/node/RocketNodeManagerInterface.sol",
              "type": "Smart Contract - RocketNodeManagerInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/node/RocketNodeStakingInterface.sol",
              "type": "Smart Contract - RocketNodeStakingInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/rewards/RocketRewardsPoolInterface.sol",
              "type": "Smart Contract - RocketRewardsPoolInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/rewards/claims/RocketClaimDAOInterface.sol",
              "type": "Smart Contract - RocketClaimDAOInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/rewards/claims/RocketClaimNodeInterface.sol",
              "type": "Smart Contract - RocketClaimNodeInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/rewards/claims/RocketClaimTrustedNodeInterface.sol",
              "type": "Smart Contract - RocketClaimTrustedNodeInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/token/RocketTokenRETHInterface.sol",
              "type": "Smart Contract - RocketTokenRETHInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/token/RocketTokenRPLInterface.sol",
              "type": "Smart Contract - RocketTokenRPLInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/util/AddressQueueStorageInterface.sol",
              "type": "Smart Contract - AddressQueueStorageInterface.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/interface/util/AddressSetStorageInterface.sol",
              "type": "Smart Contract - AddressSetStorageInterface.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/types/MinipoolDeposit.sol",
              "type": "Smart Contract - MinipoolDeposit.sol "
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/types/MinipoolStatus.sol",
              "type": "Smart Contract - MinipoolStatus.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/types/SettingType.sol",
              "type": "Smart Contract - SettingType.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/RocketBase.sol",
              "type": "Smart Contract - RocketBase.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/RocketStorage.sol",
              "type": "Smart Contract - RocketStorage.sol"
            },
            {
              "target": "https://github.com/rocket-pool/rocketpool/blob/master/contracts/contract/RocketVault.sol",
              "type": "Smart Contract - RocketVault.sol"
            }
          ],
          "mdx": {
            "program_overview": "Rocket Pool is a decentralised, non-custodial, and community owned staking protocol for Ethereum. Rocket Pool aligns the interests of two user groups; those that wish to participate in tokenised liquid staking; and those that wish to stake ETH and run a node.                                                                    \t \n  - Liquid staking - in exchange for staking ETH with Rocket Pool, users receive our liquid staking token, which is fully composable in the DeFi landscape, while accruing value from ETH rewards generated in Ethereum's Beacon Chain.\n\n  - Node operators - running a node with Rocket Pool only requires 16 ETH per validator vs 32 ETH outside the protocol. Node operators earn greater returns in Rocket Pool than solo satking; they earn rewards on their own ETH, a commission on the protocol's ETH, and RPL rewards.\n\nFor more information about Rocket Pool, please visit [https://www.rocketpool.net/](https://www.rocketpool.net/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Theft/loss of user funds\n  - Exploits leading to the protocol not honouring its commitment to liquid staking token holders and node operators",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be accepted for a reward. \n\nPayouts are handled by the __Rocket Pool__ team directly and are denominated in USD. However, payouts are done in __RPL__.",
            "assets_body": "Once Rocket Pool goes on mainnet, the mainnet contract addresses will be added to the bug bounty program. \n\nThe Rocket Pool explainer series provides information about how Rocket Pool works; purpose, general concepts, actors, and interactions:\n\n__Part 1 - Overview and users of the protocol__\n[https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-1-8be4859e5fbd)\n\n__Part 2 - The Protocol and Oracle Node DAO's__\n[https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-2-e0d346911fe1)\n\n __Part 3 - RPL & Tokenomics__\n[ https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c](https://medium.com/rocket-pool/rocket-pool-staking-protocol-part-3-3029afb57d4c)\n\nRocket Pool also has quick-start guides for:\n\n__Stakers__ [(https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749)](https://medium.com/rocket-pool/rocket-pool-stakers-guide-2c5c324b1749) \n\n__Node Operators__ [(https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d)](https://medium.com/rocket-pool/rocket-pool-node-quickstart-guide-d40bc3d0de6d) \n\nComprehensive documentation can be found here: [https://docs.rocketpool.net/guides/](https://docs.rocketpool.net/guides/) \n\nFor additional reference, please view their GitHub here - [https://github.com/rocket-pool/rocketpool/tree/master.](https://github.com/rocket-pool/rocketpool/tree/master) \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss/theft of user funds in any form\n  - Unauthorised modification of state (including network settings and contract upgrades)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Attacks requiring access to privileged actors (guardian, ODAO members)\n  - Mentions of secrets in Github, will be considered out of scope without proof that they are in-use in production\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "popsicle",
          "project": "Popsicle",
          "date": "2021-08-20T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2uaiuBlUHSOyHVrNn2Lirb/3748ee8aa473d05c405d666f8f4a3e49/Popsicle.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/OptimizerStrategy.sol",
              "type": "Smart Contract - OptimizerStrategy.solhttps://github.com/vt-btf/Optimizer/blob/main/OptimizerStrategy.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/OptimizerStrategy_flat.sol",
              "type": "Smart Contract - OptimizerStrategy_flat.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/PopsicleV3Optimizer.sol",
              "type": "Smart Contract - PopsicleV3Optimizer.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/PopsicleV3Optimizer_flat.sol",
              "type": "Smart Contract - PopsicleV3Optimizer_flat.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/base/EIP712.sol",
              "type": "Smart Contract - EIP712.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/base/ERC20Permit.sol",
              "type": "Smart Contract - ERC20Permit.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IOptimizerStrategy.sol",
              "type": "Smart Contract - IOptimizerStrategy.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IPopsicleV3Optimizer.sol",
              "type": "Smart Contract - IPopsicleV3Optimizer.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/IUniswapV3Pool.sol",
              "type": "Smart Contract - IUniswapV3Pool.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/external/IWETH9.sol",
              "type": "Smart Contract - IWETH9.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolActions.sol",
              "type": "Smart Contract - IUniswapV3PoolActions.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolDerivedState.sol",
              "type": "Smart Contract - IUniswapV3PoolDerivedState.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolImmutables.sol",
              "type": "Smart Contract - IUniswapV3PoolImmutables.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/interfaces/pool/IUniswapV3PoolState.sol",
              "type": "Smart Contract - IUniswapV3PoolState.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/Babylonian.sol",
              "type": "Smart Contract - Babylonian.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/ChainId.sol",
              "type": "Smart Contract - ChainId.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/Counters.sol",
              "type": "Smart Contract - Counters.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/ECDSA.sol",
              "type": "Smart Contract - ECDSA.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FixedPoint128.sol",
              "type": "Smart Contract - FixedPoint128.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FixedPoint96.sol",
              "type": "Smart Contract - FixedPoint96.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/FullMath.sol",
              "type": "Smart Contract - FullMath.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/LiquidityAmounts.sol",
              "type": "Smart Contract - LiquidityAmounts.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/LowGasSafeMath.sol",
              "type": "Smart Contract - LowGasSafeMath.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PoolActions.sol",
              "type": "Smart Contract - PoolActions.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PoolVariables.sol",
              "type": "Smart Contract - PoolVariables.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/PositionKey.sol",
              "type": "Smart Contract - PositionKey.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/SafeCast.sol",
              "type": "Smart Contract - SafeCast.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/SqrtPriceMath.sol",
              "type": "Smart Contract - SqrtPriceMath.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/TickMath.sol",
              "type": "Smart Contract - TickMath.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/TransferHelper.sol",
              "type": "Smart Contract - TransferHelper.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/libraries/UnsafeMath.sol",
              "type": "Smart Contract - UnsafeMath.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/token/ERC20.sol",
              "type": "Smart Contract - ERC20.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/token/IERC20.sol",
              "type": "Smart Contract - IERC20.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/token/IERC20Permit.sol",
              "type": "Smart Contract - IERC20Permit.sol "
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/utils/Context.sol",
              "type": "Smart Contract - Context.sol"
            },
            {
              "target": "https://github.com/vt-btf/Optimizer/blob/main/utils/ReentrancyGuard.sol",
              "type": "Smart Contract - ReentrancyGuard.sol"
            }
          ],
          "mdx": {
            "program_overview": "Popsicle Finance will manage liquidity across multiple chains in order to increase capital efficiency and automatically provide its users with the highest possible yield on the assets they wish to deploy to liquidity pools. Popsicle Finance believes that we, as the blockchain (crypto) space, should be working together rather than individually on separate chains.\n\nFor more information about Popsicle Finance, please visit [https://popsicle.finance/](https://popsicle.finance/).\n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to qualify for a reward, the following must be provided for all bug reports: \n\n  - Proof of Concept (PoC)\n  - Suggestion for a fix\n\nHigh Smart Contract vulnerabilities will be rewarded based on the impact the bug could have.\n\nPayouts are handled by the __Popsicle Finance__ team directly and are denominated in USD. However, payouts are done in __USDT__, __ETH__, or __BTC__.",
            "assets_body": "The smart contracts in this table are not deployed smart contracts as the project is currently paused. Once the project is re-deployed, this table will be updated with live smart contract addresses.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "benqi",
          "project": "BENQi",
          "date": "2021-08-19T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2u1oDQZb8NbBe1tP9kGoTT/d63ee09cd01632d07229c7c582b01d90/BENQi__1_.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cchain.explorer.avax.network/address/0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5",
              "type": "Smart Contract - Qi"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x486Af39519B4Dc9a7fCcd318217352830E8AD9b4",
              "type": "Smart Contract - Unitroller"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xD38A19100530b99c3b84CCA971DfD96BD557AA91",
              "type": "Smart Contract - Comptroller"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xF805e22C81EF330967EEC52f7eDb0C6B31Fd5cCf ",
              "type": "Smart Contract - WhitePaperInterestRateModel"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x76145e99d3F4165A313E8219141ae0D26900B710",
              "type": "Smart Contract - QiErc20Delegate"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x316aE55EC59e0bEb2121C0e41d4BDef8bF66b32B",
              "type": "Smart Contract - BenqiChainlinkPriceOracle"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x5C0401e81Bc07Ca70fAD469b451682c0d747Ef1c",
              "type": "Smart Contract - QiAVAX"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xe194c4c5aC32a3C9ffDb358d9Bfd523a0B6d1568 ",
              "type": "Smart Contract - QiBTC(QiErc20Delegator)"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x334AD834Cd4481BB02d09615E7c11a00579A7909",
              "type": "Smart Contract - QiETH(QiErc20Delegator)"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xc9e5999b8e75C3fEB117F6f73E664b9f3C8ca65C",
              "type": "Smart Contract - QiUSDT(QiErc20Delegator)"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x4e9f683A27a6BdAD3FC2764003759277e93696e6 ",
              "type": "Smart Contract - QiLINK(QiErc20Delegator)"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x835866d37AFB8CB8F8334dCCdaf66cf01832Ff5D",
              "type": "Smart Contract - QiDAI(QiErc20Delegator)"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xd78DEd803b28A5A9C860c2cc7A4d84F611aA4Ef8 ",
              "type": "Smart Contract - Maximillion"
            },
            {
              "target": "https://benqi.fi/",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "BENQI is a decentralized non-custodial liquidity market protocol, built on Avalanche. The protocol enables users to effortlessly lend, borrow, and earn interest with their digital assets. Depositors providing liquidity to the protocol may earn passive income, while borrowers are able to borrow in an over-collateralized manner.\n\nBENQI aims to alleviate common DeFi problems by providing a Liquidity Market Protocol on a highly scalable and decentralized platform. With a focus on approachability, ease of use, and low fees, BENQI will democratize access to decentralized financial products by providing permissionless lending and borrowing where users can:\n\n  - Instantly supply to and withdraw liquidity from a shared liquidity market\n  - Instantly borrow from a liquidity market using their supplied assets as collateral\n\nHave a live and transparent view of interest rates around the clock based on the asset's market supply and demand\nFor more information about SharedStake, please visit [https://docs.benqi.fi/](https://docs.benqi.fi/). \n\nThe bug bounty program is focused around its smart contracts and the prevention of loss of user funds, denial of service, DNS hijack attacks, and social media administrative control breaches. \n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount for critical smart contract and blockchain vulnerabilities is capped at 10% of the economic damage funds at risk based on the vulnerability reported with a payout floor of __USD 50 000__.\n\nAll web and app bug reports must come with a Proof of Concept (PoC) showing impact. Reports without a PoC will be automatically rejected.\n\nPayouts are handled by the __BENQi__ team directly and are denominated in USD. Payouts are done in __USDC__ or __USDT__ for Low, Medium, and High level bug reports. For payouts __USD 50 000__ and above, up to 80% of the payout may be done in __$Qi__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors that could lead to a bricking of the contract\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - Direct object reference\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must include PoC to be considered)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n__All Programs__\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Website and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Requests for new features\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "polynetwork",
          "project": "Poly Network",
          "date": "2021-08-17T12:00+08:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4DXabxY8HdpWW3ashFCpy9/e5222efe11dca19d5e2bb172b1b97bbf/Polynetwork-logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/Migrations.sol",
              "type": "Smart Contract - Migrations.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/btc/BTCX.sol",
              "type": "Smart Contract - BTCX.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/erc20_template/ERC20Template.sol",
              "type": "Smart Contract - ERC20Template.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/neo/eNEO.sol",
              "type": "Smart Contract - eNEO.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/oep4_template/OEP4Template.sol",
              "type": "Smart Contract - OEP4Template.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/ong/ONGX.sol",
              "type": "Smart Contract - ONGX.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/ont/xONT.sol",
              "type": "Smart Contract - xONT.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/assets/usdt/USDT.sol",
              "type": "Smart Contract - USDT.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/data/EthCrossChainData.sol",
              "type": "Smart Contract - EthCrossChainData.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/interface/IEthCrossChainData.sol",
              "type": "Smart Contract - IEthCrossChainData.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/interface/IEthCrossChainManager.sol",
              "type": "Smart Contract - IEthCrossChainManager.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/interface/IEthCrossChainManagerProxy.sol",
              "type": "Smart Contract - IEthCrossChainManagerProxy.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/interface/IUpgradableECCM.sol",
              "type": "Smart Contract - IUpgradableECCM.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/libs/EthCrossChainUtils.sol",
              "type": "Smart Contract - EthCrossChainUtils.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/logic/EthCrossChainManager.sol",
              "type": "Smart Contract - EthCrossChainManager.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/logic/EthCrossChainManager_new_template.sol",
              "type": "Smart Contract - EthCrossChainManager_new_template.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/upgrade/EthCrossChainManagerProxy.sol",
              "type": "Smart Contract - EthCrossChainManagerProxy.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/cross_chain_manager/upgrade/UpgradableECCM.sol",
              "type": "Smart Contract - UpgradableECCM.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/lock_proxy/LockProxy.sol",
              "type": "Smart Contract - LockProxy.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/core/lock_proxy/LockProxyPip1.sol",
              "type": "Smart Contract - LockProxyPip1.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/GSN/Context.sol",
              "type": "Smart Contract - Context.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/common/ZeroCopySink.sol",
              "type": "Smart Contract - ZeroCopySink.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/common/ZeroCopySource.sol",
              "type": "Smart Contract - ZeroCopySource.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/lifecycle/Pausable.sol",
              "type": "Smart Contract - Pausable.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/math/SafeMath.sol",
              "type": "Smart Contract - SafeMath.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/ownership/Ownable.sol",
              "type": "Smart Contract - Ownable.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/token/ERC20/ERC20.sol",
              "type": "Smart Contract - ERC20.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/token/ERC20/ERC20Detailed.sol",
              "type": "Smart Contract - ERC20Detailed.sol "
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/token/ERC20/ERC20Extended.sol",
              "type": "Smart Contract - ERC20Extended.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/token/ERC20/IERC20.sol",
              "type": "Smart Contract - IERC20.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/token/ERC20/SafeERC20.sol",
              "type": "Smart Contract - SafeERC20.sol"
            },
            {
              "target": "https://github.com/polynetwork/eth-contracts/blob/master/contracts/libs/utils/Utils.sol",
              "type": "Smart Contract - Utils.sol"
            }
          ],
          "mdx": {
            "program_overview": "Poly Network is built to implement interoperability between multiple chains in order to build the next generation internet infrastructure. Authorized homogeneous and heterogeneous public blockchains can connect to Poly Network through an open, transparent admission mechanism and communicate with other blockchains. Poly Network has already integrated Bitcoin, Ethereum, Neo, Ontology, Elrond, Ziliqa, Binance Smart Chain, Switcheo and Huobi ECO Chain. More institutions and organizations are welcome to join Poly Network and build the next generation internet with us.\n\nFor more information about Poly Network, please visit [https://poly.network/](https://poly.network/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward. \n\nPayouts are handled by the __Poly Network__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "Further information about the smart contracts in Poly Network can be found at [https://github.com/polynetwork/eth-contracts](https://github.com/polynetwork/eth-contracts). However, only those in the assets in scope table are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds by permanent freezing or direct theft",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Smart Contracts and Blockchain\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "coinflex",
          "project": "CoinFLEX",
          "date": "2021-08-03T04:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7KULU2vbU8ScJZiBdHx0sH/0e109651e7723ad82d7619c8e5308f59/CoinFLEX.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            },
            {
              "level": "medium",
              "payout": "USD $250"
            },
            {
              "level": "low",
              "payout": "USD $50"
            }
          ],
          "kyc": false,
          "verification_link": "https://github.com/coinflex-exchange/coinflex-bug-bounty-program/blob/main/bugbounty.md",
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xa774FFB4AF6B0A91331C084E1aebAE6Ad535e6F3#code",
              "type": "Smart Contract - flexUSD"
            },
            {
              "target": "https://etherscan.io/address/0x91e8a09636e93bb9f76316c613e508a383df583d#code",
              "type": "Smart Contract - FLEX"
            },
            {
              "target": "https://etherscan.io/address/0x135f60042bd5A75Ed6Fb3501f55Ce2E0f5E2f4ed#code",
              "type": "Smart Contract - flexUSD Pipeline"
            },
            {
              "target": "https://etherscan.io/address/0x0e5da7Dd2750a728df4EE8dD5f46E5A8fF431640",
              "type": "Smart Contract - flexUSD Pipeline token"
            },
            {
              "target": "https://v2stg.coinflex.com",
              "type": "Web/App"
            },
            {
              "target": "https://coinflex.com",
              "type": "Web/App"
            },
            {
              "target": "https://coinflex.com/amm",
              "type": "Web/App"
            },
            {
              "target": "https://coinflex.com/notes",
              "type": "Web/App"
            },
            {
              "target": "https://coinflex.com/user-console",
              "type": "Web/App"
            },
            {
              "target": "https://coinflex.com/markets",
              "type": "Web/App"
            },
            {
              "target": "https://play.google.com/store/apps/details?id=com.lxd.java_websocketclient",
              "type": "Web/App"
            },
            {
              "target": "https://apps.apple.com/us/app/coinflex/id1499932851",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Founded in 2019, CoinFLEX is the home of crypto yields. The platform offers innovative solutions such as flexUSD — the world’s first interest bearing stablecoin — and AMM+, the most capital–efficient automated market maker for today’s investors.\n\nCoinFLEX is backed by crypto heavyweights including Roger Ver, Mike Komaransky, Polychain Capital, and Digital Currency Group, amongst others. The exchange is dedicated to providing an easily accessible venue for users to earn and trade crypto with minimal friction.\n\nFor more information about CoinFLEX please visit [https://coinflex.com/](https://coinflex.com/). \n\nThe bug bounty program covers its smart contracts, website, and apps and is focused on the prevention of the negative impacts stated in the Impacts in Scope section.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion.\n\nIn order to be considered for a reward, all bug reports must include:\n\n  - URLs affected\n  - Description\n  - Impact\n  - Proof of concept (with screenshots or video if applicable)\n  - Mitigation/recommended fix\n\nPayouts are handled by the __CoinFLEX__ team directly and are denominated in USD. Payouts are done in __USDT__, __FLEX__, or __BTC__, at the discretion of the CoinFLEX team.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope. No other website page other than those specifically listed are in-scope of the bug bounty program.\n\nFor flexUSD, bug reports involving key compromise are out-of-scope of this bug bounty program.\n\nThe links to the apps are only provided as a guide to acquire the app. The Google and Apple websites are not in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of user funds via incorrect trades, swaps, or other contact operations \n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n  - Exposure of private keys or any other sensitive secrets\n\n__Web/App__\n\n  - Site going down / service unavailability \n  - Leak of user data\n  - Deletion or modification of user data\n  - Triggering incorrect balance updates\n  - Redirecting funds by address modification\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server\n\n__API/Websockets __\n\n  - Unauthorized access\n  - SQL Injection \n  - Chaining \n  - Incorrect methods allowed \n  - Unexpected behaviour leading to a bug \n  - Site going down / service unavailability \n  - Leak of user data \n  - Deletion or modification of user data \n  - Triggering incorrect balance updates \n  - Redirecting funds by address modification \n  - Accessing sensitive pages without authorization",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Cross Site Scripting (XSS)\n  - Cross-Site Request Forgery (CSRF)\n  - Brute force\n  - SQL Injection (SQLi)\n  - Insecure storage\n  - Insecure deserialization\n  - XML external entities (XXE)\n  - Authentication related issues\n  - Authorization related issues\n  - Data Exposure\n  - Redirection attacks\n  - Remote Code Execution\n  - Business Logic\n  - Particularly clever vulnerabilities or unique issues that do not fall into explicit categories\n  - Mobile-specific API vulnerabilities",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Cookie expiration\n  - Cookie migration/sharing\n  - Forgot password\n  - Autologin token reuse\n  - Same Site Scripting\n  - Social Engineering\n  - Phishing\n  - Resource Exhaustion attacks\n  - Denial of service attacks (DDoS)\n  - Issues related to rate limiting\n  - Services listening on port 80\n  - Static content over HTTP\n  - Internal IP address disclosure\n  - Issues related to cross-domain policies without evidence of an exploitable vulnerability\n  - Weak password policies\n  - Vulnerabilities impacting only old/end-of-life browsers/plugins including:\n  - Issues that have had a patch available from the vendor for at least 6 months\n  - Issues on software that is no longer maintained (announced as unsupported/end-of-life or no patches issued in at least 6 months)\n  - Vulnerabilities related to offline playback\n  - Vulnerabilities primarily caused by browser/plugin defects and not representative of defects in the security of CoinFLEX systems or software (e.g. UXSS)\n  - Reports relating to root certificates\n  - Vulnerability reports related to the reported version numbers of web servers, services, or frameworks\n  - Vulnerability reports relating to exposure of non critical files. E.G. robots.txt, sitemap.xml, .gitignore\n  - Vulnerability reports relating to sites or network devices not owned by CoinFLEX\n  - Vulnerability reports that require a large amount of user cooperation to perform, unlikely or unreasonable actions which would be more symptomatic of a social engineering or phishing attack and not an application vulnerability (e.g. disabling browser security features, sending the attacker critical information to complete the attack, guiding the user through a particular flow and requiring them to enter malicious code themselves, etc.)\n\nAll bug bounty hunters are required to adhere to the following rules:\n\n  - Do not access customer or employee personal information, pre-release CoinFLEX content, or confidential information. If you accidentally access any of these, please stop testing and submit the vulnerability.\n\n  - Stop testing and report the issue immediately if you gain access to any non-public application or non-public credentials.\n\n  - Do not degrade the CoinFLEX user experience, disrupt production systems, or destroy data during security testing.\n\n  - Perform research only within the scope and, for smart contracts, only on private testnets.\n\n  - Submit any necessary screenshots, screen captures, network requests, reproduction steps or similar.\n\n  - When investigating a vulnerability, please only target your own account and do not attempt to access data from anyone else’s account.\n\n  - Securely delete CoinFLEX information that may have been downloaded, cached, or otherwise stored on the systems used to perform the research."
          }
        },
        {
          "id": "dforce",
          "project": "dForce",
          "date": "2021-07-29T01:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jU4POGW5IUH9Ozzuj7SV/33abc1e464fd2ee2978fd8dabd8afa47/dforce_newest_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.dforce.network/",
              "type": "Web/Dapp"
            },
            {
              "target": "https://dforce.network/",
              "type": "Web/Dapp"
            },
            {
              "target": "https://bscscan.com/address/0x0800604DA276c1D5e9c2C7FEC0e3b43FAb1Ca61a",
              "type": "Smart Contract - Proxy Admin"
            },
            {
              "target": "https://bscscan.com/address/0x511b05f37e27a88E284322aF0bDE41A91771316d",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://bscscan.com/address/0x68d3ba6201a6BA098bfF4570ee501e27777518e7",
              "type": "Smart Contract - nonStableInterestModel"
            },
            {
              "target": "https://bscscan.com/address/0xfA7d42a1aCB2d8AbA554077db7B7dC1772058723",
              "type": "Smart Contract - stableInterestModel"
            },
            {
              "target": "https://bscscan.com/address/0x6f9e2fab144cc5a4f74b112b3037cedceb886bc4",
              "type": "Smart Contract - LendingDataImplementation"
            },
            {
              "target": "https://bscscan.com/address/0x4601d9c8def18c101496dec0a4864e8751295bee",
              "type": "Smart Contract - MSDController "
            },
            {
              "target": "https://bscscan.com/address/0x5b3b6ff84f6693ffc3797f4ec4b764dea1c33cfb",
              "type": "Smart Contract - MSDControllerImplementation"
            },
            {
              "target": "https://bscscan.com/address/0xd5AE613F554dd881036fF680D1e9f04B87CCde22",
              "type": "Smart Contract - RewardDistributorV3Implementation"
            },
            {
              "target": "https://bscscan.com/address/0x6fC21a5a767212E8d366B3325bAc2511bDeF0Ef4",
              "type": "Smart Contract - rewardDistributorProxy"
            },
            {
              "target": "https://bscscan.com/address/0x2B9B3F4D83eAD0EA412D354E3CCd8C9eA558ACD7",
              "type": "Smart Contract - LendingDataProxy"
            },
            {
              "target": "https://bscscan.com/address/0x0b53E608bD058Bb54748C35148484fD627E6dc0A",
              "type": "Smart Contract - Controller"
            },
            {
              "target": "https://bscscan.com/address/0xaE74D2Ad59dfdf5dF12f2Ea0fe506066dec8C855",
              "type": "Smart Contract - ControllerImplementation"
            },
            {
              "target": "https://bscscan.com/address/0x40380a73f673F39E56d4430D42Df54Ade0e50879",
              "type": "Smart Contract - iBNBImplementation"
            },
            {
              "target": "https://bscscan.com/address/0x904f4A6553FBDB9b33907B1B21fc9371bD5C5784",
              "type": "Smart Contract - iTokenImplementation"
            },
            {
              "target": "https://bscscan.com/address/0xd57E1425837567F74A35d07669B23Bfb67aA4A93",
              "type": "Smart Contract - iBNB"
            },
            {
              "target": "https://bscscan.com/address/0x0b66A250Dadf3237DdB38d485082a7BfE400356e",
              "type": "Smart Contract - iBTCB"
            },
            {
              "target": "https://bscscan.com/address/0x0BF8C72d618B5d46b055165e21d661400008fa0F",
              "type": "Smart Contract - iUSDT"
            },
            {
              "target": "https://bscscan.com/address/0xAF9c10b341f55465E8785F0F81DBB52a9Bfe005d",
              "type": "Smart Contract - iUSDC"
            },
            {
              "target": "https://bscscan.com/address/0xAD5Ec11426970c32dA48f58c92b1039bC50e5492",
              "type": "Smart Contract - iDAI"
            },
            {
              "target": "https://bscscan.com/address/0xFc5Bb1E8C29B100Ef8F12773f972477BCab68862",
              "type": "Smart Contract - iADA"
            },
            {
              "target": "https://bscscan.com/address/0x55012aD2f0A50195aEF44f403536DF2465009Ef7",
              "type": "Smart Contract - iATOM"
            },
            {
              "target": "https://bscscan.com/address/0x5511b64Ae77452C7130670C79298DEC978204a47",
              "type": "Smart Contract - iBUSD"
            },
            {
              "target": "https://bscscan.com/address/0xeC3FD540A2dEE6F479bE539D64da593a59e12D08",
              "type": "Smart Contract - iDF"
            },
            {
              "target": "https://bscscan.com/address/0x9ab060ba568B86848bF19577226184db6192725b",
              "type": "Smart Contract - iDOT "
            },
            {
              "target": "https://bscscan.com/address/0x390bf37355e9dF6Ea2e16eEd5686886Da6F47669",
              "type": "Smart Contract - iETH"
            },
            {
              "target": "https://bscscan.com/address/0xD739A569Ec254d6a20eCF029F024816bE58Fb810",
              "type": "Smart Contract - iFIL"
            },
            {
              "target": "https://bscscan.com/address/0xc35ACAeEdB814F42B2214378d8950F8555B2D670",
              "type": "Smart Contract - iGOLDx"
            },
            {
              "target": "https://bscscan.com/address/0x8F95AfDffA37a44872e6F23AF49795a5A6f524B0",
              "type": "Smart Contract - iGOLDxPriceAggregatorModel"
            },
            {
              "target": "https://bscscan.com/address/0xee9099C1318cf960651b3196747640EB84B8806b",
              "type": "Smart Contract - iUNI"
            },
            {
              "target": "https://bscscan.com/address/0x7B933e1c1F44bE9Fb111d87501bAADA7C8518aBe",
              "type": "Smart Contract - iUSX"
            },
            {
              "target": "https://bscscan.com/address/0x983A727Aa3491AB251780A13acb5e876D3f2B1d8",
              "type": "Smart Contract - iEUX"
            },
            {
              "target": "https://bscscan.com/address/0x219B850993Ade4F44E24E6cac403a9a40F1d3d2E",
              "type": "Smart Contract - ixBTC"
            },
            {
              "target": "https://bscscan.com/address/0xF649E651afE5F05ae5bA493fa34f44dFeadFE05d",
              "type": "Smart Contract - ixETH"
            },
            {
              "target": "https://bscscan.com/address/0xac2428d0fb0a8516fc30e6a0bc19b098be5f9dff",
              "type": "Smart Contract - TokenImplementation"
            },
            {
              "target": "https://bscscan.com/address/0xB5102CeE1528Ce2C760893034A4603663495fD72",
              "type": "Smart Contract - USX"
            },
            {
              "target": "https://bscscan.com/address/0x367c17D19fCd0f7746764455497D63c8e8b2BbA3",
              "type": "Smart Contract - EUX"
            },
            {
              "target": "https://bscscan.com/address/0x20Ecc92F0a33e16e8cf0417DFc3F586cf597F3a9",
              "type": "Smart Contract - xBTC"
            },
            {
              "target": "https://bscscan.com/address/0x463E3D1e01D048FDf872710F7f3745B5CDF50D0E",
              "type": "Smart Contract - xETH"
            },
            {
              "target": "https://bscscan.com/address/0xa34dA41edB2b15A20893d2208377E24D8dcdeB6e",
              "type": "Smart Contract - iMSDTokenImplementation"
            },
            {
              "target": "https://bscscan.com/address/0x36f4C36D1F6e8418Ecb2402F896B2A8fEDdE0991",
              "type": "Smart Contract - iMUSX "
            },
            {
              "target": "https://bscscan.com/address/0xb22eF996C0A2D262a19db2a66A256067f51511Eb",
              "type": "Smart Contract - iMEUX"
            },
            {
              "target": "https://bscscan.com/address/0x6E42423e1bcB6A093A58E203b5eB6E8A8023b4e5",
              "type": "Smart Contract - iMxBTC"
            },
            {
              "target": "https://bscscan.com/address/0x6AC0a0B3959C1e5fcBd09b59b09AbF7C53C72346",
              "type": "Smart Contract - iMxETH"
            },
            {
              "target": "https://bscscan.com/address/0xb6f29c4507A53A7Ab78d99C1698999dbCf33c800",
              "type": "Smart Contract - Controller"
            },
            {
              "target": "https://bscscan.com/address/0xD77A7915E78CC453f891d51b69140bE06E25f51F",
              "type": "Smart Contract - ControllerImplementation"
            },
            {
              "target": "https://bscscan.com/address/0xa28F287630184d3b5EeE31a5FE8dB0A63c4A6e2f",
              "type": "Smart Contract - rewardDistributor"
            },
            {
              "target": "https://bscscan.com/address/0xfABc3D9dAFb8a51b9C70db4ed530E4f17014dcA5",
              "type": "Smart Contract - LendingData "
            },
            {
              "target": "https://bscscan.com/address/0xB0fc114d747B6A00147eeB6D44e988E61124C9f3",
              "type": "Smart Contract - iMSDTokenImplementation "
            },
            {
              "target": "https://bscscan.com/address/0x911F90e98D5c5C3a3B0c6c37Bf6ea46D15eA6466",
              "type": "Smart Contract - iUSX"
            },
            {
              "target": "https://bscscan.com/address/0x8Af4f25019E00c64B5c9d4A49D71464d411c2199",
              "type": "Smart Contract - iEUX"
            },
            {
              "target": "https://bscscan.com/address/0xf21259B517D307F0dF8Ff3D3F53cF1674EBeAFe8",
              "type": "Smart Contract - xTSLA"
            },
            {
              "target": "https://bscscan.com/address/0x45055315dfCCBC91aC7107300FAAd7Abb234E7b7",
              "type": "Smart Contract - iMxTSLA"
            },
            {
              "target": "https://bscscan.com/address/0x70D1d7cDeC24b16942669A5fFEaDA8527B744502",
              "type": "Smart Contract - xAPPL"
            },
            {
              "target": "https://bscscan.com/address/0x8633cEb128F46a6a8d5b9EceA5161e84127D3c0a",
              "type": "Smart Contract - iMxAPPL"
            },
            {
              "target": "https://bscscan.com/address/0x0326dA9E3fA36F946CFDC87e59D24B45cbe4aaD0",
              "type": "Smart Contract - xAMZN"
            },
            {
              "target": "https://bscscan.com/address/0x500F397FcEe86eBEE89592b38005ab331De94AfF",
              "type": "Smart Contract - iMxAMZN "
            },
            {
              "target": "https://bscscan.com/address/0x3D9a9ED8A28A64827A684cEE3aa499da1824BF6c",
              "type": "Smart Contract - xCOIN "
            },
            {
              "target": "https://bscscan.com/address/0x82279995B210d63fba31790c5C64E3FF5e37d1E0",
              "type": "Smart Contract - iMxCOIN "
            },
            {
              "target": "https://etherscan.io/address/0x5dCDafD2C16B9Ea8991af7Bf4ea0210804F95338",
              "type": "Smart Contract - msdcontroller"
            },
            {
              "target": "https://etherscan.io/address/0x45677a101D70E9910C418D9426bC6c5874CE2Fd7",
              "type": "Smart Contract - msdcontrollerimplementation"
            },
            {
              "target": "https://etherscan.io/address/0x22961D0Ba5150f97AE0F3248b4c415875cBf42d5",
              "type": "Smart Contract - fixedinterestmodel"
            },
            {
              "target": "https://etherscan.io/address/0x4B30C26D61Be2f76bC7d9f2c5EdbaCBa84982358",
              "type": "Smart Contract - LendingDataV2implementation "
            },
            {
              "target": "https://etherscan.io/address/0x34BAf46eA5081e3E49c29fccd8671ccc51e61E79",
              "type": "Smart Contract - PriceOracle"
            },
            {
              "target": "https://etherscan.io/address/0xBB247f5Ac912196A5AA80E9DD6aB252B79D6Ea25",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://etherscan.io/address/0xF48AE39A4b37212D5204541D0fd07B537eC18035",
              "type": "Smart Contract - RewardDistributorV3implementation"
            },
            {
              "target": "https://etherscan.io/address/0x4FF0455bcfBB5886607c078E0F43Efb5DE34DeF4",
              "type": "Smart Contract - Proxy_Admin"
            },
            {
              "target": "https://etherscan.io/address/0x8fAeF85e436a8dd85D8E636Ea22E3b90f1819564",
              "type": "Smart Contract - rewardDistributor"
            },
            {
              "target": "https://etherscan.io/address/0x5128b20d0AA9f7a173666815e402C688e7ccA57B",
              "type": "Smart Contract - rewardDistributorimplementation"
            },
            {
              "target": "https://etherscan.io/address/0xca7e16B3c1736f1f65a659fB010e3669a872322d",
              "type": "Smart Contract - iETHimplementation"
            },
            {
              "target": "https://etherscan.io/address/0x1180c114f7fAdCB6957670432a3Cf8Ef08Ab5354",
              "type": "Smart Contract - iTokenImplementation "
            },
            {
              "target": "https://etherscan.io/address/0x9C0C737d9823a64D37BFA1b62f9f0358993fe693",
              "type": "Smart Contract - nonStableInterestModel"
            },
            {
              "target": "https://etherscan.io/address/0x03DDF6cF4B937a008c2f1b5393D6bdaC16dD5B08",
              "type": "Smart Contract - stableInterestModel"
            },
            {
              "target": "https://etherscan.io/address/0x34BAf46eA5081e3E49c29fccd8671ccc51e61E79",
              "type": "Smart Contract - PriceOracle"
            },
            {
              "target": "https://etherscan.io/address/0x37600A5a555F61ec2012D94b32f9B8c8eb2EfC5e",
              "type": "Smart Contract - LendingDataV2"
            },
            {
              "target": "https://etherscan.io/address/0x8B53Ab2c0Df3230EA327017C91Eb909f815Ad113",
              "type": "Smart Contract - Controller "
            },
            {
              "target": "https://etherscan.io/address/0x7b03EF4fFbdfC622B7Bf55e1C1Fd64CfCFBe80BB",
              "type": "Smart Contract - Controllerimplementation "
            },
            {
              "target": "https://etherscan.io/address/0x1180c114f7fAdCB6957670432a3Cf8Ef08Ab5354",
              "type": "Smart Contract - iUSDT"
            },
            {
              "target": "https://etherscan.io/address/0x2f956b2f801c6dad74E87E7f45c94f6283BF0f45",
              "type": "Smart Contract - iUSDC"
            },
            {
              "target": "https://etherscan.io/address/0x5ACD75f21659a59fFaB9AEBAf350351a8bfaAbc0",
              "type": "Smart Contract - iETH"
            },
            {
              "target": "https://etherscan.io/address/0x5812fCF91adc502a765E5707eBB3F36a07f63c02",
              "type": "Smart Contract - iWBTC"
            },
            {
              "target": "https://etherscan.io/address/0x298f243aD592b6027d4717fBe9DeCda668E3c3A8",
              "type": "Smart Contract - iDAI"
            },
            {
              "target": "https://etherscan.io/address/0xb3dc7425e63E1855Eb41107134D471DD34d7b239",
              "type": "Smart Contract - iDF"
            },
            {
              "target": "https://etherscan.io/address/0x164315EA59169D46359baa4BcC6479bB421764b6",
              "type": "Smart Contract - iGOLDx"
            },
            {
              "target": "https://etherscan.io/address/0x8C5022C57dE46252CE1a49644c5ADf5C866e3E8D",
              "type": "Smart Contract - iGOLDxExchangeRateModel"
            },
            {
              "target": "https://etherscan.io/address/0x24677e213DeC0Ea53a430404cF4A11a6dc889FCe",
              "type": "Smart Contract - iBUSD"
            },
            {
              "target": "https://etherscan.io/address/0x47566acD7af49D2a192132314826ed3c3c5f3698",
              "type": "Smart Contract - iHBTC"
            },
            {
              "target": "https://etherscan.io/address/0xbeC9A824D6dA8d0F923FD9fbec4FAA949d396320",
              "type": "Smart Contract - iUNI"
            },
            {
              "target": "https://etherscan.io/address/0x1AdC34Af68e970a93062b67344269fD341979eb0",
              "type": "Smart Contract - iUSX"
            },
            {
              "target": "https://etherscan.io/address/0x44c324970e5CbC5D4C3F3B7604CbC6640C2dcFbF",
              "type": "Smart Contract - iEUX"
            },
            {
              "target": "https://etherscan.io/address/0x4013e6754634ca99aF31b5717Fa803714fA07B35",
              "type": "Smart Contract - ixBTC"
            },
            {
              "target": "https://etherscan.io/address/0x237C69E082A94d37EBdc92a84b58455872e425d6",
              "type": "Smart Contract - ixETH "
            },
            {
              "target": "https://etherscan.io/address/0xE3ec7De9375bFc22F4481C4605431d67ED5Bd260",
              "type": "Smart Contract - MSDTokenImplementation"
            },
            {
              "target": "https://etherscan.io/address/0x8F70B274847418618D66e651437d5Fb24d0F605b",
              "type": "Smart Contract - iMSDTokenImplementation"
            },
            {
              "target": "https://etherscan.io/address/0x0a5E677a6A24b2F1A2Bf4F3bFfC443231d2fDEc8",
              "type": "Smart Contract - USX"
            },
            {
              "target": "https://etherscan.io/address/0xb986F3a2d91d3704Dc974A24FB735dCc5E3C1E70",
              "type": "Smart Contract - EUX"
            },
            {
              "target": "https://etherscan.io/address/0x527Ec46Ac094B399265d1D71Eff7b31700aA655D",
              "type": "Smart Contract - xBTC"
            },
            {
              "target": "https://etherscan.io/address/0x8d2Cb35893C01fa8B564c84Bd540c5109d9D278e",
              "type": "Smart Contract - xETH"
            },
            {
              "target": "https://etherscan.io/address/0xd1254d280e7504836e1B0E36535eBFf248483cEE",
              "type": "Smart Contract - iMUSX"
            },
            {
              "target": "https://etherscan.io/address/0x591595Bfae3f5d51A820ECd20A1e3FBb6638f34B",
              "type": "Smart Contract - iMEUX"
            },
            {
              "target": "https://etherscan.io/address/0xfa2e831c674B61475C175B2206e81A5938B298Dd",
              "type": "Smart Contract - iMxBTC"
            },
            {
              "target": "https://etherscan.io/address/0x028DB7A9d133301bD49f27b5E41F83F56aB0FaA6",
              "type": "Smart Contract - iMxETH "
            },
            {
              "target": "https://etherscan.io/address/0x276E7EEAe8d8BF811F3C15B5640357D712D2CF7F",
              "type": "Smart Contract - ControllerV2implementation"
            },
            {
              "target": "https://etherscan.io/address/0x3bA6e5e5dF88b9A88B2c19449778A4754170EA17",
              "type": "Smart Contract - ControllerV2Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x52ed0A880EdA217052E1fae4333Ba1F4abfe2ac3",
              "type": "Smart Contract - LendingData"
            },
            {
              "target": "https://etherscan.io/address/0xcf4ad4da361671dc84be51a6c1131eaf84926e00",
              "type": "Smart Contract - Rewarddistributor "
            },
            {
              "target": "https://etherscan.io/address/0xe227d81da324136670e6203adf20306e48dc3112",
              "type": "Smart Contract - iTokenImplementation"
            },
            {
              "target": "https://etherscan.io/address/0xF54954BA7e3cdFDA23941753b48039aB5192AEa0ccccccvfgfiiht",
              "type": "Smart Contract - iUSX"
            },
            {
              "target": "https://etherscan.io/address/0xab9C8C81228aBd4687078EBDA5AE236789b08673",
              "type": "Smart Contract - iEUX "
            },
            {
              "target": "https://etherscan.io/address/0x8dc6987F7D8E5aE9c39F767A324C5e46C1f731eB",
              "type": "Smart Contract - xTSLA"
            },
            {
              "target": "https://etherscan.io/address/0xc4Ba45BeE9004408403b558a26099134282F2185",
              "type": "Smart Contract - xAAPL"
            },
            {
              "target": "https://etherscan.io/address/0x966E726853Ca97449F458A3B012318a08B508202",
              "type": "Smart Contract - xAMZN"
            },
            {
              "target": "https://etherscan.io/address/0x32F9063bC2A2A57bCBe26ef662Dc867d5e6446d1",
              "type": "Smart Contract - xCOIN"
            },
            {
              "target": "https://etherscan.io/address/0xa4C13398DAdB3a0A7305647b406ACdCD0689FCC5",
              "type": "Smart Contract - iMxTSLA"
            },
            {
              "target": "https://etherscan.io/address/0x3481E1a5A8014F9C7E03322e4d4532D8ec723409",
              "type": "Smart Contract - iMxAAPL"
            },
            {
              "target": "https://etherscan.io/address/0xaab2BAb88ceeDCF6788F45885155B278faD09110",
              "type": "Smart Contract - iMxAMZN"
            },
            {
              "target": "https://etherscan.io/address/0xb0ffBD1E81B60C4e8a8E19cEF3A6A92fe18Be86D",
              "type": "Smart Contract - iMxCOIN"
            },
            {
              "target": "https://bscscan.com/address/0x080C0e744B3Fad2b8C5Ae9EDE052b0223eb6d590",
              "type": "Smart Contract - LiquidityRewardDistributorImplementation"
            },
            {
              "target": "https://bscscan.com/address/0x959715da68DC2D1329F4bb34e13Da03FE10c374b",
              "type": "Smart Contract - LiquidityRewardDistributor"
            },
            {
              "target": "https://bscscan.com/address/0x366a6A947D7904248125E6425615AF13E7BD1879",
              "type": "Smart Contract - BUSD/USX "
            },
            {
              "target": "https://bscscan.com/address/0x9344420FF7E947aF5e19B9788A1C3a3D3BC7C8De",
              "type": "Smart Contract - USX/DF"
            },
            {
              "target": "https://bscscan.com/address/0x75243c503FF2cB375995381EE31950224A7579A1",
              "type": "Smart Contract - ETH/xETH"
            },
            {
              "target": "https://bscscan.com/address/0xc868498BD4d928374C315F57D1A7cb9F12704d4d",
              "type": "Smart Contract - BTCB/xBTC"
            },
            {
              "target": "https://bscscan.com/address/0xF7943D4488058980d7174B1F3Cf0b85beB189869",
              "type": "Smart Contract - EUX/USX"
            },
            {
              "target": "https://bscscan.com/address/0xBc0Aa02e6363709D84388fC9aAbedE84f2Af1Eff",
              "type": "Smart Contract - xTSLA/USX"
            },
            {
              "target": "https://bscscan.com/address/0x2A41dd2c004AA2Ee42c527c1c2318F41845da2e9",
              "type": "Smart Contract - xAMZN/USX "
            },
            {
              "target": "https://bscscan.com/address/0xabBc34F80257B4fcb58ab6eafF9B3b70406c8C57",
              "type": "Smart Contract - xAAPL/USX"
            },
            {
              "target": "https://bscscan.com/address/0x8Ee1932CA5618324E19545A0b8d3026B876e4188",
              "type": "Smart Contract - xCOIN/USX "
            },
            {
              "target": "https://etherscan.io/address/0x0683fEA4C419865Ff5040f27C5548cCD997A6278",
              "type": "Smart Contract -  LiquidityRewardDistributorImplementation"
            },
            {
              "target": "https://etherscan.io/address/0x1D22AFC7dc4Bf336532dd6248d453C647CecA1B3",
              "type": "Smart Contract - LiquidityRewardDistributor"
            },
            {
              "target": "https://etherscan.io/address/0xFe599129B3018eE3231334d02E0b869a19dB3F8b",
              "type": "Smart Contract - DF/ETH"
            }
          ],
          "mdx": {
            "program_overview": "dForce advocates for building an integrated and interoperable open finance protocol matrix covering  lending (global liquidity pool, yield markets), assets (stablecoin, synthetic asset, etc), and trading (liquidity aggregator, AMM).\n\nFeatures:\n  - Permission-less and open – everyone with internet access can participate.\n  - Non-custodial – minimal trust cost, users always have ownership over their crypoassets.\n  - Open-sourced – anyone can integrate with dForce and build your own product on top of our protocols.\n  - Decentralized – dForce (DF) token empowers the governance voting process.\n\ndForce is backed by a number of world-class investors including CMBI (China Merchant Bank International), Multicoin Capital, and Huobi Capital. It is the world’s first open finance project powered by a leading commercial bank.\n\nFurther resources regarding the dForce can be found on their website, [https://dforce.network/](https://dforce.network/). \n\nThe bug bounty program is focused around its smart contracts and infrastructure and is mostly concerned with issues stated in the Impacts in Scope section.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports must come with a PoC in order to be considered for a reward, bug reports without a PoC will be rejected.\n\nCritical vulnerabilities for smart contracts are further defined by the following conditions. All need to be met in order to get the classification of critical. \n\n  - Allow attacker(s) to take away collateral tokens for at least 10% in dollar value of collateral tokens from the system.\n  - Are applied to a real situation and triggered through an attack vector rather than theory or hypothesis. \n  - Occur in operation mode or emergency shutdown mode, excluding those occurring during or shortly after the deployment when the system is yet to become fully activated.\n\nPlease note this Bug Bounty Program does not cover vulnerabilities pertaining to 1) protocols built by third-party developers (i.e., smart contract wallet); 2) ownership of an admin key.\n\nThe reward of critical smart contract vulnerabilities is capped at 10% of economic damage, primarily taking into account the funds at risk. The dForce team may, at their discretion, decide to increase the reward based on PR and branding aspects.\n\nPayouts are handled by the __dForce__ team directly and are denominated in USD. However, payouts are done in __DF__.",
            "assets_body": "In addition to the smart contracts in this table, the following information has been provided for reference. However, only the smart contracts in the table will be considered as in-scope:\n\n  - dForce Lending & Synthetic Assets: https://github.com/dforce-network/LendingContractsV2\n  - Farming: [https://github.com/dforce-network/StakingV2](https://github.com/dforce-network/StakingV2)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bprotocol",
          "project": "BProtocol",
          "date": "2021-07-14T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/e3gtts1LOktqW1EYme2cA/8f4540dfc1fc33435393d7a97eb4d182/BProtocol__1_.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/BComptroller.sol",
              "type": "Smart Contract - BComptroller.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Import.sol",
              "type": "Smart Contract - Import.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Pool.sol",
              "type": "Smart Contract - Pool.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/Registry.sol",
              "type": "Smart Contract - Registry.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsAvatarBase.sol",
              "type": "Smart Contract - AbsAvatarBase.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsCToken.sol",
              "type": "Smart Contract - AbsCToken.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/AbsComptroller.sol",
              "type": "Smart Contract - AbsComptroller.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/avatar/Avatar.sol",
              "type": "Smart Contract - Avatar.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/AbsBToken.sol",
              "type": "Smart Contract - AbsBToken.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/BErc20.sol",
              "type": "Smart Contract - BErc20.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/btoken/BEther.sol",
              "type": "Smart Contract - BEther.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/connector/JarConnector.sol",
              "type": "Smart Contract - JarConnector.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/governance/GovernanceExecutor.sol",
              "type": "Smart Contract - GovernanceExecutor.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/governance/Migrate.sol",
              "type": "Smart Contract - Migrate.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/info/LiquidatorInfo.sol",
              "type": "Smart Contract - LiquidatorInfo.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/info/UserInfo.sol",
              "type": "Smart Contract - UserInfo.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/CTokenInterfaces.sol",
              "type": "Smart Contract - CTokenInterfaces.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IAvatar.sol",
              "type": "Smart Contract - IAvatar.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IBComptroller.sol",
              "type": "Smart Contract - IBComptroller.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IBToken.sol",
              "type": "Smart Contract - IBToken.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IComp.sol",
              "type": "Smart Contract - IComp.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IComptroller.sol",
              "type": "Smart Contract - IComptroller.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IRegistry.sol",
              "type": "Smart Contract - IRegistry.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IScore.sol",
              "type": "Smart Contract - IScore.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/interfaces/IUniswapAnchoredView.sol",
              "type": "Smart Contract - IUniswapAnchoredView.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/lib/CarefulMath.sol",
              "type": "Smart Contract - CarefulMath.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/lib/Exponential.sol",
              "type": "Smart Contract - Exponential.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/proxy/GnosisSafeProxy.sol",
              "type": "Smart Contract - GnosisSafeProxy.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/BScore.sol",
              "type": "Smart Contract - BScore.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/IBTokenScore.sol",
              "type": "Smart Contract - IBTokenScore.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/BCompound/blob/master/contracts/bprotocol/scoring/IScoreConfig.sol",
              "type": "Smart Contract - IScoreConfig.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpManager.sol",
              "type": "Smart Contract - BCdpManager.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpScore.sol",
              "type": "Smart Contract - BCdpScore.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/BCdpScoreConnector.sol",
              "type": "Smart Contract - BCdpScoreConnector.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/ChainLogConnector.sol",
              "type": "Smart Contract - ChainLogConnector.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/DssCdpManager.sol",
              "type": "Smart Contract - DssCdpManager.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/GetCdps.sol",
              "type": "Smart Contract - GetCdps.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/LiquidationMachine.sol",
              "type": "Smart Contract - LiquidationMachine.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/Math.sol",
              "type": "Smart Contract - Math.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/bud/BudConnector.sol",
              "type": "Smart Contract - BudConnector.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/governance/GovernanceExecutor.sol",
              "type": "Smart Contract - GovernanceExecutor.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/info/LiquidatorInfo.sol",
              "type": "Smart Contract - LiquidatorInfo.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/info/UserInfo.sol",
              "type": "Smart Contract - UserInfo.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dss-cdp-manager/blob/bprotocol/src/pool/Pool.sol",
              "type": "Smart Contract - Pool.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/BAMM.sol",
              "type": "Smart Contract - BAMM.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/CropJoinAdapter.sol",
              "type": "Smart Contract - CropJoinAdapter.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/PBAMM.sol",
              "type": "Smart Contract - PBAMM.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/PriceFormula.sol",
              "type": "Smart Contract - PriceFormula.sol"
            },
            {
              "target": "https://github.com/backstop-protocol/dev/blob/main/packages/contracts/contracts/B.Protocol/crop.sol",
              "type": "Smart Contract - crop.sol"
            }
          ],
          "mdx": {
            "program_overview": "B.Protocol is DeFi’s Backstop Liquidity protocol, handling liquidations in scale for DeFi lending platforms. By creating a transparent, committed, smart contract-based liquidation system, B.Protocol enables better capital efficiency for DeFi users, while creating another layer of stability for the lending platforms themselves. \n\nB.Protocol is integrated with existing lending platforms (MakerDAO, Compound, and soon others) via a dedicated smart contract interface where users give priority to the Backstop liquidators in the liquidation process. As this eliminates the gas wars between liquidators and gives them more certainty in the liquidations process, the Backstop liquidators share their proceeds with the Users in return, creating a win-win situation for all parties involved - User, Liquidators, and Platforms alike. The protocol API to end-users is identical to the lending platform API, and the only difference is that the users are interacting with different addresses.\nFor more information about BProtocol, please visit [https://www.bprotocol.org/](https://www.bprotocol.org/). \n\nThe bug bounty program covers its smart contracts and is focused on the prevention of the negative impacts stated in the Impacts in Scope section.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical smart contract vulnerabilities are capped at 10% of economic damage, primarily taking into account the funds at risk. Other considerations such as PR and branding concerns may also be considered by the team at its discretion. \n\nPaid auditor(s) of this code is(are) not eligible for rewards in this table.  Determinations of eligibility and final reward amount (for critical vulnerabilities) and all terms related to an award are at the sole and final discretion of the B.Protocol team.\n\nPayouts are handled by the __BProtocol__ team directly and are denominated in USD. Payouts are done in __USDC__ or __DAI__ for payouts up to USD 10 000 and BPRO/stablecoin mix (90%/10%) for all other critical payouts, capped by up to 50 000 BPRO.",
            "assets_body": "The contracts in this table can be found on the following links:\n\n[https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol ](https://github.com/backstop-protocol/BCompound/tree/master/contracts/bprotocol)\n\n[https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src ](https://github.com/backstop-protocol/dss-cdp-manager/tree/bprotocol/src)\n\n[https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol](https://github.com/backstop-protocol/dev/tree/main/packages/contracts/contracts/B.Protocol) \n\nHowever, only the smart contracts within the assets in scope table itself are considered as in-scope for the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for 1 day.\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "naos",
          "project": "NAOS",
          "date": "2021-06-30T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/47iDmuuMql10C3qXzxSbio/960bb27b2b10f29e7dbfeb0f561a2f38/NAOS__1_.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x9Ddceb30515eD297C1B72Ff8F848F254104b7A12#code",
              "type": "Smart Contract - Formation"
            },
            {
              "target": "https://etherscan.io/address/0x3ED6355Ad74605c0b09415d6B0b29a294Fd31265#code",
              "type": "Smart Contract - Transmuter"
            },
            {
              "target": "https://etherscan.io/address/0x99E4eA9eF6bf396C49B35FF9478EbB8890aEF581#code",
              "type": "Smart Contract - Staking Pool"
            },
            {
              "target": "https://etherscan.io/address/0x8394BB87481046C1ec84C39689D402c00189df43#code",
              "type": "Smart Contract - YearnVaultAdapter"
            },
            {
              "target": "https://etherscan.io/address/0x1BEf2e5DE862034Fb0ed456DF59d29Ecadc9934C#code",
              "type": "Smart Contract - NUSD"
            },
            {
              "target": "https://etherscan.io/address/0x4a615bb7166210cce20e6642a6f8fb5d4d044496#code",
              "type": "Smart Contract - NAOS"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Formation/blob/master/contracts/FormationV2.sol",
              "type": "Smart Contract - FormationV2"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Formation/blob/master/contracts/TransmuterV2.sol",
              "type": "Smart Contract - TransmuterV2"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Formation/blob/master/contracts/adapters/AlpacaVaultAdapter.sol",
              "type": "Smart Contract - AlpacaVaultAdapter"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Protocol/blob/master/contracts/Staking/BetaInsurance.sol",
              "type": "Smart Contract - BetaInsurance"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Protocol/blob/master/contracts/Staking/BoostPool.sol",
              "type": "Smart Contract - BoostPool"
            },
            {
              "target": "https://github.com/NAOS-Finance/NAOS-Protocol/blob/master/contracts/Staking/StakingPoolsWithTransfer.sol",
              "type": "Smart Contract - StakingPoolsWithTransfer"
            }
          ],
          "mdx": {
            "program_overview": "NAOS Finance is building a real world asset based infrastructure for the DeFi ecosystem. NAOS Finance replicates most, if not all, of the functionality of centralized intermediaries on the Ethereum blockchain. Our goal is to create an environment that combines the operational familiarity of traditional financial institutions and the technological benefits of DeFi.\n\nThe NAOS Finance Protocol comprises of two sub-protocols:\n\n  - Formation: the liquidity protocol that provides lending capital for real world lending\n  - Galaxy: the lending protocol that connects real world assets with DeFi liquidity \n  - For more information about NAOS Finance, please go to [https://naos.finance/](https://naos.finance/).  \n\nThe bug bounty program covers its smart contracts and apps and is focused on receiving bug reports of the following impacts and attacks:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds\n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical vulnerabilities are rewarded based on economic damage, normally capped at 10% of the prospective damage, though are within the range specified in the table. The NAOS Finance team reserves the right to decide on the final reward amount to the bug bounty hunter. \n\nCritical and High bug reports must come with a PoC as well as a suggestion on how to fix the vulnerability in order to be considered for a reward.\n\nPayouts are handled by the __NAOS Finance__ team directly and are denominated in USD. Payouts are done in __USDT__, __USDC__, or __NAOS__, at the discretion of the team at the time of rewarding.",
            "assets_body": "For additional reference, you can find all their smart contracts listed here [https://github.com/NAOS-Finance/NAOS-Formation](https://github.com/NAOS-Finance/NAOS-Formation). However, only the smart contracts listed on the table are considered in-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Smart Contracts and Blockchain\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by the bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "wildcredit",
          "project": "Wild Credit",
          "date": "2021-06-29T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4lHYPscU0fJeFD0cqt0cH0/7882bfd6cbd5f9af10f07cc4d4a0cea5/wild_logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x0fC7e80090bbc1740595b1fcCd33E0e82547212F",
              "type": "Smart Contract - PairFactory"
            },
            {
              "target": "https://etherscan.io/address/0x2CA9b2cd3b50a4B11bc2aC73bC617aa5Be9A6ca1",
              "type": "Smart Contract - LendingController"
            },
            {
              "target": "https://etherscan.io/address/0x65E2cf21e7D3A0c9aab02db2577A1e827C899436",
              "type": "Smart Contract - PriceOracle"
            },
            {
              "target": "https://etherscan.io/address/0xE0fAda235382ff2E63C021f2974F6c51Ab8cE368",
              "type": "Smart Contract - LPTokenMaster"
            },
            {
              "target": "https://etherscan.io/address/0xAe135A1b33C0D3682390762EA2BE6C7419cf425A",
              "type": "Smart Contract - LendingPairMaster"
            },
            {
              "target": "https://etherscan.io/address/0x0dca1a3f48407686da05f50ca6a59a16931aa81d",
              "type": "Smart Contract - UniswapV3Helper "
            }
          ],
          "mdx": {
            "program_overview": "Wild Credit is a lending protocol with isolated lending pairs. With traditional “basket-based” lending protocols such as Compound, the ability to add new assets is tightly controlled. If a single asset is exploited, it can potentially compromise all users of the protocol. This creates the incentive for these basket-based protocols to focus on the most popular low-risk assets and leave out everything else.\n\nUsing isolated lending pairs, lenders can decide which pairs they are comfortable with and provide liquidity only to those. Just like on Uniswap, users of Wild Credit are also free to create lending pairs for any asset permissionlessly.\n\nFor example, providing DAI on DAI-MIR may have a higher interest rate than providing DAI on DAI-ETH due to a higher risk. It’s up to the LPs to make their own choices.\nFor more information about WildCredit, please visit https://wild.credit/. \n\nThe bug bounty program covers its smart contracts and apps and is focused on receiving bug reports of the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds \n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical vulnerabilities for smart contract and blockchain vulnerabilities only get the classification if they have an impact of USD 100 000 or greater. If the impact is below that amount, the bug report is reclassified as High even if it would normally classify as Critical. Additionally, a critical bug report can be reclassified as High if it involves the gradual loss of funds for the protocol or the user over multiple blocks due to any miscalculation. (E.g. miscalculated interest, debt, rewards, etc.)\n\nThe full critical payout only applies if __>$100k__ of user funds can be stolen. \n\nThe final decision on the reward is under the discretion of the WildCredit team. \n\nPayouts are handled by the __Wild Credit__ team directly and are denominated in USD. Payouts are done in __USDC__.",
            "assets_body": "For added reference, please take a look at their GitHub - [https://github.com/WildCredit/contracts/tree/master/contracts](https://github.com/WildCredit/contracts/tree/master/contracts).\nHowever, only the contracts listed as in-scope here are considered as part of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds \n  - Unable to call smart contract\n  - Smart contract fails to deliver promised retuns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Economic/financial attacks\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Cases containing tokens with non-standard ERC20 implementation such as transfer fees\n  - Misuse of privileged admin access\n  - Cases involving black swan events or multi-block price manipulation (single-block attacks such as those involving the use of flash loans are still acceptable). E.g. buying a lot of low-cap token on Uniswap over the course of an hour, borrowing more than what’s a “fair” value as a result, then selling the token to Uniswap again.\n  - Uniswap oracle not working due to low liquidity or being outdated (not enough recent Uniswap trades). Chainlink feeds not being updated or access to them becoming private.\n\nThe following activities are prohibited by the bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "forcedao",
          "project": "ForceDAO",
          "date": "2021-06-24T10:30-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3XpDIhZzrm0RwbY3kVdOOs/9d33e89ead223e45f8f468ca54da53df/ForceDAO.jpg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x7E428A383D0F3A3B8e2D4a0cA2cDde8792878e2c",
              "type": "Smart Contract - Storage Contract"
            },
            {
              "target": "https://polygonscan.com/address/0x8D7f8722B796526B7DBe94055cb405148cc47719",
              "type": "Smart Contract - Vault Contract"
            },
            {
              "target": "https://polygonscan.com/address/0x274Fd47DE106dB114Bd87f7c52e28996B5F066f9",
              "type": "Smart Contract - SushiHodlStrategyFactory Contract"
            },
            {
              "target": "https://polygonscan.com/address/0x5e6dccb2df12d78c13fb1e3195f05f1afefce5d1",
              "type": "Smart Contract - MasterChefHodlStrategy Contract"
            },
            {
              "target": "https://polygonscan.com/address/0xC1f99f723C7bDF1313140BFA29390138F1b325bf",
              "type": "Smart Contract - StaticsHelper Contract"
            }
          ],
          "mdx": {
            "program_overview": "Force DAO is a collective of investment strategists working to identify and productize alpha across DeFi. ForceDAO started with building out strategies on Ethereum and have now expanded strategies to Polygon.\n\nForce DAO’s governance token is $FORCE. The token is designed to be used as the basis for the token governed organization, aligning incentives while keeping it 100% decentralized.\n\nFurther resources regarding the ForceDAO can be found on their website, [https://www.forcedao.com/](https://www.forcedao.com/).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical payouts are further capped at 10% of economic damage, primarily taking into account the user funds at risk. \n\nPayouts are handled by the __ForceDAO__ team directly and are denominated in USD. However, payouts are done in __FORCE__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Purely informational or optimizational findings of low severity\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "clipper",
          "project": "Clipper",
          "date": "2021-06-22T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6YvUiP4TLXxBPyPjEYjpGy/2a321b42840d075b5ef7f532eb26be10/nGalleon-Symbol-FullColor_2x.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - $USD 100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/shipyard-software/clipper-dex-contracts/tree/main/contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://etherscan.io/address/0x2e9c6Dcdca22A5952A88C4b18EDB5B54C5155BC9#code",
              "type": "Smart Contract - ClipperExchangeInterface"
            },
            {
              "target": "https://etherscan.io/address/0xe82906b6B1B04f631D126c974Af57a3A7B6a99d9#code",
              "type": "Smart Contract - ClipperPool"
            },
            {
              "target": "https://etherscan.io/address/0xf0f455E8b8F4f96Ae5109493C5d3eA5e2c09de47#code",
              "type": "Smart Contract - ClipperRouter"
            }
          ],
          "mdx": {
            "program_overview": "Clipper is a decentralized exchange (DEX) designed to have the lowest per-transaction costs for small-to-medium-sized trades. It is intended to be the best place for self-made traders to buy and sell the most popular cryptoassets. [Here’s a quick overview of Clipper and its core design principles](https://blog.clipper.exchange/what-is-clipper/).\n\nFurther resources regarding the Clipper can be found on [its website](https://clipper.exchange).\n\nThe bug bounty program is focused around its smart contracts, is mostly concerned with the loss of user funds, and has a bonus period until 23:59:59 UTC on July 6th. The bug bounty program  will begin accepting submissions starting on the launch date, June 22nd.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nDuring the bonus period, the reward for Critical vulnerabilities discovered is increased to __USD 100,000__. \n\nReports containing the following issues or vulnerabilities are not eligible for a reward at any severity level:\n\n- Any issues that rely on running out of gas because of the variable-sized data structure for holding token information\n- Any issues that rely on custom or non-typical token implementations (here, \"typical\" means \"included in the current implementations of wBTC, USDC, USDT, and DAI\").\n- Any issues around following the 0x PLP API interface. Specifically, any issues around the potential loss of funds if procedures for swap and deposit are not followed (must transfer assets and then call the appropriate function atomically within the same transaction).\n- Existing vested deposits may be locked again if they are not first unlocked before making a new deposit\n- Issues related to the validation of function inputs if those functions are restricted to administrators only or if incorrect function inputs only affect the assets of the sender. \n- Anything related to the miscomputation of the square root of 2\n- Any issues with Chainlink oracles (manipulation, staleness)\n- Any issues that involve contract ownership not being set correctly\n- Any issues that involve an unrealistically large asset pool (more than twenty assets, more than $250M in assets at current prices).\n- Any issues that involve changes of price, including front-running, within the bounds specified by the minimum buy amount in the 0x PLP API.\n\nPayouts are handled by the __Clipper__ team directly and are denominated in USD. However, rewards are paid out in __USDC__.",
            "assets_body": "The smart contracts under the Mock folder are not considered as in-scope in this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n  - Susceptibility to block timestamp manipulation (beyond one hour - manipulations around 15 second block timing are not in scope)\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses or accounts (deployer, ownership, governance)\n  - Incorrect or manipulated data provided by or to third-party oracles\n    - Flash loan attacks that do not rely on oracle manipulation are IN SCOPE.\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "alpacafinance",
          "project": "Alpaca Finance",
          "date": "2021-06-14T04:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7A752GlV5SXytw8vQ3311P/adc8fc324f89144ab15badd1c0b3fe02/Alpaca_Finance.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $15,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/alpaca-finance/bsc-alpaca-contract",
              "type": "Smart Contract"
            },
            {
              "target": "https://gist.github.com/spicysquid168/47a8c30522ff5b40df07e5bc83e61431",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/alpaca-finance/alpaca-stablecoin",
              "type": "Smart Contract - Alpaca Stablecoin"
            },
            {
              "target": "https://github.com/alpaca-finance/alpies-contract",
              "type": "Smart Contract - Alpies"
            }
          ],
          "mdx": {
            "program_overview": "Alpaca Finance is the largest lending protocol allowing leveraged yield farming on Binance Smart Chain. It helps lenders to earn safe and stable yields, and offers borrowers undercollateralized loans for leveraged yield farming positions, vastly multiplying their farming principals and resulting profits.\n\nFurthermore, Alpacas are a virtuous breed. That’s why, Alpaca is a fair-launch project with no pre-sale, no investor, and no pre-mine. So from the beginning, it has always been a product built by the people, for the people. Or as they like to say: by the Alpacas, for the Alpacas.\n\nMore information about Alpaca Finance can be found on their website, [https://www.alpacafinance.org/](https://www.alpacafinance.org/). \n\nThis bug bounty program is focused around its smart contracts and is mostly concerned with the prevention of the loss of user funds. ",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe amount of funds at risk affects the final severity classification of the bug report. A vulnerability resulting in the direct loss of protocol funds of 10% or greater remains classified as Critical. However, they are reclassified as High if the impact is less than 10% but greater than 0.1%. If the impact is less than 0.1%, they are reclassified as Medium.\n\nBug reports are required to include a complete issue description and instructions to reproduce the issue or a PoC. Reports that include a solution to fix the problem have a higher likelihood of receiving the full reward under the respective severity classification tier. \n\nThe final reward is determined at the sole discretion of the Alpaca Finance team. \n\nPayouts are handled by the __Alpaca Finance__ team directly and are denominated in USD. However, payouts are done in __BUSD__.\n",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "mcdex",
          "project": "MCDEX",
          "date": "2021-06-09T02:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1AuAlWdDWj7rerjjpyaCbX/a27501a9a5037de19eb6866cf4d76615/MCDEX.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000 - USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $7,500 - USD $15 000"
            },
            {
              "level": "high",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/mcdexio/mai-protocol-v3/tree/master/contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://mcdex.io/trade/",
              "type": "Web/App"
            },
            {
              "target": "https://mcdex.io/pool/",
              "type": "Web/App"
            },
            {
              "target": "https://mcdex.io/mining/",
              "type": "Web/App"
            },
            {
              "target": "https://mcdex.io/wallet",
              "type": "Web/App"
            },
            {
              "target": "https://github.com/mcdexio/mcdex3-governance-protocol",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/mcdexio/MCB",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "MCDEX is a decentralized exchange (DEX) that aims to offer perpetual swaps trading. A perpetual swap contract is a financial contract without an expiration date whose trading price is anchored to the underlying asset price index through a funding mechanism.\n\nPerpetual contracts are based on margin, which allows leverage. The MCDEX Perpetual contract provides up to 10x leverage, by using a funding mechanism that keeps prices anchored to an index. Unlike traditional perpetual contracts, the MCDEX perpetual contract is decentralized which provides opportunities to build new kinds of decentralized financial products and services.\n\nMCDEX relies on an automated market maker (AMM) to provide liquidity and calculate the funding rate. Both long and short traders can acquire positions by trading against the AMM. The pricing formula of MCDEX’s AMM provides a continuous depth for market-making and adjusts the price according to market demand. To supplement this, MCDEX also offers an off-chain order book because of its superior liquidity.\n\nFor more information about MCDEX, you can visit their website at [https://mcdex.io/](https://mcdex.io/). \n\nThis bug bounty program covers its smart contracts and its critical frontend software and is focused on the prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a Proof of Concept (PoC) in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC. Critical web and app bugs can only be paid the full USD 15 000 if there is a vulnerability directly leading to a loss in user funds that don’t require social engineering or extensive non-normal user actions. \n\nRewards for smart contract vulnerabilities are variable based on their exploitability, and other factors deemed relevant by the MCDEX team. For critical vulnerabilities, the payout is capped at 10% of economic damage and is the main determinant of the reward amount. Bug reports for critical vulnerabilities also require PoC. If no PoC is submitted but the bug is still validated and addressed, only USD 50 000 will be rewarded regardless of economic damage. \n\nRecommendations for fixes are required for a reward. Though bug reports without recommendations for fixes may be considered, the resulting reward cannot be the maximum amount. \n\nThe final decision for all rewards are at the discretion of MCDEX. \n\nPayouts are handled by the __MCDEX__ team directly and are denominated in USD. Payouts are done in __USDC__. However, for payouts USD 1 000 and lower, the reward can be paid in __ETH__.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table and their subfolders are accepted within the bug bounty program. All others are out-of-scope.\n\nUnder the Github link, only mainnet smart contract vulnerabilities are considered in-scope for the bug bounty program. Smart contracts labeled as testnet are out-of-scope. Additionally, __all smart contracts in the test, oracle, and reader folders are out-of-scope__. \n\nVulnerabilities surfaced in the audits provided by [ConsenSys](https://diligence.consensys.net/audits/private/nxaosool-mcdexio-mai-protocol-v2), [OpenZeppelin](https://blog.openzeppelin.com/mcdex-mai-protocol-audit/) and [Quantstamp](https://certificate.quantstamp.com/full/mcdex) are not considered in scope of the bug bounty program even if they affect the assets listed in this table.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "apeswap",
          "project": "ApeSwap",
          "date": "2021-06-04T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7uJHFpUPzG8fcpRJJ6htXf/be4a7f7dd3d076d24aa4e10a7e0caec7/ApeSwap.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $7,500"
            },
            {
              "level": "high",
              "payout": "USD $4,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x5c8D727b265DBAfaba67E050f2f739cAeEB4A6F9",
              "type": "Smart Contract - MasterApe"
            },
            {
              "target": "https://bscscan.com/address/0x603c7f932ED1fc6575303D8Fb018fDCBb0f39a95",
              "type": "Smart Contract - BANANA Token"
            },
            {
              "target": "https://bscscan.com/address/0xC0788A3aD43d79aa53B09c2EaCc313A787d1d607",
              "type": "Smart Contract - ApeRouter"
            },
            {
              "target": "https://bscscan.com/address/0x0841BD0B734E4F5853f0dD8d7Ea041c241fb0Da6",
              "type": "Smart Contract - ApeFactory"
            },
            {
              "target": "https://bscscan.com/address/0xdDb3Bd8645775F59496c821E4F55A7eA6A6dc299",
              "type": "Smart Contract - Golden Banana"
            },
            {
              "target": "https://bscscan.com/address/0xec4b9d1fd8A3534E31fcE1636c7479BcD29213aE",
              "type": "Smart Contract - Treasury"
            },
            {
              "target": "https://bscscan.com/address/0x2F07969090a2E9247C761747EA2358E5bB033460",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://bscscan.com/token/0x6eca7754007d22d3f557740d06fed4a031befe1e",
              "type": "Smart Contract - NonFungibleApes (NFA)"
            },
            {
              "target": "https://github.com/ApeSwapFinance/apestrong-covid-relief",
              "type": "Smart Contract - COVID Relief"
            },
            {
              "target": "https://bscscan.com/address/0xbe18142aa6338627c7476509a368979680c6d146",
              "type": "Smart Contract - Token Vesting Factory"
            },
            {
              "target": "https://apeswap.finance",
              "type": "Web/App"
            },
            {
              "target": "https://dex.apeswap.finance",
              "type": "Web/App - DEX"
            }
          ],
          "mdx": {
            "program_overview": "ApeSwap is a Decentralized Exchange / Automated Market Maker, Yield Farming, and Staking platform running on Binance Smart Chain, with lots of other features that let you earn and win tokens. ApeSwap was built by DeFi Apes, for DeFi Apes. They have a dedicated team of experienced monkeys, who have been in the crypto space for years. BANANA is the native currency of our platform. Stake, pool, and earn $BANANA (along with many other tokens) all on ApeSwap.\nFor more information about ApeSwap, please visit [https://apeswap.finance/](https://apeswap.finance/).  \n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nThe reward for critical smart contract vulnerabilities is further capped at 10% of economic damage, taking into account things like funds that are directly at risk.\n\nPayouts are handled by the __ApeSwap__ team directly and are denominated in USD. Payouts are done in __BANANA__ or __BUSD__, at the discretion of the __ApeSwap__ team. ",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table and the subdomain highlighted are accepted within the bug bounty program. All others are out-of-scope.\n\nOther smart contracts in production for ApeSwap not listed in this table may also be considered for the bug bounty program, especially if it affects user funds. \n\nAdditionally, the following GitHub repositories are shared for reference as they relate to the assets listed in the table. However, only vulnerabilities that affect the assets in production are considered as in-scope of the bug bounty program.\n\n__DEX__\n[https://github.com/ApeSwapFinance/apeswap-dex](https://github.com/ApeSwapFinance/apeswap-dex)\n\n__MasterApe and Timelock__\n[https://github.com/ApeSwapFinance/apeswap-banana-farm](https://github.com/ApeSwapFinance/apeswap-banana-farm)\n\n__BANANA Token, Golden Banana, and Treasury__\n[https://github.com/ApeSwapFinance/apeswap-golden-banana](https://github.com/ApeSwapFinance/apeswap-golden-banana)\n\n__ApeRouter__\n[https://github.com/ApeSwapFinance/apeswap-swap-periphery](https://github.com/ApeSwapFinance/apeswap-swap-periphery)\n\n__ApeFactory__\n[https://github.com/ApeSwapFinance/apeswap-swap-core](https://github.com/ApeSwapFinance/apeswap-swap-core)\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - Including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "dodo",
          "project": "DODO",
          "date": "2021-05-25T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3gUM6wDJxYyzDVoWpLQX4o/b521d1e6620ff23b80cc0c439666a5d1/DODO.svg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $10,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/DODOEX/contractV2/tree/main",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "DODO is a decentralized exchange platform powered by the Proactive Market Maker (PMM) algorithm. It features highly capital-efficient liquidity pools that support single-token provision, reduce impermanent loss, and minimize slippage for traders. The trading platform also offers SmartTrade, a decentralized liquidity aggregation service that routes to and compares various liquidity sources to quote the optimal prices between any two tokens. In addition, DODO removed all roadblocks hindering liquidity pool creation for the issuance of new assets - asset ratios, liquidity depths, fee rates, and other parameters can all be freely customized and configured in real-time. Based on this breakthrough, DODO has developed Crowdpooling, a permissionless, equal opportunity liquidity offering mechanic, as well as customizable technical solutions geared towards professional on-chain market makers.\n\nMore information about DODO can be found on their website, [https://dodoex.io/](https://dodoex.io/).   \n\nThis bug bounty program is focused around its smart contracts and is mostly concerned with the prevention of the loss of user funds. ",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe calculation of the final reward amounts will be based on the economic impact of the discovered vulnerabilities, as well as the level of difficulty in discovering these vulnerabilities. As for the economic impact, this is capped at 10% of economic damage, which accounts for direct funds at risk as well as other aspects at the discretion of the DODO team. \n\nTo qualify for a reward, please include as much information about the vulnerability as possible in your report, including:\n\n  - The conditions on which reproducing the bug is contingent\n  - The steps needed to reproduce the bug or, preferably, a proof of concept\n  - The potential implications of the vulnerability being abused\n\nPayouts up to __USD 100 000__ are handled by the __DODO__ team directly and are denominated in USD. However, payouts are done in __DODO__.",
            "assets_body": "The following smart contracts [DODOMemberSystem](https://github.com/DODOEX/contractV2/tree/main/contracts/DODOMemberSystem/) and [https://github.com/DODOEX/contractV2/tree/main/contracts/external](https://github.com/DODOEX/contractV2/tree/main/contracts/external) are not included in this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "elementfinance",
          "project": "Element Finance",
          "date": "2021-05-13T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2S8lTN4XuG5nCrliVQS7Le/c5ca03e884a7a5c1804e82ca7efdf2d6/Element_logo.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000 - USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/WrappedPosition.sol",
              "type": "Core Contract (Wrapped Position)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/Tranche.sol",
              "type": "Core Contract (Tranche)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/TrancheFactory.sol",
              "type": "Core Contract (Tranche Factory)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/InterestToken.sol",
              "type": "Core Contract (Interest Token)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/InterestTokenFactory.sol",
              "type": "Core Contract (Interest Token Factory)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/UserProxy.sol",
              "type": "Core Contract (User Proxy)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/libraries/Authorizable.sol",
              "type": "Library Contract (Authorizable)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/YVaultAssetProxy.sol",
              "type": "Integration Contract (Y Vault Asset Proxy)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/ConvergentCurvePool.sol",
              "type": "Custom Balancer Curve (Convergent Curve Pool)"
            },
            {
              "target": "https://github.com/element-fi/elf-contracts/blob/5517dbe0982b85bc7a7207b5119d9a728bf1f830/contracts/factories/ConvergentPoolFactory.sol",
              "type": "Custom Balancer Curve (Convergent Pool Factory)"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/CoreVoting.sol",
              "type": "Smart Contract - Core Voting"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/simpleProxy.sol",
              "type": "Smart Contract - Simple Proxy"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/vaults/GSCVault.sol",
              "type": "Smart Contract - GSC Vault"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/vaults/LockingVault.sol",
              "type": "Smart Contract - Locking Vault"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/vaults/OptimisticRewards.sol",
              "type": "Smart Contract - Optimistic Rewards"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/vaults/VestingVault.sol",
              "type": "Smart Contract - Vesting Vault"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/libraries/History.sol",
              "type": "Smart Contract - History"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/libraries/MerkleRewards.sol",
              "type": "Smart Contract - Merkle Rewards"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/libraries/ReentrancyBlock.sol",
              "type": "Smart Contract - Reentrancy Block"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/libraries/Storage.sol",
              "type": "Smart Contract - Storage"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/libraries/VestingVaultStorage.sol",
              "type": "Smart Contract - Vesting Vault Storage"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/features/OptimisticGrants.sol",
              "type": "Smart Contract - Optimistic Grants"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/features/Spender.sol",
              "type": "Smart Contract - Spender"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/features/Timelock.sol",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://github.com/element-fi/council/blob/main/contracts/features/Treasury.sol",
              "type": "Smart Contract - Treasury"
            }
          ],
          "mdx": {
            "program_overview": "Element Finance brings high fixed yield income to the DeFi market, initially focused on ETH, BTC, USDC, and DAI. Users can purchase ETH, BTC, USDC, and DAI at a discount without being locked into a term, allowing the exchange of the discounted asset and the base asset at any time. The fixed rate income can be secured with the exchange of any major base asset. For active DeFi users, the Element Protocol provides capital efficiency on yield positions they are already depositing into, such as Yearn or ETH2 staking. Users can sell their deposited principal at a discount as fixed yield income, leveraging or increasing exposure to yield without liquidation risk. This competitive activity is what drives the high fixed yield markets. This construction paper breaks down the Element Protocol and discusses how it can open the door to a number of new primitives and innovations.\n\nFurther information regarding Element Finance can be found on their Construction Paper, [https://paper.element.fi/](https://paper.element.fi/).  \nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and the access to those funds without user permission.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nIn addition to assessing severity, the rewards will be considered based on the impact of the discovered vulnerability as well as the level of difficulty in discovering such vulnerability.\n\nPayouts are handled by the __Element Finance__ team directly and are denominated in __USD__. However, payouts are done in __DAI__ or __USDC__.\n",
            "assets_body": "All Smart Contracts deployed or intended for deployment (e.g not in the test folder) in [https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830](https://github.com/element-fi/elf-contracts/tree/5517dbe0982b85bc7a7207b5119d9a728bf1f830) are within the scope of this bug bounty program. However, the Smart Contracts listed in this table are prioritized, and this prioritization is taken into account when deciding on the reward amount.\n\n__Disclosure and Reporting Guidelines__\n\nWe ask that all bug bounty hunters, security engineers, and researchers:\n\n  - Make it a priority to avoid privacy violations, degradation of user   experience, and disruption to production systems during security testing.\n  - Report vulnerabilities as soon as they have been discovered and keep them confidential between yourself and the Element team until the issue(s) has been resolved.\n  - Only use the Immunefi bug reporting interface to report vulnerability information to us.\n  - Provide the team with at least 5 working days to investigate the issue and get back to you before taking any further action.\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\nAdditionally, the following aspects are prioritized for the Smart Contracts listed in the Assets in Scope table. We want to be confident that:\n\n__Core Contracts:__\n  - No user either loses or loses access to funds.\n  - No user funds are moved without user permission.\n  - No Principal or Yield tokens can be minted that are not fully backed.\n  - The user proxy always returns the correct amount to users.\n\n__For the Integration Contracts:__\n  - No flash loan or other attack can manipulate the interest earned or balance calculations.\n  - These integrations will always be able to retrieve funds from the protocols.\n  - There are no conditions where these contracts will lose money.\n\n__For the Custom Balancer Curve:__\n  - The math in the contract matches the math we intended.\n  - The error conditions mean that the calculation is within a tolerance of  the real result.\n  - There is no way to manipulate the pool to produce a profit for an attacker.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Terms__\n\nBy submitting your report through Immunefi, you grant Element Finance the rights to validate, mitigate, and disclose the vulnerability. All bug bounty reward decisions, including eligibility, amounts for rewards, and how such rewards will be paid, are made at Element’s sole discretion. The terms and conditions of this Bug Bounty Program may be altered at any time."
          }
        },
        {
          "id": "chainlink",
          "project": "Chainlink",
          "date": "2021-05-11T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/57PKzLtfnCqvrvVO9dQy4u/ad6c9e026b77cf59643680bd931ca5c1/Chainlink-logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/smartcontractkit/chainlink/tree/master/core",
              "type": "Node Software and Smart Contract"
            },
            {
              "target": "https://github.com/smartcontractkit/chainlink/tree/develop/contracts/src",
              "type": "Smart Contract"
            },
            {
              "target": "https://explorer.chain.link",
              "type": "Website"
            },
            {
              "target": "https://rinkeby.explorer.chain.link",
              "type": "Website"
            },
            {
              "target": "https://kovan.explorer.chain.link",
              "type": "Website"
            },
            {
              "target": "https://data.chain.link",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "Chainlink is an open-source, generalized framework for building and connecting to decentralized oracle networks that give your smart contract access to secure and reliable data inputs and outputs. Through Chainlink, developers can connect their smart contracts to data providers, web APIs, enterprise systems, cloud providers, IoT devices, payment systems, other blockchains, and much more. \n\nThe Chainlink Bug Bounty Program is designed to encourage developers, especially smart contract developers, to evaluate the open-source code base and hunt for critical bugs, with a focus on issues that puts the funds of users at risk.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports are required to include a PoC. Bug reports without a PoC will be rejected. \n\nIndependently of the severity, if a suggestion on how to fix the vulnerability is provided, the bounty may be increased.\n\nClaiming that other bug bounties accept such a bug will not be considered as a valid claim and nor presuming the severity because of theoretical scenarios.\n\nAll citizens and residents of Iran and North Korea, as well as other US sanctioned countries, are not eligible to receive a reward for bug reports submitted.\n\nPayouts are handled by the __Chainlink__ team directly and are denominated in USD. Payouts are done in __LINK__.",
            "assets_body": "Asset [https://explorer.chain.link](https://explorer.chain.link) is in-scope only for vulnerabilities directly causing a loss of service.\n\nFor web/app bug reports, only those that directly affect the assets in scope are accepted. \n\n[Known issues listed here](https://www.pivotaltracker.com/n/projects/2129823) are not accepted as within the scope of this bug bounty program, regardless of the asset being within the scope of the program.\n\n__Additional Information and Resources__\n\nThe Chainlink node is a part of a decentralized oracle network used to feed data to smart contracts. [Job Specifications](https://chainlink.readme.io/docs/job-specifications) are added to the node through a [REST API](https://archive.docs.chain.link/reference) so that it knows what tasks to perform. The Chainlink node utilizes a websocket connection (for pubsub) to an Ethereum client (Geth or Parity) in order to watch for new blocks containing specific event logs. Once the external data is retrieved, the Chainlink node will sign the transaction, and broadcast it through the Ethereum client (the wallet is stored on the Chainlink node, not the Ethereum client). An overview of the architecture is available [here](https://docs.chain.link/docs/architecture-overview).\n\nWe have guides available for how to get a Chainlink node running locally. See the links below for step-by-step walk-throughs.\n\n[The Complete Setup Guide for a Chainlink Development Environment](https://github.com/smartcontractkit/chainlink/wiki/Development-Setup-Guide)  \n\n[Running a Chainlink Node](https://docs.chain.link/docs/running-a-chainlink-node)  \n\n[Fulfilling Requests](https://docs.chain.link/docs/fulfilling-requests) \n\n__Impacts in Scope__\n\nThese are the main areas of impact we want to prevent based on asset:\n\n  - __Chainlink Node Software__ ([https://github.com/smartcontractkit/chainlink](https://github.com/smartcontractkit/chainlink)) __and its Smart Contracts__: \n    - Loss of funds for the node operator or requester will have the highest impact.\n\n  - __Solidity Smart Contracts__ ([https://github.com/smartcontractkit/chainlink/evm-contracts](https://github.com/smartcontractkit/chainlink/evm-contracts)): \n    - Abuse of functionality through Chainlink requests.\n\n  - __LINK Testnet Faucets__ ([ropsten.chain.link](https://ropsten.chain.link); [rinkeby.chain.link](https://rinkeby.chain.link); [kovan.chain.link](https://kovan.chain.link)): \n    - Proven loss of service to these faucets is not high impact but we would care about it.\n\n  - __Explorers__ ([https://github.com/smartcontractkit/chainlink/explorer](https://github.com/smartcontractkit/chainlink/explorer)): \n    - Proven loss of service and information disclosure.\n\n  - __Feeds / Data__ ([data.chain.link](http://data.chain.link)): Proven loss of service.\n\nIn general the main focus should be:\n\n  - Exploitation of node software that leads to a loss of either link/disabling of node service\n  - Vulnerabilities in the protocols",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact (except for unauthenticated/logout/login)\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SPF configuration problems\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "In addition to all known issues listed [here](https://www.pivotaltracker.com/n/projects/2129823), the following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n__All Programs__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Mentions of secrets, access tokens, API keys, private keys, etc. in Github, will be considered out of scope without proof that they are in-use in production\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Any subdomain of *.smartcontract.com\n- Intercom add-on on any asset (the in-browser chat application)\n- SGX-related issues or vulnerabilities\n- Issues/bugs/vulnerabilities specific to the given Ethereum client (Geth or Parity)\n- OS-related vulnerabilities\n- Clickjacking on pages with no sensitive actions\n- Attacks requiring MITM or physical access to a user's device.\n- Previously known vulnerable libraries without a working Proof of Concept.\n- Comma Separated Values (CSV) injection without demonstrating a vulnerability.\n- Email or DNS configurations\n- Site or domain configuration\n- Content spoofing and text injection issues without showing an attack vector/without being able to modify HTML/CSS\n- Unauthenticated/logout/login CSRF\n- Previously known vulnerable libraries without a working Proof of Concept\n- Missing best practices in SSL/TLS configuration\n\nThe following activities are prohibited by bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any activity that could lead to the disruption of our service (DoS; please set up POCs on a private chain).\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "vesper",
          "project": "Vesper",
          "date": "2021-05-06T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7dITyStGvxKujlwtjOQEKo/9fdf4fd4b601246ac60030eee6ad4321/Copy_of_vesper.jpeg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/vesperfi/vesper-pools/tree/master/contracts",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Vesper provides a platform for easy-to-use Decentralized Finance (DeFi) products. Vesper's DeFi products deliver ease-of-use in achieving your crypto-finance objectives. The Vesper token (VSP) is the core economic engine that facilitates the building and expansion of Vesper’s capabilities and its community.\n\nThe Vesper project rests on three pillars:\n\n__Vesper Products:__ At launch, Vesper offers a variety of interest-yielding \"Grow Pools\" that enable users to passively increase their crypto holdings by simply selecting the desired aggressiveness of their strategy and the digital asset held. The Vesper Grow Pools represent the first product on the Vesper platform. More will be developed and presented over time.\n\n__Vesper Token:__ VSP incentivizes participation, facilitates governance, and catalyzes user contribution. Users earn VSP through pool participation and, later, participating in Vesper's continuous improvement.\n\n__Vesper Community:__ Vesper is building a user community that sustains and grows the product portfolio, facilitates progressive decentralization, and enables users to build new products while earning a share of that product's fees.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nRewards for critical bug reports are further capped at 10% of economic damage.\n\nPayouts are handled by the __Vesper__ team directly and are denominated in __USD__ for payouts up to __USD 100 000__ and are done in __VSP__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "freeton",
          "project": "FreeTON",
          "date": "2021-04-26T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1tEJla6kmkTqblxxayN8TW/fb1b47cfebe8389d45bbee43fcb3178a/FreeTON-logo.jpg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/broxus/ton-eth-bridge-token-contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/broxus/ton-eth-bridge-contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/broxus/TON-Solidity-Compiler",
              "type": "Smart contract compiler"
            },
            {
              "target": "https://github.com/broxus/ton-eth-bridge-relay",
              "type": "Bridge"
            }
          ],
          "mdx": {
            "program_overview": "Free TON is a high-performance, scalable and secure blockchain platform with a \nthroughput of millions of transactions per second. For comparison, the VISA payment system is capable of processing only 1,700 transactions per second. Even one of the fastest blockchains, Solana (SOL), is only capable of handling 65,000 TPS, making Free TON the fastest platform in the world. TON users will be able to make transactions for less than $0.01 in fees, and pay less than $0.05 per coin exchange transaction (swaps).\n\nFree TON uses its own decentralized architecture based on smart contracts, and its ecosystem belongs to DAO (Decentralized Autonomous Organization). The purpose of the platform is to create an environment for various services and ordinary transactions serving governments, private companies and users. In other words, Free TON has the potential to become a global platform covering various areas, or, as it is also called, a “super server”.\n\nThe bug bounty program is initiated by the DeFi sub-governance of the Free TON community with funding from the TON Alliance and is focused around its smart contracts for its bridges and the prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward for critical vulnerabilities is capped at 10% of the funds at risk based on the vulnerability reported.\n\nPayouts are handled by the **Free TON - TON Alliance** team directly and are denominated in **USD**. Payouts are done in **TON Crystals (TON)**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/TVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors that could lead to a bricking of the contract\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of coins for transaction fees\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n- Signature malleability\n- Susceptibility to replay attacks\n- Weak randomness\n- Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Smart Contract Compiler**\n\nThe prioritized vulnerabilities for this bug bounty program include those types \nthat have been discovered in https://github.com/ethereum/solidity/tree/develop/solc, but \nnot specifically those that have already been reported. However, vulnerability types not discovered there but cause an impact within the severity scope of this bug bounty program are also accepted.\n\n**Bridge**\n\nThe prioritized vulnerabilities for the bridge are those that result in the direct loss of user funds. ",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Smart Contract Compiler**\n\n- Gas regressions\n- All existing upstream bug reports\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "saddle",
          "project": "Saddle",
          "date": "2021-04-06T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2tBTkxye3uBbjPC8u1sKbW/4e9c7cd297be05b165dd4969d5aa8521/Saddle-logo.jpg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://docs.saddle.finance/contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/saddle-finance/saddle-contract",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Saddle is an automated market maker optimized for trading between pegged \nvalue crypto assets.\n\nFurther resources regarding the Saddle can be found on their website, <Link href=\"https://docs.saddle.finance/\">https://docs.saddle.finance/</Link>. \n\nThe bug bounty program is focused around its smart contracts and is mostly\nconcerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Saddle** team directly and are denominated in \n**USD**. However, payouts are done in **USDC**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; \nall testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n- Any testing with third party systems and applications \n(e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "dslaprotocol",
          "project": "DSLA Protocol",
          "date": "2021-03-25T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/lfL45GN2FIKTooz47Q4w0/d5dfac97b4b44e1b21dcd545ad707712/DSLA-logo.jpg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://kovan.etherscan.io/address/0x688b443A489735D1B2a6D36cb7c1aa7668275542#code",
              "type": "Smart contract - Messenger.sol"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x6C4F8C1DD7BDe4b0F7A626d14D0A24a198ae5973#code",
              "type": "Smart contract - SLA/SLA.sol"
            },
            {
              "target": "https://kovan.etherscan.io/address/0xaA55EE80d95FC17f3d97611816101c4F29EB8Afc#code",
              "type": "Smart contract - SLA/Staking.sol"
            },
            {
              "target": "https://etherscan.io/address/0xB63a13825e129fBa2f2205847158461bec5f265A#code",
              "type": "Smart contract - SLARegistry.sol"
            },
            {
              "target": "https://dsla.network",
              "type": "Web/App"
            },
            {
              "target": "https://stacktical.com",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "The DSLA Protocol adds native risk management and parametric insurance\ncapabilities to applications and networks. It does it by introducing a risk\nmanagement framework that enables developers and infrastructure operators to\nreduce their users exposure to service delays, interruptions and financial\nlosses, using self-executing service level agreements, bonus-malus insurance\npolicies, and crowdfunded liquidity pools.\n\nThe DSLA token is at the heart of DSLA Protocol's economics. Its main utility\nis to unlock access to exclusive protocol feature tiers, and fuel the execution\nof decentralized service level agreements over time. The total supply of DSLA\ntokens decreases through a native burn mechanism, as the protocol is being used\nto execute agreements, process claims and more.\n\nThe bug bounty program is focused around its smart contracts and is mostly\nconcerned with the loss of user funds. Web and app bug reports are also\naccepted within this program, but do not have a reward.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **DSLA** team directly and are denominated in\n**USD**. However, payouts are done in **DSLA** for High and Critical bug\nreports and may be done in **USDC** for Medium and Low bug reports.",
            "assets_body": "Web and App bug reports are accepted within the scope of this bug bounty\nprogram, but have no payout.\n\nFor additional reference, here are the addresses of the other contracts of DSLA in the Kovan testnet. However, only those listed in the actual table  are within the scope of this program.\n\nDSLAToken:                [0x3aFfCCa64c2A6f4e3B6Bd9c64CD2C969EFd1ECBe](https://etherscan.io/address/0x3aFfCCa64c2A6f4e3B6Bd9c64CD2C969EFd1ECBe#code)\nUSDCToken:                [0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48](https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48#code)\nSLORegistry:              [0x1bE60A36Ba9De2eCeFe8be8d2720B67f932EC487](https://etherscan.io/address/0x1bE60A36Ba9De2eCeFe8be8d2720B67f932EC487#code)\nMessengerRegistry:        [0x766C0b52fADC43Bc3EEAe8BC64536404981951bE](https://etherscan.io/address/0x766C0b52fADC43Bc3EEAe8BC64536404981951bE#code)\nPeriodRegistry:           [0x5Da279bE9D6CeB11e7D7117915075066909357bc](https://etherscan.io/address/0x5Da279bE9D6CeB11e7D7117915075066909357bc#code)\nStakeRegistry:            [0x4b48AdDd838A11061cE285106f4a30cc5636735C](https://etherscan.io/address/0x4b48AdDd838A11061cE285106f4a30cc5636735C#code)\nSEMessenger:              [0xFB29aFC3F4B78755f07faD5B86448595D2EEC86C](https://etherscan.io/address/0xFB29aFC3F4B78755f07faD5B86448595D2EEC86C#code)\nNetworkAnalytics:         [0xC33492F8D76918A9527165A9fD71089980656357](https://etherscan.io/address/0xC33492F8D76918A9527165A9fD71089980656357#code)\n\nDetails:                  [0x38b0cd8BB4C4608E32EE75b25A8846459cEAd513](https://etherscan.io/address/0x38b0cd8BB4C4608E32EE75b25A8846459cEAd513#code)\nAdminWallet:              [0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1](https://etherscan.io/address/0x38b0cd8BB4C4608E32EE75b25A8846459cEAd513#code)\nDAIToken:                 [0x6B175474E89094C44Da98b954EedeAC495271d0F](https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F#code)\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Accepted Web/App Vulnerabilities:**\n\nWe accept the following website/app vulnerabilities, though there is no reward\nfor them:\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following vulnerabilities are not sought after for website bug reports:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "siren",
          "project": "Siren",
          "date": "2021-03-12T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5zzC3Ei3s46Y9wHENUzB4E/f5964e5781cd35b0e0159e19ad4f4bc7/Siren-logo.jpg",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://sirenmarkets.com/security/",
          "assets_in_scope": [
            {
              "target": "https://github.com/sirenmarkets/core",
              "type": "Smart contract"
            },
            {
              "target": "https://etherscan.io/address/0x25bc339170adbff2b7b9ede682072577fa9d96e8",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "The developers and designers at SIREN have been working on a protocol for\ndecentralized options trading. Options are a financial primitive from which one\ncan build many different more complex financial instruments. At their core,\noptions give a trader the choice to buy or sell an asset at a predetermined\nprice at a known time in the future. This is useful for protecting yourself\n(a.k.a hedging) against possible price changes in the asset, as well as\nspeculating on these price changes.\n\nSiren uses a fully-collateralized approach to writing options. A single\nMarketsRegistry contract creates and coordinates individual markets. Once a\nMarket contract is created anyone can interact with it in a permissionless\nmanner. The solvency of a position is ensured at all times by the collateral\nlocked in the smart contract.\n\nIn Siren both the long and short side of the contract are tokenized. The\nbuyer’s side (bToken) gives the holder the right to purchase or sell the\nunderlying asset at a predetermined strike priceThe seller’s/writer’s side\n(wToken) allows the holder to withdraw the collateral (if the option was not\nexercised) or withdraw the exercise payment (if the option was exercised) from\nthe contract after expiration.\n\nTokenizing both sides of the contract allows Siren to create secondary markets\nfor both the long and short exposure. Under such a design in order to become a\nwriter one provides liquidity to the AMM pool and receives lpToken proportional\nto their share of the pool's total liquidity. When a trader goes to buy an\noption (bToken) if the pool has no residual bToken it will use the provided\nliquidity to mint new bToken + wToken, and sell the bToken to the trader,\nkeeping the wToken for itself. When the option expires out-of-the-money, the\nAMM claims the un-exercised liquidity, plus the premium paid by the trader, and\nthus generates profits for liquidity providers. When a liquidity provider\nwithdraws their liquidity, a portion of their withdraw tokens will be wTokens.\nA writer can unwind their short exposure by buying equal amounts of bToken, and\nusing the bToken and wToken to withdraw equal amounts of pool collateral.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Siren** team directly and are denominated in\n**USD**. Payouts up to USD 50 000 are done in **USDC** or **DAI**. For critical\nbug reports, up to 80% of the reward may be in **SI**.\n\nThe final payout amount is determined by the exploitability of the bug reported\nand the impact on user funds.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "shellprotocol",
          "project": "Shell Protocol",
          "date": "2021-03-11T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2fYipu9Nd7vfBG0ZUJ3sKT/35865214276ccf230c153b5e8c47f33d/Shellprotocol-logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to 10% of funds at risk or USD $100,000, whichever is lower"
            },
            {
              "level": "high",
              "payout": "up to USD $20,000"
            },
            {
              "level": "medium",
              "payout": "up to USD $5,000"
            },
            {
              "level": "low",
              "payout": "up to USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/cowri/shell-solidity-v1",
              "type": "Smart contract"
            },
            {
              "target": "https://etherscan.io/address/0x8f26D7bAB7a73309141A291525C965EcdEa7Bf42",
              "type": "Smart contract"
            },
            {
              "target": "https://etherscan.io/address/0xC2D019b901f8D4fdb2B9a65b5d226Ad88c66EE8D",
              "type": "Smart contract"
            },
            {
              "target": "https://shells.exchange/",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "The objective of the Shell Protocol is to create an internet monetary system\nusing stablecoins as building blocks. The first release is a liquidity pool\noptimized for stablecoin-to-stablecoin trades. It has weights, deep liquidity,\nprotections against a broken peg and dynamic fees.\n\nThe bug bounty program is focused around its smart contracts and the prevention\nof loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bug reports must come with a PoC. Bug reports that do not \ninclude a PoC are rejected with instructions to provide PoC.\n\nPayouts are handled by the **Shell Protocol** team directly and are denominated\nin **USD**. Payouts are done in **USDC**.\n\nThere is an additional TOKEN bonus once token is live for smart contract \nvulnerabilities over $50,000.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n**All Programs**\n\n- Attacks that the reporter has already exploited himself, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Smart Contracts/Blockchain\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "synthetix",
          "project": "Synthetix",
          "date": "2021-03-05T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3GJoatBuqt8RlBr5f1yRa1/6f37cd51feefc6382e47d61e93a612e3/Synthetix-logo.png",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $40,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Synthetixio/synthetix",
              "type": "Smart contract"
            },
            {
              "target": "https://docs.synthetix.io/addresses/",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/Synthetixio/kwenta",
              "type": "Dapp"
            },
            {
              "target": "https://github.com/Synthetixio/staking",
              "type": "Dapp"
            }
          ],
          "mdx": {
            "program_overview": "Synthetix is a decentralized synthetic asset issuance protocol built on\nEthereum. These synthetic assets are collateralized by the Synthetix Network \nToken (SNX) which when locked in the contract enables the issuance of synthetic \nUSD (sUSD) which can then be exchanged into other synthetic assets (Synths). \nThis pooled collateral model enables users to perform conversions between Synths \ndirectly with the smart contract, avoiding the need for counterparties. This \nmechanism solves the liquidity and slippage issues experienced by DEX’s.\n\nFor more information about Synthetix, please refer to their Litepaper: <Link href=\"https://docs.synthetix.io/litepaper\">https://docs.synthetix.io/litepaper</Link>.\n\nSynthetix is primarily interested in preventing loss of user funds through its\nsmart contracts. Any vulnerabilities that compromise or impact user funds are\nhighly desired.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by **Synthetix** directly and are denominated in\n**USD**. Payouts up to USD 100,000 are made in **sUSD or SNX**, at the \nchoice of the bug hunter. ",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "harvest",
          "project": "Harvest Finance",
          "date": "2020-12-02T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6D2KOw280UzI3PrzjpsdD7/38eaf1bd703f4109b6795eaeebd210cf/Harvestfinance-logo.gif",
          "maximum_reward": 100000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $100,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,500"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $2,500"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": "https://farm.chainwiki.dev/en/security",
          "assets_in_scope": [
            {
              "target": "https://github.com/harvest-finance",
              "type": "Smart contract"
            },
            {
              "target": "https://harvest.finance/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Harvest Finance automatically farms the highest yield available from the newest \nDeFi protocols, and optimizes the yields that are received using the latest farming techniques.\n\nHarvest Finance is primarily interested in securing their smart contracts, \nwhich can be found at <Link href=\"https://github.com/harvest-finance\">https://github.com/harvest-finance</Link>. Primary areas of concern are anything that causes loss of user funds or frozen funds from a smart contract hack.\n\nHarvest Finance is secondarily interested in securing their website, which \ncan be found at <Link href=\"https://harvest.finance/\">https://harvest.finance</Link>. Web vulnerability disclosures will be rewarded at a lower rate, relative to smart \ncontract vulnerability disclosures.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final reward amount of critical smart contract bugs is capped at 10% of \neconomic damage based on the vulnerability reported with a minimum payout of \n**USD 50 000**.\n\nTheft of yield/interest is considered as Medium for this bug bounty program.\n\nThe following table is used for the classification of web and app bug reports. In the event of conflict with the Immunefi Vulnerability Severity Classification System, the classification on this table will be what is considered.\n\n| Severity | Vulnerability |\n| :-- | :-: |\n| **Critical** | Deletion of site data, XSS/CSRF, ACE |\n| **High** | Denial of Service, DoS ampliciation |\n| **Medium** | Incorrect modification of user data, leaking user data |\n\nAll web and app bug reports must include a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected and require the submitter to resubmit with a PoC. \n\nVulnerabilities that require moderator-approved access in order to be exploited will only receive a maximum of 20% of the advertised reward. For Critical Smart Contract and Blockchain vulnerability reports, this 20% is applied after the cap of 10% of economic damage.  \n\nPayouts are handled by the **Harvest Finance** team directly and are denominated in USD. Payouts up to **USD 100 000** are paid in **USDC**. ",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n **Smart Contracts and Blockchain**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n- Signature malleability\n- Susceptibility to replay attacks\n- Weak randomness\n- Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps** \n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "impossiblefinance",
          "project": "Impossible Finance",
          "date": "2021-06-18T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3Yc7Opcyc9vocdZJaHxz2L/d0c09ecc727b2188b63b168d60755767/Impossible.jpeg",
          "maximum_reward": 94000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - 10% of Funds at Risk (max est. USD $94,000)"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/ImpossibleFinance/impossible-swap-core",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/ImpossibleFinance/launchpad-contracts",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Impossible Finance uses decentralised financial protocols to give everyone the same access to financial products, which were previously only available to institutions and select individuals. Impossible Finance has a vision to level the playing field by building a fair, more accessible open financial system for all.\n\nFurther resources regarding Impossible Finance can be found on their website, [https://impossible.finance/](https://impossible.finance/).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds and other smart contract risks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nSmart Contract critical payouts have a maximum total payout of 10% of the funds that are directly potentially affected with a payout floor of USD 50 000. The estimated maximum payout is based on the Total Value Locked (TVL) in the Impossible Finance but is explicitly only an estimate and only the actual active amount at the time of reporting will be considered. The actual active amount of staked funds can be found on [https://farms.impossible.finance/farms](https://farms.impossible.finance/farms). \n\nPayouts are handled by the __Impossible Finance__ team directly and are denominated in USD. However, payouts are done in __BUSD__. For Critical payouts, up to 80% of the reward may be in the project token, __IF__.",
            "assets_body": "The ImpossibleRouter01.sol smart contract is considered as out-of-scope of the bug bounty program.\n\n*Please note that the current settings in the repository are optimized for running our test cases. These settings include changing the duration of “ONE_DAY” to 50 binance smart chain blocks (as opposed to 28800) and commenting out require statements in modifiers such as onlyGovernance in ImpossiblePair.sol and setRouter in ImpossibleFactory.sol. Specifically, we are aware that with these settings, if a router is not initialized upon contract deployment, an adversary can call setRouter and link a malicious router which takes advantage of how cheapSwap in ImpossiblePair.sol doesn’t perform K invariant checks. The scope of the bug bounty covers the “production version” of these contracts in which the 3 variables are uncommented instead of commented.*",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "yaxis",
          "project": "yAxis",
          "date": "2021-01-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/D5kR4fGCSQzWojipqAMtQ/22f69658889a5d3588b78068346949cc/yaxis-logo.jpg",
          "maximum_reward": 85800,
          "is_external": false,
          "is_special": true,
          "technologies": [
            "Smart Contract"
          ],
          "kyc": false,
          "verification_link": "https://yaxis.ghost.io/yaxis-security-bug-bounty-on-immunefi/",
          "mdx": {
            "program_overview": "### Program Overview\n\nyAxis is a meta yield-aggregator designed to deploy capital to the best yield\nstrategy available. Unlike other yield aggregators, yAxis will be able to\nswitch underlying assets when deploying strategy. At its core, yAxis is a\nDAO-directed yield farming platform where YAX holders vote regularly on which\nyVault/aggregator strategy to implement with user funds.\n\nyAxis is interested in securing its smart contracts, such as those covering\nstrategy, staking, liquidity provision, and storage reference, as well as the\nYAX token contract itself and most importantly, the yAxisMetavault. yAxis is\nalso interested in securing their website, but has no rewards for bug reports\naround that at the moment.\n\n### Rewards by Threat Level\n\nRewards are distributed according to the impact of the vulnerability based on\nthe [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. The listed rewards represent the _maximum_ that will be paid out for a security bug reporting. Vulnerability reports on smart contracts must be accompanied by a Proof of Concept (POC) demonstrating the attack. \n\n| Level | Payout | Est. Current Value (USD) |\n| :-- | :-- | :-: |\n| **Critical** | 5,000 YAX | up to $85,800 |\n| **High** | 1,000 YAX | $17,160 |\n| **Medium** | 500 YAX | $8,580 |\n| **Low** | 100 YAX | $1,716 |\n\nPayouts are handled by **yAxis** directly. The payouts are based on and\ncompleted in **YAX**. A USD estimate of the current value of the token is\nprovided for reference. Estimates are updated regularly, though should not be\nrelied on.\n\n### Assets in Scope & Eligible for Bounty\n\n| Target | Type |\n|:- | :--: |\n| <https://github.com/yaxis-project/metavault> | Smart Contract - (Source Code) |\n| <https://etherscan.io/address/0xbfbec72f2450ef9ab742e4a27441fa06ca79ea6a#code> | Smart Contract - yAxisMetavault |\n\n### Assets in Scope & Ineligible for Bounty \n\nThe following assets are considered in-scope, but will not be rewarded \nwith any bounty for reports.\n\n| Target | Type |\n|:- | :--: |\n| <https://etherscan.io/address/0xeF31Cb88048416E301Fee1eA13e7664b887BA7e8#code> | Smart Contract - yAxisBar (Staking Contract) |\n| <https://etherscan.io/address/0xb1dc9124c395c1e97773ab855d66e879f053a289#code> | Smart Contract - yAxis Token |\n| <https://etherscan.io/address/0xc330e7e73717cd13fb6ba068ee871584cf8a194f#code>| Smart Contract - yAxisChef (Liquidity Provider) |\n| <https://yaxis.io> | Website |\n\nThe yAxis website includes all paths and sub-domains, DNS, and email configuration.\n\n### Prioritized Smart Contract/Blockchain Vulnerabilities\n\nWe are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n- Re-entrancy\n- Logic errors\n-- Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n### Accepted Website Vulnerabilities\n\nWe accept the following website vulnerabilities, though there is no reward for\nthem:\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users\n\n### Out of Scope & Rules\n\n**The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:**\n\n- Attacks that the reporter has already exploited himself, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Deployment/private keys/secrets in test data\n- Sybil attacks\n\n**The following vulnerabilities are not sought after for website bug reports:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "jetprotocol",
          "project": "Jet Protocol",
          "date": "2021-09-21T12:15-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4cM4NsiR3KIP8YGYIFn5bi/5e3417ce2b468538b9fa8e39b36f0e1d/Jet.jpeg",
          "maximum_reward": 75000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $75,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $75,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/jet-lab/jet-v1/",
              "type": "Smart Contract"
            },
            {
              "target": "https://devnet.jetprotocol.io/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Jet Protocol is a borrowing and lending protocol built on the Solana blockchain.\nFor more information about Jet Protocol, please visit [https://www.jetprotocol.io/](https://www.jetprotocol.io/). \n\nThis bug bounty program is focused on their smart contracts and web/app and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe following vulnerabilities are not eligible for a reward:\n\n - init_reserve does not check the owner of the pyth accounts\n\nPayouts are handled by the __Jet Protocol__ team directly and are denominated in USD. However, payouts are done in __USDC__ for all vulnerabilities High and Lower. Critical payouts are done in up to 80% in __JET__, at the discretion of the team.",
            "assets_body": "Further information about the code Jet Protocol can be found at [https://github.com/jet-lab/](https://github.com/jet-lab/). However, only those in the assets in scope table are considered as in-scope of the bug bounty program. \n\nAny asset or folder with the words “test” or “dummy” is considered as out-of-scope. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Arithmetic errors\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n  - Software Supply Chain vulnerabilities\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "beefyfinance",
          "project": "Beefy Finance",
          "date": "2021-07-15T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jsX5HSF9sDTQ0koWtnW4L/f9a7a9aa22cd78a46754b82318071828/BeefyFinance.png",
          "maximum_reward": 75000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $75,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0xD126BA764D2fA052Fc14Ae012Aef590Bc6aE0C4f#code",
              "type": "Smart Contract - polygon-bifi-maxi strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xfEcf784F48125ccb7d8855cdda7C5ED6b5024Cb3#code",
              "type": "Smart Contract - polygon-bifi-maxi vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0C0C75AF434519AB96E34EB3bbEea726324d6264#code",
              "type": "Smart Contract - curve-poly-atricrypto strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x3dab1aCB811dc4C8b2FdC77812552f4d4Efd0A8c#code",
              "type": "Smart Contract - curve-poly-atricrypto vault"
            },
            {
              "target": "https://polygonscan.com/address/0xAccf2f81F8c13e8D97ee272D141b6f4B613aB46D#code",
              "type": "Smart Contract - curve-poly-ren strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8c9d3Bc4425773BD2F00C4a2aC105c5Ad73c8141#code",
              "type": "Smart Contract - curve-poly-ren vault"
            },
            {
              "target": "https://polygonscan.com/address/0xC32CCCfF0777C145e7d658081D141ec8A38f8133#code",
              "type": "Smart Contract - boneswap-quick-wmatic-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe9CAf4DfeaB51114a619C8104C38a309ccA236E1#code",
              "type": "Smart Contract - boneswap-quick-wmatic-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0x3dE892BBc1cC1D22F069a4A985F58052244Acc5e#code",
              "type": "Smart Contract - boneswap-sushi-wmatic-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9fc153db31a5CeF1Cd326De31FEb37C7499eebC8",
              "type": "Smart Contract - boneswap-sushi-wmatic-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0x5a2448b0306D24C2ed3AE3186f32bbB023B8dCf9",
              "type": "Smart Contract - boneswap-ape-wmatic-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x7D59B0cAC35d431fe5B2F3aAED2FB70050B2113D",
              "type": "Smart Contract - boneswap-ape-wmatic-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0x7207E31f503981DC0D57cC04AD4713DCBD5C0010",
              "type": "Smart Contract - boneswap-quick-usdc-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x1001844Cb9Bc3B89a60ce4f4773dBa3B27115230",
              "type": "Smart Contract - boneswap-quick-usdc-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1Fff1654DBE0aa26cbc0e754a7BA641B89B95910",
              "type": "Smart Contract - dfyn-route-dfyn strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xad88D6B731DCb567a3E13407f1E7B0649Bad82D2",
              "type": "Smart Contract - dfyn-route-dfyn vault"
            },
            {
              "target": "https://polygonscan.com/address/0x827D4f4f92281690aD0591aFa0F90450A785199F",
              "type": "Smart Contract - dfyn-sx-dfyn strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x970283Df294f9cedD2187bf84782AB75617Be31c",
              "type": "Smart Contract - dfyn-sx-dfyn vault"
            },
            {
              "target": "https://polygonscan.com/address/0xF68536DA80F58c3dEF57fB06ADA7998a1E2Cee97",
              "type": "Smart Contract - dfyn-ez-dfyn strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x0E765383bea3a166A87a042132422f5F29fDb217",
              "type": "Smart Contract - dfyn-ez-dfyn vault"
            },
            {
              "target": "https://polygonscan.com/address/0x8c5E402F3F43958Ecb83b10aD9bE98Fd026C52c6",
              "type": "Smart Contract - dfyn-uft-dfyn strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xD239D193809b04fD24CB0Cd56A99A3F9dB069C9d",
              "type": "Smart Contract - dfyn-uft-dfyn vault"
            },
            {
              "target": "https://polygonscan.com/address/0xcd170fa0C80Ea060a9Df6bf91BfF24cBDC4e0f30",
              "type": "Smart Contract - polycat-dfyn-fish-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9f3B96a2Dd55aa904bC5476Ffe66E74a53f6b420",
              "type": "Smart Contract - polycat-dfyn-fish-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xf2F5C13686b79b92dC73F6Bb1D2663329658EC87",
              "type": "Smart Contract - polypup-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8Fa291074B9E28055fFdBCd4C1C1Dad67B9a130A",
              "type": "Smart Contract - polypup-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0xE44D57D43478e50a7CE720a407Dc43fec9ADB584",
              "type": "Smart Contract - polypup-pup strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xBe1C35d3349555Ba9eEa38AB1A21a6Db0Bb0fCdD",
              "type": "Smart Contract - polypup-pup vault"
            },
            {
              "target": "https://polygonscan.com/address/0x315324Bcd724b8CF01FfE6d04F029328f595e126",
              "type": "Smart Contract - polypup-usdc-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8Ce906F6f383c31b09B1D2A5f2c9f480b87ceb58",
              "type": "Smart Contract - polypup-usdc-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0xF8f071033bfF4100B4b010cE11F95c95950F69b6",
              "type": "Smart Contract - polypup-wmatic-bone strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x6C433f102A6b8582a43222e335C73873538161b7",
              "type": "Smart Contract - polypup-wmatic-bone vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0F5cdA7EaFC6dc0D10a131c9BD946C1F6634F9d0",
              "type": "Smart Contract - polypup-usdc-pup strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xB1893a79fcCe73aEfc878e5AC918698Ee0110444",
              "type": "Smart Contract - polypup-usdc-pup vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1Fb8021FcAB1b54B3f2C6D9D8562DC16CF1fAe21",
              "type": "Smart Contract - polypup-wmatic-pup strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x37884333d34eeE3EAe83439CE4608E69E7081116",
              "type": "Smart Contract - polypup-wmatic-pup vault"
            },
            {
              "target": "https://polygonscan.com/address/0xB63e910A2DcD6362f7F631542a700C3139b6185a",
              "type": "Smart Contract - ape-matic-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x1BE356364a1e849af2F7a513Fc46dAB6063Db485",
              "type": "Smart Contract - ape-matic-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0603141F2D39264BCE263a2107fA2045cC435b47",
              "type": "Smart Contract - ape-matic-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x584611DA226b4d4C0c4D880E6f1E0c0E8522f3AE",
              "type": "Smart Contract - ape-matic-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0xa7377CDb25BfA2889B6e4c9463Cd0858A57aB315",
              "type": "Smart Contract - quick-eth-ramp strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x94242E121F056FA7F0892452e6a17678124981c1",
              "type": "Smart Contract - quick-eth-ramp vault"
            },
            {
              "target": "https://polygonscan.com/address/0x4F0b982A75C49E3652d98a2d00BC84CCa7532AfF",
              "type": "Smart Contract - quick-usdc-rusd strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x2b17aD11c5e9553c79a18F33Df4dE565eF0ad5b0",
              "type": "Smart Contract - quick-usdc-rusd vault"
            },
            {
              "target": "https://polygonscan.com/address/0xA82b0a53Dc044C7B885D32FA4EEaA4FeD7528773",
              "type": "Smart Contract - polyyeld-ape-wmatic-yeld strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xd73AEF83c08264C5600C3a17f009B6f8c0226221",
              "type": "Smart Contract - polyyeld-ape-wmatic-yeld vault"
            },
            {
              "target": "https://polygonscan.com/address/0x46FfF3f004afeE180CF96cCa92560a94A696044B",
              "type": "Smart Contract - sushi-wbtc-ibbtc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xD35B3733c2ceaf3635bE246B2c6C42f10e5b6B78",
              "type": "Smart Contract - sushi-wbtc-ibbtc vault"
            },
            {
              "target": "https://polygonscan.com/address/0xebcAD445f52231887c493995F4413A57c09f5f00",
              "type": "Smart Contract - ape-eth-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xc24Cf5fA29E619f2D5ccbEC46F2295876c3722ff",
              "type": "Smart Contract - ape-eth-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xE81436bdf7162e46cac9D58CfAC5ec31e9475446",
              "type": "Smart Contract - ape-btc-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x76F0e4a08c1e85d020dfD7C66B991ecd4A7551AF",
              "type": "Smart Contract - ape-btc-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x35D578CBeFf8F7A4e1c3Beed0D8CC42D71A08A27",
              "type": "Smart Contract - ape-bnb-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x6888f67662d1f442C4428129e0Bdb27a275e0a65",
              "type": "Smart Contract - ape-bnb-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x453054B9C2CD3dF1c57E0866241f460B78eE3ebB",
              "type": "Smart Contract - ape-banana-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xADA7F98fb2594E76914EB593e74B348A498Ea5Bd",
              "type": "Smart Contract - ape-banana-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x966fC9Ee8500b470C653c339c8fa0a68520CC3ea",
              "type": "Smart Contract - polyyeld-sushi-wmatic-yeld strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x0Ca850eEfE051ED244846A2939e218ec6D44a0b2",
              "type": "Smart Contract - polyyeld-sushi-wmatic-yeld vault"
            },
            {
              "target": "https://polygonscan.com/address/0x7593747a19a50451bBe6E0f1D427D4F80796f684",
              "type": "Smart Contract - polyyeld-quick-usdc-yeld strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9a8390F3F74E7f367B5f948dd04495B67a54a5F4",
              "type": "Smart Contract - polyyeld-quick-usdc-yeld vault"
            },
            {
              "target": "https://polygonscan.com/address/0x703372131e77aE0c69B51e41A901315087A314D2",
              "type": "Smart Contract - sushi-usdc-bifi strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x03F69AAF4c8512f533Da46cC9eFd49C4969e3CB8",
              "type": "Smart Contract - sushi-usdc-bifi vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1a09FD524D6a7c99903648Bfa8535D43B4F215c2",
              "type": "Smart Contract - quick-pbnb-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x1A90Ea15e00a6c647478e86e3A3DB1aC1eB23cE5",
              "type": "Smart Contract - quick-pbnb-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x47c1772E850F627Bf41f52e44219d9bDab66D963",
              "type": "Smart Contract - quick-usdc-pbnb strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x61f55dc5243398D57acd5d6265e228da65C4Cb52",
              "type": "Smart Contract - quick-usdc-pbnb vault"
            },
            {
              "target": "https://polygonscan.com/address/0x4ee0f311b55Dd983FBe82A0EEEa06429726Da932",
              "type": "Smart Contract - quick-dai-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8F1F1FB23A208041e1f4Bf4A3b4E165bcCA25Bbb",
              "type": "Smart Contract - quick-dai-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x401Fa12777e303CBbFa0Ce8c95014d3CA1ee02c0",
              "type": "Smart Contract - quick-eth-fff strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xa5b0E0f38BC86723a9893B828a4B9595ecb22F42",
              "type": "Smart Contract - quick-eth-fff vault"
            },
            {
              "target": "https://polygonscan.com/address/0xaf9DD4c1d755402868fFE2A0B7C0E8a6664a0f2F",
              "type": "Smart Contract - wexpoly-wbtc-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x5c7fd860fC0072cFef2Cc4aB17CC7fF25B639d8b",
              "type": "Smart Contract - wexpoly-wbtc-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x8E82b1A03698d0597D3414F6CC5C57005480DEf4",
              "type": "Smart Contract - wexpoly-wbtc-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x75A59e8d6611e90e7A8e439Cb59D9f78e738d16F",
              "type": "Smart Contract - wexpoly-wbtc-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xE91262c6Cf7B28948EF6f8a6B554758791c31340",
              "type": "Smart Contract - wexpoly-matic-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xCB171DF46CA6FF7AfEF6c4935128204435E4F05C",
              "type": "Smart Contract - wexpoly-matic-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xC0F43f3d242fEDd9FD82e5a5856E577d908a083A",
              "type": "Smart Contract - wexpoly-polydoge-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xdf4E615e05713f9Be712bb999B3190Fd238bb77A",
              "type": "Smart Contract - wexpoly-polydoge-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x156463c7a644726994b658B5164edA0B6D68544E",
              "type": "Smart Contract - wexpoly-snx-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xf7e1226F6f98D1981e88Da328347F0E2131A2864",
              "type": "Smart Contract - wexpoly-snx-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x038A80FA19191FF6A1788cEb6f503FB0FDf83aE8",
              "type": "Smart Contract - wexpoly-link-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x23Ee6ED971ae7731F53913D9f8a45C7C1af3D6D5",
              "type": "Smart Contract - wexpoly-link-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x038A80FA19191FF6A1788cEb6f503FB0FDf83aE8",
              "type": "Smart Contract - wexpoly-aave-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x23Ee6ED971ae7731F53913D9f8a45C7C1af3D6D5",
              "type": "Smart Contract - wexpoly-aave-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x23679B038eb6f090f9b0f121A1F29b7cA3993F77",
              "type": "Smart Contract - wexpoly-dai-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xc4cC677bb8b7E6EEA6409Ee2af9F434BAB004192",
              "type": "Smart Contract - wexpoly-dai-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1C5e120604537B44B635f9c932A26Abf7bb97E4E",
              "type": "Smart Contract - wexpoly-usdc-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x3a3a9784Af130d692E19A3f1C1b13eF44301D0f7",
              "type": "Smart Contract - wexpoly-usdc-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0x107711a7f61c2867B72E0Dd926755dDeEe75F9f0",
              "type": "Smart Contract - wexpoly-matic-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x5E7156F7c0B5E2005000C38beb38540ba9c283df",
              "type": "Smart Contract - wexpoly-matic-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0xea025B73A536F876d63022629B1d4a2271556056",
              "type": "Smart Contract - quick-usdc-mimatic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xeCBb84E73760d0E22BDBeE79490c691386B5008F",
              "type": "Smart Contract - quick-usdc-mimatic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x9ED77C14DE83a24c9E1Ca97472a22a86d90EEA0c",
              "type": "Smart Contract - quick-usdc-mimatic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x0B7FEA4506006f1bA0718585cFAb638424A86d94",
              "type": "Smart Contract - wexpoly-usdc-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x58C55B5675B106b440635E2c550A771f4E256D35",
              "type": "Smart Contract - wexpoly-usdc-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x6a440102015bf4D81D56fBc2fd4F27797D183931",
              "type": "Smart Contract - wexpoly-wex-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe3B5a0d5dFDCD6dE7e22a5c2B6b957aB76d2A085",
              "type": "Smart Contract - wexpoly-wex-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0xcb6e386Ad643a6D77C940BF69303cEBD34c04757",
              "type": "Smart Contract - wexpoly-wex strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xcb6e386Ad643a6D77C940BF69303cEBD34c04757",
              "type": "Smart Contract - wexpoly-wex vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0D62f1b1BF511E155e357184dcfC1e8D54B41a5f",
              "type": "Smart Contract - wexpoly-wex-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe09888EEab19bce85e67eDC59521F3f290B1BCcE",
              "type": "Smart Contract - wexpoly-wex-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xb15B8E50b79b4D6723DC297aD6313B9Dc3c51Db3",
              "type": "Smart Contract - wexpoly-bifi-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x247303D4Be227Aa87Bd52F05aDDAD772794DE394",
              "type": "Smart Contract - wexpoly-bifi-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x12B5EC1cFa07732540F3d9D4eCF040328bc1EEdC",
              "type": "Smart Contract - sushi-eth-wfil strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xA4fB94990f99A8C1290e83d40DB9C648fD868D14",
              "type": "Smart Contract - sushi-eth-wfil vault"
            },
            {
              "target": "https://polygonscan.com/address/0x197c055e30c2e882A1BE6822480c688100658BEd",
              "type": "Smart Contract - quick-usdc-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x0dFd8c4dd493d8f87Be362878E41537Ca7Ee4d9e",
              "type": "Smart Contract - quick-usdc-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0x4b0e4CDEA00C90F786bd817751159f46EA38A58D",
              "type": "Smart Contract - quick-quick-uni strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xaF34573353aBd160889889D52d7841B2bBCE7Cf9",
              "type": "Smart Contract - quick-quick-uni vault"
            },
            {
              "target": "https://polygonscan.com/address/0xD208C42cd08a5CaD8C53add2365153e8e24EbdF9",
              "type": "Smart Contract - quick-link-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xdD32ca42a5bab4073D319BC26bb4e951e767Ba6E",
              "type": "Smart Contract - quick-link-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x53F816063523D9883C83863CbD5D8EAF9Ffc4641",
              "type": "Smart Contract - polycat-fish strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xcC16BbE4987920a17F5C4a92C1Ab4dbDfB0B9790",
              "type": "Smart Contract - polycat-fish vault"
            },
            {
              "target": "https://polygonscan.com/address/0x2F6Ebc03469De09FE6D933e4FA56772dF400BfA6",
              "type": "Smart Contract - quick-usdc-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x5d4B83B3011B1E14e55185c5D432987e76f6DE3C",
              "type": "Smart Contract - quick-usdc-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x9B14a16609b0Bf5DA858115b4537e2CD01B3133C",
              "type": "Smart Contract - quick-dai-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9DA4048550C1a73686E594f726310F0b0585fBA3",
              "type": "Smart Contract - quick-dai-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x4E0e85692b239e57128103b4Ad6f39Ac3BBE0c15",
              "type": "Smart Contract - quick-fff-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x2D4cf116A59e24Dd0aB8821c93AE87658a9483b6",
              "type": "Smart Contract - quick-fff-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x3777a06B71B2Aaf105e855693C56768117712B6F",
              "type": "Smart Contract - aave-wbtc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xD3395577febc6AdaB25490a69955ebC47040766C",
              "type": "Smart Contract - aave-wbtc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x55a10618c7E9489ceE047705cD003df6d9e09195",
              "type": "Smart Contract - aave-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x77276a7c9Ff3a6cbD334524d6F1f6219D039ac0E",
              "type": "Smart Contract - aave-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x2ABB0ea3A5C038f60E677Bf14d2F6095786650Ae",
              "type": "Smart Contract - polycat-sushi-fish-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xefA8E30cE4cc433cEA1B3b6006D69731A4FBd485",
              "type": "Smart Contract - polycat-sushi-fish-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x92E586d7dB14483C103c2e0FE6A596F8b55DA752",
              "type": "Smart Contract - polycat-quick-fish-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x7eE71053102d54Fc843BaEBaf07277C2b6dB64f1",
              "type": "Smart Contract - polycat-quick-fish-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x441b8Ad6Cfa6707E7A8F1398c2067996611fbc66",
              "type": "Smart Contract - sushi-grt-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8efCf419813F9E018cCaCda36151e5079c274fa4",
              "type": "Smart Contract - sushi-grt-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x3bb6D727622A35816916C3e04920ADd7800BAB0E",
              "type": "Smart Contract - sushi-frax-fxs strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xddD5F39d044Dbaeef7b348cf04C3628acd3F1D8f",
              "type": "Smart Contract - sushi-frax-fxs vault"
            },
            {
              "target": "https://polygonscan.com/address/0xE4cd42e17bbc54455c5855eCF4Bd46D51dA5133C",
              "type": "Smart Contract - sushi-frax-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x5B19A2e8E5878cF2b1E9b1AC7CEA50346671B2Fc",
              "type": "Smart Contract - sushi-frax-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x7fB420eB7D5B19131f40E8D0422202cF0B46d458",
              "type": "Smart Contract - sushi-wmatic-woofy strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x544551E4E7D7bDd1CfbD55F07e304F5C9fD514Dd",
              "type": "Smart Contract - sushi-wmatic-woofy vault"
            },
            {
              "target": "https://polygonscan.com/address/0xeb38761E6b58Bb9acB4F52077d9eEbFf7D0248Bd",
              "type": "Smart Contract - sushi-usdc-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x75424BE5378621AeC2eEF25965f40FeB59039B52",
              "type": "Smart Contract - sushi-usdc-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0x98F332EC4D39fB943080813B381b88D57b432124",
              "type": "Smart Contract - sushi-snx-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x3AD9cd8d75f7a711Caea58e725425A9dC0D249c4",
              "type": "Smart Contract - sushi-snx-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xa425DeadFf443f3574F02585CE5154BBd5D14213",
              "type": "Smart Contract - quick-bifi-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x21bA98fCb000dFeD8eC3B94cB41BeA51A601A94c",
              "type": "Smart Contract - quick-bifi-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xA9319b8F327dBB744c63e6b9FfaDf9A93C30687c",
              "type": "Smart Contract - quick-bifi-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xCC2755476B0573F0ee0D5a754Bb6fE720c3641Bb",
              "type": "Smart Contract - quick-bifi-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x658F5577b5a161A4aC2F0bb513af49ece812f077",
              "type": "Smart Contract - quick-degen-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe942A8Ef245EAC3CEa951486e3Df5764C79b9621",
              "type": "Smart Contract - quick-degen-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x05b6e52227985C401eDd5d1635DcEa204857a81d",
              "type": "Smart Contract - quick-cc10-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x226a18Fb5eb7d9d1c4Eb1b5Cff957E0F1e3fd9Ed",
              "type": "Smart Contract - quick-cc10-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1848FBA9Ac7B4783F513d336171037941a637c55",
              "type": "Smart Contract - quick-defi5-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x191E0b3B023fd8911c1D7632086A46C0D2dB39ed",
              "type": "Smart Contract - quick-defi5-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x15b0A1c6463261Ef4941b9212F09d54f2CD51899",
              "type": "Smart Contract - quick-btc-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x91a55E4b057119e20334258f7C5EAB8822491CEb",
              "type": "Smart Contract - quick-btc-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x75bC3FC2Cd3756f0dC7dc5211CE44fAcDd9B005E",
              "type": "Smart Contract - quick-matic-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xC1A2e8274D390b67A7136708203D71BF3877f158",
              "type": "Smart Contract - quick-matic-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0xB682a2F1e6C87819e9aDEdBe366548B59Ab122E8",
              "type": "Smart Contract - quick-vision-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xAbA81D550C326DFf2cE0D31bC7Aa6289d576591E",
              "type": "Smart Contract - quick-vision-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x748f243931b841F2C4d6f298abB85d7A23FE7c2a",
              "type": "Smart Contract - curve-am3crv strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xAA7C2879DaF8034722A0977f13c343aF0883E92e",
              "type": "Smart Contract - curve-am3crv vault"
            },
            {
              "target": "https://polygonscan.com/address/0xaEaF5294Cc6FAcB023c0999A0b1786C4C0b3d520",
              "type": "Smart Contract - quick-degen-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xF7A5eC9168B4C5688b3ad599Aa5c8E1922fEacAE",
              "type": "Smart Contract - quick-degen-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x9e6d524b000066e60284E2Ee14437d071B6b498F",
              "type": "Smart Contract - quick-cc10-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x6F6bbbCA49b4b2cE0E27eb0156977048AC3434B9",
              "type": "Smart Contract - quick-cc10-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x9E75f8298e458B76382870982788988A0799195b",
              "type": "Smart Contract - pzap-pzap-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xBA4FA9A5e1e573fA5267970238af5Edf40727315",
              "type": "Smart Contract - pzap-pzap-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x6677c03B2c7Da09dfbD869daeec3ccFd4eCC4B5F",
              "type": "Smart Contract - pzap-pzap-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xf2984c27B963A14F9f3B7326096c54fb05d5b9AF",
              "type": "Smart Contract - pzap-pzap-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xc7506185DD847346B34e495C3Ffd8F9d34824F5F",
              "type": "Smart Contract - cometh-bifi-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9649e6E5c689f21BC27B47CE4177f7c5f7281E20",
              "type": "Smart Contract - cometh-bifi-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xd8d7DB8272C02fcf784a6794b4e51647258c0660",
              "type": "Smart Contract - cometh-bifi-must strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x66b3d910c30f2305EA0078E06DF65e0c1745ceF0",
              "type": "Smart Contract - cometh-bifi-must vault"
            },
            {
              "target": "https://polygonscan.com/address/0x57FdEB65b71e6aD212088E63E85825e314F2Ea62",
              "type": "Smart Contract - aave-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x1d23ecC0645B07791b7D99349e253ECEbe43f614",
              "type": "Smart Contract - aave-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x8F755873546F4D0EDf7d41fF8604C8A632113eB7",
              "type": "Smart Contract - aave-aave strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe4b3CCbB1E48c579Ea3D764Fb258Bc908e46487E",
              "type": "Smart Contract - aave-aave vault"
            },
            {
              "target": "https://polygonscan.com/address/0xb29cCE04365400409d476e95410547275D1F86Cf",
              "type": "Smart Contract - aave-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x9B36ECeaC46B70ACfB7C2D6F3FD51aEa87C31018",
              "type": "Smart Contract - aave-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0x4Dcbd7A18d04343aFa534f945ad13E096ebd9Ae1",
              "type": "Smart Contract - aave-usdc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xE71f3C11D4535a7F8c5FB03FDA57899B2C9c721F",
              "type": "Smart Contract - aave-usdc vault"
            },
            {
              "target": "https://polygonscan.com/address/0xCF0354f8dAB741b889e753cCe1656327fe6ce474",
              "type": "Smart Contract - sushi-crv-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xE695fCeD8fD93eeE54204a7fC33323a60d41865A",
              "type": "Smart Contract - sushi-crv-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x5FCcFcd07D03FfdDa3A560d3af15d2bd7AaeE21d",
              "type": "Smart Contract - sushi-usdc-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xB6B89a05ad8228b98d0D8a77e1a695c54500db3b",
              "type": "Smart Contract - sushi-usdc-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0536984a70BE296A35feD83DC8fF5d30338AbeA1",
              "type": "Smart Contract - sushi-link-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xaE65a66B3c7f8cc1ba71cEA740C953aBa0F3Ce8b",
              "type": "Smart Contract - sushi-link-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xe1B9EB8eAf3F278800AcE13a815DDdc24673F0C6",
              "type": "Smart Contract - quick-mocean-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x82303a4b2c821204A84AB2a068eC8EDf3Bc23061",
              "type": "Smart Contract - quick-mocean-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x5E70Ad3438Fe87e0ec89CF15a53aFb2caC39cC6C",
              "type": "Smart Contract - quick-any-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x2849095eE44eCd5f60Ed04f94e5BB45623A8e75a",
              "type": "Smart Contract - quick-any-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x57b3D28fe4824d42c1F8d2786B89bC89e8c68d66",
              "type": "Smart Contract - quick-frax-quick strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x442ca31De7E6732455e60e3641Ac076fa7a0905f",
              "type": "Smart Contract - quick-frax-quick vault"
            },
            {
              "target": "https://polygonscan.com/address/0x71e2c040F3B9670C693215509A0c0846D221756a",
              "type": "Smart Contract - sushi-aave-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x866a910F3375d0dEBDdD904A36B3940aFcD29900",
              "type": "Smart Contract - sushi-aave-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xB982421883c5c022181b67cBC6b4709A564A6728",
              "type": "Smart Contract - sushi-eth-dai strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x6b6ca47520dDC9333B8bD09a1e64204648B63274",
              "type": "Smart Contract - sushi-eth-dai vault"
            },
            {
              "target": "https://polygonscan.com/address/0x170712B04A24FdBCC021Dd461Afd048c8cF2348d",
              "type": "Smart Contract - sushi-btc-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x6530E351074f1f9fdf254dC7d7d8A44324E158a4",
              "type": "Smart Contract - sushi-btc-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xc4cb1Dc51eAD37fD19d0C24EC6136Dbb639789cA",
              "type": "Smart Contract - sushi-eth-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xE8417099971151CD5CfAE264e25634Fac05cA2b3",
              "type": "Smart Contract - sushi-eth-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0xB4cc236af16e8FBEf8600C2D482901E84AB723c4",
              "type": "Smart Contract - sushi-usdc-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xE4DB97A2AAFbfef40D1a4AE8B709f61d6756F8e1",
              "type": "Smart Contract - sushi-usdc-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x8A8E3aBAb418671bdb7A47E45d2Fcd7726e46D74",
              "type": "Smart Contract - sushi-matic-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xC8e809a9180d637Cc23dAf60b41B70CA1ad5Fc08",
              "type": "Smart Contract - sushi-matic-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xa54e6dc91FCb22a24437e8650266BfE9590a2820",
              "type": "Smart Contract - cometh-azuki-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xe95d14D09a8F6034C582bd993A2F2aA8ecEC72f0",
              "type": "Smart Contract - cometh-azuki-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xfb7344a4cF25CDe5aaF6415107a8deF769FC200B",
              "type": "Smart Contract - cometh-doki-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x383489a0A5deA3f1499c638e0258F7e6a68a253f",
              "type": "Smart Contract - cometh-doki-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xdd3E5c7787eB38a362bBF3D395FC9f27924B7317",
              "type": "Smart Contract - quick-usdc-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x4462817b53E76b722c2D174D0148ddb81452f1dE",
              "type": "Smart Contract - quick-usdc-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x0BF58A328C7739D8b097B1d4199f48AA3F1b2788",
              "type": "Smart Contract - cometh-must-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x7CE2332fAF6328986C75e3A8fCc1CB79621aeB1F",
              "type": "Smart Contract - cometh-must-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x481E3e463a78eC1DC6f02e664491C7d94F6d82a5",
              "type": "Smart Contract - quick-eth-btc strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xf26607237355D7c6183ea66EC908729E9c6eEB6b",
              "type": "Smart Contract - quick-eth-btc vault"
            },
            {
              "target": "https://polygonscan.com/address/0x470052FEd23A2887e3e679c3D8544529DA8B272f",
              "type": "Smart Contract - quick-ubt-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x942aa6324E5D0C102d3Ad6607495ac5e798a991a",
              "type": "Smart Contract - quick-ubt-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0xc1C1eB984218B9570beA53C0Dad14283a6E9E81C",
              "type": "Smart Contract - quick-defi5-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x53e674D5cC969930420d73E4b79Ee0D46cCdf6c4",
              "type": "Smart Contract - quick-defi5-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x88F2ADA49F24fF14005633e66050f763b2E07b7f",
              "type": "Smart Contract - quick-wise-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x76cE86B1e1b7a3983B26F7E57B2A0C8896f7eB0D",
              "type": "Smart Contract - quick-wise-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x06A1f520555222758eaE4dA0573351FdaD1e7843",
              "type": "Smart Contract - quick-cel-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xeF1870FddC25586636bf8a3d7cCf4d298f6E072e",
              "type": "Smart Contract - quick-cel-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x3177389Fa69a226f52A079FDd0a564C813baB53B",
              "type": "Smart Contract - quick-quick-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x66df1B2d22759D03A9f37BAaAc826089e56a5936",
              "type": "Smart Contract - quick-quick-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x1F38c4b1D4990652FC5E433583e81f4F828988a0",
              "type": "Smart Contract - quick-aave-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x752948B4493d2Ee09c95F944A76005aEBF410087",
              "type": "Smart Contract - quick-aave-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x9C50880a547A7a247E2C8cA5b444624D3A2AB81B",
              "type": "Smart Contract - quick-link-eth strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xaB4105375FbE5F502B0da986F46ADf7a21762e52",
              "type": "Smart Contract - quick-link-eth vault"
            },
            {
              "target": "https://polygonscan.com/address/0x2C3d263b560b2700fcf19e78f2EBD4d59EB7b3c5",
              "type": "Smart Contract - quick-eth-usdt strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xC422261EdC5dB679CAd9BC403e886351De540e77",
              "type": "Smart Contract - quick-eth-usdt vault"
            },
            {
              "target": "https://polygonscan.com/address/0x46CB7f33E4cc10B34c0d0fece66fd4830B869B46",
              "type": "Smart Contract - quick-eth-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8b89477dFde285849E1B07947E25012206F4D674",
              "type": "Smart Contract - quick-eth-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0x79807CCE3e75dcDb8641C834e8065dD1Cee12a2A",
              "type": "Smart Contract - quick-quick-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xa008B727ddBa283Ddb178b47BB227Cdbea5C1bfD",
              "type": "Smart Contract - quick-quick-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xb0F9c6FBcfE226EEAD3AE8b019ce4666cE223a78",
              "type": "Smart Contract - cometh-eth-matic strategy"
            },
            {
              "target": "https://polygonscan.com/address/0xa5aaE3a55cA356C62b5425AA4bFC212542B17777",
              "type": "Smart Contract - cometh-eth-matic vault"
            },
            {
              "target": "https://polygonscan.com/address/0xA338D34c5de06B88197609956a2dEAAfF7Af46c8",
              "type": "Smart Contract - cometh-matic-must strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x7f6fE34C51d5352A0CF375C0Fbe03bD19eCD8460",
              "type": "Smart Contract - cometh-matic-must vault"
            },
            {
              "target": "https://polygonscan.com/address/0xf6fD90FE8f057a63F0368B0B551D5e52C7Ae821F",
              "type": "Smart Contract - cometh-usdc-must strategy"
            },
            {
              "target": "https://polygonscan.com/address/0x8a198BCbF313A5565c64A7Ed61FaA413eB4E0931",
              "type": "Smart Contract - cometh-usdc-must vault"
            },
            {
              "target": "https://polygonscan.com/address/0x540A9f99bB730631BF243a34B19fd00BA8CF315C",
              "type": "Smart Contract - Zap QuickSwap"
            },
            {
              "target": "https://polygonscan.com/address/0x872c9DCE4B107042933AFD51E8A704631f7EE076",
              "type": "Smart Contract - Zap Cometh"
            },
            {
              "target": "https://polygonscan.com/address/0xf039fe26456901F863c873556f40fb207C6c9C18",
              "type": "Smart Contract - Zap Sushi"
            },
            {
              "target": "https://polygonscan.com/address/0x0EA7b115D96C4dF61B3e7d6757f0050F23492929",
              "type": "Smart Contract - Zap Wault"
            },
            {
              "target": "https://polygonscan.com/address/0xaAa3477c6b326e2E416Af7506A30F4519bC9960F",
              "type": "Smart Contract - Zap ApeSwap"
            },
            {
              "target": "https://polygonscan.com/address/0x1A53c6FCa349c23f573CEdd3F8AFE70c02CcEC39",
              "type": "Smart Contract - Zap DYFN"
            },
            {
              "target": "https://app.beefy.finance/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Beefy Finance is a Decentralized, Multi-Chain Yield Optimizer platform that allows its users to earn compound interest on their crypto holdings. Through a set of investment strategies secured and enforced by smart contracts, Beefy Finance automatically maximizes the user rewards from various liquidity pools (LPs),‌ ‌automated market making (AMM) projects,‌ ‌and‌ ‌other yield‌ farming ‌opportunities in the DeFi ecosystem.\nThe main product offered by Beefy Finance are the 'Vaults' in which users stake their crypto tokens. The investment strategy tied to the specific vault will automatically increase the user’s deposited token amount by compounding arbitrary yield farm reward tokens back into their initially deposited asset. Despite what the name 'Vault' suggests, user funds are never locked in any vault on Beefy Finance: users can always withdraw at any moment in time.\n\nFor more information about Beefy Finance, please visit [https://www.beefy.finance/](https://www.beefy.finance/).  \n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of the following negative impacts:\n\n  - Significant Vault hack/exploit\n  - Theft of Governance Funds \n  - Website down/DDOS attack",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nAll bug reports must come with a suggestion on how to fix the vulnerability in order to be considered for a reward.\n\nPayouts are handled by the __Beefy Finance__ team directly and are denominated in USD. Payouts are done in a stablecoin, __BTC__, or __ETH__, at the discretion of the team.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in an impact stated in the Impacts in Scope section:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "penguinfinance",
          "project": "Penguin Finance",
          "date": "2022-01-06T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1YIMKBKEHrdzG17MsGl0ix/3f5daddef743cd72556cbdd9ce35a38e/Screenshot_2021-12-17_at_4.11.22_PM.png",
          "maximum_reward": 70000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $70,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cchain.explorer.avax.network/address/0xe896CDeaAC9615145c0cA09C8Cd5C25bced6384c/read-contract",
              "type": "Smart Contract - PenguinToken"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x256040dc7b3CECF73a759634fc68aA60EA0D68CB/contracts",
              "type": "Smart Contract - Penguin Igloos V2 / IglooMaster"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x20901c664765c910623A9F1fed3e35d1B90DDEd8/contracts",
              "type": "Smart Contract - PenguinNestMigrator"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xc96D1131B40b95c75d0336574e8e4256a0A074A1/contracts",
              "type": "Smart Contract - Club Penguin / PenguinIceberg"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xC8e5bBBfE68D4189B601B25815CdcACf60b92BA9/contracts",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0xb1a3f09D7A5dFB45600931E18375501973772426/transactions",
              "type": "Smart Contract - PenguinLaunchpadStaking"
            },
            {
              "target": "https://cchain.explorer.avax.network/address/0x90D2652B7abB628fDf907ed4ECc4711EA8ffBAf9/read-contract",
              "type": "Smart Contract - PenguinBoosterRocket"
            }
          ],
          "mdx": {
            "program_overview": "The Penguin Finance protocol is bringing yield-farming, staking, launchpad and more functionalities to the Avalanche Network. Penguin Finance helps you maximize your yield through a full-fledged ecosystem with yield-aggregation, farming, staking, fundraising, and gaming dApps\n\nFor more information about Penguin Finance, please visit [https://www.penguinfinance.io/](https://www.penguinfinance.io/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll smart contract bug reports must come with a suggestion for a fix in order to be considered for a reward.\n\nCritical vulnerabilities are further capped at 15% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team. However, there is a minimum of __USD 20 000__ for Critical bug reports. \n\nThe Penguin Finance team may be willing to accept and reward bug reports below Critical and High, as well as Critical and High smart contract bugs for assets not listed in the assets in scope table. Bug bounty hunters may submit them to this bug bounty program for consideration, but Penguin Finance is not obliged to reward the bug bounty hunter at its own discretion, even if the vulnerability is deemed valid. \n\nPayouts are handled by the __Penguin Finance__ team directly and are denominated in USD. However, payouts are done in __AVAX__ or __PEFI__, at the discretion of the team.",
            "assets_body": "All smart contracts of Penguin Finance can be found at [https://github.com/Penguin-Finance/penguin-contracts-deployed](https://github.com/Penguin-Finance/penguin-contracts-deployed). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Solidity/EVM details not otherwise considered\n    - including integer over-/under-flow\n    - including unhandled exceptions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "marsecosystem",
          "project": "Mars Ecosystem",
          "date": "2021-09-08T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7KJxasjqM6UtmFBkXCD2Mj/4fc1b19a942ac6be1e3f1ba945ad5491/Mars_Ecosystem.jpeg",
          "maximum_reward": 60000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $60,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x00789Cfb69499c65ac9A3a68fb4917c9b4FcA2a7",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://bscscan.com/address/0x7859B01BbF675d67Da8cD128a50D155cd881B576",
              "type": "Smart Contract - XMS"
            },
            {
              "target": "https://bscscan.com/address/0x243DDd2E42CEb93349E726e2367EDeC6339aba75",
              "type": "Smart Contract - IMO"
            },
            {
              "target": "https://bscscan.com/address/0x6f12482D9869303B998C54D91bCD8bCcba81f3bE",
              "type": "Smart Contract - MarsSwapFactory"
            },
            {
              "target": "https://bscscan.com/address/0xb68825C810E67D4e444ad5B9DeB55BA56A66e72D",
              "type": "Smart Contract - MarsSwapRouter"
            },
            {
              "target": "https://bscscan.com/address/0x3b550BBFaC32Ec434F858a8135fa17C40636583B",
              "type": "Smart Contract - MarsStake"
            },
            {
              "target": "https://bscscan.com/address/0x01D152fF991E76b6cb310387c07cAfdFda790a25",
              "type": "Smart Contract - AirDrop"
            },
            {
              "target": "https://bscscan.com/address/0xC35a8BdBB93abFAb362aF6dC3383cD2c6aEA6cBc",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://bscscan.com/address/0xc7B8285a9E099e8c21CA5516D23348D8dBADdE4a",
              "type": "Smart Contract - LiquidityMiningMaster"
            },
            {
              "target": "https://bscscan.com/address/0xb7881F5142245531C3fB938a37b5D2489EFd2C01",
              "type": "Smart Contract - MarsFarmV2"
            },
            {
              "target": "https://bscscan.com/address/0x22D8d50454203bd5a41B49ef515891f1aD9f3e53",
              "type": "Smart Contract - LiquidityMiningMaster V1.1"
            },
            {
              "target": "https://bscscan.com/address/0x888247F60616b2e0372b36724a3907f5Cca2B349",
              "type": "Smart Contract - MarsStratX2"
            },
            {
              "target": "https://bscscan.com/address/0x381Facb9282770a5E3Ac6c8637096b442039C3dB#contracts",
              "type": "Smart Contract - VestingMaster"
            },
            {
              "target": "https://app.marsecosystem.com",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "The fundamental issue within most current stablecoin protocols is positive externality. The cost of producing and maintaining stablecoins are incurred by the protocol and its users (minters, share holders, bond holders). Whereas the majority of the value comes from the transaction of stablecoins within DeFi primitives and is captured by these DeFi primitives.\n\nMars Ecosystem solves this problem by integrating the creation and the use of stablecoin into one stable yet decentralized ecosystem. The relationship between Mars Stablecoin and Mars DeFi platform creates a positive feedback loop and generates a flywheel effect.\n\nMars Stablecoin (USDM) is price stable, capital efficient, scalable and decentralized. It is an over-backed stablecoin: the redeemability of USDM is backed by the Mars Ecosystem Governance Token (XMS). The market cap of XMS is always multiple times the market cap of Mars Stablecoin which ensures that the stablecoin can be redeemed 1:1 at any given time.\n\nMars Swap provides liquidity between Mars Stablecoin and all the other tokens, making USDM the ideal medium of exchange and store of value for DeFi. The incurred transaction fees generated at Mars Swap are used to back the stability of Mars Stablecoin.\n\nFor more information about Mars Ecosystem, please visit [https://marsecosystem.com/](https://marsecosystem.com/).    \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization\n  - Smart contracts fails to delivery promised returns based on APR",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nBugs reported in the following audits are not eligible for a reward:\n\n[SlowMist Audit](https://github.com/MarsEcosystem/mars-resource/blob/master/audit/SlowMist%20Audit%20Report%20-%20Mars%20Ecosystem%20-%20EN.pdf)\n\n[CertiK Audit](https://github.com/MarsEcosystem/mars-resource/blob/master/audit/Certik%20Audit%20Report%20-%20Mars%20Ecosystem.pdf)\n\nPayouts are handled by the __Mars Ecosystem__ team directly and are denominated in USD. However, payouts are done in __XMS__ or __BUSD__, at the discretion of the team.",
            "assets_body": "All smart contracts of Mars Ecosystem can be found at [https://github.com/MarsEcosystem](https://github.com/MarsEcosystem). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Incorrect or unintended behavior relating to money. (ie. user input is for 10 USDC on the app, and we actually send 100 USDC to the smart contract, \n  - We are pointing to an incorrect smart contract\n  - Cross-site request forgery (CSRF)\n  - Cross-site scripting (XSS)",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "paladin",
          "project": "Paladin",
          "date": "2021-08-09T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2d17V6i5n9rBRtueyzx7vq/c0c8df4a684850a6ce9466971e1b8c17/paladin.png",
          "maximum_reward": 60000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $60,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://kovan.etherscan.io/address/0x2ad0827e1Fca16Cf937DaDedF5cE81Ed0848bE28#code",
              "type": "Smart Contract - PalPool"
            },
            {
              "target": "https://kovan.etherscan.io/address/0xd7b24dCb2B250FAdEa3CfD175F502B9B55cB4A4D#code",
              "type": "Smart Contract - PalToken"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x62364874FB078C1B839b3234038Bf394b3D29205#code",
              "type": "Smart Contract - PalPool"
            },
            {
              "target": "https://kovan.etherscan.io/address/0xA4Bd05F52735CecB54f9A21AB61a9d7aD90077a1#code",
              "type": "Smart Contract - PalToken"
            },
            {
              "target": "https://kovan.etherscan.io/address/0xd1Fe8B9E5B038cdE233A7C60Ca8b70ff2164dAAB#code",
              "type": "Smart Contract - PalPoolStkAave"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x875195F9A9b7605DD25c368eCF777e91a47601d7#code",
              "type": "Smart Contract - PalToken"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x60F1604c521dE75B1A1c8Ee48614F08BBd01bD3C#code",
              "type": "Smart Contract - BasicDelegator"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x3Ad52159D14117535ef516bC3EDcDf353453E500#code",
              "type": "Smart Contract - AaveDelegator"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x9Be38C2Dc14a4BaD40b588d65Fe377C9F9c46495#code",
              "type": "Smart Contract - AaveDelegatorClaimer"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x4F6c21302a0A4a50512c7dD58fDC2B2b4788f9D6#code",
              "type": "Smart Contract - PalLoanToken"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x12692B01B2c0fc42c7daaf0a9Cb8a0B198916156#code",
              "type": "Smart Contract - PaladinController"
            },
            {
              "target": "https://kovan.etherscan.io/address/0x037Cea58aCd888115792bceEe7CAdba3d633860a#code",
              "type": "Smart Contract - InterestCalculator"
            }
          ],
          "mdx": {
            "program_overview": "Paladin is a decentralized, non-custodial governance lending protocol where users can either loan the voting power in their governance token, or borrow some voting power.\n\nDepositors stake governance tokens or derivatives that grant voting power in exchange for yield, while borrowers can leverage their voting power to gain more influence temporarily. \n\nPaladin is a work in progress currently on the Kovan testnet. Once the platform is on mainnet, this bug bounty program will be updated.\n\nFor more information about Paladin, please visit [https://www.paladin.vote/](https://www.paladin.vote/). \n\nThe bug bounty program covers its smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Override of smart contracts ownership",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC and a suggestion for a fix. \n\nThis bug bounty program has a total initial budget of USD 75 000. If there are bug reports received over a short span of time that are validated, the rewards are distributed on a first-come-first-served basis. Afterwards, the bug bounty program will be paused until mid-october 2021 at the latest and rewards will be distributed then.\n\nPayouts are handled by the __Paladin__ team directly and are denominated in USD. Payouts are done in __USDC__.",
            "assets_body": "All contracts can be found at [https://github.com/PaladinFinance/Paladin-Protocol](https://github.com/PaladinFinance/Paladin-Protocol). However, only the contracts listed in the table are counted as within the scope of the bug bounty program. While the GitHub is private, please email valentin@paladin.vote for access. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for 1 hour or more\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Override of smart contracts ownership",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Missing access controls / unprotected internal or debugging interfaces\n  - Exploit of delegatecalls in the smart contracts to steal funds\n  - Upgradability issues",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques -> But only for problematic implementations resulting in flaws\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gnosis",
          "project": "Gnosis",
          "date": "2021-06-18T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3R78sUBULidTyr2PXjiyze/293daca11f9430b2e1aef76b064e75bd/Gnosis__2_.jpeg",
          "maximum_reward": 54000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "high",
              "payout": "Up to USD $54,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $10,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [],
          "mdx": {
            "program_overview": "Gnosis builds new market mechanisms for decentralized finance. Our interoperable product lines allow you to securely create, trade, and hold digital assets on Ethereum:\n\n • [Gnosis Safe](https://gnosis-safe.io/), the most trusted platform for managing digital assets on Ethereum, provides critical infrastructure for DAOs and DeFi while setting the standard for user-controlled fund storage. We’re trusted by users like Vitalik Buterin, and key projects like Gitcoin, [to secure >$21Billion in ERC-20s and NFTs](https://duneanalytics.com/tschubotz/gnosis-safe_2).\n\n• [Gnosis Protocol (GPv2)](https://gnosis.io/protocol/) leverages batch auctions to provide MEV protection, plus integration with liquidity sources across DEXs to offer traders the best prices. [CowSwap](https://cowswap.exchange/#/swap), is a proof-of-concept dapp (decentralized application) built on Gnosis Protocol V2 (GPv2). \n\nThe bug bounty programs are focused around their smart contracts and are primarily concerned with the loss of user funds.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing subjects from consequence of exploitation, to privilege requirements, to likelihood of a successful exploit.\n\nThe rewards shown here are reflective of the maximum amount of rewards for all the Gnosis bug bounty programs on Immunefi. \n\nThe Gnosis core development team, employees, and all other people paid by Gnosis, directly or indirectly (including the external auditors), are not eligible for rewards for any Gnosis bug bounty program.\n\nIn order to be eligible for a reward, bug reports must include an explanation of how the bug can be reproduced, a failing test case, a valid scenario in which the bug can be exploited. If a fix that makes the test case pass is provided, an additional __USD 4 000__ is provided for critical vulnerabilities, which is reflected in the maximum amount quoted here.\n\nIn addition to the Immunefi Severity Classification System, additional information is provided for each severity level in each respective Gnosis bug bounty program. In case of discrepancies between this information and the Immunefi Severity Classification System, this information will prevail.\n\nPayouts are handled by the respective representing group or organization of Gnosis directly and are denominated in USD. However, payouts are done in __ETH__, __DAI__, or __GNO__, depending on the Gnosis bug bounty program.\n\n__Bug Bounty Programs__\n\n| Target |   Type      | \n|-------|--------------|\n| https://immunefi.com/bounty/gnosissafe/  | Gnosis Safe |\n| https://immunefi.com/bounty/gnosisprotocolv2/ | Gnosis Protocol V2 |",
            "assets_body": null,
            "prioritized_vulnerabilities": "Provided within each Gnosis bug bounty program",
            "out_of_scope_and_rules": "Provided within each Gnosis bug bounty program."
          }
        },
        {
          "id": "gnosisprotocolv2",
          "project": "Gnosis Protocol V2",
          "date": "2021-06-15T12:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/52KySvMaXM8rslI5JRh9mP/0f7b3bf9802fcab2b92d274e1e53327a/Gnosis__1_.jpeg",
          "maximum_reward": 54000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $54,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $10,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/GPv2AllowListAuthentication.sol",
              "type": "Smart Contract - GPv2AllowListAuthentication"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2EIP1967.sol",
              "type": "Smart Contract - GPv2EIP1967"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/GPv2Settlement.sol",
              "type": "Smart Contract - GPv2Settlement"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/mixins/GPv2Signing.sol",
              "type": "Smart Contract - GPv2Signing"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/mixins/StorageAccessible.sol",
              "type": "Smart Contract - StorageAccessible"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2Interaction.sol",
              "type": "Smart Contract - GPv2Interaction"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2Order.sol",
              "type": "Smart Contract - GPv2Order"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2Trade.sol",
              "type": "Smart Contract - GPv2Trade"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2Transfer.sol",
              "type": "Smart Contract - GPv2Transfer"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/GPv2SafeERC20.sol",
              "type": "Smart Contract - GPv2SafeERC20"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/interfaces/GPv2Authentication.sol",
              "type": "Smart Contract - GPv2Authentication"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/interfaces/GPv2EIP1271.sol",
              "type": "Smart Contract - GPv2EIP1271"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/GPv2VaultRelayer.sol",
              "type": "Smart Contract - GPv2VaultRelayer"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/mixins/Initializable.sol",
              "type": "Smart Contract - Initializable"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/mixins/ReentrancyGuard.sol",
              "type": "Smart Contract - ReentrancyGuard"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/SafeCast.sol",
              "type": "Smart Contract - SafeCast"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/libraries/SafeMath.sol",
              "type": "Smart Contract - SafeMath"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/interfaces/IERC20.sol",
              "type": "Smart Contract - IERC20"
            },
            {
              "target": "https://github.com/gnosis/gp-v2-contracts/blob/1bfee2d8d5f4b80e5599aca6984391d708d2b151/src/contracts/interfaces/IVault.sol",
              "type": "Smart Contract - IVault"
            }
          ],
          "mdx": {
            "program_overview": "Gnosis builds new market mechanisms for decentralized finance. Their three interoperable product lines allow you to securely create, trade, and hold digital assets on Ethereum.\n\nGnosis is running a bug bounty program focused on Gnosis Protocol v2, a fully permissionless protocol that leverages batch auctions to provide MEV protection, plus integrates with on-chain liquidity sources to offer traders the best prices.\n\nFor some background information, consider reading [this high-level summary](https://forum.gnosis.io/t/should-gnosis-build-gnosis-protocol-v2/741), which describes the motivation behind building Gnosis Protocol v2, as well as the reasons behind the architectural design choices described in [this announcement](https://blog.gnosis.pm/introducing-gnosis-protocol-v2-and-balancer-gnosis-protocol-f693b2938ae4).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe Gnosis Protocol v2 bounty program considers a number of variables in determining rewards. Determinations of eligibility, score, and all terms related to an award are at the sole and final discretion of the Gnosis Protocol v2 bug bounty panel. \n\nThe Gnosis core development team, employees, and all other people paid by Gnosis, directly or indirectly (including the external auditors), are not eligible for rewards.\n\nIn order to be eligible for a reward, bug reports must include an explanation of how the bug can be reproduced, a failing test case, a valid scenario in which the bug can be exploited. Critical vulnerabilities with all of these have a maximum reward of __USD 50 000__. If a fix that makes the test case pass is provided, an additional __USD 4 000__ is provided for critical vulnerabilities, for a maximum reward of __USD 54 000__.\n\nIn addition to the Immunefi Severity Classification System, the following information is provided for each severity level. In case of discrepancies between this information and the Immunefi Severity Classification System, this information will prevail.\n\n__Critical:__\n\n  - Changing the owner address of the authentication contract as well as adding a solver without authorization.\n  - Forgery of a user’s signature that would allow them to execute a funded trade without using the user’s private key.\n  - Execute arbitrary settlements without being a solver.\n  - Executing a user’s trade that is expired or at a price worse than the limit price (also as a solver).\n  - Transferring in tokens more than once for the same fill-or-kill order in the same settlement (also as a solver).\n  - Access to user funds outside of a trade.\n\n__High:__\n\n  - Changing the order of a legitimate interaction, as well as skipping one, in a settlement.\n  - Removing a solver without authorization (also as a solver).\n  - Making the contract unable to be operated by any solver, e.g., through self-destruction (also as a solver).\n\n__Medium:__\n\n  - Freeing storage without being a solver.\n  - Invalidate an order without the permission of the user who created it.\n\nPayouts are handled by the __Gnosis Protocol v2 bug bounty panel__ directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "For the Initializable, ReentrancyGuard, SafeCast, SafeMath, IERC20, and IVault smart contracts, this bug bounty program only accepts bug reports for the changes that were performed compared to the original, as well as any improper use of them that leads to actual issues in the contracts previously mentioned to be in scope. Any bug that is reproducible in the original vendored contract is out of scope.\n\nAny vulnerabilities mentioned in this [audit report](https://github.com/gnosis/gp-v2-contracts/blob/main/audits/GnosisProtocolV2May2021.pdf) are considered as out-of-scope.\n\nThe following are also considered as out-of-scope:\n\n  - Migration methods.\n  - Services that build and submit the settlement transaction (e.g., denial of service, exploiting settlement transactions to extract value via sandwich attacks).\n  - Gas efficiency improvements.\n  - Any issues relating to networks other than the Ethereum Mainnet.\n  - Steal funds from the settlement contract as a solver.\n  - Price manipulation from the solver, for example: choosing the orders and the prices to settle that would lead to the solver getting a better-than-market price.\n  - Price manipulation from the solver, for example: reusing the same token twice in a settlement to give different prices to different orders.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Misuse/wrong trust model for dependencies\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\nExamples of desired vulnerabilities/exploits\n\n  - Take funds from users’ allowances outside of a trade.\n  - Steal funds from the settlement contract as an external user (but not as the owner or a solver).\n  - Add or remove solvers without being the owner.\n  - Execute trades that have not been authorized by a user (e.g., a forged signature).\n  - Execute trades with different parameters from what the user signed (e.g., as sell order instead of as buy order).\n  - Execute expired trades.\n  - Replay already executed fill-or-kill orders.\n  - Execute more, in total, than the maximum amount for a partially fillable order.\n  - Execute a settlement so that the limit price of an order is not respected.\n  - Execute an interaction from the settlement contract to the vault relayer.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Running out of gas\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "gnosissafe",
          "project": "Gnosis Safe",
          "date": "2021-06-08T16:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/60b8mnMPint0U9r3KfOnwx/a3b7a08757ed3534eb25e7d99cd245be/Gnosis.jpeg",
          "maximum_reward": 54000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000 - USD $54,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/gnosis/SafeBridge/blob/safebridge/contracts/AMBModule.sol",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Gnosis builds new market mechanisms for decentralized finance. Their three interoperable product lines allow you to securely create, trade, and hold digital assets on Ethereum.\n\nGnosis is running a bug bounty program focused on the SafeBridge module, which allows for execution of transactions initiated by a designated address on the other side of a designated arbitrary message bridge (AMB). This module is intended to be used with the Gnosis Safe.\n\nFor more information about Gnosis Safe, please visit [https://gnosis-safe.io/](https://gnosis-safe.io/). For more information about Gnosis overall, please visit [https://gnosis.io/](https://gnosis.io/). \n\nThis bug bounty program is focused around its smart contracts and the prevention of the loss of user funds.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to be eligible for a reward, bug reports must include an explanation of how the bug can be reproduced, a failing test case, a valid scenario in which the bug can be exploited. If a fix that makes the test case pass is provided, an additional __USD 4 000__ is provided for critical vulnerabilities, for a maximum reward of __USD 54 000__.\n\nPayouts are handled by the __Gnosis__ team directly and are denominated in USD. However, payouts are done in __DAI__, __GNO__, or __ETH__, at the preference of the bug bounty hunter.",
            "assets_body": "Though the whole SafeBridge repo can be referenced, only the smart contract in this table is considered as within scope of the bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance,   strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - Interacting with accounts that you do not own\n"
          }
        },
        {
          "id": "etherrock",
          "project": "Ether Rock",
          "date": "2021-09-16T17:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/13lKwals1wEnecLLf8CSWv/270c1167e963ab8afb197c617c457b4b/Ether_Rock.jpeg",
          "maximum_reward": 52000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "16 ETH (~ USD $52,000)"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xa3f5998047579334607c47a6a2889bf87a17fc02",
              "type": "Smart Contract - Ether RockERC721"
            }
          ],
          "mdx": {
            "program_overview": "Launched in 2017, Ether Rock was one of the first crypto collectible NFT-type projects on the Ethereum blockchain. As the smart contract didn’t follow any kind of standard like ERC721 and therefore can’t be traded on popular NFT trading platforms like OpenSea, a wrapper contract was written that would allow rock owners to “wrap” their rock and turn it into a valid ERC721 token by sending it to the wrapper contract. Upon wrapping a rock, owners can also “unwrap” their rock which makes the wrapper contract send the rock back to its rightful owner and burn the ERC721 token.\n\nFor more information about Ether Rock, please visit [https://Ether Rock.com/](https://etherrock.com/). A wrapper interface (still being tested) has been written at [https://Ether Rock.com/wrapper.html](https://etherrock.com/wrapper.html). As that page explains, wrapping a rock involves 3 steps: making sure the wrapper contract has the correct owner listed for a given rock ID, sending a rock to the wrapper contract, and finally wrapping the rock.\n\n__This bug bounty program is focused on the wrapper smart contract only__ (not the wrapper interface or the original Ether Rock contract) and is focused on preventing the following impacts:\n\n  - Unable to wrap a rock after sending it to the wrapper contract\n  - Unable to unwrap a rock\n  - Stealing someone else’s rock within the wrapper contract",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nImpacts stated in the Impacts in Scope section qualify for the Critical reward. \n\nPayouts are handled by the __Ether Rocks__ team directly and are denominated in ETH with a flat reward amount. The USD estimate is only provided as a guide.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Unable to wrap a rock after sending it to the wrapper contract\n  - Unable to unwrap a rock\n  - Stealing someone else’s rock within the wrapper contract",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\nAny vulnerability that leads to an impact stated in the Impacts in Scope section.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - If a rock owner sends their rock to the wrapper contract before making sure the wrapper contract has them listed as the rock owner, and without updating the wrapper contract for their rock ID\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "xtokenterminal",
          "project": "xToken Terminal",
          "date": "2022-02-24T11:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/fSAUAsRLo0lvJD2SXSnlU/4cfe73b65419485f544a26fb8e104454/xToken_Terminal_Logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/ICLR.sol",
              "type": "Smart Contracts - ICLR"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/ICLRDeployer.sol",
              "type": "Smart Contracts - ICLRDeployer"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IERC20.sol",
              "type": "Smart Contracts - IERC20"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IERC20Extended.sol",
              "type": "Smart Contracts - IERC20Extended"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/ILMTerminal.sol",
              "type": "Smart Contracts - ILMTerminal"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IProxyAdmin.sol",
              "type": "Smart Contracts - IProxyAdmin"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IRewardEscrow.sol",
              "type": "Smart Contracts - IRewardEscrow"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IStakedCLRToken.sol",
              "type": "Smart Contracts - IStakedCLRToken"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IStakingRewards.sol",
              "type": "Smart Contracts - IStakingRewards"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/interfaces/IxTokenManager.sol",
              "type": "Smart Contracts - IxTokenManager"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/libraries/ABDKMath64x64.sol",
              "type": "Smart Contracts - ABDKMath64x64"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/libraries/UniswapLibrary.sol",
              "type": "Smart Contracts - UniswapLibrary"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/libraries/Utils.sol",
              "type": "Smart Contracts - Utils"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/proxies/CLRProxy.sol",
              "type": "Smart Contracts - CLRProxy"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/proxies/LMTerminalProxy.sol",
              "type": "Smart Contracts - LMTerminalProxy"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/proxies/ProxyAdmin.sol",
              "type": "Smart Contracts - ProxyAdmin"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/proxies/StakedCLRTokenProxy.sol",
              "type": "Smart Contracts - StakedCLRTokenProxy"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/staking/RewardEscrow.sol",
              "type": "Smart Contracts - RewardEscrow"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/staking/StakingRewards.sol",
              "type": "Smart Contracts - StakingRewards"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/staking/proxies/StakingRewardsProxy.sol",
              "type": "Smart Contracts - StakingRewardsProxy"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/BlockLock.sol",
              "type": "Smart Contracts - BlockLock"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/CLR.sol",
              "type": "Smart Contracts - CLR"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/CLRDeployer.sol",
              "type": "Smart Contracts - CLRDeployer"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/LMTerminal.sol",
              "type": "Smart Contracts - LMTerminal"
            },
            {
              "target": "https://github.com/xtokenmarket/terminal-mining/blob/master/contracts/StakedCLRToken.sol",
              "type": "Smart Contracts - StakedCLRToken"
            }
          ],
          "mdx": {
            "program_overview": "Terminal is a generalized liquidity mining framework for Uniswap V3 where anyone will be able to incentivize liquidity within a concentrated price range in just a few intuitive clicks. Using their portal, pool admins will be able to configure liquidity price ranges, vesting periods, reward durations and rewards rates. LPs will be able to track their positions, discover new incentive programs and claim/vest rewards, all through their easy interface.\n\nFor more information about xToken, please visit [https://docs.xtokenterminal.io/](https://docs.xtokenterminal.io/).    \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical, High and Medium smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must also come with a suggestion for a fix in order to be considered for a reward. \n\nVulnerabilities previously highlighted in the following audit report are considered as out of scope: \n  - [https://github.com/xtokenmarket/terminal-mining/tree/master/audits](https://github.com/xtokenmarket/terminal-mining/tree/master/audits) \n\nPayouts are handled by the __xToken__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n",
            "assets_body": "All smart contracts of xToken can be found at [https://github.com/xtokenmarket/terminal-mining](https://github.com/xtokenmarket/terminal-mining). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns, but doesn’t lose value ",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "themisprotocol",
          "project": "Themis Protocol",
          "date": "2022-02-21T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5JMJLZEH6yiJ9K1MI8ntke/3336629cea20f2296ff7a327735d063c/Themis_Protocol_Logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x6885eF891808Dc88D948Dc95904dF2367AD99394",
              "type": "Smart Contract - ThemisLendCompoundProxyvv"
            },
            {
              "target": "https://etherscan.io/address/0x5eF264Cb6e8b6743251B6FD93CCee7Fbcf3508C4",
              "type": "Smart Contract - ThemisBorrowCompoundProxy"
            },
            {
              "target": "https://etherscan.io/address/0x168D095d7F88f3bA71BB1aCF4ebF31E287778895",
              "type": "Smart Contract - ThemisAuctionProxy"
            },
            {
              "target": "https://etherscan.io/address/0xdC72d3FeEF3Fe708563cCB59401814B4921B7667",
              "type": "Smart Contract - UniswapV3ChainLinkUsdOracleProxy"
            },
            {
              "target": "https://themis.exchange/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Themis is a decentralized borrowing & lending protocol built on Ethereum. It is compatible with ERC-721/ERC-1155 assets and enables users to create anonymous lending between stablecoins and bluechip assets. Starting with Uniswap-V3 LP positions.\n\nFor more information about Themis Protocol, please visit [https://themis.exchange/](https://themis.exchange/). \n\nThis bug bounty program is focused on their smart contracts, website and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Taking Down the application/website\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps, smart contracts, and blockchains/DLTs, focusing on the impact of the vulnerability reported.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all bug reports must also come with a suggestion for a fix in order to be considered for a reward. \n\nAll issues previously highlighted in the following audit report are considered out of scope: \n  - [https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-ThemisV3-v1.0.pdf](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-ThemisV3-v1.0.pdf)\n\nPayouts are handled by the __Themis Protocol__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __USDT__, at the discretion of the team.\n",
            "assets_body": "All smart contracts of Themis Protocol can be found at [https://github.com/Themis-protocol/Solidity-Open-Source](https://github.com/Themis-protocol/Solidity-Open-Source). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nIf an impact can be caused to any other asset managed by Themis Protocol that isn’t on this table but for which the impact is in the Impacts in Scope section, you are encouraged to submit it for the consideration of the project. ",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n\n__Web/App__\n\n  - Taking down the application/website\n  - Signing transactions for other users\n  - Redirection of user deposits and withdrawals\n  - Subdomain takeover resulting in financial loss (applicable for subdomains with addresses published)\n  - Wallet interaction modification resulting in financial loss\n  - Direct theft of user funds\n  - Tampering with transactions submitted to the user’s wallet\n  - Submitting malicious transactions to an already-connected wallet",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Vulnerabilities primarily caused by browser/plugin defects\n  - Any vulnerability exploit requiring CSP bypass resulting from a browser bug\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "octopusnetwork",
          "project": "Octopus Network",
          "date": "2022-02-15T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/YlzS91wNlhNma1Tq3oq1x/02b76c041222f6df387af604a906471c/octopus_icon_blue.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/octopus-network/octopus-appchain-registry",
              "type": "Smart Contract - Registry"
            },
            {
              "target": "https://github.com/octopus-network/octopus-appchain-anchor",
              "type": "Smart Contract - Anchor"
            }
          ],
          "mdx": {
            "program_overview": "Octopus Network is a brand new multichain network born to serve application-specific blockchains, aka Appchains. Octopus Network provides flexible and affordable leased security, out-of-box cross-chain interoperability, one-stop infrastructure, and a ready-to-be-engaged community for the appchains.\n\nFor more information about Octopus Network please visit [https://oct.network/](https://oct.network/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 30 minutes",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nKnown issues highlighted in the following audit reports are considered to be out-of-scope: \n  - [https://github.com/octopus-network/octopus-appchain-registry/blob/main/Octopus_Network_NEAR_Smart_Contract_Security_Audit_Report_Halborn_Final.pdf](https://github.com/octopus-network/octopus-appchain-registry/blob/main/Octopus_Network_NEAR_Smart_Contract_Security_Audit_Report_Halborn_Final.pdf) \n\nPayouts are handled by the __Octopus Network__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "The deployed addresses of the following contracts are as follows:\n  - Registry: [https://explorer.near.org/accounts/octopus-registry.near ](https://explorer.near.org/accounts/octopus-registry.near)\n  - Anchor: [https://explorer.near.org/accounts/debionetwork.octopus-registry.near ](https://github.com/octopus-network/octopus-appchain-anchor)\n\nAll smart contracts of Octopus Network can be found at [https://github.com/octopus-network](https://github.com/octopus-network). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 30 minutes",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "duetfinance",
          "project": "Duet Finance",
          "date": "2022-02-14T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5vXimJyIxov2NZPVOHsVQY/fecd254c57b0ee292780cd6ae32f8f90/Duet_Finance_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $35,000"
            },
            {
              "level": "medium",
              "payout": "USD $25,000"
            },
            {
              "level": "low",
              "payout": "USD $15,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x01d77e7CC19cc562adB17AD6Cb1F08f7a66fe301#code",
              "type": "Smart Contract - AppController Proxy"
            },
            {
              "target": "https://bscscan.com/address/0x107e6da9daf55ac81990475fa3a75fb8fbae3038#code",
              "type": "Smart Contract - AppController"
            },
            {
              "target": "https://bscscan.com/address/0xaacb683a934a5e1aee846286049f1a5dd38bdfb9#code",
              "type": "Smart Contract-BUSD_USDC_LP Vault"
            },
            {
              "target": "https://bscscan.com/address/0x5e32093b7642059941d5C2317257F8720F581df8",
              "type": "Smart Contract - FeeConf"
            },
            {
              "target": "https://bscscan.com/address/0x014127E127C6788BaDaE75Ba213a58Ac22944c82",
              "type": "Smart Contract_ZAP Function"
            },
            {
              "target": "https://bscscan.com/address/0x2F84f7b38A5379D64F0899193210D30A89efc2DC",
              "type": "Smart Contract - DYToken"
            },
            {
              "target": "https://bscscan.com/address/0xc311C276B5bE3817677B6C5f5e59538e63dFa726",
              "type": "LPFarmingVault"
            },
            {
              "target": "https://bscscan.com/address/0x10c773905aad5c36af9251d2437c9634152b40fc#code",
              "type": "Smart Contract - LPFarmingVault"
            },
            {
              "target": "https://bscscan.com/address/0xe04fe47516C4Ebd56Bc6291b15D46A47535e736B",
              "type": "Smart Contract - DUSD"
            },
            {
              "target": "https://bscscan.com/address/0xcc8bBe47c0394AbbCA37fF0fb824eFDC79852377",
              "type": "Smart Contract- DUSD vault"
            }
          ],
          "mdx": {
            "program_overview": "Duet protocol (Duet) is a Multi-chain synthetic asset protocol that sharpens all assets for use in the blockchain world. A duet in music refers to a piece of music where two people play different parts or melodies. Similarly, Duet protocol allows traders to replicate the real-world tradable assets in a decentralised finance ecosystem.\n\nFor more information about Duet Finance, please visit [https://duet.finance/](https://duet.finance/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Incorrect polling actions\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - In contract 0x014127E127C6788BaDaE75Ba213a58Ac22944c82 , a potential sandwith attack may occur when swap because we ignore slippage control.\n  - Some tokens may be left on contract 0x014127E127C6788BaDaE75Ba213a58Ac22944c82 when transferring tokens to Liquidity Pool or BNB to Liquidity Pool.\n  - All vulnerabilities marked in the [BlockSec security review](https://github.com/blocksecaudit/report/blob/main/duet_stablecoin_v1.0.pdf) and [Peckshield security review](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-Duet-v1.0.pdf) are not eligible for a reward.\n\nPayouts are handled by the __Duet Finance__ team directly and are denominated in USD. However, payouts are done in __USDT and DUET__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of Duet Finance can be found at [https://github.com/duet-protocol/duet-collateral-contracts](https://github.com/duet-protocol/duet-collateral-contracts) and [https://github.com/duet-protocol/dUSD-minter](https://github.com/duet-protocol/dUSD-minter).\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Governance vote manipulation",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "maple",
          "project": "Maple",
          "date": "2022-01-25T10:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7Ae8oePzYtMTmO4l5zeWhs/a122b6a45984fef7cc71dfb135854c1f/Maple_Logo.jpg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x97940C7aea99998da4c56922211ce012E7765395",
              "type": "Smart Contract - MapleLoan"
            },
            {
              "target": "https://etherscan.io/address/0x36a7350309B2Eb30F3B908aB0154851B5ED81db0",
              "type": "Smart Contract - MapleLoanFactory"
            },
            {
              "target": "https://etherscan.io/address/0xCba99a6648450a7bE7f20B1C3258F74Adb662020",
              "type": "Smart Contract - MapleLoanInitializer"
            },
            {
              "target": "https://etherscan.io/address/0x2cF4C679bc9B6073A3f68f7584809E5F177cC59A",
              "type": "Smart Contract - Refinancer"
            },
            {
              "target": "https://etherscan.io/address/0xA134143D6bDEf75eD2FbbB4e7a8E70765c25a03C",
              "type": "Smart Contract - DebtLocker"
            },
            {
              "target": "https://etherscan.io/address/0xA83404CAA79989FfF1d84bA883a1b8187397866C",
              "type": "Smart Contract - DebtLockerFactory"
            },
            {
              "target": "https://etherscan.io/address/0x3D01aE38be6D81BD7c8De0D5Cd558eAb3F4cb79b",
              "type": "Smart Contract - DebtLockerInitializer"
            }
          ],
          "mdx": {
            "program_overview": "Maple Finance is an institutional capital marketplace powered by blockchain technology. On a mission to redefine capital markets through digital assets, Maple expands the digital economy by providing undercollateralized lending for institutional borrowers and fixed-income opportunities for lenders. The economic potential of the future will be fulfilled by harnessing global capital and applying it to areas of greatest opportunity.\n\nMaple offers borrowers transparent and efficient financing completed entirely on-chain. For lenders, Maple offers a sustainable yield source through lending to diversified pools of crypto’s premium institutions. The Pool Delegates that manage these pools perform diligence and set terms with Borrowers.\n\nThe protocol is governed by the Maple Token (MPL), which enables token holders to participate in governance, share in fee revenues, and stake insurance to Lending Pools.\n\nFor more information about Maple, please visit [https://www.maple.finance/](https://www.maple.finance/).  \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing of any collateral\n  - Unintended changes in smart contract permissioning\n  - Unintended changes in proxy/upgradeability functionality\n  - Unfair liquidations of collateral",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward.\n\nAll known issues highlighted in the following audit report are considered to be out-of-scope:\n  - [https://github.com/maple-labs/loan/wiki/Audit-Reports#audit-reports ](https://github.com/maple-labs/loan/wiki/Audit-Reports#audit-reports)\n\nMaple requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is a government issued photo ID as well as a proof of address issued within the last 3 months (eg. utility bill). \n\nPayouts are handled by the __Maple__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __MPL__.",
            "assets_body": "All proxies deployed from the listed factories are also considered as in-scope. \n\nAll smart contracts of Maple can be found at [https://github.com/maple-labs/](https://github.com/maple-labs/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing of any collateral\n  - Unintended changes in smart contract permissioning\n  - Unintended changes in proxy/upgradeability functionality\n  - Unfair liquidations of collateral",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "2pi",
          "project": "2PI",
          "date": "2022-01-24T08:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/29Asn88KhDfMzbX8ztrjuG/d468de46f3d8f64733433059e0d48a83/2PI_logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x3205ce41b24E2455E7590197D9BF41AE7A852B76#code",
              "type": "Smart Contract - Archimedes (masterchef)"
            },
            {
              "target": "https://polygonscan.com/address/0x7aa70f37add411515b772bcd4bf893b0ab0be6fb#code",
              "type": "Smart Contract - Controller (between masterchef & strat)"
            },
            {
              "target": "https://polygonscan.com/address/0xf32296616fa029a07e27f82957d3ecdd5d0f5e7c#code",
              "type": "Smart Contract - Strategy for Aave"
            },
            {
              "target": "https://polygonscan.com/address/0xd029bb8068e11c361bd7783382ec0585ea55177d#code",
              "type": "Smart Contract - Strategy for Balancer Stable pool"
            }
          ],
          "mdx": {
            "program_overview": "2PI is a decentralized infrastructure protocol, connecting Fintechs with DeFi via APIs. Providing a frictionless connection to high-yield interest rates via decentralized saving products (generated by 2pi) which enables FinTechs to build products on top for their end users.\n\nFor more information about 2PI, please visit [https://2pi.network/](https://2pi.network/). \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Medium, High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nPayouts are handled by the __2PI__ team directly and are denominated in USD. However, payouts are done in __DAI__.",
            "assets_body": "All smart contracts of 2PI can be found at [https://github.com/2pinetwork/contracts/tree/master/contracts](https://github.com/2pinetwork/contracts/tree/master/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "glow",
          "project": "Glow",
          "date": "2022-01-17T04:30+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/ml3lecGYa3d5XVGdvWCjZ/58517c5ef6d153c36a1577c621377e95/glow_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $7,500"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://finder.terra.money/mainnet/address/terra1xxp34xk4rjexwlu0xfdhyn0zr3qsgare04yll0",
              "type": "Smart Contract - Gov"
            },
            {
              "target": "https://finder.terra.money/mainnet/address/terra1le3a67j4khkjhyytkllxre60dvywm43ztq2s8t",
              "type": "Smart Contract - Staking"
            },
            {
              "target": "https://finder.terra.money/mainnet/address/terra1zenektjsg4q8t6kpvksy25430eeq40zdu358lr",
              "type": "Smart Contract - Community"
            },
            {
              "target": "https://finder.terra.money/mainnet/address/terra12pfhdv4ursl04wzlyee9ak30q3ez2jgcchnv2t",
              "type": "Smart Contract - Warchest"
            },
            {
              "target": "https://finder.terra.money/mainnet/address/terra1lk3dl4wgau9zvxjustyh6fspjsf5jcxm9clq9p",
              "type": "Smart Contract - Distributor"
            },
            {
              "target": "https://finder.terra.money/mainnet/address/terra1tu9yjssxslh3fd6fe908ntkquf3nd3xt8kp2u2",
              "type": "Smart Contract - Lotto"
            }
          ],
          "mdx": {
            "program_overview": "Glow is an ecosystem of Web3 Terra dApps super-powered by DeFi yields.\nThe Glow Protocol's role is to govern and set the vision for this world of mainstream ready dApps. The first projects within the Glow Ecosystem are Glow Lotto, a prize-linked savings account and Glow Creators, social money reimagined.\n\nThe Glow Token (GLOW) is Glow Protocol's governance token. GLOW tokens can be deposited to create new governance polls, which can be voted on by users that have staked GLOW.\nGLOW is designed to capture a portion of the yield collected by Glow dApps, allowing its value to scale linearly with Glow's assets under management (AUM). Glow distributes protocol fees and future project airdrops to GLOW stakers pro-rata to their stake, benefitting long-term stakers as adoption of Glow increases -- stakers of GLOW are incentivized to propose, discuss, and vote for proposals that further merit the protocol.\n\nFor more information about Glow, please visit [https://glowyield.com/](https://glowyield.com/). \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nAll vulnerabilities marked in the [Oak security review](https://github.com/oak-security/audit-reports/blob/master/Glow/2021-11-12%20Audit%20Report%20-%20Glow%20-%20v1.0.pdf) are not eligible for a reward.\n\nPayouts are handled by the __Glow__ team directly and are denominated in USD. However, payouts are done in __GLOW and UST__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of Glow can be found at [https://github.com/glow-protocol/glow-contracts](https://github.com/glow-protocol/glow-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimum of 1 hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "kadena",
          "project": "Kadena",
          "date": "2022-01-08T16:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2VoJFlCBCrBw3zjzABlRd7/30b4a49722e8496665cc39d16fbea7ff/Kadena_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://balance.chainweb.com/modules.html?server=api.chainweb.com&module=coin&chain=1",
              "type": "Smart Contract - Coin"
            },
            {
              "target": "https://balance.chainweb.com/modules.html?server=api.chainweb.com&module=fungible-v1&chain=1",
              "type": "Smart Contract - Fungible-v1"
            },
            {
              "target": "https://balance.chainweb.com/modules.html?server=api.chainweb.com&module=guards1&chain=1",
              "type": "Smart Contract - Guards1"
            },
            {
              "target": "https://balance.chainweb.com/modules.html?server=api.chainweb.com&module=gas-payer-v1&chain=1",
              "type": "Smart Contract - Gas-payer-v1"
            },
            {
              "target": "https://github.com/kadena-io/kaden ",
              "type": "Smart Contract - Kadenaswap"
            },
            {
              "target": "https://github.com/kadena-io/marmalade",
              "type": "Smart Contract - Marmalade (NFT)"
            },
            {
              "target": "https://github.com/kadena-io/pact",
              "type": "Smart Contract - Pact (Smart Contract Language)"
            },
            {
              "target": "https://github.com/kadena-io/chainweb-node",
              "type": "Blockchain  - Chainweb-node"
            },
            {
              "target": "https://github.com/kadena-io/chainweaver",
              "type": "Blockchain  - Chainweaver"
            },
            {
              "target": "https://chainweaver.kadena.network/",
              "type": "Web/App - Chainweaver Web Wallet"
            },
            {
              "target": "https://kadena-1.gitbook.io/welcome-to-gitbook/manage-your-kda/wallets",
              "type": "Web/App - Chainweaver Main App"
            }
          ],
          "mdx": {
            "program_overview": "Kadena was founded on the idea that blockchain could revolutionize how the world interacts and transacts. But to get to mass adoption, chain technology and the ecosystem connecting it to the business world needed to be reimagined from the ground up. Our founders built a proprietary chain architecture and created the tools to make blockchain work for business – at speed, scale, and energy efficiency previously thought unachievable.\n\nFor more information about Kadena, please visit [https://kadena.io/](https://kadena.io/). \n\nThis bug bounty program is focused on their smart contracts, blockchain, websites and application and is focused on preventing:\n\n  - Network Shutdown\n  - Website goes down\n  - DoS attacks on node software",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system-comprehensive/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Medium, High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Congestion and scalability vulnerabilities\n\nPayouts are handled by the __Kadena__ team directly and are denominated in USD. However, payouts are done in __KDA and stablecoins__, with the choice of the ratio at the discretion of the team. In addition, as part of claiming a bug bounty, whitehats must complete a KYC process by creating an account on Coinmetro.",
            "assets_body": "All smart contracts of Kadena can be found at https://github.com/kadena-io. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nKadena’s API specification can be found at [https://api.chainweb.com/openapi/](https://api.chainweb.com/openapi/) \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Blockchain__\n\n  - DOS attacks directed at our network (eg nodes)\n  - Network shut down (Critical)\n  - Vulnerabilities in REST API endpoints\n  - Exploits via the service API - Crashing nodes via the service API endpoints (low to medium)\n  - Exploits via P2P API requests - Crashing individual nodes (medium to high)\n  - Exploits via P2P API requests - Crashing a larger number of independent nodes (high)\n  - Exploits via P2P API requests - Preventing individual nodes from processing new valid blocks (medium)\n  - Exploits via P2P API requests - Preventing a larger number independent nodes from processing new valid blocks (high)\n  - Exploits via P2P API requests - Causing lasting (longer than several minutes) network partitions (high)\n  - Exploits via P2P API requests - Causing forks in the network that are supported by a larger number of independent nodes that persist longer than just a few dozen block in depths (high)\n  - Exploits via P2P API requests - Causing permanent network forks of a larger number (>25%) of independent nodes in the network (critical)\n  - Exploits via P2P API requests - Permanently preventing nodes from processing any transactions (medium)\n  - Exploits via P2P API requests - Permanently preventing mining nodes from including transactions into blocks (medium)\n  - Exploits via P2P API requests - Preventing particular txs from being included into blocks (low)\n  - Exploits via P2P API requests - Manipulating the content of the Pact (sqlite) database of a node such that those are not consistent with block validation results (Critical)\n  - Exploits via P2P API requests - Deleting (or partially deleting) the Pact (sqlite) data of a node (high)\n  - Exploits via P2P API requests - Manipulating the content of the chain database (rocksdb) of a node (high)\n  - Exploits via P2P API requests - Deleting (or partially deleting) the content of the chain database (rocksdb) of a node (high)\n\n__Smart Contracts__ \n\n  - Any vulnerability resulting in an impact that falls under Critical, High, or Medium, according to the severity classification system\n\n__Web/App__\n\n  - Site goes down\n  - Redirected funds by address modification\n  - Leak of private keys",
            "prioritized_vulnerabilities": "Refer to __Impacts in Scope__ section above.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "hundred-finance",
          "project": "Hundred Finance",
          "date": "2022-01-07T09:30+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3QuwgIZ3UdAyc8HR8JNSgq/f8648eb6baa980cc3f4ea30e9c6129f6/Hundred_Finance_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0x0f390559f258eb8591c8e31cf0905e97cf36ace2",
              "type": "Smart Contract - Comptroller Storage ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xe8A3327f353863292DCC972B160Fe55DbF123fCA",
              "type": "Smart Contract - Comptroller Implementation ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x10010069DE6bD5408A6dEd075Cf6ae2498073c73",
              "type": "Smart Contract - Chainlink Price Oracle Proxy ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x10010078a54396F62c96dF8532dc2B4847d47ED3",
              "type": "Smart Contract - HND Token ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xfCD8570AD81e6c77b8D252bEbEBA62ed980BD64D",
              "type": "Smart Contract - hUSDC ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xbb93c7f378b9b531216f9ad7b5748be189a55807#code",
              "type": "Smart Contract - hToken implementation ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x8e15a22853A0A60a0FBB0d875055A8E66cff0235",
              "type": "Smart Contract - hETH ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xb4300e088a3AE4e624EE5C71Bc1822F68BB5f2bc",
              "type": "Smart Contract - hWBTC ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x607312a5C671D0C511998171e634DE32156e69d0",
              "type": "Smart Contract - hUSDT ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x103f2CA2148B863942397dbc50a425cc4f4E9A27",
              "type": "Smart Contract - hLINK ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xEbd7f3349AbA8bB15b897e03D6c1a4Ba95B55e31",
              "type": "Smart Contract - hSUSHI ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x376020c5B0ba3Fd603d7722381fAA06DA8078d8a",
              "type": "Smart Contract - hMIM ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x29DDb4c4f9baAe366DbD40eff79d364e004425b0",
              "type": "Smart Contract - hSPELL ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x772918d032cFd4Ff09Ea7Af623e56E2D8D96bB65",
              "type": "Smart Contract - hDODO ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xb1c4426C86082D91a6c097fC588E5D5d8dD1f5a8",
              "type": "Smart Contract - hFRAX ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xE4e43864ea18d5E5211352a4B810383460aB7fcC",
              "type": "Stables Interest Rate Model ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xa8cD5D59827514BCF343EC19F531ce1788Ea48f8",
              "type": "Blue Chips Interest Rate Model ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xF191d17dEe9943F06bB784C0492805280AeE0bf9",
              "type": "Smart Contract - hUSDC Gauge ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xC3bae38Bfa2CbBE30f442649070408f484bd5882",
              "type": "Smart Contract - hUSDT Gauge ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x61F95b38f880a6C5A4b7DD15560D7bB8B3E36f35",
              "type": "Smart Contract - hMIM Gauge ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xd7f3Bf2085AD32ff95E1bCC408d37F10f6949270",
              "type": "Smart Contract - hFRAX Gauge ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xBa57440fA35Fdb671E58F6F56c1A4447aB1f6C2B",
              "type": "Smart Contract - VotingEscrow ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x4adF575DBe0e6F1c5909AE9c7119927b4FaabbBd",
              "type": "Smart Contract - Treasury ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0x3A4148DDDd121fbceD8717CB7B82370Be27F76bf",
              "type": "Smart Contract - RewardPolicyMaker ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xb4BAfc3d60662De362c0cB0f5e2DE76603Ea77D7",
              "type": "Smart Contract - GaugeController ARBI"
            },
            {
              "target": "https://arbiscan.io/address/0xc3CC9369fcB8491DaD4FA64cE1Fbd3DD2d70034f",
              "type": "Smart Contract - Minter ARBI"
            },
            {
              "target": "https://ftmscan.com/address/0x0F390559F258eB8591C8e31Cf0905E97cf36ACE2",
              "type": "Smart Contract - Comptroller Storage FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x8c6139FF1E9D7c1E32bDAFd79948d0895bA0a831",
              "type": "Smart Contract - Comptroller Implementation FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x10010069DE6bD5408A6dEd075Cf6ae2498073c73",
              "type": "Smart Contract - Chainlink Price Oracle Proxy FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x10010078a54396F62c96dF8532dc2B4847d47ED3",
              "type": "Smart Contract - HND Token FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xfCD8570AD81e6c77b8D252bEbEBA62ed980BD64D",
              "type": "Smart Contract - hFTM FTM "
            },
            {
              "target": "https://ftmscan.com/address/0xbb93C7F378B9b531216f9aD7b5748be189A55807",
              "type": "Smart Contract - hToken implementation FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xE4e43864ea18d5E5211352a4B810383460aB7fcC",
              "type": "Smart Contract - hUSDT FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xEdBA32185BAF7fEf9A26ca567bC4A6cbe426e499",
              "type": "Smart Contract - hSPELL FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x5B9451B1bFAE2A74D7b9D0D45BdD0E9a27F7bB22",
              "type": "Smart Contract - hSUSHI FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x103f2CA2148B863942397dbc50a425cc4f4E9A27",
              "type": "Smart Contract - hBNB FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x243E33aa7f6787154a8E59d3C27a66db3F8818ee",
              "type": "Smart Contract - hhUSDC FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xb4300e088a3AE4e624EE5C71Bc1822F68BB5f2bc",
              "type": "Smart Contract - hFRAX FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xa8236EaFBAF1C3D39396DE566cEEa6F320E3db00",
              "type": "Smart Contract - hWBTC FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xEbd7f3349AbA8bB15b897e03D6c1a4Ba95B55e31",
              "type": "Smart Contract - hAAVE FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x8e15a22853A0A60a0FBB0d875055A8E66cff0235",
              "type": "Smart Contract - hDAI FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x090a00A2De0EA83DEf700B5e216f87a5D4F394FE",
              "type": "Smart Contract - hETH FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xa8cD5D59827514BCF343EC19F531ce1788Ea48f8",
              "type": "Smart Contract - hMIM FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x30a026Ae9e2A1363E96a5e5Ab12786a46066bEB8",
              "type": "Smart Contract - hLINK FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xC0f112479c83a603Ac4Dc76f616536389a85a917",
              "type": "Smart Contract - hYFI FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xd6fcBCcfC375c2C61d7eE2952B329DcEbA2D4e10",
              "type": "Smart Contract - hCRV FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x8a0d639f272F4B966b2dEa42d4b743Dce7E82c28",
              "type": "Smart Contract - Stables Interest Rate Model FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xE8F12f5492Ec28609D2932519456b7436d6c93bD",
              "type": "Smart Contract - Blue Chips Interest Rate Model FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x110614276F7b9Ae8586a1C1D9Bc079771e2CE8cF",
              "type": "Smart Contract - hUSDC Gauge FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xbF689f50cB446f171F08691367f7D9398b24D382",
              "type": "Smart Contract - hUSDT Gauge FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x26596af66A10Cb6c6fe890273eD37980D50f2448",
              "type": "Smart Contract - hMIM Gauge FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x2c7a9d9919f042C4C120199c69e126124d09BE7c",
              "type": "Smart Contract - hFRAX Gauge FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xB8481A3cE515EA8cAa112dba0D1ecfc03937fbcD",
              "type": "Smart Contract - hDAI Gauge FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x376020c5B0ba3Fd603d7722381fAA06DA8078d8a",
              "type": "Smart Contract - VotingEscrow FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x29DDb4c4f9baAe366DbD40eff79d364e004425b0",
              "type": "Smart Contract - Treasury FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x772918d032cFd4Ff09Ea7Af623e56E2D8D96bB65",
              "type": "Smart Contract - RewardPolicyMaker FTM"
            },
            {
              "target": "https://ftmscan.com/address/0xb1c4426C86082D91a6c097fC588E5D5d8dD1f5a8",
              "type": "Smart Contract - GaugeController FTM"
            },
            {
              "target": "https://ftmscan.com/address/0x42B458056f887Fd665ed6f160A59Afe932e1F559",
              "type": "Smart Contract - Minter FTM"
            },
            {
              "target": "https://hundred.finance",
              "type": "Web/App - Main Web App"
            },
            {
              "target": "https://vote.hundred.finance",
              "type": "Web/App - Vote"
            }
          ],
          "mdx": {
            "program_overview": "Hundred Finance is a decentralized application (dApp) that enables the lending and borrowing of cryptocurrencies. A multi-chain protocol, it integrates with Chainlink oracles to ensure market health and stability, while specializing in providing markets for long-tail assets.\n\nFor more information about Hundred Finance, please visit [https://hundred.finance/](https://hundred.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Redirected funds by address modification",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward.\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Hundred Finance classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\n\nCritical\n\n  - Allow attacker(s) to remove tokens equal to at least 10% of the dollar value of the aggregate value of all those in the system.\n  - May be applied to a real situation and triggered through an attack vector rather than theory or hypothesis.\n  - Occur in operation mode or emergency shutdown mode, excluding those occurring during or shortly after the protocols deployment (a period during which the system is yet to be fully activated).  \n\nPayouts are handled by the __Hundred Finance__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "Only those in the Assets in Scope table are considered as in-scope of the bug bounty program. For Hundred Finance smart contracts (multiple instances on different chains), there will not be duplicated counting of bugs. One bug that exists in all contracts will be counted as a single bug.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Unable to call smart contract\n  - Vote manipulation\n  - Theft of unclaimed yield\n\n__Web/App__\n\n  - Redirected funds by address modification",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "blockchainspace",
          "project": "BlockchainSpace",
          "date": "2021-12-29T09:30-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2BTybqz1FjFggHiuvCdWu4/7570b74493394815c504ad6d105a6f6a/BlockchainSpace_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $20,000"
            },
            {
              "level": "low",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/vault-tec-team/vault-tec-core/tree/main/contracts",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://github.com/BlockchainSpace-Dev/guild-token/",
              "type": "Smart Contract - Guild Token"
            }
          ],
          "mdx": {
            "program_overview": "BlockchainSpace enables play-to-earn guilds to scale in the metaverse. We build tools to empower gaming communities and run academies to identify economic opportunities in the play-to-earn ecosystem.\n\nFor more information about BlockchainSpace, please visit [https://www.blockchainspace.asia/](https://www.blockchainspace.asia/).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Low, Medium, High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nPayouts are handled by the __BlockchainSpace__ team directly and are denominated in USD. However, payouts are done in __ETH__. ",
            "assets_body": "In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "mmfinance",
          "project": "MM Finance",
          "date": "2021-12-27T21:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3EbQVW1fFfuthksqo7q8oe/7c28b12a07b9b25d576adc7a930e3385/MM_Finance_Logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $2,500"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cronos.crypto.org/explorer/address/0x97749c9B61F878a880DfE312d2594AE07AEd7656",
              "type": "Smart Contract - MeerkatToken"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x145677FC4d9b8F19B5D56d1820c48e0443049a30",
              "type": "Smart Contract - MeerkatRouter"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0x6bE34986Fdd1A91e4634eb6b9F8017439b7b5EDc",
              "type": "Smart Contract - MasterMeerkat"
            },
            {
              "target": "https://cronos.crypto.org/explorer/address/0xd590cC180601AEcD6eeADD9B7f2B7611519544f4",
              "type": "Smart Contract - Factory"
            },
            {
              "target": "https://mm.finance/",
              "type": "Web/App"
            },
            {
              "target": "https://madmeerkat.io/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "MM Finance is the FIRST AMM & DEX on Cronos Chain that offers fee rebates via trade mining. They boast the lowest trading fees on Cronos Chain and on top of that, are the first to introduce Protocol Owned Liquidity (POL) into their DEX.\n\nTraders will find potential projects on MM Finance early and accompany them to grow up to massive predators through trading, farming, etc. Projects will find the best support on MM Finance, including grants, arbitrage support, marketing support and their network that stretches outside of the CRONOS Chain.\n\nFor more information about MM Finance, please visit [https://mm.finance/](https://mm.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Critical smart contract bug reports must come with a PoC in order to be considered for a reward. \n\nMM Finance requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed are the name, email address and country of residence. The collection of this information will be done via the bug bounty dashboard.\n\nPayouts are handled by the __MM Finance__ team directly and are denominated in USD. However, payouts are done in either __BTC__, __ETH__, __USDT__, __USDC__, __BUSD__, __CRO__ or __MMF__, up to the discretion of the team. ",
            "assets_body": "All smart contracts of MM Finance can be found at [https://github.com/madmeerkatburrow/](https://github.com/madmeerkatburrow/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theftLoss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Governance activity disruption\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "yinfinance",
          "project": "YIN Finance",
          "date": "2021-12-13T20:45-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/XnswcBaNqgSo0mZMBBMs1/2722a1b53d5ecdbe8a9f07d87d54622f/SymbolDark__1_.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x271b7ed53e217d9a2dfa2b80ba39b436472eec04#code",
              "type": "Smart Contract - YIN Asset Manager Vault (YANG)"
            },
            {
              "target": "https://etherscan.io/address/0x47311560a625042a4cd14ded8567472e79a7a26a#code",
              "type": "Smart Contract - YIN Uniswap V3 Positions Manager (CHI)"
            },
            {
              "target": "https://etherscan.io/address/0x3dad37a1dacdb0e5ce30ee738165efcdb3fdfadc",
              "type": "Smart Contract - ChainLinkFeedsRegistry"
            },
            {
              "target": "https://etherscan.io/address/0x7f990083369bc83e07be4029acc5eed29902dca3",
              "type": "Smart Contract - CHIVaultDeployer"
            },
            {
              "target": "https://yin.finance",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "YIN Finance is a multi-strategy NFT liquidity management platform that allows users to subscribe to the project’s strategy to achieve effective high-yield liquidity management. YIN Finance aims to provide proactive liquidity management services on different public chains and decentralized exchanges. \n\nYIN Finance is deployed on the Ethereum mainnet currently with budding deployment on Polygon, from which a development grant was received, and on Solana.\n\nFor more information about YIN Finance, please visit [https://yin.finance/](https://yin.finance/). \nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Critical, High and Medium severity smart contract bug reports must come with a PoC in order to be considered for a reward. All smart contract bug reports must come with a suggestion for a fix in order to be considered for a reward. \n\nCritical vulnerabilities are further capped at 10% of economic damage, with the main consideration being the funds affected in addition to PR and brand considerations, at the discretion of the team.  However, there is a minimum of __USD 20 000__ for Critical bug reports.\n\nPayouts are handled by the __YIN Finance__ team directly and are denominated in USD. However, payouts are done in __USDT__.",
            "assets_body": "\nAll smart contracts of YIN Finance can be found at https://github.com/YinFinance. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield for at least 24 hours\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n    - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Code style issues\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n  - Interface design issues \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "autonomy",
          "project": "Autonomy",
          "date": "2021-12-09T08:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3RqbQwpyC1z9ZAVv5xAugM/3cc5cdef9ce12bbe3b5b97bc2f3d0471/Autonomy_Network_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://snowtrace.io/address/0x9118dbc12dc5979daBCe6782739b020b8908a6CB",
              "type": "Smart Contract - PriceOracle"
            },
            {
              "target": "https://snowtrace.io/address/0xbaB6d0B770b9970e9FF2aF9A7e2a52b3D7aA157f",
              "type": "Smart Contract - Oracle"
            },
            {
              "target": "https://snowtrace.io/address/0x1430F4CB9D123F1542d908a29D6987bA05a858e3",
              "type": "Smart Contract - StakeManager"
            },
            {
              "target": "https://snowtrace.io/address/0xd638029a9356dB6301462470094786494D1ddA39",
              "type": "Smart Contract - Forwarder (user forwarder)"
            },
            {
              "target": "https://snowtrace.io/address/0x4c335894Cd87c2a2dBAecE82e752606e4bcA25cB",
              "type": "Smart Contract - Forwarder (fee forwarder)"
            },
            {
              "target": "https://snowtrace.io/address/0xc21E82fe258ABf9BC3Ef68fB38aecDA79e472964",
              "type": "Smart Contract - Forwarder (user fee forwarder)"
            },
            {
              "target": "https://snowtrace.io/address/0x68FCbECa74A7E5D386f74E14682c94DE0e1bC56b",
              "type": "Smart Contract - Registry"
            },
            {
              "target": "https://snowtrace.io/address/0xA9E74167a120B139eBdf0858401FFd85b64E4810",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://snowtrace.io/address/0xE3e761127cBD037E18186698a2733d1e71623ebE",
              "type": "Smart Contract - UniV2LimitsStops"
            }
          ],
          "mdx": {
            "program_overview": "Autonomy Network is an off-the-shelf generalized automation solution, empowering the Web3 with on-chain conditional execution. A decentralized network built on users, executors and the blockchain. It’s a B2B infrastructure tool used by dapps to add features, like limit orders, stop losses, and impermanent loss prevention.\n\nFor more information about Autonomy Network, please visit [https://www.autonomynetwork.io/](https://www.autonomynetwork.io/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Theft or loss of value of funds on any contract\n  - Attack that would modify or change the requirements of an order\n  - Attack that would invalidate the execution of an order \n  - Dos for order executing bots",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All High and Medium Smart Contract bug reports require a suggestion for a fix to be eligible for a reward.  \n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Autonomy Network classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed.\n\n__Critical__\n  - Theft or loss of value of funds on any contract\n\n__High__\n  - Attack that would modify or change the requirements of an order\n\n__Medium__\n  - Attack that would invalidate the execution of an order\n\n__Low__\n  - Dos for order executing bots\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - ‘Miner’ contract in [https://github.com/Autonomy-Network/autonomy-contracts](https://github.com/Autonomy-Network/autonomy-contracts)\n\n  - Issues addressed in [https://github.com/HashEx/public_audits/blob/master/autonomy/Autonomy%20report.pdf](https://github.com/HashEx/public_audits/blob/master/autonomy/Autonomy%20report.pdf)\n\n  - Issues addressed in [https://drive.google.com/drive/folders/1eg3OeaHRT0NcyV6IpAlwZhvhU6mZoBDG?usp=sharing](https://drive.google.com/drive/folders/1eg3OeaHRT0NcyV6IpAlwZhvhU6mZoBDG?usp=sharing)\n\n  - Executors can choose not to execute and essentially censor requests from execution temporarily\n  - Executors can uniquely frontrun limit orders\n  - The `owner` can change the oracle price, and change the default token used to pay etc, which affect users\n  - The gas refunded is not the correct amount\n  - Requests can be spammed and fill up the Registry\n  - Overflows can occur from user-inputted value, such as in the line `uniArgs.amountOutMax * tradeInput / msg.value`\n  - Users can waste the gas of executors by making them think something is executable, then frontrunning it to make it not executable\n  - An executor can manipulate when an order is triggerable by taking out a flash loan and moving the market before the execution in but in the same transaction\n\nPayouts are handled by the __Autonomy Network__ team directly and are denominated in USD. However, payouts are done in __USDT, DAI or ETH__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of Autonomy Network can be found at [https://github.com/Autonomy-Network/autonomy-contracts](https://github.com/Autonomy-Network/autonomy-contracts) \n\nand \n\n[https://github.com/Autonomy-Network/uniV2-limits-stops/tree/eth-to-avax-names-2](https://github.com/Autonomy-Network/uniV2-limits-stops/tree/eth-to-avax-names-2) . However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds \n  - Loss of governance funds\n  - Temporary freezing of funds for any amount of time (not including inaction by the designated executor or general delay techniques such as filling blocks with higher priced transactions than the execution transaction)\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "boggedfinance",
          "project": "Bogged Finance",
          "date": "2021-12-08T11:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4lqbxyXHvKXTwhsw2jwxL2/f5b6f48e8995f3913749ed5f6899cd00/Bogged_Finance_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $2,500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x6bbf1fa4a7ee6525f36ae8ffb6ee22dd009351e3#code",
              "type": "Smart Contract - Router V2"
            },
            {
              "target": "https://bscscan.com/address/0xc3ab35d3075430f52d2636d08d4f29bd39a18b65#code",
              "type": "Smart Contract - Comp staking"
            },
            {
              "target": "https://bscscan.com/address/0xcd48268d66068963242681ed7ca39d349fb690b9#code",
              "type": "Smart Contract - Solo staking"
            },
            {
              "target": "https://bscscan.com/address/0x2f0596b989d79fda9b0a89f57d982ea02f8d978b#code",
              "type": "Smart Contract - LP staking"
            },
            {
              "target": "https://app.bogged.finance/",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Bogged Finance is a set of tools that make it easy for users to trade tokens on Binance Smart Chain. We allow users to view real time charts, wallet data and Pair Information. Hundreds of thousands of users daily trust Bogged Finance for accurate, reliable information while they’re trading.\n\nFor more information about Bogged Finance, please visit [https://www.bogged.finance/](https://www.bogged.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nPayouts are handled by the __Bogged Finance__ team directly and are denominated in USD. However, payouts are done in __BUSD, BNB or BTC__.",
            "assets_body": "All smart contracts of Bogged Finance can be found at [https://github.com/BoggedFinance/contracts](https://github.com/BoggedFinance/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of users funds staked by freezing or theft\n  - Theft of user funds in DeFi contracts\n  - Draining staking rewards and staking reward manipulation\n  - Freezing of user funds in DeFi contracts\n\n__Web/App__\n\n  - Injection/Hijacking\n  - Shell access to the Server\n  - Redirected Funds by Address Modification",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "lossless",
          "project": "Lossless",
          "date": "2021-11-29T10:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5mUNIQTq3xLW2nbi8dZYXM/03c9e04b12aa719ee3f8456609d92d05/Lossless_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xe91D7cEBcE484070fc70777cB04F7e2EfAe31DB4#code",
              "type": "Smart Contract - Proxy / LosslessControllerV2"
            },
            {
              "target": "https://etherscan.io/address/0x9564f89bf9Bd9047a3F0486496C0060395C56638",
              "type": "Smart Contract - Implementation / LosslessControllerV2"
            },
            {
              "target": "https://etherscan.io/address/0x77736D218D05cB3D122107e12dEF22D5e69e2908",
              "type": "Smart Contract - Guardian"
            },
            {
              "target": "https://etherscan.io/address/0x0b93609b949271BC11d3D9b4976759706bA559B7",
              "type": "Smart Contract - TreasuryProtectionStrategy"
            },
            {
              "target": "https://etherscan.io/address/0xF8786f689F83CA69031e7ccffCA55BaC2F59C6c5",
              "type": "Smart Contract - LiquidityProtectionSingleLimitStrategy"
            },
            {
              "target": "https://ropsten.etherscan.io/address/0x27fce20D62f1DE73B0Ae1Dc7572F881061692de9",
              "type": "Smart Contract - Proxy / LosslessControllerV2"
            },
            {
              "target": "https://ropsten.etherscan.io/address/0xaa9A2c26Cd9C3E8dd3AF7907593101e2B016b937",
              "type": "Smart Contract - Implementation / LosslessControllerV2"
            },
            {
              "target": "https://ropsten.etherscan.io/address/0x1113D6B5E6D201d04359BC864E069898450662c5",
              "type": "Smart Contract - Guardian"
            },
            {
              "target": "https://ropsten.etherscan.io/address/0xBf94E36Ab44381bB3B9209fdF19dE34221b8B244",
              "type": "Smart Contract - TreasuryProtectionStrategy"
            },
            {
              "target": "https://ropsten.etherscan.io/address/0x4Fd4954f8F68009Aa770F929e95a7a4e88298BFB#code",
              "type": "Smart Contract - LiquidityProtectionSingleLimitStrategy"
            }
          ],
          "mdx": {
            "program_overview": "Lossless is the first DeFi hack mitigation tool for token creators. Lossless Protocol freezes fraudulent transactions based on a set of fraud identification parameters and returns stolen funds back to the owner’s account.\n\nFor more information about Lossless, please visit [https://lossless.cash/](https://lossless.cash/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n- Thefts and freezing of principal of any amount\n- Thefts and freezing of unclaimed yield of any amount\n- Theft of governance funds \n- Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Low, Medium, High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nIssues that were already found here [https://www.certik.com/projects/lossless](https://www.certik.com/projects/lossless) are not eligible for a reward.\n\nPayouts are handled by the __Lossless__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __USDT__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of Lossless can be found at [https://github.com/Lossless-Cash/lossless-v2](https://github.com/Lossless-Cash/lossless-v2). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n- Loss of user funds staked (principal) by freezing or theft\n- Loss of governance funds\n- Theft of unclaimed yield\n- Freezing of unclaimed yield\n- Unable to call smart contract\n- Smart contract gas drainage\n- Smart contract fails to deliver promised returns\n- Vote manipulation\n- Incorrect polling actions\t\t",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__The following activities are prohibited by this bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "openswap",
          "project": "OpenSwap",
          "date": "2021-11-10T00:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/624PmvFiVZQ1EicJROzq0e/a31a7bc9f6704a78f5f0b777d47413aa/OpenSwap_Logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x510a179AA399672e26e54Ed8Ce0e822cc9D0a98D",
              "type": "Smart Contract - OAXDEX_Governance"
            },
            {
              "target": "https://bscscan.com/address/0x845308010C3B699150Cdd54dCf0E7C4b8653e6B2",
              "type": "Smart Contract - OAXDEX_VotingRegistry"
            },
            {
              "target": "https://bscscan.com/address/0x0625468f8F56995Ff1C27EB6FD44ac90E96C5D22",
              "type": "Smart Contract - OAXDEX_Factory"
            },
            {
              "target": "https://bscscan.com/address/0x667AE7A348610d42d9955d1b43868683A34b1AAb",
              "type": "Smart Contract - OAXDEX_Administrator"
            },
            {
              "target": "https://bscscan.com/address/0x61dD8885F8adA39ba61f04EBe3aD540bbE670d4b",
              "type": "Smart Contract - OAXDEX_VotingExecutor"
            },
            {
              "target": "https://bscscan.com/address/0x308c0bDD77EaBcdbDE5bd5EfDf5a97Bc9b3237DC",
              "type": "Smart Contract - OAXDEX_VotingExecutor1"
            },
            {
              "target": "https://bscscan.com/address/0x50f5679F0CeF71287bD9C7e619960fF9C579661C",
              "type": "Smart Contract - OAXDEX_Router"
            },
            {
              "target": "https://bscscan.com/address/0x44F632C16c3c976161f522719ebB2cB76EA8d3B8",
              "type": "Smart Contract - OSWAP_HybridRouterRegistry"
            },
            {
              "target": "https://bscscan.com/address/0xB124679972Ef4B6CAB1280082C620F0Fd600F327",
              "type": "Smart Contract - OSWAP_HybridRouter2"
            },
            {
              "target": "https://bscscan.com/address/0x8CB1fEE69f7F8f00efd5d47067eb75C19cd40017",
              "type": "Smart Contract - OSWAP_OracleFactory"
            },
            {
              "target": "https://bscscan.com/address/0x8Af3e8596acE65D9c1EDE6d5356a34eAb46a46f5",
              "type": "Smart Contract - OSWAP_OracleRouter"
            },
            {
              "target": "https://bscscan.com/address/0x1F6d550A182cA2FC5f5145De108005eA121D6539",
              "type": "Smart Contract - OSWAP_OracleLiquidityProvider"
            },
            {
              "target": "https://bscscan.com/address/0xfA9f979e05A0E5A2F6eF08Bb8B7C36616a86c154",
              "type": "Smart Contract - OSWAP_VotingExecutor2"
            },
            {
              "target": "https://bscscan.com/address/0xE31e10f0f3f65a4aFe510C460Cda0f9392Fb0e99",
              "type": "Smart Contract - OSWAP_RangeFactory"
            },
            {
              "target": "https://bscscan.com/address/0xd9C031db7D613E4977237Bd681Dd1941A36Cdb98",
              "type": "Smart Contract - OSWAP_RangeLiquidityProvider"
            },
            {
              "target": "https://bscscan.com/address/0x22937e50C09fcb59532a379472Ab78Dc556afA3b",
              "type": "Smart Contract - OSWAP_VotingExecutor3"
            },
            {
              "target": "https://bscscan.com/address/0xaEe6da406e93dE371F4A87FCc2928946FA3392D1",
              "type": "Smart Contract - OSWAP_OraclePair"
            },
            {
              "target": "https://bscscan.com/address/0x58c4a9EC6A1E596B231119491BE4d874dc2ACB36",
              "type": "Smart Contract - OSWAP_RangePair"
            },
            {
              "target": "https://bscscan.com/address/0x0DBCe9e7b634B5eAAAb483194CC3224Fde9624CF",
              "type": "Smart Contract - OSWAP_Pair"
            },
            {
              "target": "https://bscscan.com/address/0x02751c6a963cbb99e9954a3a5a9287b519117abc",
              "type": "Smart Contract - OAXDEX_VotingContract"
            }
          ],
          "mdx": {
            "program_overview": "OpenSwap is an integrated DeFi Hub designed for the evolving decentralized landscape. More than just an AMM exchange, OpenSwap aims to be a one-stop platform offering the best on-chain pricing through its integrated portal. \n\nBy enabling trades with other leading AMM DEXs and utilizing Spot Price Liquidity Queues, OpenSwap will offer optimized returns for users for their swaps, especially the ones requiring 2-hop swaps due to shallow AMM pools. OpenSwap AMM (mainly to support $OSWAP pairs), Spot Priority Queues, Spot Range Queues, and Group Restricted Queues are deployed on BSC mainnet. A governance portal is also available to configure risk parameters for the platform such as trade fees, protocol fees, and liquidity queue price adapters. OpenSwap plans to launch liquidity queues to other EVM compatible chains in the future as a step towards the Open Interchain Protocol to enable Interchain swaps.\n\nFor more information about OpenSwap, please visit [https://www.openswap.xyz](https://www.openswap.xyz) \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nKnown issues from their previous audits are considered out-of-scope. All audit reports can be found here: [https://github.com/openswapdex/openswap-core/tree/master/audit](https://github.com/openswapdex/openswap-core/tree/master/audit). \n\nPayouts are handled by the __OpenSwap__ team directly and are denominated in USD. However, payouts are done in __OSWAP__ which are linearly vested over 6 months.",
            "assets_body": "All smart contracts of OpenSwap can be found at [https://github.com/openswapdex/openswap-core](https://github.com/openswapdex/openswap-core).  However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 180 days\n  - Smart contract fails to deliver promised returns\n  - Governance activity disruption\n  - Vote manipulation",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "dhedge",
          "project": "dHEDGE",
          "date": "2021-11-09T06:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jfCx6b5D8nfAMemuBnaOW/25d35d4095909785d015401d8cff263f/dHEDGE_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x206CbDa3381e7afdF448621b90f549f89555A588#code",
              "type": "Smart Contract - Governance"
            },
            {
              "target": "https://polygonscan.com/address/0xfdc7b8bFe0DD3513Cc669bB8d601Cb83e2F69cB0#code",
              "type": "Smart Contract - Pool Factory Proxy"
            },
            {
              "target": "https://polygonscan.com/address/0x5b5e10c98c19bd568facf05052d1136bb4ecef61#code",
              "type": "Smart Contract - Pool Factory"
            },
            {
              "target": "https://polygonscan.com/address/0xE9F6C94567906947d781C059e64c3C1DA95FdBd7#code",
              "type": "Smart Contract - Pool Logic"
            },
            {
              "target": "https://polygonscan.com/address/0x3dB16dBf76b5edFF977A0b2F5e6f412238748B7b#code",
              "type": "Smart Contract - Pool Manager Logic"
            },
            {
              "target": "https://polygonscan.com/address/0x53d5b36f154a22ef89ff2dfdafa67afe090b9d6e#code",
              "type": "Smart Contract - Asset Handler"
            },
            {
              "target": "https://polygonscan.com/address/0x65A1C0bE1151aEAcddc698e5dAcC4ed3c566744F#code",
              "type": "Smart Contract - ERC20 Guard"
            },
            {
              "target": "https://polygonscan.com/address/0xF0cF578F86e4693b204c6Fa985Cb185B50ED36E0#code",
              "type": "Smart Contract - Aave Lending Pool Asset Guard"
            },
            {
              "target": "https://polygonscan.com/address/0xC6CF4B058c51cf474c5984180e693AF438222363#code",
              "type": "Smart Contract - Balancer V2 Guard"
            },
            {
              "target": "https://polygonscan.com/address/0x99A53914e8106cC092DbeD36E8D09F2a306B811E#code",
              "type": "Smart Contract - dUSD aggregator"
            }
          ],
          "mdx": {
            "program_overview": "dHEDGE is a one-stop location for managing investment activities on the blockchain where you can put your capital to work in different strategies based on a transparent track record. Multi-chain, non-custodial, decentralized asset management integrated with multiple protocols; allowing for trades, providing liquidity and yield farming.\n\nFor more information about dHEDGE, please visit [https://app.dhedge.org/](https://app.dhedge.org/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Deposit and withdrawal bugs\n  - Arbitrage bugs\n  - Protocol integration bugs\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThere is one exception for this bug bounty program, which overrides one vulnerability in the vulnerability scale, in the above Immunefi Vulnerability Severity Classification System:\n  - The vulnerability of: “Token holders temporarily unable to transfer holdings” will be classified under this bug bounty program as a medium vulnerability. \n\nVulnerabilities marked as “Acknowledged” in the [https://www.certik.org/projects/dhedge](https://www.certik.org/projects/dhedge) are not eligible for a reward.\n\nPayouts are handled by the __dHEDGE__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of dHEDGE can be found at [https://github.com/dhedge/V2-Public](https://github.com/dhedge/V2-Public) and [https://github.com/dhedge/V2-Public/tree/production](https://github.com/dhedge/V2-Public/tree/production). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Deposit and withdrawal bugs\n  - Arbitrage bugs\n  - Protocol integration bugs",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "xendfinance",
          "project": "Xend Finance",
          "date": "2021-10-28T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2pAp8eXEKR1FJEXjjAJIMx/d1a74df3f35bbbffd6b7e7d079470a51/Xend_Finance_Logo__1_.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xF8604eE08c70389856242dF88b4CCA90a70733a7#code",
              "type": "Smart Contract - xvUSDT"
            },
            {
              "target": "https://bscscan.com/address/0x48190f88a6d62cF3EEFDe000B8b8D1B99951b07a#code",
              "type": "Smart Contract - xvUSDC"
            },
            {
              "target": "https://bscscan.com/address/0xE7e53128Bf23463F7B0B4F0aec1FCB50988c7E9E#code",
              "type": "Smart Contract - xvBUSD"
            },
            {
              "target": "https://bscscan.com/address/0x25647749766A9068Ab483aBd025EdfB6f57EF3C9#code",
              "type": "Smart Contract - StrategyUgoHawkVenusUSDTFarm"
            },
            {
              "target": "https://bscscan.com/address/0x9F13139F1d8856C8FFEac539289318E195f4485d#code",
              "type": "Smart Contract - StrategyUgoHawkVenusUSDCFarm"
            },
            {
              "target": "https://bscscan.com/address/0x96e5B012ebC7fe7A1574E88Dbd1f9974815C4d12#code",
              "type": "Smart Contract - StrategyUgoHawkVenusBUSDFarm"
            },
            {
              "target": "https://polygonscan.com/address/0x05b1d524671CA541c3457c0550a09f71604C2dEC#code",
              "type": "Smart Contract - xUSDT"
            },
            {
              "target": "https://polygonscan.com/address/0x3b1D848B20735B030D8ea85d2f516eb75c8e0e56#code",
              "type": "Smart Contract - xUSDC"
            },
            {
              "target": "https://polygonscan.com/address/0x7103D2aa877624fA2d5AFc6A6728A8dfF71bDC82#code",
              "type": "Smart Contract - xAAVE"
            },
            {
              "target": "https://polygonscan.com/address/0x0D81fF82f99eaCbc67E2404DD7FD8896905dF0f9#code",
              "type": "Smart Contract - xWBTC"
            },
            {
              "target": "https://polygonscan.com/address/0xd991924b2b01f07c2e2491d7a61e0d1e9633d852#code",
              "type": "Smart Contract - EarnAPRWithPool"
            },
            {
              "target": "https://polygonscan.com/address/0xc07d830229C34a3BD97dd95C9BB079117197B548#code",
              "type": "Smart Contract - APRWithPoolOracle"
            }
          ],
          "mdx": {
            "program_overview": "Xend Finance (XF) is a decentralized Credit Union protocol built to optimize, improve and add value to the core operations of credit unions globally. Xend Finance gives individuals, groups, cooperatives and credit unions in countries with unstable currencies access to a global trustless and stable-currency savings, lending, investing and borrowing network. \n\nXend Finance has also developed a Layer 2 DeFi infrastructure that automatically seeks out the best yields in DeFi by optimizing and automatically aggregating existing DeFi lending protocols. This infrastructure was designed to maintain high yield with influx of users and capital from traditional finance into decentralized finance as well as provide a better user experience for investors seeking the best yields in DeFi. \n\nCentralized and Fiat savings platforms are always limited by fees and cross-border payment regulations that limit investing in other countries. With Xend Finance, anyone, whether individuals, cooperatives or credit unions, anywhere in the world can save, lend and invest in different DeFi protocols and start earning interests instantly. \n\nFor more information about Xend Finance, please visit [https://xend.finance](https://xend.finance/).  \n\nFor connecting with the Xend Finance Dev team:  via Telegram: [https://t.me/XendFinanceDevs](https://t.me/XendFinanceDevs)  and  via Discord: [https://discord.gg/QPH2M3nbku](https://discord.gg/QPH2M3nbku).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked by freezing or theft\n  - Theft of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Temporary freezing of funds\n  - Loss of governance funds\n  - Loss of treasury funds",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nNo PoC is required for smart contract bug reports. \n\nKnown issues from their previous audits are considered out-of-scope:\n\n[https://omniscia.io/xend-finance-x-vault/static-analysis](https://omniscia.io/xend-finance-x-vault/static-analysis)\n\n[https://omniscia.io/xend-finance-polygon-xtokens/static-analysis](https://omniscia.io/xend-finance-polygon-xtokens/static-analysis)\n\n[https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY](https://mega.nz/file/OYUVjAqA#amYLyJOV82MSc5BHqOacoV_zxw9k9P6co35Gdd86iUY)\n\n[https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA](https://mega.nz/file/ad0y3YJS#oVAuekM1uc4VAQc4AeyEleJRBB025QD36CMwShUoTXA)\n\nPayouts are handled by the __Xend Finance__ team directly and are denominated in USD. Payouts are done in __USDT__.",
            "assets_body": "All smart contracts of Xend Finance can be found at \n[https://github.com/xendfinance/x-vault](https://github.com/xendfinance/x-vault) \nand\n[https://github.com/xendfinance/xAuto-Polygon](https://github.com/xendfinance/xAuto-Polygon)\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns\n  - Temporary freezing of funds for any amount of time\n  - Loss of governance funds\n  - Loss of treasury funds",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "dinosaureggs",
          "project": "Dinosaur Eggs",
          "date": "2021-10-21T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4P7Nzy94xjWtwo6VKolS3S/9763bbf7a33128f46d1a5b6b7422f89d/Dinosaur_Eggs_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $30,000"
            },
            {
              "level": "medium",
              "payout": "USD $15,000"
            },
            {
              "level": "low",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x73d9f93d53505cb8c4c7f952ae42450d9e859d10#code",
              "type": "Smart Contract - Swap Factory"
            },
            {
              "target": "https://bscscan.com/address/0x9a78649501bbaac285ea4187299471b7ad4abd35#code",
              "type": "Smart Contract - DSG Token"
            },
            {
              "target": "https://bscscan.com/address/0x718da2e74fff28b0a0d62aeb4f2afa8f7b521154#code",
              "type": "Smart Contract - vDSG Token"
            },
            {
              "target": "https://bscscan.com/address/0xe9c7650b97712c0ec958ff270fbf4189fb99c071#code",
              "type": "Smart Contract - Swap Router"
            },
            {
              "target": "https://bscscan.com/address/0x5acc2D6F034eC3e05eA9A8085c847662F3774CAF#code",
              "type": "Smart Contract - Liquidity Pool"
            },
            {
              "target": "https://bscscan.com/address/0x53b971dfde359b1ba80d9a90e1a7247a44940dc1#code",
              "type": "Smart Contract - TFragment Pool"
            },
            {
              "target": "https://bscscan.com/address/0x14A495B23a6fe7938AE5da73CfA153b5E67f2681#code",
              "type": "Smart Contract - Trading Pool"
            },
            {
              "target": "https://bscscan.com/address/0xb3fbfef698799ce355887ae74c3f83c6e390b838#code",
              "type": "Smart Contract - Nft Earn Erc20 Pool"
            },
            {
              "target": "https://bscscan.com/address/0x984e2cbcdc4a818c3f523010b43fe0259a0dd080#code",
              "type": "Smart Contract - Erc20 Earn Nft Pool"
            },
            {
              "target": "https://bscscan.com/address/0xfb7421220911675b9e06e9ebad68ae32d8645d48#code",
              "type": "Smart Contract - Nft Market"
            },
            {
              "target": "https://dsgmetaverse.com/",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Dinosaur Eggs is a metaverse built on the Binance Smart Chain (BSC). It has a broad product blueprint and its functions will be launched step by step. \n\nInitially, it will include a trading platform and NFT exchange market, \nfollowed by a social networking platform in the future. \n\nFor more information about Dinosaur Eggs, please visit [https://dsgmetaverse.com/](https://dsgmetaverse.com/)\n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimally 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Bugs affecting the security of user assets and the correct logic execution of applications",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. Low and Medium Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nPayouts are handled by the __Dinosaur Eggs__ team directly and are denominated in USD. However, payouts are done in __DSG__ or __USDT__, with the choice of the ratio at the discretion of the team. ",
            "assets_body": "All smart contracts of Dinosuar Eggs can be found at [https://github.com/dinosaur-eggs/core](https://github.com/dinosaur-eggs/core). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for minimally 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "solvprotocol",
          "project": "Solv Protocol",
          "date": "2021-10-19T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6iGuPY59sKjXebkhVYf6UQ/f82499903f20c617e43605fc710609cf/photo_2021-10-14_16-01-45__1_.jpg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $25,000"
            },
            {
              "level": "medium",
              "payout": "USD $10,000"
            },
            {
              "level": "low",
              "payout": "USD $3,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xE995Aa82Ed3E0a3E86097D3d2914aA6AA20777Ab",
              "type": "Smart Contract - ICToken Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x7B4b2e785d434bf2C013F1DF2641a25A2466a0Aa",
              "type": "Smart Contract - ICToken Implementation"
            },
            {
              "target": "https://etherscan.io/address/0xf30e8dF9C5EC87edfCfC9E15A349dE8061Dfe8dB",
              "type": "Smart Contract - VestingPool Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x61449229E647263a22cf55e16D2fcdB04eE731fF",
              "type": "Smart Contract - VestingPool Implementation"
            },
            {
              "target": "https://etherscan.io/address/0xd4A4025Ac285796A237aF820452F569cf9fC92a1",
              "type": "Smart Contract - SolvICMarket ProxyAdmin"
            },
            {
              "target": "https://etherscan.io/address/0xD91A208995bfBde9D133c39417FBD352e595650b",
              "type": "Smart Contract - SolvICMarket Proxy"
            },
            {
              "target": "https://etherscan.io/address/0x01981d869D8559b0D3B807f15Ab51260A1f9f4F2",
              "type": "Smart Contract - SolvICMarket Implementation"
            },
            {
              "target": "https://etherscan.io/address/0x08A3947CBd0Abf0433Bc71FB339b3a7b5116747a",
              "type": "Smart Contract - Convertible Voucher Implementation"
            },
            {
              "target": "https://etherscan.io/address/0xbF50337eD0Ff20Fa4d5702BF2DA187E2C217D034",
              "type": "Smart Contract - Convertible Voucher Proxy"
            },
            {
              "target": "https://etherscan.io/address/0xfa774814fF714824fD4edBbcdF29A89d84D95d45",
              "type": "Smart Contract - IVO Marketplace Implementation"
            },
            {
              "target": "https://etherscan.io/address/0x83208b368c34dAc1A0F8B616f278ed42f1FFB8cd#code",
              "type": "Smart Contract - IVO Marketplace Proxy"
            }
          ],
          "mdx": {
            "program_overview": "Solv Protocol is a decentralized platform for creating, managing, and trading Financial NFTs.\n\nWith the development of Decentralized Finance, explorations into bringing NFTs to more tangible scenarios of finance are birthing the concept of “Financial NFTs” - NFTs that can represent and certify any type of financial equity. \n\nBut as the ERC-721 Non-Fungible Token Standard describes, NFT is used to identify something or someone in a unique way, which is not natural for many financial scenarios. This is why Solv introduces its Fractionalized NFT Standard, vNFT - an ERC-721 extension that enhances NFTs with a quantitative property and some quantitative operations, thus making them much more fitting for financial scenarios.\n\nBased on this sophisticated token standard, Solv Protocol provides Financial NFTs with a comprehensive solution for their creation, management, and transactions. To emphasize the financial side, they name the NFT that is minted on Solv Protocol a voucher. There are various financial scenarios that are developed by Solv and its partners for the economy of corresponding vouchers.\n\nFor more information about Solv Protocol, please visit [https://solv.finance/home](https://solv.finance/home).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical/High severity bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward.\n\nReports with issues already covered in [https://github.com/solv-finance/Audit](https://github.com/solv-finance/Audit) are not eligible for a reward.\n\nPayouts are handled by the __Solv Protocol__ team directly and are denominated in USD. Payouts are done in __USDT__.",
            "assets_body": "All smart contracts of Solv can be found at [https://github.com/solv-finance](https://github.com/solv-finance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "divergence",
          "project": "Divergence",
          "date": "2021-10-15T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4YRNLqw2OaneUn1hOYg5Vc/490409fdb630caa6b85693775e7e8386/Divergence.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "From USD $50,000 (Refer to Payout** in Section Above)"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "From USD $50,000 (Refer to Payout** in Section Above)"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://www.divergence-protocol.com",
              "type": "Web/App"
            },
            {
              "target": "https://beta.divergence-protocol.com/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Divergence is a decentralized platform for hedging, trading DeFi-native asset volatility, with its flagship product being an AMM-based marketplace trading synthetic binary options.\n\nTo fill this gap,  Divergence is developing a range of decentralized volatility derivatives and volatility index products with the aim of becoming the go-to platform for: \n\n  - Risk-averse users seeking to hedge volatility risks \n  - Risk-tolerant users seeking to trade and gain leveraged exposure to volatility \n  - Risk-neutral users seeking to participate as liquidity providers and earning fees\n\nFor more information about Divergence, please visit [https://divergence-protocol.com](https://divergence-protocol.com). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Website goes down or malfunctions\n  - Theft of treasury DAO funds\n  - Deletion of user data",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\n__Payout**__ At the time of this program publication Divergence is not live with its mainnet yet. “Critical” bounty is currently offered at USD 50 000. \n\nOnce Divergence’s V1 product is live, this page will update periodically to reflect changes in TVL and adjust “Critical” bounty cap accordingly.The maximum payout for a “Critical” bounty is 10% of the total value locked of the contracts where the bug is discovered, capped at $1,000,000. The minimum payout for this level of bugs is USD 50 000. \n\nA PoC and a suggestion for a fix is required for all Critical bug reports. Additionally, a PoC is required for all other Web/App bug reports. \n\nPayouts are handled by the __Divergence__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "Only the web/app assets explicitly listed here are in-scope. All else are out-of-scope.\n\nAll code of Divergence can be found at [https://github.com/DivergenceProtocol](https://github.com/DivergenceProtocol/divergence-contracts/tree/820d5e963e207f326c7dd1ba4619a041b9e5d9e0). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nAny smart contract file labeled as \"dummy\" or \"test\", or is within a folder that has that in its name, is considered as out-of-scope. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for 3 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "scientix",
          "project": "Scientix",
          "date": "2021-10-11T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3uoSi7c2nNVBV144JL5yBg/ab412dba8e9b9609075b6463b71f81d5/Scientix_Logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xEbB15456C0833033f0310f61748CD597554460Da",
              "type": "Smart Contract - Scientist"
            },
            {
              "target": "https://bscscan.com/address/0x2dfE725eca8FFe13fe4E4a8E015cF857b3b72bcF",
              "type": "Smart Contract - TransmuterB"
            },
            {
              "target": "https://bscscan.com/address/0x7DA4b286b24B85BA971F5f5f4375F71e15B55E15",
              "type": "Smart Contract - VaultAdapter"
            },
            {
              "target": "https://bscscan.com/address/0xa96b313cB2E81505b306250946e3Be86b26706B1",
              "type": "Smart Contract - VaultAdapterWithIndirection"
            },
            {
              "target": "https://bscscan.com/address/0x8E2208C93E7Ad4500140144505eC47c6feFa04FC",
              "type": "Smart Contract - Vault"
            },
            {
              "target": "https://bscscan.com/address/0x49A54908E1335f8702Af5e5BF787Ce83bd2BF3ED",
              "type": "Smart Contract - StratAlpaca"
            },
            {
              "target": "https://bscscan.com/address/0x68145F3319F819b8E01Dfa3c094fa8205E9EfB9a",
              "type": "Smart Contract - StakingPool"
            },
            {
              "target": "https://bscscan.com/address/0xF92aBA2A79dC133278DE2CDDB38Db775A4b5B024",
              "type": "Smart Contract - veSCIX"
            },
            {
              "target": "https://bscscan.com/address/0x0E5C2b15666EEE4b66788E45CF4Da0392C070fa7",
              "type": "Smart Contract - ScToken (scUSD)"
            },
            {
              "target": "https://bscscan.com/address/0x2CFC48CdFea0678137854F010b5390c5144C0Aa5",
              "type": "Smart Contract - ScientixToken (SCIX)"
            },
            {
              "target": "https://bscscan.com/address/0x802De5174b2526e100DE119C479e5560f0970BF1",
              "type": "Smart Contract - Timelock"
            }
          ],
          "mdx": {
            "program_overview": "Scientix is a future-yield-backed synthetic asset platform on Binance Smart Chain. Scientix is a self-repaying loan, no liquidation. Scientix provides users advances on yield farming through a synthetic token that represents a fungible claim on any underlying collateral.\n\nScientix Protocol has the following functionalities: depositing BUSD to borrow scUSD, transmuting scUSD to BUSD, liquidation, staking, etc. The initial kind of collateral Scientix supports is BUSD. In the future, it may support other assets as well.\n\nScientix Protocol makes single-asset yield farming more efficient. It gives users a flexible line of credit for their future yield. Users can enter and exit anytime without committing to long lockups.\nFor more information about Scientix, please visit [https://scientix.finance/](https://scientix.finance/#/) \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Freezing of funds\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA PoC is required for Critical and High severity Smart Contract/Blockchain bug reports.\n\nKnown issues raised in the following audit reports would be considered out-of-scope:\n[https://github.com/sec-bit/scientix-audit-report/blob/main/Scientix_Protocol_Report_EN.pdf](https://github.com/sec-bit/scientix-audit-report/blob/main/Scientix_Protocol_Report_EN.pdf)\n\n[https://app.inspex.co/library/scientix#?scope=scientix-stakingpool-vault-strategy-votingescrow](https://app.inspex.co/library/scientix#?scope=scientix-stakingpool-vault-strategy-votingescrow)\n\nPayouts are handled by the __Scientix__ team directly and are denominated in USD. However, all payouts are done in __SCIX__.",
            "assets_body": "All smart contracts of Scientix can be found at [https://github.com/ScientixFinance](https://github.com/ScientixFinance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Freezing of funds\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\nSmart Contracts and Blockchain \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "brink",
          "project": "Brink",
          "date": "2021-10-11T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/35hxuNBgoXilQeYVhA6ELf/f998344961488adf0cb27d43d4263bb5/Brink_Logo__1_.svg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/brinktrade/brink-core",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://github.com/brinktrade/brink-verifiers",
              "type": "Smart Contract - Verifiers"
            },
            {
              "target": "https://github.com/brinktrade/brink-sdk",
              "type": "Smart Contract - Sdk"
            }
          ],
          "mdx": {
            "program_overview": "Brink is a fully permissionless, non-custodial, and decentralized network that provides automated execution of transactions to the DeFi community.\nFor more information about Brink, please visit our [developer documentation](https://app.gitbook.com/@brink/s/brink/getting-started/platform-overview) and our [website](https://www.brink.trade/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n- Potential theft or loss of value for all proxy accounts. This would be any attack that affects all accounts created in the system.\n\n- Potential theft or loss of value for an individual proxy account. This would be any attack that affects a single account based on an individual account owner action, such as signing a message to one of the Brink verifiers that allows the account to be compromised.\n\n- An attack that invalidates signed orders, but does not result in any direct theft or loss of value.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Brink classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed. \n\n  - Critical\n    - Potential theft or loss of value for all proxy accounts. This would be any attack that affects all accounts created in the system.\n\n  - High\n    - Potential theft or loss of value for an individual proxy account. This would be any attack that affects a single account based on an individual account owner action, such as signing a message to one of the Brink verifiers that allows the account to be compromised.\n\n  - Medium\n    - An attack that invalidates signed orders, but does not result in any direct theft or loss of value.\n\n  - Low\n    - An attack with some level of consequence, and is one of the three:\n      - highly unlikely\n      - low impact on users \n      - bug in brink-sdk that results in an unintended user action\n\nSpecial Rewards : Gas improvements\n\n  - $1 per gas saved or any smart contract change that doesn’t affect functionality or compromise security. This only applies to changes in brink-core and the “limit swap” verifiers in brink-verifiers\n\nPayouts are handled by the __Brink__ team directly and are denominated in USD. However, payouts are done in __ETH__ or __USDC/DAI__ at the discretion of the team. ",
            "assets_body": "Please note that only low severity vulnerabilities will be considered for [https://github.com/brinktrade/brink-sdk](https://github.com/brinktrade/brink-sdk)\n\nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nAll folders with “Test” or “Dummy”, [https://github.com/brinktrade/brink-verifiers/blob/master/contracts/Verifiers/CancelVerifier.sol](https://github.com/brinktrade/brink-verifiers/blob/master/contracts/Verifiers/CancelVerifier.sol) and\n[https://github.com/brinktrade/brink-verifiers/blob/master/contracts/Verifiers/TransferVerifier.sol](https://github.com/brinktrade/brink-verifiers/blob/master/contracts/Verifiers/TransferVerifier.sol) are out of scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of minutes/hours/days\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Potential theft or loss of value for all proxy accounts. This would be any attack that affects all accounts created in the system.\n  - Potential theft or loss of value for an individual proxy account. This would be any attack that affects a single account based on an individual account owner action, such as signing a message to one of the Brink verifiers that allows the account to be compromised.\n  - An attack that invalidates signed orders, but does not result in any direct theft or loss of value.\n  - An attack with some level of consequence, and is one of the three:\n    - highly unlikely\n    - low impact on users \n    - bug in brink-sdk that results in an unintended user action\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gamma",
          "project": "Gamma",
          "date": "2021-10-08T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2teADVeqlZjb4p9u7YbiMX/9c40208f8f56b9beb73bb3077228fa2c/Gamma_Logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000 - $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xd4bc3380161420442e7f6b1480fcdc18c7bd814b",
              "type": "Smart Contract - UniProxy"
            },
            {
              "target": "https://etherscan.io/address/0x709767BB586aAF7e3E00278e9EdB224B4AA16e0a",
              "type": "Smart Contract - Hypervisor"
            },
            {
              "target": "https://etherscan.io/address/0x26805021988F1a45dC708B5FB75Fc75F21747D8c",
              "type": "Smart Contract - xGamma"
            }
          ],
          "mdx": {
            "program_overview": "Access active liquidity management on Uniswap v3. Gamma has developed a protocol, a management infrastructure, and a variety of strategies used by managers and market makers. As an LP, you can deposit your assets for Gamma to actively manage in Uniswap v3 positions, returning yield in the asset you deposit.\n\nFor more information about Gamma, please visit [https://www.gammastrategies.org/](https://www.gammastrategies.org/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds\n  - Theft of unclaimed yield or principal\n  - Freezing of unclaimed yield",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports must come with a PoC in order to be considered for a reward. \n\nThe following known issues would be considered as out-of-scope of this bounty program: \n  - For the UniProxy contract, its deposit configuration is its operational context. Attacks which depend on different configuration than provided for their example hypervisor contract are not to be considered\n  - For the xGamma contract, an attack is possible wherein the attacker deposits just before and withdraws just after rebase. In our operational context, they do not send funds (rebase) to the xGamma contract outside of private rpc.\n\nPayouts are handled by the __Gamma__ team directly and are denominated in USD. However, payouts are done in either __GAMMA__, __ETH__ or __USDC__, up to the discretion of the team.",
            "assets_body": "All smart contracts of Gamma can be found at [https://github.com/GammaStrategies/hypervisor/tree/stable](https://github.com/GammaStrategies/hypervisor/tree/stable). \nHowever, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds\n  - Theft of unclaimed yieldTheft of unclaimed yield\n  - Freezing of unclaimed yield for any amount of time\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n    - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "luckylion",
          "project": "Lucky Lion",
          "date": "2021-10-01T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5ZnQlRe8NERfcPCjGUtZTv/adfc54069d1100c1c9fa9086c2f4bf27/Lucky_Lion.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xc3D912863152E1Afc935AD0D42d469e7C6B05B77",
              "type": "Smart Contract - LuckyToken"
            },
            {
              "target": "https://bscscan.com/address/0xB6FE67c8a28d50c50f65fDb5847Ee4477c550568",
              "type": "Smart Contract - Masterchef"
            },
            {
              "target": "https://bscscan.com/address/0x4B6c8959a41475347226d51f37eC9a1E09F39a92",
              "type": "Smart Contract - Timelock"
            },
            {
              "target": "https://bscscan.com/address/0x75c8Ec8884a9FC4D8EAcf2599fDBa08B7D4F653B",
              "type": "Smart Contract - Syrup Bar"
            },
            {
              "target": "https://www.luckylion.io",
              "type": "Web/App"
            },
            {
              "target": "https://app.luckylion.io",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Lucky Lion, is the latest addition to our portfolio of APAC's leading iGaming brands with over 200,000 loyal monthly active users, allowing players to yield their tokens on our decentralised yield farm, play industry leading games and stake their winnings through the revenue sharing pool to earn even more amazing rewards.\n\nAiming to become the world's first community led GameFi platform built on Binance Smart Chain, we reward our loyal user-base by letting them earn up to 9% revenue share of the booming iGaming market that is expected to reach $127.3 Billion USD by 2027, at a compounding annual rate of 11.5%. \n\nFor more information about Lucky Lion, please visit [https://www.luckylion.io/](https://www.luckylion.io/). \n\nThis bug bounty program is focused on their smart contracts and website and is focused on preventing the following impacts:\n\n  - Theft of governance funds \n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing and modifying of gaming credit of any amount\n  - Thefts and freezing and modifying of revenue sharing pool of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical and High bug reports are required to have a PoC and a suggestion for a fix in order to receive a reward. \n\nTheft of Yield or modifying game credit or revenue sharing pool is considered Critical if the theft is greater than the equivalent of USD 50,000 otherwise is considered as High.\n\nVulnerabilities involving any bug already disclosed [in this audit](https://public.inspex.co/report/Inspex_AUDIT2021022_LuckyLion_LuckyToken_FullReport_v1.0.pdf)   __are not__ eligible for a reward.\n\nVulnerabilities involving any bug already disclosed in the following __are not__ eligible for a reward:\n\n[https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-LuckyToken-v1.0.pdf](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-LuckyToken-v1.0.pdf)\n\n[https://public.inspex.co/report/Inspex_AUDIT2021024_LuckyLion_Farm_FullReport_v1.0.pdf](https://public.inspex.co/report/Inspex_AUDIT2021024_LuckyLion_Farm_FullReport_v1.0.pdf)\n\n[https://github.com/TechRate/Smart-Contract-Audits/blob/main/September/Lucky.pdf](https://github.com/TechRate/Smart-Contract-Audits/blob/main/September/Lucky.pdf)\n\nPayouts are handled by the __Luckylion__ team directly and are denominated in USD. However, payouts are done in __USDT__ or __BUSD__, at the discretion of the team.",
            "assets_body": "Documentation of Luckylion can be found at [https://docs.luckylion.io/](https://docs.luckylion.io/).\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Theft of governance funds \n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Thefts and freezing and modifying of gaming credit of any amount\n  - Thefts and freezing and modifying of revenue sharing pool of any amount\n\n__Web/App__\n\n  - Thefts and freezing and modifying of revenue sharing pool of any amount\n  - Redirected funds by address modification",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Feature Requests\n  - Best Practices\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "instadapp",
          "project": "Instadapp",
          "date": "2021-09-19T20:30-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jHZEinQjaABm48Sct1BZs/3d224c5a05bff575e14b98970f939667/Instadapp.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            },
            {
              "level": "high",
              "payout": "USD  $100"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/Instadapp/dsa-contracts",
              "type": "Smart Contract - DSA Contracts"
            },
            {
              "target": "https://github.com/Instadapp/dsa-connectors",
              "type": "Smart Contract - DSA Connectors"
            },
            {
              "target": "https://github.com/Instadapp/DSA-governance",
              "type": "Smart Contract - DSA Governance"
            },
            {
              "target": "https://defi.instadapp.io",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "The Instadapp platform is a full feature platform for both users and developers to leverage the full potential of DeFi. The Instadapp protocol ('DSL') acts as the middleware that aggregates multiple DeFi protocols into one upgradable smart contract layer. This structure allows Instadapp to access the full potential of Decentralized Finance.\n\nThe main functionalities of the DSL are account extensions and upgradability. The unique upgradability means that the upcoming and new extensions will be upgraded, maintained and managed by INST governance. The DSL also includes a new operability layer that acts as a ‘Account Extension.’ These extensions allow the user to access new and unique functionality for their DSL account. These extensions and the evolution of the platform form a DeFi hub through which new use cases and extensions can be created, some examples of possible use cases include: Flash Loan Module, Authority extension, L2 extension, etc.\n\nFor more information about Instadapp, please visit [https://instadapp.io/](https://instadapp.io/). \n\nThis bug bounty program is focused on their smart contracts and dapp and is focused on preventing the following impacts:\n\n  - Deletion of user data\n  - Theft of governance funds\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA PoC and a suggestion for a fix is required for Critical and High vulnerabilities. Medium level bug reports must come with a suggestion for a fix.\n\nBugs resulting in temporary freezing of funds are not eligible for a reward. \n\nPayouts are handled by the __Instadapp__ team directly and are denominated in USD. However, payouts are done in __ETH__ or __INST__, at the discretion of the team.",
            "assets_body": "All code of Instadapp can be found at [https://github.com/Instadapp](https://github.com/Instadapp/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\nAll folders and files labeled with the words “test”, “mock/mocks”, or “dummy” are out-of-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n- Any kind where the user's funds are lost\n\n__Web/App__\n\n- Shell access on server\n- Accessing sensitive pages without authorization\n- Deletion of user data\n- Injection of text/code",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "latteswap",
          "project": "LatteSwap",
          "date": "2021-09-19T06:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4GstxXT9Y8PQw95fHZVZCy/309331753223a12f28251a8dc39911ac/LatteSwap.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/latteswap-official/latteswap-config/blob/main/prod.json",
              "type": "Smart Contract - Smart Contract Addresses"
            }
          ],
          "mdx": {
            "program_overview": "LatteSwap is a decentralized exchange with a focus on bridging the DeFi and the NFT space together with its NFT integrated functionalities. The platform offers multiple DeFi features: trade, earn, collect. Users can trade cryptocurrencies with ease, participate in safe but attractive earning opportunities, and collect LatteSwap’s highly exclusive NFTs that possess real tangible utilities. LatteSwap is run by a dedicated team of cryptocurrency veterans. $LATTE is the native currency of the LatteSwap platform.\n\nFor more information about LatteSwap, please visit [https://latteswap.com](https://latteswap.com).\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Reentrancy\n  - Denial of Service by puting contracts in unforeseeable state",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nA PoC is required for all bug reports. \n\nPayouts are handled by the __LatteSwap__ team directly and are denominated in USD. However, payouts are done in __BUSD__.",
            "assets_body": "All folders and files labeled with the words “test”, “mock/mocks”, or “dummy” are out-of-scope of the bug bounty program.\n\nAll smart contracts that are not Exact Match Verified are not considered as in-scope of the bug bounty program. \n\nFor additional reference, the GitHub of LatteSwap can be found at [https://github.com/latteswap-official](https://github.com/latteswap-official). However, only the contracts in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Theft of assets in reserve pools\n  - Freezing of funds\n  - Denial of Service by puting contracts in unforeseeable state\n  - Reentrancy",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "deriprotocol",
          "project": "Deri Protocol",
          "date": "2021-09-14T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1vaEedQcs3Gfn9vzeJOLZJ/0cf99504218c2ba8af3b91595d460161/Deri.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000 - $50,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000 - $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000 - $4,999"
            },
            {
              "level": "low",
              "payout": "Up to USD $999"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/deri-finance/deriprotocol-v3",
              "type": "Smart Contracts - V3"
            }
          ],
          "mdx": {
            "program_overview": "Deri Protocol = (Perpetual Futures + Everlasting Options) x Decentralized.\nDeri Protocol is the DeFi way to trade derivatives: to hedge, to speculate, to arbitrage, all on chain. With Deri Protocol, trades are executed under AMM paradigm and positions are tokenized as NFTs, highly composable with other DeFi projects. Having provided an on-chain mechanism to exchange risk exposures precisely and capital-efficiently, Deri Protocol has minted one of the most important blocks of the DeFi infrastructure. \n\nFor more information about Deri, please visit https://deri.finance/. \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Trading front-run\n  - Making trading profit in any unfair ways\n  - Flashloan attacks or manipulations\n  - Sandwich attacks\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA PoC and a suggestion for a fix is required for Medium, High, and Critical bug reports. Low bug reports only require a PoC. \n\nThe rewards are determined by the __Deri Protocol__ team based on economic damage and exploitability. Deri Protocol reserves the right to determine the final reward amount based on these factors as well as any other discretionary factor. \n\nPayouts are handled by the Deri Protocol team directly and are denominated in USD. However, payouts are done in __DERI__.",
            "assets_body": "Only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Trading front-run\n  - Making trading profit in any unfair ways\n  - Flashloan attacks or manipulations\n  - Sandwich attacks\n  - Temporary freezing of funds for over one hour\n  - Unable to call smart contract\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "honeyfarm",
          "project": "HoneyFarm",
          "date": "2021-09-09T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/ZkTW5E9HmwjHYytheSdPa/c8a978f10304a64030b115cd11ec3dae/HoneyFarm__1_.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $2,500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xE8c93310af068aa50bd7bF0ebFa459Df2a02ceba",
              "type": "Smart Contract - MOON Token"
            },
            {
              "target": "https://bscscan.com/address/0x671e56C68047029F236f342b18632425C75885a3",
              "type": "Smart Contract - HoneyMaster (MOON)"
            },
            {
              "target": "https://bscscan.com/address/0x9b17fe2cE39b1C5BcB6BC7A60781ECdC9adb6032",
              "type": "Smart Contract - Referral (MOON)"
            },
            {
              "target": "https://moon.honeyfarm.finance/farms",
              "type": "Web/App - Farms"
            },
            {
              "target": "https://moon.honeyfarm.finance/pools",
              "type": "Web/App - Pools"
            },
            {
              "target": "https://moon.honeyfarm.finance/referrals",
              "type": "Web/App - Referrals"
            }
          ],
          "mdx": {
            "program_overview": "HoneyFarm Finance is a layered delegated yield farming project with deflationary tokenomics of a maximum supply. They also have a layer 2 native token called BEAR and a layer 3 native token called MOON.\n\nFor more information about HoneyFarm, please visit [https://honeyfarm.finance/](https://honeyfarm.finance/).   \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll bug reports must come with a PoC in order to be considered for a reward.\n\nBugs reported in the following audits are not eligible for a reward:\n\n[TechRate Audit](https://github.com/TechRate/Smart-Contract-Audits/blob/main/HoneyFarm.pdf)\n\n[Solidity Audit](https://solidity.finance/audits/HoneyFarm/)\n\n[Paladin Audit](https://paladinsec.co/projects/honeyfarm-layer-3/)\n\nPayouts are handled by the __HoneyFarm__ team directly and are denominated in USD. However, payouts have 50% done in __BUSD__ and the rest are done in __HONEY__, __BEAR__, or __MOON__, at the discretion of the team.",
            "assets_body": "Only the web/app assets explicitly listed here are in-scope. All else are out-of-scope.\n\nAll smart contracts of HoneyFarm can be found at [https://github.com/HoneyFarmFi/HoneyFarmContracts](https://github.com/HoneyFarmFi/HoneyFarmContracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Smart contract gas drainage\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Site goes down\n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "moonpot",
          "project": "Moonpot",
          "date": "2021-08-25T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6FvxVd3iJm6yo0uysbo34I/8a46b433129fc292b04a80a972b22c39/Moonpot.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0x679136C668a0478c4465Fc0744d050779E011269",
              "type": "Smart Contract - YieldSourcePrizePool"
            },
            {
              "target": "https://bscscan.com/address/0x31Ba553b8D5464dA551Fa63115b9f9eaA780Ec06",
              "type": "Smart Contract - MultipleWinners"
            },
            {
              "target": "https://bscscan.com/address/0x04D2fD1aE46Ff5eEb90EB8C1F5AD5E2187f5e733",
              "type": "Smart Contract - Ziggy"
            },
            {
              "target": "https://bscscan.com/address/0xa178972A8FfeFd6661179666134A2ba9B3DbE3B1",
              "type": "Smart Contract - Ticket"
            },
            {
              "target": "https://bscscan.com/address/0x35ebb629b6e65Cb7705B5E0695982D206898f195",
              "type": "Smart Contract - ZiggyManagerMultiRewards"
            }
          ],
          "mdx": {
            "program_overview": "Moonpot is a win-win lottery on Binance Smart Chain (BSC) with the mission to help as many people as possible grow their assets safely and securely while having fun doing so. Moonpot savings vaults make it simple for anyone to access the bank-beating DeFi interest rates available in crypto. A weekly lottery gives everyone saving via Moonpot the thrill of a possible big win while never putting their deposit at risk.\n\nFor more information about Moonpot, please visit [https://moonpot.com/](https://moonpot.com/).     \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA suggestion on how to fix the vulnerability is required for consideration of a reward.\n\nPayouts are handled by the __Moonpot__ team directly and are denominated in USD. However, payouts are done in __POTS__, __BUSD__, or __BNB__, at the discretion of the team.",
            "assets_body": "The Moonpot GitHub is private, but if a PoC ends up being required for full validation of a bug report that is considered credible, access may be provided at the discretion of the team.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Smart Contracts and Blockchain\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "lyra",
          "project": "Lyra",
          "date": "2021-08-23T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3rpp7fLPif0JTGLDDZO6l6/fe90db1d368b64cf2a361be7b5b90808/Lyra.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/BlackScholes.sol",
              "type": "Smart Contract - BlackScholes.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/LiquidityCertificate.sol",
              "type": "Smart Contract - LiquidityCertificate.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/LiquidityPool.sol",
              "type": "Smart Contract - LiquidityPool.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/LyraGlobals.sol",
              "type": "Smart Contract - LyraGlobals.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/OptionGreekCache.sol",
              "type": "Smart Contract - OptionGreekCache.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/OptionMarket.sol",
              "type": "Smart Contract - OptionMarket.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/OptionMarketPricer.sol",
              "type": "Smart Contract - OptionMarketPricer.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/OptionToken.sol",
              "type": "Smart Contract - OptionToken.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/PoolHedger.sol",
              "type": "Smart Contract - PoolHedger.sol"
            },
            {
              "target": "https://github.com/lyra-finance/lyra-protocol/blob/master/contracts/ShortCollateral.sol",
              "type": "Smart Contract - ShortCollateral.sol"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x325d4217c73872bc9f4693d756d6a78c1c82796a",
              "type": "Lyra Finance: Black Scholes"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x8f69783db37905f026cf62223c9957ae0ca90a38",
              "type": "Lyra Finance: Liquidity Certificate"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x7af4e1ce484f40d927b9c90fb6905df4376fc3f6",
              "type": "Lyra Finance: Liquidity Pool"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x074edcbabee9cb019d217c158ab4e92c1cd7caf0",
              "type": "Lyra Finance: Lyra Globals"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x121c7eaf4af34e075136bf5c549bdd0ad40040ec",
              "type": "Lyra Finance: Option Greek Cache"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x176b9e1bce6757ab23235fa9899b32e89b105b0d",
              "type": "Lyra Finance: Option Market"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x469e9f00cc30350a4e1c3f3109c8460b532f5fa1",
              "type": "Lyra Finance: Option Market Pricer"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x0a99c0643b00fcd5fcd16c46e4efebff650b5ea1",
              "type": "Lyra Finance: Option Token"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0x000a2c01f114b89952749359922d85e27edda38d",
              "type": "Lyra Finance: Pool Hedger"
            },
            {
              "target": "https://optimistic.etherscan.io/address/0xd7d974e81382d05e8d9fc6d0d17d0d852e9806dd",
              "type": "Lyra Finance: Short Collateral"
            }
          ],
          "mdx": {
            "program_overview": "Current implementations use a static IV or other, less accurate workarounds to price options. Lyra is also the first options AMM to compose with other DeFi projects to automatically price and hedge risk for LPs. The reduced risk allows LPs to feel comfortable to provide deeper liquidity, yielding more trading volume and higher fees.\n\nFor more information about Lyra, please visit [https://www.lyra.finance/](https://www.lyra.finance/).     \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nRe-entrancy attacks are only considered valid submissions if it is assumed that all plugged in smart contracts are the synthetix contracts\n\nAny attack vectors that require a custom quote/base asset (Lyra’s units of account - sUSD/sETH for example) are not eligible for a reward.\n\nAny vulnerability already disclosed in the [audits that have been performed](https://github.com/lyra-finance/lyra-protocol/tree/master/audits) are not able to receive a reward.\n\nPayouts are handled by the __Lyra__ team directly and are denominated in USD. However, payouts are done in __USDC__ or __ETH__, at the discretion of the team.",
            "assets_body": "Further information about Lyra can be found at [https://github.com/lyra-finance/lyra-protocol](https://github.com/lyra-finance/lyra-protocol). However, only those in the assets in scope table are considered as in-scope of the bug bounty program. An exception to this are the libraries that are inherited from these contracts.\n\nWhen Lyra is launched on mainnet, this table will be updated with the deployed addresses. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\nSmart Contracts and Blockchain\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bunnypark",
          "project": "BunnyPark",
          "date": "2021-08-11T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3VGRvxRLkXjKBF2wnyqnzp/44b3a9104b8011bafaaf9f3f35e94c86/BunnyPark__2_.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $3,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://www.bunnypark.com",
              "type": "Web/App"
            },
            {
              "target": "https://swap.bunnypark.com",
              "type": "Web/App"
            },
            {
              "target": "https://bscscan.com/address/0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1",
              "type": "Smart Contract - BP Token"
            },
            {
              "target": "https://bscscan.com/address/0x88B048191b071ED1BCD1Ff7c7C21a697EC86811c",
              "type": "Smart Contract - Timelock"
            }
          ],
          "mdx": {
            "program_overview": "BunnyPark is a DeFi + NFT project deployed on Binance Smart Chain. The program focuses on NFT SaaSization and product standardization to allow more variety of NFT gameplay, product rules and application value to be output in a series of standard smart contracts. Through this way, more NFT projects and artists would be able to quickly form NFTs and NFT platforms, promoting BunnyPark as the DeFi Lego in the NFT sector. At the same time, among the features of BunnyPark include Farm, CropPool, NFT mining, Swap apart from the various traditional DeFi platform functions. \n\nFurthermore, various interesting sections such as interstellar expedition, NFT Blind Boxes, NFT Social Exchange, NFT Park as a high quality content incubation platform, NFT SaaS standardized platform, NFT creation platform etc will be available on BunnyPark to promote valuable usage of NFTs.\n\nFor more information about BunnyPark, please visit [https://www.bunnypark.com/](https://www.bunnypark.com/).      \n\nThis bug bounty program is focused on their smart contracts, website, and application, and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to qualify for a reward, the following must be provided for all bug reports: \n  - Proof of Concept (PoC)\n  - Suggestion for a fix\n\nPayouts are handled by the __BunnyPark__ team directly and are denominated in USD. However, payouts are done in __USDT__ on the Binance Smart Chain.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect these assets are accepted within the bug bounty program. All others are out of scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "teller",
          "project": "Teller",
          "date": "2021-08-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/37sB38KRaTsvvqrLOXb7cZ/c644e36e4e3c88ea527fe9b3e3c1d58d/teller-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://alpha.teller.finance/",
              "type": "Web/App"
            },
            {
              "target": "https://app.teller.finance/",
              "type": "Web/App"
            },
            {
              "target": "https://etherscan.io/address/0xa9777F43F61562DcAD8a209Fed4Af1E0Cb6c2623/#code",
              "type": "Smart Contract - AssetSettingsDataFacet"
            },
            {
              "target": "https://etherscan.io/address/0x2D6db3a2e4A14cf90e502D35C544CfF26131FB53/#code",
              "type": "Smart Contract - AssetSettingsFacet"
            },
            {
              "target": "https://etherscan.io/address/0x8075462bc2d2f2587cc9874199729bc7a3226eca/#code",
              "type": "Smart Contract - ChainlinkAggFacet"
            },
            {
              "target": "https://etherscan.io/address/0x3b3692a5e1E82FA02D38d0A5f6EBb0070D84eB70/#code",
              "type": "Smart Contract - CollateralEscrowBeaconFactory"
            },
            {
              "target": "https://etherscan.io/address/0x44ce7dA1c5FC394eCA63B82B6924328D8799B81a/#code",
              "type": "Smart Contract - CollateralEscrow_V1"
            },
            {
              "target": "https://etherscan.io/address/0x0308917D99Aa92d7e5F27cECa5250Fa09a2224aa/#code",
              "type": "Smart Contract - CollateralFacet"
            },
            {
              "target": "https://etherscan.io/address/0x25ff8028cde05C4D875d651B5CF0E4aCFD7a34B3/#code",
              "type": "Smart Contract - CompoundFacet"
            },
            {
              "target": "https://etherscan.io/address/0x21c3c004DAB0A4e1ff0f4473667e51A93d127CdD/#code",
              "type": "Smart Contract - CreateLoanFacet"
            },
            {
              "target": "https://etherscan.io/address/0x224Aa0f856eB0069130C90b168D8301FC5c06c38/#code",
              "type": "Smart Contract - DefaultProxyAdmin"
            },
            {
              "target": "https://etherscan.io/address/0x95F5c6Dbac30Ee95d582926b1b865ab2Ec69AE57/#code",
              "type": "Smart Contract - EscrowBeaconFactory"
            },
            {
              "target": "https://etherscan.io/address/0xb86de5840485eb7ba11e7771eb52342492f6f264/#code",
              "type": "Smart Contract - EscrowClaimTokensFacet"
            },
            {
              "target": "https://etherscan.io/address/0x08162332b1C13E6d1E80AC0D756aF255d218DC20/#code",
              "type": "Smart Contract - InitializeableBeaconProxy"
            },
            {
              "target": "https://etherscan.io/address/0xDdd76632BcA1fc65E2832F0652D601d08339CCa6/#code",
              "type": "Smart Contract - LendingFacet"
            },
            {
              "target": "https://etherscan.io/address/0x7C8Bf7F55f3140c8eA68448a3c503546A86AEf1e/#code",
              "type": "Smart Contract - LoanDataFacet"
            },
            {
              "target": "https://etherscan.io/address/0xC4aCA6088017B6e7c2475d369d64e2685e3cc2fD/#code",
              "type": "Smart Contract - LoansEscrow_V1"
            },
            {
              "target": "https://etherscan.io/address/0x7cDFF3Fd2063cb725dA6EB5e951fa3766d376D47/#code",
              "type": "Smart Contract - NFTFacet"
            },
            {
              "target": "https://etherscan.io/address/0x3425c0caB7b6fA2729181e24Aecf21A5Eb8f968F/#code",
              "type": "Smart Contract - PausableFacet"
            },
            {
              "target": "https://etherscan.io/address/0xEF2508E1673BD0BC26379d2b7d43c0a8047E92B4/#code",
              "type": "Smart Contract - PlatformSettingsFacet"
            },
            {
              "target": "https://etherscan.io/address/0xFCB61eB1d058557dB0fBf971C096d5B628CeDc75/#code",
              "type": "Smart Contract - PriceAggFacet"
            },
            {
              "target": "https://etherscan.io/address/0xb43707f26D6356ae753E9C92d3C94D23c70c4057/#code",
              "type": "Smart Contract - RepayFacet"
            },
            {
              "target": "https://etherscan.io/address/0x1cAA9Fd102b88813a6a52792703F1307fe8E5E92/#code",
              "type": "Smart Contract - SettingsFacet"
            },
            {
              "target": "https://etherscan.io/address/0x8199DC6d35275f998aA459b29d642577818E9D3e/#code",
              "type": "Smart Contract - SignersFacet"
            },
            {
              "target": "https://etherscan.io/address/0xA8E03D0E75FA9a0bBa097266FC8e14284118e0EF/#code",
              "type": "Smart Contract - TTokenBeaconFactory"
            },
            {
              "target": "https://etherscan.io/address/0x8D517146bC63378A4999007f5B90d101B2CB3b62/#code",
              "type": "Smart Contract - TTokenCompoundStrategy_1"
            },
            {
              "target": "https://etherscan.io/address/0x15bf96b00b0ccba940c56c54289167544180f7f9/#code",
              "type": "Smart Contract - TToken_V2"
            },
            {
              "target": "https://etherscan.io/address/0xc14D994fe7C5858c93936cc3bD42bb9467d6fB2C/#code",
              "type": "Smart Contract - TellerDiamond"
            },
            {
              "target": "https://etherscan.io/address/0x2ceB85a2402C94305526ab108e7597a102D6C175/#code",
              "type": "Smart Contract - TellerNFT"
            },
            {
              "target": "https://etherscan.io/address/0x72733102AB139FB0367cc29D492c955A7c736079/#code",
              "type": "Smart Contract - TellerNFTDictionary (Proxy)"
            },
            {
              "target": "https://etherscan.io/address/0xaB9D13A600dA3FAfE39C7eD4902D3b27d625b12C/#code",
              "type": "Smart Contract - TellerNFTDictionary (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x058F447199025e9ACF52E4A1473f4Ad9cC44D299/#code",
              "type": "Smart Contract - TellerNFTDistributor"
            },
            {
              "target": "https://etherscan.io/address/0x8f9bbbB0282699921372A134b63799a48c7d17FC/#code",
              "type": "Smart Contract - TellerNFT_V2 (Proxy)"
            },
            {
              "target": "https://etherscan.io/address/0x28BcD96049D7916fd0183710649388B89057644e/#code",
              "type": "Smart Contract - TellerNFT_V2 (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0x998b447E1D20535E154acD0Ea2b574c761a535BA/#code",
              "type": "Smart Contract - UniswapFacet"
            },
            {
              "target": "https://etherscan.io/address/0xB12B265F9D59B4aa571000ffc865a9a72A1451fb/#code",
              "type": "Smart Contract - ent_addMerkle_NFTDistributor_v1"
            },
            {
              "target": "https://etherscan.io/address/0x8E446d96D9CdD00Ee32252C02D44F3C5B2004e4E/#code",
              "type": "Smart Contract - ent_claim_NFTDistributor_v1"
            },
            {
              "target": "https://etherscan.io/address/0x3827B8cdF75EEB457C814426D23958F8F66a3E40/#code",
              "type": "Smart Contract - ent_initialize_NFTDistributor_v1"
            },
            {
              "target": "https://etherscan.io/address/0x3a0326286158fd83e835b53feff0cfba24f6b618/#code",
              "type": "Smart Conttract - ent_moveMerkle_NFTDistributor_v1"
            },
            {
              "target": "https://etherscan.io/address/0xcabf0728741b98dad753ece42d38f7deba1592ae/#code",
              "type": "Smart Contract - ent_upgradeNFTV2_NFTDistributor_v1"
            },
            {
              "target": "https://etherscan.io/address/0xfb6Dc5D8aD57E48188928fAbbecf3c48b347d128/#code",
              "type": "Smart Contract - ext_distributor_NFT_v1"
            }
          ],
          "mdx": {
            "program_overview": "Teller is an algorithmic credit risk protocol, built to enable the creation of decentralized lending markets that can offer unsecured loans. The protocol’s unique cloud-based infrastructure can connect to, and privately compute credit and banking data to generate individual loan terms based on a users’ creditworthiness. Teller Protocol was designed to develop decentralized loan products, without collateralized debt, reducing consumer risk and costs. Teller can interoperate with centralized finance data, offering everyone the freedom to develop a new wealth of trustless financial instruments.\n\nFor more information about Teller, please visit [https://www.teller.finance/](https://www.teller.finance/).  \n\nThe bug bounty program covers its smart contracts and app and is focused on preventing the following impacts:\n\n- Thefts and freezing of principal of any amount\n- Leak of user data\n- Thefts and freezing of unclaimed yield of any amount\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web and app bugs must come with a PoC in order to be accepted. Additionally, all smart contract vulnerabilities that are Medium or higher are required to have a PoC for the consideration of a reward.\n\nPayouts are handled by the Teller team directly and are denominated in USD. Payouts are done in __ETH__.\n",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\n### Impacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n- Loss of user funds staked (principal) by freezing or theft\n- Theft of unclaimed yield\n- Freezing of unclaimed yield\n- Temporary freezing of funds for any amount of time\n- Unable to call smart contract\n\n__Web/App__\n\n- Leak of user data\n- Redirected funds by address modification\n- Users spoofing other users",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n__The following activities are prohibited by this bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "arshield",
          "project": "arShield",
          "date": "2021-07-15T02:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5pFROH5zZtvJkum23aLU5R/9104a20204e706c184d0fa738dca9d44/ArmorFi_arShield_logo.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "Up to USD $200"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [],
          "mdx": {
            "program_overview": "arShields, developed by the ArmorFi team, are vaults/wrappers that automatically provide hack coverage for the underlying tokens. A user deposits an underlying token, then receives an armorToken. This armorToken has coverage in perpetuity, needs no deposits or payments, and needs no updating. Payment is periodically taken from the pool of underlying tokens to pay for arCore coverage.\n\nThe arShield system consists of four parts: arShield.sol, CoverageBase.sol, ShieldController.sol, and YearnOracle.sol (different oracle contracts are needed for different families of tokens).\n\nFurther resources regarding arShield can be found at [https://docs.google.com/document/d/1FZmiasTBeSd0vhFXIW2IXbPfs-FVKoFHNUX6AGUjy0k/edit?usp=sharing](https://docs.google.com/document/d/1FZmiasTBeSd0vhFXIW2IXbPfs-FVKoFHNUX6AGUjy0k/edit?usp=sharing). \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with:\n\n  - Any loss of user funds\n  - Ability to withdraw more Ether than should be owed after a payout\n  - Ability to game the system so that they get an unfair percentage of payouts (for example, purchasing tokens directly after the hack at a very cheap price before the contract is locked in order to get a large % of the payout)\n  - Any oracle manipulation resulting in inorganic and harmful token prices\n  - Unauthorized access to functions that should only be able to be controlled by owner such as the ability to edit shield variables\n  - Problems with users being able to maliciously manipulate amounts being paid by shields\n  - Any other problems pertaining to shield coverage",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll vulnerabilities that can cause damage of over the equivalent of USD 1 000 000 are considered as Critical within this bug bounty program, regardless of it normally being considered Critical or High. If a bug report normally classified as Critical has an impact of less than USD 1 000 000, then it is reduced to High.\n\nAll bug reports submitted as Critical must have a PoC with the report.\n\nPayouts are handled directly by the __ArmorFi__ team and are paid in __USDC__.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Any loss of user funds\n  - Ability to withdraw more Ether than should be owed after a payout\n  - Ability to game the system so that they get an unfair percentage of payouts (for example, purchasing tokens directly after the hack at a very cheap price before the contract is locked in order to get a large % of the payout)\n  - Any oracle manipulation resulting in inorganic and harmful token prices\n  - Unauthorized access to functions that should only be able to be controlled by owner such as the ability to edit shield variables\n  - Problems with users being able to maliciously manipulate amounts being paid by shields\n  - Any other problems pertaining to shield coverage",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ampleforth",
          "project": "Ampleforth",
          "date": "2021-07-02T01:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6x9X1ryBXUSGOLqE1FKIhE/c5eca234ef366e95460888f83a300ed3/Ampleforth.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/aave/protocol-v2/pull/66",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "AMPL is the first rebasing currency and a key DeFi building block for denominating stable contracts. The AMPL protocol adjusts total supply daily based on market conditions, transferring volatility from price to supply. Like Bitcoin, AMPL’s elastic supply policy does not rely on traditional banks or lenders of last resort. Because of this unique approach, AMPL can be used as a true unit of account to denominate smart contracts.\n\nThe aAMPL token, a custom aToken on Aave, is planned to be entered into polling with the goal of being integrated into the Aave ecosystem, and was formally submitted as [AIP37](https://github.com/aave/aip/pull/37).\n\nFurther resources regarding Ampleforth can be found on their website, [https://www.ampleforth.org/](https://www.ampleforth.org/).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with:\n\n  - The loss of user AMPL deposits\n  - Theft of unclaimed yield \n  - Freezing of AMPL on Aave for 1 hour or longer",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nOnly vulnerabilities that are directly affecting aAMPL and the yield generated from aAMPL are considered under this bug bounty program. For example, if yield can be stolen from staking of other aTokens, they will not be considered for a reward. \n\nPayouts up to __USD 50 000__ are handled by the Ampleforth team directly and are denominated in USD. However, payouts are done in __ETH__, __USDT__, __USDC__, or __AMPL__, at the discretion of the team.",
            "assets_body": "Vulnerabilities on Aave itself as well as natively on Ampleforth are not covered and are not accepted under this bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Theft of user AMPL deposits\n  - Theft of unclaimed yield \n  - Freezing of AMPL on Aave for 1 hour or longer",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "composablefinance",
          "project": "Composable Finance",
          "date": "2021-06-29T07:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1hpjWh8VBN3euPvH8KrrGa/5fef5504094c1e9a5ed8ce33b7ee1818/Profile_Composble.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x4A03ea61E543eC7141a3f90128B0c0c9514F8737#code",
              "type": "Smart Contract - ERC1967"
            },
            {
              "target": "https://etherscan.io/address/0xF12dA8470E2643cCb39a157e8577D9AA586a488f#code",
              "type": "Smart Contract - ERC1967"
            },
            {
              "target": "https://etherscan.io/address/0x1941441d31809e9E1828Da0cE6d44175F657E215#code",
              "type": "Smart Contract - ERC1967"
            },
            {
              "target": "https://www.composable.finance/",
              "type": "Web/App"
            },
            {
              "target": "https://app.composable.finance",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Composable Finance is creating infrastructure to unlock the multi-layer, and multi-chain future of Ethereum, and other layer 1 blockchains. At present, the lack of compatibility between blockchains and layers results in disparity and inefficiency. Developers are very restricted in what they can build with siloed infrastructures, and users are forced to navigate complicated and lengthy processes if they want to utilize multiple chains or layers.\n\nWith their products, Composable Finance intends to reduce these barriers that DeFi creators and users face.\n\nFor more information about Composable Finance, please read their [introductory Medium blog post](https://composablefi.medium.com/introducing-composable-finance-a-cross-chain-cross-layer-comprehensive-defi-solution-60d9a44646a5).\n\nThe bug bounty program covers its smart contracts and apps and is focused on receiving bug reports of the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nAll bug reports that are Medium or higher must come with a recommendation on how to fix the bug in order to qualify for a reward.\n\nThis bug bounty program has a total budget of USD 150 000. If there are simultaneous valid bug reports submitted, the rewards will be distributed on a first-come-first-serve basis, or at the discretion of the team. Additionally, the team may use up to 0.05% of the Composable Token supply to be designated as potential rewards for any other identified vulnerabilities after the USD 150 000 is exhausted.\n\nPayouts are handled by the __Composable Finance__ team directly and are denominated in USD. Payouts are done in __ETH__ or __USDC__.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nFor added reference, please take a look at their GitHub - [https://github.com/ComposableFi](https://github.com/ComposableFi). However, only the contracts listed as in-scope here are considered as part of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Anything else that would fall in the categories listed as Critical, High, and Medium\n\n__Website and Apps__\n\n  - Frontend manipulation\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding attacks of the following types, as long as they result in the impacts in scope:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n     - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ichi",
          "project": "Ichi",
          "date": "2021-06-17T10:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4sIm0crvpmamzvcEeYiPf3/0b6dd39dc320f99744fb16f6cecf4f28/Ichi.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xd0092632b9ac5a7856664eec1abb6e3403a6a36a",
              "type": "Smart Contract - OneTokenFactory"
            },
            {
              "target": "https://etherscan.io/address/0x14356bf935d6a62f3b87ab89f729217599bc108d",
              "type": "Smart Contract - OneTokenV1"
            },
            {
              "target": "https://etherscan.io/address/0x81c9932bd9a87e454710ef83551ac32dd808630e",
              "type": "Smart Contract - Basic Null Controller"
            },
            {
              "target": "https://etherscan.io/address/0x58254B405E85359Fc7Eb3b8856bA82A4dD7C82E2",
              "type": "Smart Contract - Incremental Mint Master"
            },
            {
              "target": "https://github.com/ichifarm/ichi-oneToken",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "ICHI is a self-sustaining, community governed platform that enables any other cryptocurrency community to create and govern their own in-house, non-custodial oneToken (a stablecoin valued at $1). \n\nICHI is the governance token of the ichi.org community and platform. It is hard capped at 5M tokens.  Each ICHI is a vote on allowed oracles, collateral, investment strategies, etc in exchange for protocol governance rewards.\n\noneTokens are the governance tokens of specific oneToken systems.  Each oneToken is a vote on treasury allocations, specific stablecoins parameters (like minting and redeeming fees), and on adoption programs.\n\nMore information about Ichi can be found on their website, [https://www.ichi.org/](https://www.ichi.org/).  \n\nThis bug bounty program is focused around its smart contracts and is mostly concerned with the prevention of the loss of user funds.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nPayouts are handled by the __ICHI__ team directly and are denominated in USD. However, payouts are done in __USDC__ for rewards up to __USD 10 000__. For payouts greater, the reward is paid in __xICHI__. Critical payouts are done over a 6-month period distributed every month with the utilization of a Sablier contract",
            "assets_body": "Vulnerabilities affecting the four listed smart contracts are prioritized over the other smart contracts found on the GitHub link. Testnet smart contracts and other assets that are not smart contracts are not included in this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "compound",
          "project": "Compound",
          "date": "2021-06-04T16:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5pzaBv2Ygrx3DN9sctxd0a/dcb98ece577d2c0ac8b6ea637e9a3069/Compound.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/compound-finance/compound-protocol/pull/127",
              "type": "Smart Contract (Pull Request)"
            }
          ],
          "mdx": {
            "program_overview": "Compound is a protocol on the Ethereum blockchain that establishes money markets, which are pools of assets with algorithmically derived interest rates, based on the supply and demand for the asset. Suppliers (and borrowers) of an asset interact directly with the protocol, earning (and paying) a floating interest rate, without having to negotiate terms such as maturity, interest rate, or collateral with a peer or counterparty.\n\nEach money market is unique to an Ethereum asset (such as Ether, an ERC-20 stablecoin such as Dai, or an ERC-20 utility token such as Augur), and contains a transparent and publicly-inspectable ledger, with a record of all transactions and historical interest rates.\n\nThis bug bounty program is focused around the patches with the [Comptroller implementation](https://compound.finance/docs/comptroller) and the [cToken implementation](https://compound.finance/docs/ctokens) and the prevention of the loss of user funds and significant downtime of the smart contracts.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nOnly bug reports that cause direct economic damage as stated in the Immunefi Vulnerability Severity Classification System for Critical level vulnerabilities are accepted within this bug bounty program. Vulnerabilities that cause a loss of yield may be considered if direct theft of USD 100 000 or greater can be executed. \n\nFor a vulnerability report to be considered for a reward, a proof of concept (PoC) must be included in the bug report, together with sufficient detail to enable Compound Labs engineers to quickly reproduce, understand, and fix the vulnerability.\n\nPayouts are handled by __Compound Labs__ directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "Vulnerabilities caused by the effective changes made by the pull request listed in this table are considered as within scope of the bug bounty program, in addition to bugs in the changes themselves. \n\nVulnerabilities affecting any testnet components are not considered in-scope for this bug bounty program. Only mainnet components are considered as in-scope.\n\nFor reference, further details about these changes can be found here - [https://www.comp.xyz/t/safety-and-gas-patches/1723](https://www.comp.xyz/t/safety-and-gas-patches/1723) \n\n__Terms and Conditions__\n\n- To be eligible for bug bounty reward consideration, you must:\n\n  - Be at least 18 years of age.\n  - Be reporting in an individual capacity, or if employed by a company, reporting with the company’s written approval to submit a disclosure to Compound Labs.\n  - Not be subject to US sanctions or reside in a US-embargoed country.\n  - Not be a current or former Compound Labs employee, vendor, contractor, or employee of a Compound vendor or contractor.\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n  - Interacting with accounts that you do not own"
          }
        },
        {
          "id": "foundation",
          "project": "Foundation",
          "date": "2021-05-19T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/74yETFj2nb4JRzxTG8n6fj/8c2e580ac82c0f240095903858c94833/Foundation.jpeg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $50,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $10,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x67df244584b67e8c51b10ad610aaffa9a402fdb6",
              "type": "Smart Contract - Treasury Contract"
            },
            {
              "target": "https://etherscan.io/address/0xcda72070e455bb31c7690a170224ce43623d0b6f",
              "type": "Smart Contract - Auction Contract"
            },
            {
              "target": "https://etherscan.io/address/0x3B3ee1931Dc30C1957379FAc9aba94D1C48a5405",
              "type": "Smart Contract - NFT Contract"
            },
            {
              "target": "https://etherscan.io/address/0x1EF0159071b2A5898024cef4b4f78C171b7f48a8",
              "type": "Smart Contract - Percent Splits"
            }
          ],
          "mdx": {
            "program_overview": "Foundation helps creators mint and auction their digital artworks as NFTs on the Ethereum blockchain. As collectors bid, they fuel a new system of value for online expression. \n\nFoundation bridges crypto and culture to create mutual support between artists and collectors. They’re forging a community-driven path, providing culturally pioneering curation, and sharing our tools with the rapidly evolving community of developers who are excited to define this future with us. Foundation wants anyone and everyone who cares about the future of digital expression to be a part of it. \n\nFurther resources regarding Foundation can be found on their website, [https://foundation.app/](https://foundation.app/). \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with securing the community funds in the treasury contract, escrowed ETH, the auction process, and NFT minting and access control processes.",
            "rewards_body": "Rewards for Smart Contract vulnerabilities are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe exploitability and economic impact of the vulnerability are taken into account when determining the final payout amount at the discretion of the Foundation team.\n\nPayouts are handled by the Foundation team directly and are denominated in __USD__. However, payouts are done in __USDC__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "royalefinance",
          "project": "Royale Finance",
          "date": "2021-04-11T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7HFy1LmqB2qvxm4P2KzfhL/602de1a8745c993dbd507ed83e554a4b/Royalefinance-logo.jpg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $50,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $20,000"
            },
            {
              "level": "medium",
              "payout": "Up to USD $5,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/RoyaleFinanceV1/royale-contracts",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Royale is a cross-chain De-Fi solution for the iGaming industry. Royale’s \nuser-centric platform creates Web 3.0 smart-backed liquidity that allows \niGaming entrepreneurs to bootstrap innovation with the security and transparency \nof the blockchain.\n\nFor more information about Royale, please visit <Link href=\"https://royale.finance/\">https://royale.finance</Link>.\n\nThe bug bounty program covers Royale’s smart contracts and is focused around\nthe prevention of loss of user funds and smart contract manipulation.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical payouts have a maximum total payout of 10% of the funds that are directly affected. Low, Medium, and High payouts have the maximum reward listed based on the discretion of the Royale Finance team, accounting for economic impact and exploitability.\n\nPayouts are handled by the __Royale Finance__ team directly and are denominated in USD. Payouts are done in __USDC__ or __DAI__ for payouts in the Low severity level. For critical, high, and medium severity vulnerabilities, the payout may be paid in ROYA for up to 50% of the payout.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "bancor",
          "project": "Bancor",
          "date": "2021-04-07T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1nqF3UKYXUVR0FZzbX8zcf/3e9ef81cd45a182e816adbfad9ba4fc3/Bancor-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $12,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $1,500"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/bancorprotocol/contracts-solidity",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "The Bancor Protocol is anon-chain liquidity protocol that enables automated,\ndecentralized exchange any smart contract-enabled blockchain. The Bancor\nProtocol is an open-source standard for liquidity pools, which in turn provide\nan endpoint for automated market-making (buying / selling tokens) against a\nsmart contract.\n\nThe Bancor Network currently operates on the Ethereum and is designed to be\ninteroperable across blockchains. Our implementation can be easily integrated\ninto any application enabling value exchanges and is open-source and\npermissionless. Ecosystem participants are encouraged to contribute to and\nenhance the Bancor Protocol.\n\nFurther resources regarding Bancor can be found on their website,\n<Link href=\"https://docs.bancor.network/\">https://docs.bancor.network</Link>\nand their Github, <Link href=\"https://github.com/bancorprotocol\">https://github.com/bancorprotocol</Link>\n\nThe bug bounty program is focused around their smart contracts and is mostly\nconcerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nTheft of yield/interest is only considered as High if at least USD 100 000 can be \nstolen. If not, the severity is reduced to Medium.\n\nFor any bug reports to be eligible for a reward, they must include:\n\n- Conditions on which reproducing the bug is contingent.\n- Steps needed to reproduce the bug or, preferably, a proof of concept.\n- Implications of the vulnerability being abused.\n\nAdditionally, any bug reporter who reports a previously unreported bug that\nresults in a change to the code or a configuration change and who keeps the\nvulnerability confidential until it has been resolved by our engineers, will be\nrecognized publicly for their contribution, if agreed and desired by the bug\nreporter.\n\nAll reward decisions, including eligibility for and amounts of the rewards and\nthe manner in which such rewards will be paid, are made at Bancor’s sole\ndiscretion.\n\nPayouts are handled by the __Bancor__ team directly and are denominated in USD. However, payouts are done in __BNT__. ",
            "assets_body": "### Eligibility \n\nTo be eligible for a reward in the Bancor Bug Bounty Program, you must:\n\n- Make a good faith effort to avoid privacy violations, destruction of data,\n  interruption, or degradation of Bancor.\n- Provide sufficient information to enable our engineers to reproduce and fix\n  the vulnerability.\n- Not be one of our current or former employees, vendors, or contractors or an\n  employee of any of those vendors or contractors.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Bugs in any third party contract or platform that interacts with the Bancor\n  protocol\n  - Not to exlcude oracle manipulation/flash loan attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "complifi",
          "project": "CompliFi",
          "date": "2021-04-02T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3PyLeuRH7jKcsGJX3x9IXn/b482c69358ed21b8c1df7a5be8f30080/Complifi-logo.jpg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $20,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "$USD 0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.compli.fi/",
              "type": "Web/App"
            },
            {
              "target": "https://github.com/CompliFi/complifi-protocol/",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/CompliFi/complifi-amm/",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "CompliFi is a derivatives issuance protocol combined with an Automated Market\nMaker (AMM). Deployed on Ethereum, it features minimal governance, no\ncounterparty risk, no margin calls or liquidations, and limited sensitivity to\nblockchain congestion. Holding a derivative carries two major risks – loss of\nvalue if the market moves against you, and inability to collect your full\npayoff if the market moves in your favour. CompliFi takes away the latter risk.\n\nCompliFi creates a derivative by taking a fixed pool of collateral and issuing\nequal quantities of two derivative assets that together always have a claim on\nthe entire pool. The first (“primary”) asset is the chosen derivative and the\nsecond (“complement”) asset represents the opposite side of the trade. In other\nwords, if you combine one unit of the primary asset with one unit of its\ncomplement, their respective risks cancel each other out - they can be\nexchanged back for a predetermined amount of collateral at any time.\n\nFor further information about CompliFi, please check <Link href=\"https://docs.compli.fi\">https://docs.compli.fi</Link>. \n\nThe bug bounty program covers its smart contracts and app and is focused around\nthe prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll app bug reports must come with instructions on how to reproduce the bug in\norder to be considered for a reward.\n\nFor high and critical web and app bugs to be accepted, a PoC with demonstrated\nmust be submitted, otherwise, this would qualify as Medium or get categorized\nas a best practices recommendation, which will not come with a reward.\n\nPayouts are handled by the **CompliFi** team directly and are denominated in\nUSD.  Payouts are done in **USDC** or **USDT**, with the option for CompliFi to\npay up to 50% in their governance token for critical vulnerabilities.",
            "assets_body": "Only web vulnerabilities that **directly** affect the web/app assets in this\ntable are accepted within the bug bounty program. **All others are out-of-scope**.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App Vulnerabilities:**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "eddaswap",
          "project": "EDDASwap",
          "date": "2021-03-11T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5M49zcAyCsjZT62WIbVYEy/14291e94bc8b8c121badd319f4e462bf/Eddaswap-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/EddaSwap/EDDA/tree/master/contracts",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "EDDASwap is a decentralized exchange with a core focus on security. EDDASwap\nwill facilitate permission-less listing and trading of crypto assets across\nblockchains such as Ethereum, with added security features such as \"Liquidity\nLock\", an optional feature whereby anyone that lists their token onto EDDASwap\nwill have the ability to lock in the liquidity for the token for a designated\nperiod of time. A part of the trading fees generated on EDDASwap will be\ndistributed to EDDA Token holders.\n\nWith its NFT platform, EDDASwap has partnered with leading global artists,\ndesigners and producers to create a specially curated collection of digital art\nand content that will be exclusively accessible to EDDA Token holders. The\nultimate aim is for the platform to facilitate the representation of unique,\nreal world assets through tokenization on the blockchain.\n\nEDDASwap’s Decentralized Launchpad will allow crypto projects to raise capital\nin a decentralized manner, and will provide EDDA Token holders the opportunity\nto purchase tokens at seed or early stage valuations. The platform will utilize\na decentralized vetting process, whereby any project seeking to raise capital\nwill be required to create a prospectus containing all necessary information\nabout the project, and EDDA Token holders will vote on whether the project will\nbe accepted onto the platform. EDDA Token holders will have the exclusive right\nto invest in these projects, and the projects will be allowed the flexibility\nto offer unique investment structures and incentives.\n\nThe bug bounty program covers its smart contracts and the prevention of loss of\nuser funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **EDDASwap** team directly and are denominated in\n**USD**. Payouts are done in **EDDA**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "nexusmutual",
          "project": "Nexus Mutual",
          "date": "2021-02-23T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1DTDw1rmDMrgmYKP392Zoh/26f07c2b39638bfbe6605f901e50b649/Nexusmutual-logocompressed.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $50,000"
            },
            {
              "level": "high",
              "payout": "up to USD $25,000"
            },
            {
              "level": "medium",
              "payout": "up to USD $10,000"
            },
            {
              "level": "low",
              "payout": "up to USD $2,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/NexusMutual/smart-contracts/tree/release-candidate",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Nexus Mutual is a discretionary mutual offering a decentralized alternative to\ninsurance.\n\nNexus Mutual is interested in securing its smart contracts and preventing\neconomic attacks on the bonding curve, funds being stolen from the capital pool\nor users, funds being locked or rendered inaccessible to their owners, in\naddition to blocking users from performing other users’ actions on their behalf\nthat would risk or put their funds in danger.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by **Nexus Mutual** directly and are estimated in\n**USD**. However, payouts are done in **stablecoins**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "warpfinance",
          "project": "Warp Finance",
          "date": "2021-02-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2STM5NCT1gwd0js8bDkmUW/ac9b7410207b0ae7e9518141c9b38bf1/Warpfinance-logo.svg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $7,500"
            },
            {
              "level": "high",
              "payout": "USD $3,250"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": "https://docs.warp.finance/warp-finance/bug-bounty",
          "assets_in_scope": [
            {
              "target": "https://github.com/warpfinance/Warp_Smart_Contracts/",
              "type": "Smart contract"
            },
            {
              "target": "https://warp.finance",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "Warp V2, the Blacksmith upgrade, will provide a platform for users to create isolated lending pairs for more niche assets that are not currently serviced by other lending protocols, with the added benefit of each having its own risk/reward ratio. \n\nWarp V2 aims to pioneer the unlocking of capital efficiency by freeing the potential of illiquid yield generating assets, thus providing holders of these assets with previously unavailable opportunities to leverage these tokens. \n\nThe development roadmap for Warp V2 includes further innovation within the DeFi space, such as the ability of users to create their own lending pairs, the creation of pool based lending pairs, and the ability for users to use L2 assets as collateral on L1.\n\nWarp Finance is interested in securing its smart contracts, primarily around\npreventing loss of user funds, with UI issues (wrong values), and with\nconfirmation/metamask integration issues.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by **Warp Finance** directly and are estimated in\n**USD**. The payout can only be completed in **WARP**.",
            "assets_body": "Files in the Test and FakeTokens folders are out of scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Unable to call smart contract\n  - Theft of user intended rewards\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Anything else that would fall in the categories listed as Critical, High, and Medium\n\n__Websites and Applications__\n\n  - Leak of user data \n  - Deletion of user data\n  - Redirection of funds by address modification \n  - Site goes down\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users\n",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n### Other Notes\n\nIn your reports, please include:\n\n- Screenshots\n- Error messages (if any)\n- Descriptions"
          }
        },
        {
          "id": "chargedparticles",
          "project": "Charged Particles",
          "date": "2021-02-06T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4MIuU7yPM9BwctMGTiNwis/f74adc10d319b6434a0865f3ce1bac6b/Chargedparticles-logo.svg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $300"
            },
            {
              "level": "none",
              "payout": "USD $50"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/EverCrypt/CryptoKnight",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Charged Particles are Interest-bearing Non-Fungible Tokens (DeFi NFTs) that are\nminted with an Asset Token (ie. DAI, USDT, etc..) and accrue interest through a\nLiquidity Provider (ie. Aave, yEarn, etc..) giving the Token a \"Charge\". The\namount of interest earned from the token represents the \"Charge\" that the token\n(Particle) has amassed. Essentially, Charged Particles enables NFTs to hold\nvarious DeFi-based assets.\n\nCharged Particles is interested in securing its smart contracts and preventing\ntheft of user funds, frozen user funds, permanently locked tokens, and\nunauthenticated system control/manipulation.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by **Charged Particles** directly and are denominated in\n**USD**. However, payouts are done in **USDC** assuming a full 1:1 ratio.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n**All Programs**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n- Lost tokens/assets due to burning the NFT that holds them\n- Upgradeable NFT contracts will not be supported and should not be allowed to\n  hold tokens. Therefore, ignore attempts to modify the \"ownerOf\" on the\n  underlying NFT contract in order to extract user funds from other NFT holders\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "armorfi",
          "project": "ArmorFi",
          "date": "2021-01-22T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1S4KCaSPGcQbcpGe8OjeF9/77d166246199ce43a78f93b94d83c0db/Armorfi-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "1 million Armor (est. value USD $50,000)"
            },
            {
              "level": "high",
              "payout": "10,000 USDC"
            },
            {
              "level": "medium",
              "payout": "5,000 USDC"
            },
            {
              "level": "low",
              "payout": "1,000 USDC"
            },
            {
              "level": "none",
              "payout": "0 USDC"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://armorfi.gitbook.io/armor/developers/bug-bounties/immunefi-bug-bounty",
          "assets_in_scope": [
            {
              "target": "https://github.com/ArmorFi",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Armor is a smart insurance aggregator for DeFi which provides Pay as You Go and\nOnly Pay What You Owe ᴰᵀᴹ coverage for user funds across various\nprotocols. Underwritten by Nexus, Armor evolves digital asset insurance from\nstatic chunks of coverage toward dynamic risk management customized to client\ndemands and circumstances. Instead of sticking to a fixed amount, a set\ntimeframe, and expiration date, all of these inputs can be dynamically\nrecommended and modified at any time.\n\nThe bug bounty program is focused around its smart contracts used actively in\nlive products on mainnet.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Armor** team directly. The payouts are based on\nand completed in **ARMOR or USDC** as specified in the table and take place\naccording to a vesting schedule of up to 24 months. A USD estimate of the current value of the token is provided for reference. Estimates are updated regularly, but should not be relied on.",
            "assets_body": "This bug bounty applies to all smart contracts used actively in live products\non mainnet.",
            "prioritized_vulnerabilities": "Armor is especially interested in receiving and rewarding vulnerabilities of\nthe following types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Other Notes__\n\nThere is usually a description of the contract and main functions in the readme contained in the GitHub Repos linked to in the left panel under DEVELOPER RESOURCES. More information about Armor can also be found on https://armorfi.gitbook.io/armor/ \n\nRewards will only be given to the bounty hunter that first submits the bug. The classification and reward given for any bug will be based on the Immunefi Vulnerability Severity Classification System risk rating system (above), but at the sole discretion of the token holders or Armor team. \n\nWe have compiled a list of examples to complement the severity classification system in order to make things clearer. In the event of a discrepancy, the following classification will prevail.\n\nLow -  A low severity bug, for example, may be the contract not applying to standards in a non-threatening way (such as there not being a total supply), or an external getter function not working correctly. \n\nMedium - Bugs that lead to a small (but non-negligible) loss of funds or a loss of funds in extreme edge cases.\n\nHigh - Exploits that leads to a severe loss of user funds that require a re-deployment of the contract or an upgrade.\n\nCritical - An exploit in which all user funds can be lost or an exploit that allows the contract to become completely disabled.\n"
          }
        },
        {
          "id": "mstable",
          "project": "mStable",
          "date": "2021-01-06T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5zGBNlrn3GHvP0W95NtegC/8508af4abc6a4017303d95e6264ba9ee/mstable-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $8,000"
            },
            {
              "level": "medium",
              "payout": "USD $4,000"
            },
            {
              "level": "low",
              "payout": "USD $1,250"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://docs.mstable.org/protocol/security/mstable-bug-bounty",
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x8f2326316eC696F6d023E37A9931c2b2C177a3D7",
              "type": "StakedTokenMTA: Vault that stakes MTA"
            },
            {
              "target": "https://etherscan.io/address/0xeFbe22085D9f29863Cfb77EEd16d3cC0D927b011",
              "type": "StakedTokenBPT: Vault that stakes the MTA/ETH 80/20 Balancer Pool Token (BPT)."
            },
            {
              "target": "https://etherscan.io/address/0xe2f2a5C287993345a840Db3B0845fbC70f5935a5",
              "type": "Masset: mUSD"
            },
            {
              "target": "https://etherscan.io/address/0x30647a72dc82d7fbb1123ea74716ab8a317eac19",
              "type": "SavingsContract: mUSD Savings Contract"
            },
            {
              "target": "https://etherscan.io/address/0x945Facb997494CC2570096c74b5F66A3507330a1",
              "type": "Masset: mBTC "
            },
            {
              "target": "https://etherscan.io/address/0x17d8CBB6Bce8cEE970a4027d1198F6700A7a6c24",
              "type": "SavingsContract: imBTC"
            },
            {
              "target": "https://etherscan.io/address/0x2837C77527c37d61D9763F53005211dACB4125dE",
              "type": "FeederLogic: Library contract for Feeder Pools"
            },
            {
              "target": "https://etherscan.io/address/0x90aE544E8cc76d2867987Ee4f5456C02C50aBd8B",
              "type": "FeederManager: Library contract for Feeder Pools"
            },
            {
              "target": "https://etherscan.io/address/0x1E91F826fa8aA4fa4D3F595898AF3A64dd188848",
              "type": "MassetManager: Manager contract for mAssets"
            },
            {
              "target": "https://etherscan.io/address/0xBC3B550E0349D74bF5148D86114A48C3B4Aa856F",
              "type": "SavingsManager: Validates and distributes system revenue to savers"
            },
            {
              "target": "https://etherscan.io/address/0xca480d596e6717c95a62a4dc1bd4fbd7b7e7d705",
              "type": "InvariantValidator: Builds on and enforces the StableSwap invariant"
            },
            {
              "target": "https://etherscan.io/address/0x78BefCa7de27d07DC6e71da295Cc2946681A6c7B",
              "type": "BoostedSavingsVault: Savings Vault"
            },
            {
              "target": "https://etherscan.io/address/0xfE842e95f8911dcc21c943a1dAA4bd641a1381c6",
              "type": "FeederPool: BUSD Feeder Pool"
            },
            {
              "target": "https://etherscan.io/address/0x4fB30C5A3aC8e85bC32785518633303C4590752d",
              "type": "FeederPool: GUSD Feeder Pool"
            },
            {
              "target": "https://etherscan.io/address/0x48c59199Da51B7E30Ea200a74Ea07974e62C4bA7",
              "type": "FeederPool: HBTC Feeder Pool"
            },
            {
              "target": "https://etherscan.io/address/0xb61A6F928B3f069A68469DDb670F20eEeB4921e0",
              "type": "FeederPool: TBTC Feeder Pool"
            },
            {
              "target": "https://etherscan.io/address/0x4eaa01974B6594C0Ee62fFd7FEE56CF11E6af936",
              "type": "FeederPool: alUSD Feeder Pool"
            },
            {
              "target": "https://etherscan.io/address/0xe595D67181D701A5356e010D9a58EB9A341f1DbD",
              "type": "Liquidator: Liquidator"
            },
            {
              "target": "https://etherscan.io/address/0x861f12764780896FD783eA615Dd55Df0FF865752",
              "type": "QuestManager: Quest Manager that can add, complete and expire quests"
            },
            {
              "target": "https://etherscan.io/address/0xAdeeDD3e5768F7882572Ad91065f93BA88343C99",
              "type": "BoostedSavingsVault: GUSD Feeder Pool Vault"
            },
            {
              "target": "https://etherscan.io/address/0xF65D53AA6e2E4A5f4F026e73cb3e22C22D75E35C",
              "type": "BoostedSavingsVault: HBTC Feeder Pool Vault"
            },
            {
              "target": "https://etherscan.io/address/0x760ea8CfDcC4e78d8b9cA3088ECD460246DC0731",
              "type": "BoostedSavingsVault: TBTC Feeder Pool Vault"
            },
            {
              "target": "https://etherscan.io/address/0x0CA7A25181FC991e3cC62BaC511E62973991f325",
              "type": "SaveWrapper: Facilitates minting, deposits and staking of massets (mUSD and mBTC)"
            },
            {
              "target": "https://etherscan.io/address/0xBa05FD2f20AE15B0D3f20DDc6870FeCa6ACd3592",
              "type": "BoostDirector: Supports the directing of staked Meta (vMTA) balances to boosted vaults."
            },
            {
              "target": "https://etherscan.io/address/0xafce80b19a8ce13dec0739a1aab7a028d6845eb3",
              "type": "Nexus: Resolves module addresses"
            },
            {
              "target": "https://etherscan.io/address/0x04dfDfa471b79cc9E6E8C355e6C71F8eC4916C50",
              "type": "RewardsDistributor: Distributes MTA rewards to vaults"
            },
            {
              "target": "https://etherscan.io/address/0x5C8eb57b44C1c6391fC7a8A0cf44d26896f92386",
              "type": "DelayedProxyAdmin: Administors proxy contracts with a one week time delay"
            },
            {
              "target": "https://etherscan.io/address/0xC973413fe4944682910b97b261456EB9633A4756",
              "type": "SignatureVerifier: Used to verify quest completions signatures"
            },
            {
              "target": "https://etherscan.io/address/0xA2a3CAe63476891AB2d640d9a5A800755Ee79d6E",
              "type": "PAaveIntegration: mUSD Aave V2 integration"
            },
            {
              "target": "https://etherscan.io/address/0xD55684f4369040C12262949Ff78299f2BC9dB735",
              "type": "CompoundIntegration: mUSD Compound Integration"
            },
            {
              "target": "https://etherscan.io/address/0xF38522f63f40f9Dd81aBAfD2B8EFc2EC958a3016",
              "type": "BoostedSavingsVault: imBTC Vault"
            },
            {
              "target": "https://etherscan.io/address/0x2A15794575e754244F9C0A15F504607c201f8AfD",
              "type": "CompoundIntegration: BUSD FP Iron Bank Integration for mBTC"
            },
            {
              "target": "https://etherscan.io/address/0xD124B55f70D374F58455c8AEdf308E52Cf2A6207",
              "type": "BoostedSavingsVault: BUSD Feeder Pool Vault"
            },
            {
              "target": "https://etherscan.io/address/0xaF007D4ec9a13116035a2131EA1C9bc0B751E3cf",
              "type": "CompoundIntegration: GUSD FP Iron Bank Integration for mBTC"
            },
            {
              "target": "https://etherscan.io/address/0x0997dDdc038c8A958a3A3d00425C16f8ECa87deb",
              "type": "BoostedSavingsVault: alUSD Feeder Pool Vault"
            },
            {
              "target": "https://etherscan.io/address/0xf1049aeD858C4eAd6df1de4dbE63EF607CfF3262",
              "type": "InterestValidator: Collects interest and gov fees from Feeder Pools"
            },
            {
              "target": "https://etherscan.io/address/0xA7824292efDee1177a1C1BED0649cfdD6114fed5",
              "type": "RevenueRecipient: Receives governance fees and deposits to Balancer pool"
            },
            {
              "target": "https://etherscan.io/address/0xd658d5fDe0917CdC9b10cAadf10E20d942572a7B",
              "type": "AlchemixIntegration: alUSD FP integration to Alchemix's alUSD staking pool"
            },
            {
              "target": "https://polygonscan.com/address/0xE840B73E5287865EEc17d250bFb1536704B43B21",
              "type": "Masset: mUSD"
            },
            {
              "target": "https://polygonscan.com/address/0xB9E0408bE53a91A31828b3A175230f0dCd8c117e",
              "type": "MassetManager: Library contract for mUSD"
            },
            {
              "target": "https://polygonscan.com/address/0xB9cCA2B53e8D7bC4cBDDCcb66d20B411B87d213f",
              "type": "MassetManager: Library contract for mUSD"
            },
            {
              "target": "https://polygonscan.com/address/0x5290Ad3d83476CA6A2b178Cd9727eE1EF72432af",
              "type": "SavingsContract: imUSD"
            },
            {
              "target": "https://polygonscan.com/address/0xB30a907084AC8a0d25dDDAB4E364827406Fd09f0",
              "type": "FeederPool: FRAX Feeder Pool"
            },
            {
              "target": "https://polygonscan.com/address/0x10bFcCae079f31c451033798a4Fd9D2c33Ea5487",
              "type": "SavingsManager: Validates and distributes system revenue to savers"
            },
            {
              "target": "https://polygonscan.com/address/0x9F1C06CC13EDc7691a2Cf02E31FaAA64d57867e2",
              "type": "Pliquidator: Liquidates wmatic rewards or USDC"
            },
            {
              "target": "https://polygonscan.com/address/0x32aBa856Dc5fFd5A56Bcd182b13380e5C855aa29",
              "type": "Masset: imUSD Vault"
            },
            {
              "target": "https://polygonscan.com/address/0xCb6E4B67f2cac15c284AB49B6a4A671cdfe66711",
              "type": "DelayedProxyAdmin: Time delayed proxy admin"
            },
            {
              "target": "https://polygonscan.com/address/0xeab7831c96876433dB9B8953B4e7e8f66c3125c3",
              "type": "PAaveIntegration: Aave integration contract"
            },
            {
              "target": "https://polygonscan.com/address/0x4A268958BC2f0173CDd8E0981C4c0a259b5cA291",
              "type": "InterestValidator: Validates the platform interest collection from the Feeder Pools"
            },
            {
              "target": "https://polygonscan.com/address/0x299081f52738A4204C3D58264ff44f6F333C6c88",
              "type": "SaveWrapper: Facilitates minting, deposits and staking of massets (mUSD and mBTC)"
            },
            {
              "target": "https://polygonscan.com/address/0x3C6fbB8cbfCB75ecEC5128e9f73307f2cB33f2f6",
              "type": "Nexus: Resolves module addresses"
            },
            {
              "target": "https://polygonscan.com/address/0x3e9d19ee1893B07e22165C54c205702C90C70847",
              "type": "RewardsDistributor: Distributes MTA rewards to vaults"
            },
            {
              "target": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/BasicRewardsForwarder.sol",
              "type": "Basic Rewards Forwarder"
            },
            {
              "target": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/BridgeForwarder.sol",
              "type": "Bridge Forwarder"
            },
            {
              "target": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/EmissionsController.sol",
              "type": "Emissions Controller"
            },
            {
              "target": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/L2BridgeRecipient.sol",
              "type": "L2 Bridge Recipient"
            },
            {
              "target": "https://github.com/mstable/mStable-contracts/blob/master/contracts/emissions/L2EmissionsController.sol",
              "type": "L2 Emissions Controller"
            }
          ],
          "mdx": {
            "program_overview": "Released in May 2020, mStable is a protocol that unites stablecoins, lending\nand swapping into one robust and easy to use standard. Three major problems\nconfront stablecoin users: significant fragmentation in same-peg assets; lack\nof native yield when it is being increasingly demanded by users; lack of\ninsurance against permanent capital loss. mStable’s products (SWAP, SAVE and\nEARN) are built specifically to address these pain-points.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by __mStable__ directly and are denominated in USD. Payouts are made in __mUSD__. ",
            "assets_body": "Any Proxy contracts listed in the Assets in Scope table also include the currently active logic contracts, and any external or internal libraries that are used in these.",
            "prioritized_vulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n  - Loss of collateral or unfair payouts in the mStable StakedToken contracts, resulting in a loss of user funds\n  - Loss of collateral or stealing of funds from the mAsset, resulting in it becoming under-collateralized\n  - Unfair payouts through SAVE, MINT, REDEEM or SWAP functionalities that results in under-collateralized or affected system\n  - Manipulating or circumvention of mStable governance mechanism\n  - Locking or freezing or any of the mStable contracts or inability to upgrade\n  - Ineffective or error prone forge validation mechanisms\n\nAdditionally, mStable seeks reports of the following [Immunefi Common Vulnerabilities](https://immunefi.com/common-vulnerabilities/).",
            "out_of_scope_and_rules": "The following [Immunefi Commonly Excluded Vulnerabilities](https://immunefi.com/common-vulnerabilities-to-exclude/) are excluded from the mStable bug bounty program.\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "mushroomsfinance",
          "project": "Mushrooms Finance",
          "date": "2020-12-14T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3BSLiA6xq5Fk3rAD0hoNW1/b232bf343bbc7cf286c0039c595bd777/Mushrooms-logo.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $4,000 - USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $800 - USD $4,000"
            },
            {
              "level": "medium",
              "payout": "USD $200 - USD $800"
            },
            {
              "level": "low",
              "payout": "USD $50 - USD $200"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $4,000"
            },
            {
              "level": "high",
              "payout": "USD $800"
            },
            {
              "level": "medium",
              "payout": "USD $200"
            }
          ],
          "kyc": false,
          "verification_link": "https://github.com/mushroomsforest/deployment/blob/main/security.md",
          "assets_in_scope": [
            {
              "target": "https://github.com/mushroomsforest/deployment",
              "type": "Smart Contract "
            },
            {
              "target": "https://mushrooms.finance",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "Mushrooms Finance is a crypto-earning vault with a focus on seeking sustainable profit in the DeFi universe. The first version of the Mushrooms Finance smart contracts were inspired by other popular DeFi projects like Yearn Finance (YFI) and Sushiswap, among many others.\n\nMushrooms Finance Vaults help users earn passive profit on crypto assets like WETH, WBTC, DAI, USDC, and many more. The earning strategies associated with the Vaults will automate user yield farming on Alchemix or Curve by auto-compounding the profit. Vaults earn in the denomination of whatever token users deposited. Users will then receive mTokens upon Vault deposit which represent their share in that Vault. When users withdraw from the Vault, the mToken share allows users to withdraw both the principal plus any earned profit over the deposit period.\n\nFurther resources regarding Mushrooms Finance can be found on their website, [https://mushrooms.finance/](https://mushrooms.finance).\n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web and app bug reports must come with a PoC. Submissions for web and app vulnerabilities without a PoC will be rejected and instructed to provide a PoC.\n\nThe bug MUST NOT have been previously publicly disclosed.\n\nVulnerabilities that have been previously submitted by other contributors or that are already known by the __Mushrooms Finance__ team are not eligible for rewards.\n\nPayouts are handled by the __Mushrooms Finance__ team directly and are denominated in __USD__. However, payouts are done in __USDC__. However, critical smart contract vulnerabilities are compensated 50% in __USDC__ and 50% in __MM__.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n__The following activities are prohibited by bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n\n__Additional Rules__\n\n- The bug MUST NOT have been previously publicly disclosed.\n- Vulnerabilities that have been previously submitted by other contributors or that are already known by the Mushrooms Finance team are not eligible for rewards.\n- Bugs must be reproducible. Reproduction will be done on a local testnet or in some rare case on the Ethereum mainnet.\n- Rewards and the validity of bugs are determined by Mushrooms Finance team. Any payouts are made at their sole discretion.\n- The terms and conditions of the Bug Bounty program may be changed at any time at the sole discretion of Mushrooms Finance team.\n- The details of any valid bugs may be shared with complementary protocols utilized in Mushrooms Finance's contracts for the overall benefit of broader community.\n\n__Report Sharing Clause__\n\nIn the event that Mushrooms Finance becomes aware of security issues affecting other projects that do not affect Mushrooms Finance, we may inform those projects of those security issues, on a best-effort basis.\n\nIn the case where Mushrooms Finance fixes a security issue that also affects other partners and/or well-known projects, Mushrooms Finance's intention is to engage in responsible reporting with them as described in this [security standard.](https://github.com/RD-Crypto-Spec/Responsible-Disclosure)\n"
          }
        },
        {
          "id": "immunefi",
          "project": "Immunefi",
          "date": "2020-12-02T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1XjTFUMSo1pLNrTF0aIH4U/f4cdeaa556cb03ca654046602a00dd4c/Logo_Mark_Badge_Black_Round_4x__1_.png",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,250"
            },
            {
              "level": "high",
              "payout": "USD $625"
            },
            {
              "level": "medium",
              "payout": "USD $250"
            },
            {
              "level": "low",
              "payout": "USD $100"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/immunefi-team/notary",
              "type": "Smart contract"
            },
            {
              "target": "https://immunefi.com",
              "type": "Website"
            },
            {
              "target": "https://bugs.immunefi.com",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "Immunefi is a bug bounty platform hosted by a consortium of companies active in\nthe cybersecurity space. It aims to make cybersecurity more accessible to the\ncryptocurrency industry as well as the wider cyberspace.\n\nImmunefi is interested in securing their bug bounty Whitehat Protocol and website. Primary areas of concern are around the modification\nof information on the website, leakage and loss of client data, and leakage of\ncommunicated information from clients to the company.",
            "rewards_body": "Rewards are distributed according to the exploitability level of the\nvulnerability and its impact based on the <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>.\n\nPayouts are handled by Immunefi directly and are denominated in USD.",
            "assets_body": "Immunefi is aware of issues regarding sanitization of Markdown in bug reports.\nAs of 2021 May 28 14:30 UTC, Immunefi is not accepting bug reports concerning input sanitization in bugs.immunefi.com.\nThis restriction will be lifted when the current, known issues are resolved.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Economic attacks (e.g 51% attack)\n- Attacks requiring privileged access from within the organization\n- Lack of liquidity\n\n__The following activities are prohibited by bug bounty program:__\n\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. Java, external\n  plugin) as well as websites (e.g. SSO providers, advertising networks)\n- Any testing with mainnet contracts\n- Any testing with public testnet contracts\n- Disassembly or reverse engineering of binaries for which source code is not published\n- Testing against ratelimits on endpoints like account creation, password resets, etc."
          }
        },
        {
          "id": "obyte",
          "project": "Obyte",
          "date": "2020-12-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5Wy12MgPYWNvcH7ihgHVqT/684f80d914af4b26229e0109d7185145/Obyte-logo.svg",
          "maximum_reward": 50000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Mobile App",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $50,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $100"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $2,500"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $100"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/byteball/ocore",
              "type": "Core Library"
            },
            {
              "target": "https://github.com/byteball/obyte-gui-wallet",
              "type": "App - Wallet"
            },
            {
              "target": "https://github.com/byteball/bonded-stablecoin",
              "type": "Autonomous Agent (similar to Ethereum Smart Contract)"
            }
          ],
          "mdx": {
            "program_overview": "Obyte is a distributed ledger based on directed acyclic graph **(DAG)** and is\nwithout middlemen. Unlike centralized ledgers and blockchains, access to the\nObyte ledger is decentralized, disintermediated, free (as in freedom), equal,\nand open.\n\nThe Obyte Foundation is interested in securing their network, their core\nlibrary, their GUI wallet, and one of their autonomous agents (smart\ncontract). Primary areas of concern are around loss of user funds, DoS, and\ntotal network shutdown.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nIn order to qualify for the reward of USD 50 000, the bug reported must be\nable to cause unrecoverable total network shutdown of the entire Obyte network\nor allow the unpermitted execution of transactions from accounts of other users\nwithout their private keys. All other critical bug reports are capped at USD 2\n500.\n\nTheft of yield/interest in this bug bounty program is considered Low.\n\nAll web and app bug reports must come with a PoC. All bug reports submitted without \nPoC will be rejected with instructions to provide PoC.\n\nPayouts are handled by the **Obyte Foundation** directly and are denominated in\nUSD. The payout can be completed in **GBYTE, BTC, or OUSD**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts and DAG**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of funds for fees\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and DAG**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps** \n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Requests for new features\n- Bugs without proof-of-concept exploits showing impact\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "livepeer",
          "project": "Livepeer",
          "date": "2022-02-24T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3UUkKoNVTz0RMrIhQnL0v8/042be0217ef163209cec501313440815/Livepeer_logo.jpeg",
          "maximum_reward": 40000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $40,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://arbiscan.io/address/0xD9dEd6f9959176F0A04dcf88a0d2306178A736a6#code",
              "type": "Smart Contract - Governor"
            },
            {
              "target": "https://arbiscan.io/address/0xD8E8328501E9645d16Cf49539efC04f734606ee4#code",
              "type": "Smart Contract - Controller"
            },
            {
              "target": "https://arbiscan.io/address/0x289ba1701C2F088cf0faf8B3705246331cB8A839#code",
              "type": "Smart Contract - LivepeerToken"
            },
            {
              "target": "https://arbiscan.io/address/0xc20DE37170B45774e6CD3d2304017fc962f27252",
              "type": "Smart Contract - Minter"
            },
            {
              "target": "https://arbiscan.io/address/0x35Bcf3c30594191d53231E4FF333E8A770453e40#code",
              "type": "Smart Contract - BondingManager (Proxy)"
            },
            {
              "target": "https://arbiscan.io/address/0xC40df4db2f99e7e235780A93B192F1a934f0c45b",
              "type": "Smart Contract - BondingManager (Target)"
            },
            {
              "target": "https://arbiscan.io/address/0xa8bB618B1520E284046F3dFc448851A1Ff26e41B#code",
              "type": "Smart Contract - TicketBroker (Proxy)"
            },
            {
              "target": "https://arbiscan.io/address/0x7Beb84c52ce96DFd90431FAA97378994a8baa6df#code",
              "type": "Smart Contract - TicketBroker (Target)"
            },
            {
              "target": "https://arbiscan.io/address/0xdd6f56DcC28D3F5f27084381fE8Df634985cc39f#code",
              "type": "Smart Contract - RoundsManager (Proxy)"
            },
            {
              "target": "https://arbiscan.io/address/0x92d804Ed49D92438aEA6fe552BD9163aacb7E841#code",
              "type": "Smart Contract - RoundsManager (Target)"
            },
            {
              "target": "https://arbiscan.io/address/0xC92d3A360b8f9e083bA64DE15d95Cf8180897431#code",
              "type": "Smart Contract - ServiceRegistry (Proxy)"
            },
            {
              "target": "https://arbiscan.io/address/0x38093CDca43aeCd7bb474983519A246e93A3b0a7#code",
              "type": "Smart Contract - ServiceRegistry (Target)"
            },
            {
              "target": "https://arbiscan.io/address/0xC45f6918F7Bcac7aBc8fe05302b3cDF39776cdeb#code",
              "type": "Smart Contract - SortedDoublyLL"
            },
            {
              "target": "https://arbiscan.io/address/0x8bb50806D60c492c0004DAD5D9627DAA2d9732E6#code",
              "type": "Smart Contract - PollCreator"
            },
            {
              "target": "https://arbiscan.io/address/0x10736ffaCe687658F88a46D042631d182C7757f7#code",
              "type": "Smart Contract - MerkleSnapshot"
            },
            {
              "target": "https://arbiscan.io/address/0xfdb06109032AD3671a8f14f5f2E78f4B9E81b567#code",
              "type": "Smart Contract - DelegatorPool"
            },
            {
              "target": "https://arbiscan.io/address/0xd78b6bD09cd28A83cFb21aFa0DA95c685A6bb0B1#code",
              "type": "Smart Contract - L2LPTDataCache"
            },
            {
              "target": "https://arbiscan.io/address/0x6D2457a4ad276000A615295f7A80F79E48CcD318#code",
              "type": "Smart Contract - L2LPTGateway"
            },
            {
              "target": "https://arbiscan.io/address/0x148D5b6B4df9530c7C76A810bd1Cdf69EC4c2085#code",
              "type": "Smart Contract - L2Migrator (Proxy)"
            },
            {
              "target": "https://arbiscan.io/address/0x93BB030735747708b4D33093A98d4c804Cd6B58C",
              "type": "Smart Contract - L2Migrator (Target)"
            },
            {
              "target": "https://etherscan.io/address/0x6A23F4940BD5BA117Da261f98aae51A8BFfa210A#code",
              "type": "Smart Contract - L1Escrow"
            },
            {
              "target": "https://etherscan.io/address/0x1d24838b35A9c138Ac157A852e19e948aD6323D7#code",
              "type": "Smart Contract - L1LPTDataCache"
            },
            {
              "target": "https://etherscan.io/address/0x6142f1C8bBF02E6A6bd074E8d564c9A5420a0676#code",
              "type": "Smart Contract - L1LPTGateway"
            },
            {
              "target": "https://etherscan.io/address/0x21146B872D3A95d2cF9afeD03eE5a783DaE9A89A#code",
              "type": "Smart Contract - L1Migrator"
            },
            {
              "target": "https://etherscan.io/address/0x8dDDB96CF36AC8860f1DE5C7c4698fd499FAB405#code",
              "type": "Smart Contract - BridgeMinter"
            }
          ],
          "mdx": {
            "program_overview": "Livepeer is a decentralized video streaming network built on the Ethereum blockchain. The Livepeer network already includes over 70,000 GPUs, which is enough aggregated power to encode all of the video streaming through Twitch, YouTube and Facebook combined. Through the power of open source software, the harnessing of underutilized resources like compute and bandwidth, and the use of cryptoeconomic incentives for bootstrapping and participation, there is an opportunity to deliver an infrastructure that can power video streaming applications at a highly efficient price, and infinite scale.\n\nFor more information about Livepeer, please visit [https://livepeer.org/](https://livepeer.org/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n  - Unintended issuance of LPT on L1\n  - Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nAll vulnerabilities marked in the [security review](https://code4rena.com/reports/2022-01-livepeer) are not eligible for a reward.\n\nLivepeer requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is Visual Proof of Identity. The collection of this information will be done by the project team. \n\nPayouts are handled by the __Livepeer__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Livepeer can be found at [https://github.com/livepeer/arbitrum-lpt-bridge](https://github.com/livepeer/arbitrum-lpt-bridge), [https://github.com/livepeer/protocol/](https://github.com/livepeer/protocol/tree/confluence). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program. \n\nIf an impact can be caused to any other asset managed by Livepeer that isn’t on this table but for which the impact is listed as high or critical in the Impacts in Scope section, you are encouraged to submit it for the consideration of the project. ",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n__Critical__\n  - Direct theft of any user funds, whether at-rest or in-motion, other than unclaimed yield\n  - Permanent freezing of funds\n  - Insolvency\n  - Unintended issuance of LPT on L1\n  - Unexpected calls to functions that should only be called by authorized addresses (i.e. Governor)\n\n__High__\n  - Theft of unclaimed yield\n  - Permanent freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Any unexpected balance inflation when transitioning between L1 and L2\n\n__Medium__\n  - Griefing (e.g. no profit motive for an attacker, but damage to the users or the protocol)\n  - Theft of gas\n  - Unbounded gas consumption or any other gas drainage\n\n__Low__\n  - Smart contract has unexpected behavior but doesn’t lose value\n\nIn case of discrepancy between [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/) and Livepeer’s classification above, Livepeer classification will be followed.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Oracle failure/manipulation\n  - Consensus failure\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gysr",
          "project": "GYSR",
          "date": "2022-01-07T03:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7x1YithjFPAnhTAvlawAme/02e1a575b01a34b9ab64da1e0b013755/GYSR_logo.png",
          "maximum_reward": 30000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $30,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xbea98c05eeae2f3bc8c3565db7551eb738c8ccab",
              "type": "Smart Contract - GeyserToken (v1)"
            },
            {
              "target": "https://etherscan.io/address/0xCAda3423d33259A94C1ED1A7AEEcb73B87D0B684",
              "type": "Smart Contract - GeyserFactory (v1)"
            },
            {
              "target": "https://etherscan.io/address/0x4E06AE5Fa48089a69D4eE4fFEE9524b06c2b7400",
              "type": "Smart Contract - ERC20CompetitiveRewardModuleFactory"
            },
            {
              "target": "https://etherscan.io/address/0x101063F864E91B72a5cE06342AFc7EA5d8515398",
              "type": "Smart Contract - ERC20FriendlyRewardModuleFactory"
            },
            {
              "target": "https://etherscan.io/address/0xaef2a7E4CbEB875475cFb1924867B9374569D894",
              "type": "Smart Contract - ERC20StakingModuleFactory"
            },
            {
              "target": "https://etherscan.io/address/0xc517A08aeE9CA160a610752e50A6ED8087049091",
              "type": "Smart Contract - PoolFactory"
            },
            {
              "target": "https://etherscan.io/address/0xa13edbc1ea1751c338e2528f7defd082357e2d1e",
              "type": "Smart Contract - ERC721StakingModuleFactory"
            }
          ],
          "mdx": {
            "program_overview": "GYSR is an open platform for on-chain incentives. It makes yield farming and token distribution easier, more accessible, and safer for both the creator and the investor. The platform allows anyone to configure and launch a staking pool with zero code.\n\nFor more information about GYSR, along with whitepapers and security audit reports, please visit [https://www.gysr.io/](https://www.gysr.io/). \n\nThis bug bounty program is focused on their core smart contracts and on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Logical errors or miscalculation that result in incorrect accounting or yield amount\n  - Unexpected and unfair manipulation of incentive mechanisms",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Medium, High and Critical Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward. All Low Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Any issues caused by invalid or non compliant third party tokens (ERC20, ERC721, etc) shall be considered out of scope\n\nPayouts are handled by the __GYSR__ team directly and are denominated in USD. However, payouts are done in __USDC and ETH__, with the choice of the ratio at the discretion of the team.",
            "assets_body": "All smart contracts of GYSR can be found at [https://github.com/gysr-io/core](https://github.com/gysr-io/core) and [https://github.com/gysr-io/core/releases/tag/1.0.0](https://github.com/gysr-io/core/releases/tag/1.0.0) (v1). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than 1 hour\n  - Unable to call smart contract\n  - Unexpected and unfair manipulation of time incentives mechanisms\n  - Unexpected and unfair manipulation of GYSR bonus mechanisms",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "peanuttradesmartlp",
          "project": "Peanut Trade: Smart LP",
          "date": "2022-01-04T10:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6QbHTtf8CpOA4WyLUCqGQ2/7e91a8cdba1eb73b681bea6d1bcf8f2f/Peanut_Trade_Logo.jpeg",
          "maximum_reward": 30000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $30,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xaBf85dDaBd073A2f662E020fdc740a5cD3aCf000#code",
              "type": "Smart Contract - Peanut Trade Smart LP"
            },
            {
              "target": "https://smart-lp.peanut.trade/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Peanut Trade’s Smart LP is an automated liquidity manager for Uniswap v3 that adjusts price ranges based on real-time market conditions to maximise LP profits and reduce risks. Smart LP is powered by a set of sophisticated rules to automate liquidity price ranges, eliminate manual adjustments, grow profits and save time.\n\nPeanut runs it's own algorithms to analyse real-time market status in order to predict token price movements and ensure your liquidity is always within a high volume trading price range.\n\nFor more information about Peanut Trade: Smart LP, please visit [https://peanut.trade/smart-lp](https://peanut.trade/smart-lp). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Smart contract gas drainage\n  - Redirected funds by address modification\n  - Injection of text",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All smart contract bug reports must come with a PoC and a suggestion for a fix to be considered for a reward. \n\nPayouts are handled by the __Peanut Trade__ team directly and are denominated in USD. However, payouts are done in __USDT__.",
            "assets_body": "All smart contracts of Peanut Trade can be found at [https://github.com/Peanut-trade](https://github.com/Peanut-trade). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield for any amount of time \n  - Smart contract gas drainage\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Injection of text",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "raifinance",
          "project": "RAI Finance",
          "date": "2021-11-11T07:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7pFuyzmZfYM8nativLZJZ1/13c38ff23a4d9efa49e6d8ea22390591/RAI.finance_Logo_VF_icon_logo_dark.png",
          "maximum_reward": 30000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $30,000"
            },
            {
              "level": "high",
              "payout": "USD $9,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $600"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $4,500"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x1dca32aEeC163Ec27EfcF5f5F4deCeB6a8ada1c6#code",
              "type": "Smart Contract - Aggregated Swap"
            },
            {
              "target": "https://betapro.rai.finance/#/aggregateSwap",
              "type": "Web/App (Test)"
            }
          ],
          "mdx": {
            "program_overview": "Rai Finance aspires to be the financial center underpinning Web 3.0 by pioneering new products and expanding accessibility. Built on Polkadot, RAI is creating a new decentralized finance (DeFi) service that realizes the dynamic synergy between blockchain asset creation, cross-chain trading, and social investing functions.\n\nRai Finance enables users to socialize their own DeFi experiences with a wide range of Web 3.0 products:\n\n  - STS: Social trading system combines public profiles with investment products\n  - IDO: Access to vetted early-stage projects via Initial DeFi Offering\n  - DEX: Trade your multi-chain assets in a fast and decentralized way\n\nFor more information about RAI Finance, please visit [https://rai.finance/](https://rai.finance/)   \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract failing to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. Critical and High severity smart contract bug reports must come with a PoC and a suggestion for a fix to be considered for a reward.\n\nThe following issues are already known and hence are considered out-of-scope: \n  - Trading pair price not updating in realtime\n  - Aggregated trading Final trading route price not displayed\n  - Receive box unable to input\n\nPayouts are handled by the __RAI Finance__ team directly and are denominated in USD. However, payouts are done in __USDT__ or __RAI__.",
            "assets_body": "All smart contracts of RAI Finance can be found at [https://github.com/RaiFinance](https://github.com/RaiFinance). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n\n__Web/App__\n\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Redirected funds by address modification\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "defidollar",
          "project": "DefiDollar",
          "date": "2021-02-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1D7isPt9XpT280PjGiK8Ar/9f94b52ec64ce2e38f229d723be55ca4/DefiDollar-logo.svg",
          "maximum_reward": 30000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $30,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $6,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://medium.com/defidollar/defidollar-launches-a-30k-bug-bounty-program-on-immunefi-2aa117776749",
          "assets_in_scope": [
            {
              "target": "https://github.com/defidollar/defidollar-core",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "DefiDollar aspires to be a risk-insured stablecoin layer for DeFi. It aims to\nprovide a safe and stable way for users to hold their assets. In the shorter\nterm, $DUSD is a stablecoin optimized for peg safety, yield and\ndiversification.\n\nDefiDollar is interested in securing its smart contracts and eliminating any\nrisk amounting to loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\n**Critical**: Empty or freeze contract's holdings\n\n**High**: Token holders temporarily unable to transfer holdings\n\n**Medium**: Denial of Service (e.g. unbounded gas, block stuffing\n\n**Low**: Contract fails to deliver promised returns (e.g. high-level economic errors)\n\nPayouts are handled by **DefiDollar** directly and are estimated in\n**USD**. However, payouts are done in **DUSD**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tetu",
          "project": "Tetu",
          "date": "2021-11-30T12:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7CCYGOBFsU41GSuxkFGa16/7e0eeb6ee440d7433975d3832e762a74/Tetu_Logo___1_.jpeg",
          "maximum_reward": 29000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to 1,000,000 TETU (~USD $29,000)"
            },
            {
              "level": "high",
              "payout": "150,000 TETU"
            },
            {
              "level": "medium",
              "payout": "75,000 TETU"
            },
            {
              "level": "low",
              "payout": "25,000 TETU"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "150,000 TETU"
            },
            {
              "level": "high",
              "payout": "50,000 TETU"
            },
            {
              "level": "medium",
              "payout": "25,000 TETU"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://polygonscan.com/address/0x255707b70bf90aa112006e1b07b9aea6de021424",
              "type": "Smart Contract - TETU Token"
            },
            {
              "target": "https://polygonscan.com/address/0x225084d30cc297f3b177d9f93f5c3ab8fb6a1454",
              "type": "Smart Contract - xTETU Profit Share Token"
            },
            {
              "target": "https://polygonscan.com/address/0x6678814c273d5088114B6E40cC49C8DB04F9bC29",
              "type": "Smart Contract - Controller"
            },
            {
              "target": "https://polygonscan.com/address/0x286c02C93f3CF48BB759A93756779A1C78bCF833",
              "type": "Smart Contract - Announcer"
            },
            {
              "target": "https://polygonscan.com/address/0xd055b086180cB6dac888792C9307970Ed10CF137",
              "type": "Smart Contract - FeeRewardForwarder"
            },
            {
              "target": "https://polygonscan.com/address/0x0A0846c978a56D6ea9D2602eeb8f977B21F3207F",
              "type": "Smart Contract - Bookkeeper"
            },
            {
              "target": "https://polygonscan.com/address/0x560471ab39C3Eb26D63aB3b2A5b9835764C998ea",
              "type": "Smart Contract - NotifyHelper - 1.1.0-r1"
            },
            {
              "target": "https://polygonscan.com/address/0x81367059892aa1D8503a79a0Af9254DD0a09afBF",
              "type": "Smart Contract - MintHelper"
            },
            {
              "target": "https://polygonscan.com/address/0x225084D30cc297F3b177d9f93f5C3Ab8fb6a1454",
              "type": "Smart Contract - ProfitSharing pool"
            },
            {
              "target": "https://polygonscan.com/address/0x7ad5935ea295c4e743e4f2f5b4cda951f41223c2",
              "type": "Smart Contract - FundKeeper"
            },
            {
              "target": "https://polygonscan.com/address/0xCa9C8Fba773caafe19E6140eC0A7a54d996030Da",
              "type": "Smart Contract - ContractReader"
            },
            {
              "target": "https://polygonscan.com/address/0xFE700D523094Cc6C673d78F1446AE0743C89586E",
              "type": "Smart Contract - LiquidityBalancer"
            },
            {
              "target": "https://polygonscan.com/address/0x9Accc3016c0CE34e1D127849A18DF4Bd6Ecb7aB3",
              "type": "Smart Contract - PayrollClerk"
            },
            {
              "target": "https://polygonscan.com/address/0x5Cc44D1787aFB510F563Fe55Fd082D3d4d720671#code",
              "type": "Smart Contract - AutoRewarder"
            },
            {
              "target": "https://polygonscan.com/address/0x690a41ab256046dF39faDd3f32F6d26cB4490bed#code",
              "type": "Smart Contract - RewardCalculator"
            },
            {
              "target": "https://polygonscan.com/address/0x684d8c187be836171a1Af8D533e4724893031828#code",
              "type": "Smart Contract - TetuSwap Factory"
            },
            {
              "target": "https://polygonscan.com/address/0x121d1D47aC63fAF123b29E3267fa8feb1fADc65c#code",
              "type": "Smart Contract - TetuSwap Router"
            },
            {
              "target": "https://bscscan.com/address/0x1f681b1c4065057e07b95a1e5e504fb2c85f4625#code",
              "type": "Smart Contract - TETU (AnySwap bridge)"
            },
            {
              "target": "https://tetu.io/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "TETU is a DeFi application built on Polygon that implements automated yield farming strategies in order to provide investors with a safe and secure method of receiving high and stable yield on their investments. Tetu's innovative solutions provide automated yield aggregation and distribution through xTETU.\n\nTetu's development focus is to build a self-sustaining yield management ecosystem that provides stable and attractive yields for users. Tetu aims to make the development of automated and decentralized Yield management solutions the main structure of the protocol.\n\nFor more information about Tetu, please visit [https://tetu.io/](https://tetu.io/).  \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe following table is used for the classification of web and app bug reports. In the event of conflict with the Immunefi Vulnerability Severity Classification System, the classification on this table will be what is considered.\n\n| Severity | Vulnerability |\n|:- | :--: |\n| **Critical** | - Deletion of site data  |\n|              | - XSS/CSRF |\n|              | - ACE |      \n| **High** | - Denial of service |\n|          | - DoS amplification |\n| **Medium** | - Incorrect modification of user data | \n|            | - Leaking user data | \n\nAll web/app bug reports must come with a PoC in order to be considered for a reward. All critical smart contract bug reports must come with a PoC and a suggestion for a fix in order to be considered for a reward. \n\nCritical smart contract vulnerabilities are further capped at 10% of economic damage, primarily taking into account the funds at risk. However, there is a minimum reward of 50 000 TETU tokens. Additionally, the maximum reward is capped at 1 000 000 TETU, even if 10% of the damage in USD equivalent is greater than the USD equivalent of 1 000 000 TETU. \n\nThe USD amounts provided in this bug bounty program is just an estimate of the equivalent USD value at the time of this publication. The rewards are only paid out in TETU. \n\nVulnerabilities that require moderator-approved access in order to be exploited will only receive a maximum of 20% of the advertised reward. For Critical Smart Contract and Blockchain vulnerability reports, this 20% is applied after the cap of 10% of economic damage.  \n\nTheft of yield/interest is considered as Medium for this bug bounty program.\n\nPayouts are handled by the __Tetu__ team directly and are denominated in TETU. Payouts are done in __TETU__.",
            "assets_body": "All smart contracts of Tetu can be found at https://github.com/tetu-io/tetu-contracts. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n   - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "unilend",
          "project": "UniLend",
          "date": "2022-02-17T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4EcV28cagQTuWCtzbvYNHH/cfa561c21f2d8ea0d1283c854325edf7/Unilend_Logo.png",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $15,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/UniLend/unilendv2/blob/main/contracts/core.sol",
              "type": "Smart Contract - Core"
            },
            {
              "target": "https://github.com/UniLend/unilendv2/blob/main/contracts/pool.sol",
              "type": "Smart Contract - Pool"
            },
            {
              "target": "https://github.com/UniLend/unilendv2/blob/main/contracts/position.sol",
              "type": "Smart Contract - Position"
            }
          ],
          "mdx": {
            "program_overview": "UniLend is a comprehensive permissionless DeFi protocol. Whereas other DeFi protocols support only a limited number of assets, anyone can list any asset on UniLend’s supported blockchains (currently Ethereum, Polygon, BSC and Moonriver) to access comprehensive DeFi functionality for those assets. This includes decentralized lending/borrowing, and the industry’s most cost-effective flash loans.\n\nIn addition to cryptocurrencies, UniLend will also support various synthetic real-world assets, NFTs and derivatives (including the major FAANG stocks and precious metals such as gold and silver).\n\nFor more information about UniLend, please visit [https://unilend.finance/](https://unilend.finance/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System V2](https://immunefi.com/immunefi-vulnerability-severity-classification-system-v2/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nCritical and High smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. In addition, all Critical and High bug reports must also come with a suggestion for a fix in order to be considered for a reward. \n\nAll known issues highlighted in the following audit report are considered out of scope:\n  - [https://bit.ly/3KPUTOE ](https://bit.ly/3KPUTOE)\n\nPayouts are handled by the __Unilend__ team directly and are denominated in USD. However, payouts are done in __UFT__.",
            "assets_body": "All smart contracts of Unilend can be found at [https://github.com/UniLend/unilendv2/](https://github.com/UniLend/unilendv2/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "stafi",
          "project": "StaFi: rDEX",
          "date": "2022-02-11T21:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4iwCFY9NJa80yHYy9nedrS/edfbc02a73e35bec237f79fd341cbd47/StaFi_Logo.png",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/balances/src/lib.rs",
              "type": "Smart Contract - Balances"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/balances/src/traits.rs",
              "type": "Smart Contract - Balances"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/mining/src/lib.rs",
              "type": "Smart Contract - Mining"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/mining/src/mock.rs",
              "type": "Smart Contract - Mining"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/mining/src/models.rs",
              "type": "Smart Contract - Mining"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/mining/src/tests.rs",
              "type": "Smart Contract - Mining"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/swap/src/lib.rs",
              "type": "Smart Contract - Swap"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/swap/src/mock.rs",
              "type": "Smart Contract - Swap"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/swap/src/models.rs",
              "type": "Smart Contract - Swap"
            },
            {
              "target": "https://github.com/stafiprotocol/stafi-node/blob/rswap/node/pallets/rdex/swap/src/tests.rs",
              "type": "Smart Contract - Swap"
            }
          ],
          "mdx": {
            "program_overview": "rDEX V1 is an AMM DEX developed by StaFi that seeks to solve the liquidity problems associated with rTokens, the staking derivatives issued by StaFi. It will provide decentralized transaction services for all rTokens based on the StaFi Chain. Being an important part of the StaFi rToken ecosystem, rDEX V1 now is deployed on the StaFi chain, which is Substrate-based. Native rTokens minted by users can directly be traded through the rDEX for better liquidity.\n\nFor more information about rDEX, please visit [https://docs.rdex.finance/welcome-to-rdex/](https://docs.rdex.finance/welcome-to-rdex/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - The potential bugs or exploits in the slippage-based fee model and CLP liquidity pool model\n  - The potential bugs or exploits  in the liquidity mining contracts\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 2 days\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a suggestion for a fix to be considered for a reward. \n\nAll known issues highlighted in the following audit report are considered out-of-scope:\n  - [https://github.com/stafiprotocol/stafi-bootstrap/blob/master/audits/rdex/PeckShield-Audit-Report-Stafi-rDEX-v1.0.pdf](https://github.com/stafiprotocol/stafi-bootstrap/blob/master/audits/rdex/PeckShield-Audit-Report-Stafi-rDEX-v1.0.pdf)\n\nPayouts are handled by the __StaFi__ team directly and are denominated in USD. However, payouts are done in __FIS__.",
            "assets_body": "All smart contracts of rDEX can be found at [https://github.com/stafiprotocol/stafi-node/tree/rswap/node/pallets/rdex](https://github.com/stafiprotocol/stafi-node/tree/rswap/node/pallets/rdex). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - The potential bugs or exploits in the slippage-based fee model and CLP liquidity pool model\n  - The potential bugs or exploits  in the liquidity mining contracts\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 2 days\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "exponent",
          "project": "Exponent",
          "date": "2022-01-18T03:00+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1CAVu8tc6svnZef394ysBf/1dec45f4280fa86115a9ce2ae7af7611/Exponent_logo.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $2,500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $2,500"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x9db1567dc6ac0286e1cf8905aadb6b785dcafebc",
              "type": " Smart Contract - XPNMain"
            },
            {
              "target": "https://etherscan.io/address/0xa7a564621ce88665bb7ca37b72af14da11fb1db1",
              "type": " Smart Contract - XPNSignal"
            },
            {
              "target": "https://etherscan.io/address/0xb9112d2b8e9008377649f912c11d71813660043b",
              "type": " Smart Contract - XPNUtils"
            },
            {
              "target": "https://etherscan.io/address/0x62c02a93c281b1411a134a1c3ef1addbcd9e7190",
              "type": " Smart Contract - Simple Issuance"
            },
            {
              "target": "https://etherscan.io/address/0xb3360034f9969b130ee2db18cad2eb533b3142ff",
              "type": " Smart Contract - ExETH"
            },
            {
              "target": "https://app.exponent.cx",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Exponent is a decentralized Capital-as-a-Service (CaaS) protocol. The protocol equips decentralized application (dApp) developers with the tools and services to offload and streamline capital management through smart contracts. Three main components make up the protocol: Vault - a one-stop capital management infrastructure, Middleware - application-specific logic and strategies, and Strategy generation - return generation and volatility managed DeFi products\n\nThis Bug Bounty program focuses on the Vault module, which is currently in beta. Multiple components make up the vault: Ex-ETH - ERC20 tokens representing shares of the vault, XPN Main - the contract with core business logics, and Issuance - the contract that streamlines and batch deposits capital into the Exponent vault. At the moment, the XPNSignal contract is not being utilized . The Exponent set of contracts is developed on top of Enzyme Finance’s infrastructure.\n\nFor more information about Exponent, please visit [https://exponent.cx/](https://exponent.cx/). \n\nThis bug bounty program is focused on their smart contracts, website, and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Temporary freezing of funds for a minimum of 12 hours\n  - Unable to call smart contract\n  - Denial of Service attacks\n  - Leak of user data\n  - Redirected funds by address modification\n  - Users spoofing other users\n  - Injection of tex",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll web/app bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. All High and Critical Smart Contract bug reports require a PoC to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Known issues found and shared at [https://docs.exponent.cx/](https://docs.exponent.cx/)\n  - Vulnerabilities marked in the [Quantstamp security review](https://drive.google.com/file/d/1V6Y9ZNNeSvVXFH6KuE5WdISzVQJaoSw3/view?usp=sharing) are not eligible for a reward.\n\nPayouts are handled by the __Exponent__ team directly and are denominated in USD. However, payouts are done in __USDC__. ",
            "assets_body": "All smart contracts of Exponent can be found at [https://github.com/exponent-ai/contracts](https://github.com/exponent-ai/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Temporary freezing of funds for a minimum of 12 hours\n  - Unable to call smart contract \n  - Denial of Service attacks\n\n__Web/App__\n\n  - Leak of user data\n  - Redirected funds by address modification\n  - Users spoofing other users\n  - Injection of text",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n  - Trusting trust/dependency vulnerabilities\n  - Oracle failure/manipulation\n  - Congestion and scalability\n  - Consensus failures\n  - Cryptography problems\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "civilization",
          "project": "Civilization",
          "date": "2021-12-03T09:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3t9yHht7JtcImUeGLFt6PR/d470de365ba6000ffa46a6b71a01cd47/Civilization_logo.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/CivilizationCIV/contract-libraries/",
              "type": "Smart Contract - Libraries"
            },
            {
              "target": "https://github.com/CivilizationCIV/civ-token",
              "type": "Smart Contract - Token"
            },
            {
              "target": "https://civfund.org",
              "type": "Web/App - Main Web App"
            }
          ],
          "mdx": {
            "program_overview": "Civilization is the community of $CIV: Community Investment Vehicle. The world's first hedge fund for everyone! Using 100% auditable code and automated multi-strategy selection, it builds trading and farming on top of Uniswap v3 as well as other trading strategies to give maximum yield at minimum risk with superb ease of use. \n\nThe new concept of a DEX Fund is based on community and code. Different from the traditional fiat-money fund which is typically based around closed teams, proprietary ideas, personal networks, access to institutional money and hierarchical organization. For more information about Civilization, please visit [https://civfund.org](https://civfund.org). \n\nThis bug bounty program is focused on smart contracts and app, focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website outage\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC in order to be considered for a reward. All Critical-level bug reports require a PoC and a suggestion for a fix to be eligible for a reward. \n\nThe following vulnerabilities are not eligible for a reward:\n\n  - any Wordpress-related website vulnerabilities \n\nPayouts are handled by the __Civilization__ team directly and are denominated in USD. However, payouts are done in __ETH__.",
            "assets_body": "In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for more than 1 hour\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Any exploits based on Wordpress vulnerabilities\n  - Any HTTP header-related reports\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "kogefarm",
          "project": "KogeFarm",
          "date": "2021-11-19T09:15-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3K4jcaeVwLA8XhxSSuEA1K/11382a929821ac0191577bfa51b259e6/KogeFarm_logo.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/kogecoin/vault-contracts/blob/main/movr_vault_addresses.json",
              "type": "Smart Contract - MoonRiver"
            },
            {
              "target": "https://github.com/kogecoin/vault-contracts/blob/main/ftm_vault_addresses.json",
              "type": "Smart Contract - Fantom"
            },
            {
              "target": "https://github.com/kogecoin/vault-contracts/blob/main/vaultaddresses",
              "type": "Smart Contract - Polygon"
            }
          ],
          "mdx": {
            "program_overview": "KogeFarm is a low-fee, multi-chain yield aggregator/optimizer that automates reward harvesting and yield compounding across hundreds of farms from dozens of yield farm platforms. It was launched in May 2021 on the Polygon chain and is quickly expanding to others.\n\nFor more information about KogeFarm, please visit [https://kogefarm.io/vaults](https://kogefarm.io/vaults). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe following vulnerabilities are not eligible for a reward:\nSmall difference between principal and vault shares due to rounding to 10^18 decimals.\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, KogeFarm classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed. \n\nCritical\n  - Theft of principal is critical if the possible theft is greater than USD 100000.\n  - Freezing of principal is critical if it cannot be unfrozen, with impacted amounts greater than USD 100000.\n\nKogeFarm requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is the bug bounty hunter's face and document verification using [https://kycaid.com/](https://kycaid.com/). The collection of this information will be done by the KogeFarm team. \n\nPayouts are handled by the __KogeFarm__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "In the Github link in the Assets in Scope table, only Exact Match Verified smart contracts are considered as in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "openzeppelin",
          "project": "OpenZeppelin",
          "date": "2021-11-15T09:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4tl7aEnEwJyvmUxPKqR2KH/2ad9232b3e2e462c88aa27262ce93deb/OpenZeppelin_Logo.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/OpenZeppelin/openzeppelin-contracts",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "OpenZeppelin is the premier crypto cybersecurity technology and services company, trusted by the most used DeFi and NFT projects. Founded in 2015 with the mission to protect the open economy, OpenZeppelin provides a complete suite of security products to build, manage, and inspect all aspects of software development and operations for Ethereum projects.\n\nOpenZeppelin safeguards tens of billions of dollars in funds for leading crypto organizations including Coinbase, Ethereum Foundation, Compound, Aave, TheGraph, and many others.\n\nFor more information about OpenZeppelin, please visit [https://openzeppelin.com/](https://openzeppelin.com/).  \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of funds by freezing or theft\n  - Denial of service (smart contract is made unable to operate)\n  - Access control is bypassed, including privilege escalation\n  - Smart contract does not behave as intended\n\nThis is an overlay bug bounty program for OpenZeppelin’s contracts library. A vulnerability in an OpenZeppelin library would likely affect many other projects and could trigger various other bounties. This program would be potentially additive to these cases. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe rewards stated here are additive to any existing bug bounty programs hosted by projects that are currently using OpenZeppelin contracts. \n\nCritical severity bug reports must come with a PoC in order to be considered for a reward.\n\nPayouts are handled by the __OpenZeppelin__ team directly and are denominated in USD. However, payouts are done in __ETH__ or __USDC__.",
            "assets_body": "All smart contracts in the “contracts” directory are included in the bug bounty, except those under “contracts/mocks”, which are testing artifacts.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of funds by freezing or theft\n  - Denial of service (smart contract is made unable to operate)\n  - Access control is bypassed, including privilege escalation\n  - Smart contract does not behave as intended",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n- Smart Contracts and Blockchain \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Susceptibility to block timestamp manipulation\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tidal",
          "project": "Tidal",
          "date": "2021-07-29T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/8W7fFTes98r7bTeodG3k2/41f7abb907cee9c722b38dd49b2dcb75/Tidal.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $12,000"
            },
            {
              "level": "high",
              "payout": "USD $8,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/AssetManager.sol",
              "type": "Smart Contract - AssetManager.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Bonus.sol",
              "type": "Smart Contract - Bonus.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Buyer.sol",
              "type": "Smart Contract - Buyer.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/CommitteeAlpha.sol",
              "type": "Smart Contract - CommitteeAlpha.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/GovernorAlpha.sol",
              "type": "Smart Contract - GovernorAlpha.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Guarantor.sol",
              "type": "Smart Contract - Guarantor.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Migrations.sol",
              "type": "Smart Contract - Migrations.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/PremiumCalculator.sol",
              "type": "Smart Contract - PremiumCalculator.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Registry.sol",
              "type": "Smart Contract - Registry.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Seller.sol",
              "type": "Smart Contract - Seller.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Staking.sol",
              "type": "Smart Contract - Staking.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/Timelock.sol",
              "type": "Smart Contract - Timelock.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/BaseRelayRecipient.sol",
              "type": "Smart Contract - BaseRelayRecipient.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/NonReentrancy.sol",
              "type": "Smart Contract - NonReentrancy.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/common/WeekManaged.sol",
              "type": "Smart Contract - WeekManaged.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/helper/StakingHelper.sol",
              "type": "Smart Contract - StakingHelper.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/helper/UpdateHelper.sol",
              "type": "Smart Contract - UpdateHelper.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IAssetManager.sol",
              "type": "Smart Contract - IAssetManager.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IBonus.sol",
              "type": "Smart Contract - IBonus.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IBuyer.sol",
              "type": "Smart Contract - IBuyer.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IGuarantor.sol",
              "type": "Smart Contract - IGuarantor.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IPolicy.sol",
              "type": "Smart Contract - IPolicy.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IPremiumCalculator.sol",
              "type": "Smart Contract - IPremiumCalculator.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IRegistry.sol",
              "type": "Smart Contract - IRegistry.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IRelayRecipient.sol",
              "type": "Smart Contract - IRelayRecipient.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/ISeller.sol",
              "type": "Smart Contract - ISeller.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/interfaces/IStaking.sol",
              "type": "Smart Contract - IStaking.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/GovernanceToken.sol",
              "type": "Smart Contract - GovernanceToken.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/TidalToken.sol",
              "type": "Smart Contract - TidalToken.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/TidalTokenChild.sol",
              "type": "Smart Contract - TidalTokenChild.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/AccessControlMixin.sol",
              "type": "Smart Contract - AccessControlMixin.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/ContextMixin.sol",
              "type": "Smart Contract - ContextMixin.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/EIP712Base.sol",
              "type": "Smart Contract - EIP712Base.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/IChildToken.sol",
              "type": "Smart Contract - IChildToken.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/Initializable.sol",
              "type": "Smart Contract - Initializable.sol"
            },
            {
              "target": "https://github.com/TidalFinance/tidal-contracts/blob/main/contracts/tokens/matic/NativeMetaTransaction.sol",
              "type": "Smart Contract - NativeMetaTransaction.sol"
            },
            {
              "target": "https://tidal-ropsten.vercel.app/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "TIDAL is a decentralized discretionary mutual cover protocol that offers the DeFi community the ability to hedge against the failure of any DeFi protocol or asset. By directly leveraging up the reserve to cover multiple protocols at the same time, the enhanced capital efficiency attracts reserve providers while a competitive insurance premium attracts buyers.\nTidal primarily consists of cover (insurance) buyers and reserve providers. Since pure peer-to-peer matching platforms on an individual bases have failed to gain traction in areas related to both lending and insurance, Tidal pools capital from reserve providers to offer covers to buyers. This allows for higher capital efficiency as the same reserve backs more covers than can be individually paid out and also eliminates a peer matching process resulting from double coincidence of wants. \n\nFor more information about Tidal, please visit [https://tidal.finance](https://tidal.finance). \n\nThis bug bounty program covers its smart contracts and apps and is focused on the prevention of the following:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nPayouts are handled by the __Tidal__ team directly and are denominated in USD. Payouts are done in a stablecoin at the selection of the team.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nFurther information about Tidal’s smart contracts can be found at [https://github.com/TidalFinance/tidal-contracts](https://github.com/TidalFinance/tidal-contracts). However, only the smart contracts listed in the Assets in Scope table are considered as in-scope.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Redirected funds by address modification\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in one of the impacts listed in the Impacts in Scope table:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "zapper",
          "project": "Zapper",
          "date": "2021-06-07T02:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/58B6rtrPMgyknsW866O9vs/4f22929cdaa7a850cc571d923c158da4/Zapper.jpeg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $250"
            }
          ],
          "web_rewards": [
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $250"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x6d9893fa101cd2b1f8d1a12de3189ff7b80fdc10",
              "type": "Smart Contract - Uniswap V2 Add"
            },
            {
              "target": "https://etherscan.io/address/0xfb13b2ae7282cfaca2c0cf62d9aed131db2209f7",
              "type": "Smart Contract - Uniswap V2 Remove"
            },
            {
              "target": "https://etherscan.io/address/0x7F249DBD212158e1ac449f0A37CA956C8186ac80",
              "type": "Smart Contract - Balancer Add"
            },
            {
              "target": "https://etherscan.io/address/0x00d0f137b51692D0AC708bdE7b367a373865cFfe",
              "type": "Smart Contract - Balancer Remove"
            },
            {
              "target": "https://etherscan.io/address/0x7a0a6906de7714d27413f5092ed1a0636a3fbc9a",
              "type": "Smart Contract - Curve Add"
            },
            {
              "target": "https://etherscan.io/address/0xd754ffb697cd276ad6b0f0273521775c1a11b175",
              "type": "Smart Contract - Curve Remove"
            },
            {
              "target": "https://etherscan.io/address/0xc5b49abf8b164472be9486767af6b1a5586b5609",
              "type": "Smart Contract - Yearn yVault Remove"
            },
            {
              "target": "https://etherscan.io/address/0xa8a3b1a1e09a0f84b2856533db4ee0cc88dd4e11",
              "type": "Smart Contract - Yearn yVault Remove"
            },
            {
              "target": "https://etherscan.io/address/0x42d4e90ff4068abe7bc4eab838c7de1d2f5998a3",
              "type": "Smart Contract - Yearn yVault Add"
            },
            {
              "target": "https://etherscan.io/address/0x5abfbe56553a5d794330eaccf556ca1d2a55647c",
              "type": "Smart Contract - Sushiswap Add"
            },
            {
              "target": "https://etherscan.io/address/0x235Fda2564977c0158EE084f9B5c50a59Bf1656f",
              "type": "Smart Contract - Sushiswap Remove"
            },
            {
              "target": "https://etherscan.io/address/0xa14EEefa753a166a5651bce7B84094f614Df0D05",
              "type": "Smart Contract - Bancor Add"
            },
            {
              "target": "https://etherscan.io/address/0x98e562a87c5243eef333e43cb1834223f526c434",
              "type": "Smart Contract - Harvest Add"
            },
            {
              "target": "https://etherscan.io/address/0x2e61170a7dCab6438e403AA7A8A7143d39ED0A65",
              "type": "Smart Contract - PoolTogether Add"
            },
            {
              "target": "https://etherscan.io/address/0xe34b087bf3c99e664316a15b01e5295eb3512760",
              "type": "Smart Contract - Ethereum to Polygon Bridgehttps://etherscan.io/address/0xe34b087bf3c9"
            },
            {
              "target": "https://etherscan.io/address/0x5531b2eAA05D8b6fb855E15F1d21e6a3A3794B4d#code",
              "type": "Smart Contract - 1Inch Add"
            },
            {
              "target": "https://etherscan.io/address/0xc695f73c1862e050059367b2e64489e66c525983",
              "type": "Smart Contract - Pickle Add"
            },
            {
              "target": "https://etherscan.io/address/0xe80a9a878c4bed81f3803de10beff08ca8cd8c61",
              "type": "Smart Contract - Mushrooms Add"
            },
            {
              "target": "https://etherscan.io/address/0xfaff15c6cdaca61a4f87d329689293e07c98f578",
              "type": "Smart Contract - Zapper NFT"
            },
            {
              "target": "https://bscscan.com/address/0x25d9fa3da06422ec5306a85545f0f30646d30ecd",
              "type": "Smart Contract - PancakeSwap Add"
            },
            {
              "target": "https://bscscan.com/address/0x47b0ec1bea7d8ecc7cf70c3bf82c5f5d15a96b6d",
              "type": "Smart Contract - PancakeSwap Remove"
            },
            {
              "target": "https://explorer-mainnet.maticvigil.com/address/0x47b0eC1beA7d8EcC7cF70C3bF82c5f5d15a96b6D/transactions",
              "type": "Smart Contract - Sushiswap Add"
            },
            {
              "target": "https://explorer-mainnet.maticvigil.com/address/0x784dD16f7683b7Ec042A6f36787052a11BFbEc68/transactions",
              "type": "Smart Contract - Sushiswap Remove"
            },
            {
              "target": "https://explorer-mainnet.maticvigil.com/address/0xF231be40d73a9E73d859955344A4fF74f448dF34/transactions",
              "type": "Smart Contract - Quickswap Add"
            },
            {
              "target": "https://explorer-mainnet.maticvigil.com/address/0x4bF331Aa2BfB0869315fB81a350d109F4839f81b/transactions",
              "type": "Smart Contract - Quickswap Remove"
            },
            {
              "target": "https://zapper.fi/",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "Zapper is your DeFi dashboard for monitoring your portfolio, including assets, debts, liquidity pools, staking, claimable rewards, and yield farming activities–but it requires you to share no personal data! Just connect your Ethereum wallet or paste in the ETH wallet address / ENS domain. \n\nZapper is also your gateway to investing in hundreds of DeFi strategies in just a few clicks. Zaps save time, effort, and often transaction fees (gas) by deploying capital in a single DeFi command control center, working with the most trusted DeFi applications like yearn.finance, Uniswap, Balancer, Curve, and more.\n\nFor a full overview of Zapper, please visit [https://zapper.fi/](https://zapper.fi/).   \n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nPayouts are handled by the __Zapper__ team directly and are denominated in USD. Payouts are done in __USDC__ or __DAI__. Bug bounty hunters however must specify where they want to receive the tokens on, whether on Ethereum, Polygon, or Binance Smart Chain.",
            "assets_body": "For additional reference, you can visit the [Zapper GitHub repositories](https://github.com/Zapper-fi). However, only the assets listed in this table are considered as in-scope of the bug bounty program.\n\nFor web vulnerabilities, only [https://zapper.fi](https://zapper.fi) is in scope. Any subdomains are considered out-of-scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices \n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "meshfinance",
          "project": "Mesh Finance",
          "date": "2021-04-21T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2SnqeDmPqKLXAtTMGHTugO/1a1d2e143f7286d9b7fb5c872c3c019a/Meshfinance-logo.jpg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "up to USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,500"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xd3d5A88461bD20494ECdF6b57d0FD4b20DA6b3bb#code",
              "type": "Smart Contract - FundFactory"
            },
            {
              "target": "https://etherscan.io/address/0x7c8cE628FA5602E0808137A1276Aa09516bcc784#code",
              "type": "Smart Contract - FundProxy"
            },
            {
              "target": "https://etherscan.io/address/0x78Ba085bBEf6eDF375daB15b39AbCE0736E666d0#code",
              "type": "Smart Contract - Fund (Implementation)"
            },
            {
              "target": "https://etherscan.io/address/0xf01401aea874d97740ace973461facf9a443773b#code",
              "type": "Smart Contract - OptimizerStrategy"
            },
            {
              "target": "https://etherscan.io/address/0x07b56315f558df79ee15ffc70114c58f4c6232ba#code",
              "type": "Smart Contract - CompoundStrategy"
            }
          ],
          "mdx": {
            "program_overview": "Mesh Finance is a community of humans who want to bring Decentralised Finance benefits to every human. To achieve that, the Mesh community makes easy-to-use Decentralised Finance products. \n\nMesh Finance is built on 3 principles.\n  1. Democratize access to financial opportunities\n  2. Make it super simple for users\n  3. Let the users choose what is best for them\n\nFor more information about Mesh Finance, please visit [https://docs.mesh.finance/ ](https://docs.mesh.finance/)\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical/High smart contract bug reports must come with a PoC in order to be considered for a reward.\n\nKnown issues raised in the audit below are considered out-of-scope:\n[https://drive.google.com/file/d/1mSJL-u34YI-XQTmvsUaGo_YflL_GLJO5/view?usp=sharing](https://drive.google.com/file/d/1mSJL-u34YI-XQTmvsUaGo_YflL_GLJO5/view?usp=sharing)\n\nPayouts are handled by the __Mesh Finance__ team directly and are denominated in USD. Payouts are done in __USDC__ or __USDT__.",
            "assets_body": "All smart contracts of Mesh Finance can be found at [https://github.com/mesh-finance/mesh_finance_core](https://github.com/mesh-finance/mesh_finance_core). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 24 hours\n  - Unable to call smart contract\n  - Governance activity disruption\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "\nWe are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "fuse",
          "project": "Fuse",
          "date": "2021-02-23T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1KKpRVmkjHmeStvOcAjttk/0c2d3b6cc0ac9c63b28e9ec6cc2df3d3/fuse-logo.jpg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/fuseio/fuseswap-interface",
              "type": "Fuseswap Dapp"
            },
            {
              "target": "http://fuseswap.com/",
              "type": "Fuseswap Dapp"
            },
            {
              "target": "https://github.com/fuseio/fuseswap-v2-core",
              "type": "Smart Contract (Repo) - Fuseswap Smart "
            },
            {
              "target": "https://github.com/fuseio/fuseswap-v2-periphery",
              "type": "Smart Contract (Repo) - Fuseswap Smart "
            },
            {
              "target": "https://explorer.fuse.io/address/0xFB76e9E7d88E308aB530330eD90e84a952570319",
              "type": "Smart Contract - UniswapV2Router02"
            },
            {
              "target": "https://explorer.fuse.io/address/0x1d1f1A7280D67246665Bb196F38553b469294f3a",
              "type": "Smart Contract - UniswapV2Factory"
            },
            {
              "target": "https://github.com/fuseio/fuse-lp-rewards ",
              "type": "LP rewards Dapp"
            },
            {
              "target": "http://rewards.fuse.io/",
              "type": "LP rewards Dapp"
            },
            {
              "target": "https://etherscan.io/address/0x9640B393a016ba171a15BB2E68A8B3327Ef7ee29",
              "type": "Smart Contract - Fuse/ETH LP reward pair on Mainnet"
            },
            {
              "target": "https://explorer.fuse.io/address/0x4EE7127d43B385C77308bdF9E9d59258ab11e836/contracts ",
              "type": "Smart Contract - KNC/USDC LP reward pair on Fuse"
            },
            {
              "target": "https://explorer.fuse.io/address/0x0BE9e53fd7EDaC9F859882AfdDa116645287C629",
              "type": "Smart Contract - WFUSE (native wrapper) "
            },
            {
              "target": "https://github.com/fuseio/canonical-weth",
              "type": "Smart Contract - WFUSE (native wrapper) "
            }
          ],
          "mdx": {
            "program_overview": "Fuse was founded in 2019 with a mission to bring the power of mobile payments\nto communities around the world. With Fuse, anyone can launch and manage these\nnew networks, empowered by simple, easy to use tools. A highly-skilled, diverse\nteam of blockchain and web–based technology experts has been assembled in order\nto execute on our ambitious vision of putting truly democratized and borderless\nmoney into the hands of millions.\n\nThe bug bounty program is focused around its smart contracts used in its\nproducts, namely FuseSwap and FuseRewards, and is mostly concerned with the\nloss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by **Fuse** directly and are denominated in\n**USD**. However, payouts are done in **FUSE**.\n\nOne issue we know of with WFUSE is that totalSupply is not working. So, all\nvulnerabilities related to that are not given a reward, as it is a known issue.",
            "assets_body": "Web and App (and Dapp) bug reports are accepted within the scope of this bug bounty \nprogram, but have no payout. ",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App Vulnerabilities** \n\nWe accept the following website/app vulnerabilities, though there is no reward\nfor them:\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following vulnerabilities are not sought after for website bug reports:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pooltogether",
          "project": "PoolTogether",
          "date": "2021-02-16T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4X0NvdABdyX5Sm65C517fW/309d563985643bec8865639cf271c8c3/Pooltogether-logo.jpg",
          "maximum_reward": 25000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $25,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://docs.pooltogether.com/networks#pooltogether-pools-and-supporting-contracts",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "PoolTogether is a protocol for no-loss prize games on the Ethereum\nblockchain. The protocol enables developers to build their own no-loss prize\ngames and offers governance-managed no-loss prize games. Prize games are pools\nof funds whose accrued interest is distributed as prizes. The concept is\nwell-established and otherwise known as \"no loss lotteries\" or \"prize savings\naccounts\".\n\nThe PoolTogether Protocol governance serves two primary functions: Governing\nthe prize pool creation tools and governing a subset of prize pools.\n\nThe bug bounty program is focused around its smart contract and is mostly\nconcerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **PoolTogether** team directly and are denominated\nin **USD**. However, payouts are done in **DAI** assuming a full 1:1 ratio.",
            "assets_body": "Only the smart contracts listed in this specific section noted here.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n- Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tranchefinance",
          "project": "Tranche Finance",
          "date": "2021-05-20T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1SFd551OXuUewD43oWWoNA/90104a54fdbaa7f9addb5b8db17fb064/Tranche_Finance.jpeg",
          "maximum_reward": 23500,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "25 000 SLICE (~Up to USD 23,500)"
            },
            {
              "level": "high",
              "payout": "10 000 SLICE (~Up to USD 9,390)"
            },
            {
              "level": "medium",
              "payout": "5 000 SLICE (~Up to USD 4,695)"
            },
            {
              "level": "low",
              "payout": "1 000 SLICE (~Up to USD 939)"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "2 000 SLICE (~Up to USD 1,878)"
            },
            {
              "level": "high",
              "payout": "1 500 SLICE (~Up to USD 1,408)"
            },
            {
              "level": "medium",
              "payout": "500 SLICE (~Up to USD 469)"
            },
            {
              "level": "low",
              "payout": "100 SLICE (~Up to USD 93)"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/tranche-jibrel/tranche-aave-protocol",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/tranche-jibrel/tranche-compound-protocol",
              "type": "Smart Contract"
            },
            {
              "target": "https://tranche.finance",
              "type": "Website/App"
            }
          ],
          "mdx": {
            "program_overview": "Tranche is a decentralized protocol for managing risk. The protocol integrates with any interest accrual token, such as Compound's cTokens and AAVE's aTokens, to create two new interest-bearing instruments, one with a fixed-rate, Tranche A, and one with a variable rate, Tranche B. \n\nThe protocol is currently integrated with Compound and charges fees in Dai and USDT. Accrued fees are exchanged for SLICE tokens through Uniswap pools. SLICE holders can vote on protocol parameters and other governance issues, as well as stake their SLICE or SLICE-LP tokens for rewards\n\nFurther resources regarding Tranche Finance can be found in their documentation, [https://docs.tranche.finance/tranchefinance/](https://docs.tranche.finance/tranchefinance/).  \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds, economic exploits, and smart contract security risk.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bug reports must come with a PoC in order for consideration for a reward. All bug reports without a PoC will be automatically rejected with instructions to provide a PoC.\n\nThis bug bounty program has fixed rewards in SLICE. The USD amounts reflected are only estimates. For an up-to-date price of the token, please visit the [Tranche Finance Website](https://app.tranche.finance/tranche).\n\nPayouts are handled by the Tranche Finance team directly and are denominated in USD. However, payouts are done in a mix of stablecoins and project tokens.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "golom",
          "project": "Golom",
          "date": "2022-01-17T03:45+01:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6VNaw6UMZLCMWOysZzUNXI/fae62b497f10cb555b2969bc91eec921/GOLOM.png",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,500"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xdb454bee1c617edefc2c4b1b2a5a9c1d5a342338#code",
              "type": "Smart Contract - GolomTrader"
            }
          ],
          "mdx": {
            "program_overview": "Golom is a Non Fungible Token marketplace geared towards traders and flippers. We provide In-depth analysis of nft collections and offer best trading experience with 0% fees.\n\nFor more information about Golom, please visit [https://golom.io/](https://golom.io/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Non authorized transfer of funds(NFTs, Weth) from wallets that have given approval to the contract. (Authorized transfers are those transfers that have a valid signature passed in executeOfferIfSignatureMatch and executeOrderIfSignatureMatchfunctions) \n  - Freezing of user funds\n  - Block stuffing without fund transfers blocked\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns, but doesn’t lose value",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract bug reports require a PoC and a suggestion for a fix to be eligible for a reward.  \n\nPayouts are handled by the __Golom__ team directly and are denominated in USD. However, payouts are done in __Stablecoins__.",
            "assets_body": "All smart contracts of Golom can be found at [https://github.com/saruman420/golomtrader](https://github.com/saruman420/golomtrader). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "Only the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Non authorized transfer of funds(NFTs, Weth) from wallets that have given approval to the contract. (Authorized transfers are those transfers that have a valid signature passed in executeOfferIfSignatureMatch and executeOrderIfSignatureMatchfunctions) \n  - Freezing of user funds",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks \n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "antefinance",
          "project": "Ante Finance",
          "date": "2022-01-05T12:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4CENEoWKC4YGCHgAxZ1f4U/1e4a8244ff3ba31e495992ea3dc67ddc/Ante_logo.png",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0xa03492a9a663f04c51684a3c172fc9c4d7e02edc",
              "type": "Smart Contract - Ante Pool Factory"
            },
            {
              "target": "https://etherscan.io/address/0xE48f6A36f3712E389ce666BCEcD88BA60c30aE50",
              "type": "Smart Contract - Ante Pool"
            },
            {
              "target": "https://etherscan.io/address/0x5f3555Febf9bF4930ad581dB008f8b0F6239C6Fc",
              "type": "Smart Contract - Ante Pool"
            },
            {
              "target": "https://etherscan.io/address/0xFc2Bd420ae071a812Ea238C5916198024E00fE33",
              "type": "Smart Contract - Ante Pool"
            },
            {
              "target": "https://etherscan.io/address/0x28b549845B6fE1939783ba0bDb3ba1a598da0394",
              "type": "Smart Contract - Ante Pool"
            },
            {
              "target": "https://etherscan.io/address/0x6e1000a6088Eb3dD1493492626E556F6d9A17BD1",
              "type": "Smart Contract - Ante Pool"
            },
            {
              "target": "https://etherscan.io/address/0x22075f4cD76299822Eb8D1546f5DcF775c90AA87",
              "type": "Smart Contract - Ante Pool"
            }
          ],
          "mdx": {
            "program_overview": "Ante Finance enables blockchain protocols and developers to create incentivized, real-time, and autonomous guarantees for any smart contract system on any blockchain. Ante envisions becoming the global Schelling point for decentralized trust.\n\nFor more information about Ante, please visit [https://www.ante.finance/](https://www.ante.finance/). \n\nThis bug bounty program is focused on their smart contracts and app and is focused on preventing:\n\n  - Theft or freezing of user funds aside from normal functioning of AntePool contract\n  - Incorrect calculation of rewards for stakers/challengers beyond error bounds described in technical doc\n  - Incorrect calculation of decay payments beyond error bounds described in technical doc\n  - False positive triggering of test failure on AntePool even if underlying test did not fail or revert",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the Immunefi Vulnerability Severity Classification System. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe following vulnerabilities are not eligible for a reward:\n\n  - Challenger decay calculation is inaccurate and slightly overestimates the decay paid by challengers (overall error is < 1%/year even in the worst case scenario). Calculation is more accurate the more often updateDecay() is called.\n  - Staker and challenger balances are slightly underestimated due to rounding issues in intermediate calculations, overall loss is small relative to total pool balance flux (< 0.1%)\n  - Test verification can be frontrun by challengers who stake small amounts of ether in every pool.\n  - checkTest gas usage can be unbounded as it scales linearly with number of unique challengers\n  - Any exploits related to malicious actors cloning and redeploying our contracts (i.e., deploying their own version of AntePoolFactory or deploying AntePools without the use of our AntePoolFactory contract)\n  - Any exploits related to using malicious AnteTests to steal/lock user funds\n\nIn addition to Immunefi’s Vulnerability Severity Classification System, Ante classifies the following vulnerabilities as follows. In case of discrepancy, the one below will be followed. \n\n  - Medium\n    - AntePool contract consumes unbounded gas aside from (i) known scaling of checkTest gas usage with number of challengers or (ii) due to malicious AnteTests that consume unbounded gas \n\nAnte requires KYC to be done for all bug bounty hunters submitting a report and wanting a reward. The information needed is the bug bounty hunter's full name, scan of ID, country and a self-certification that the bug bounty hunter is not a sanctioned person or otherwise prohibited by law from receiving payment from Ante. The collection of this information will be done by the Ante team. \n\nPayouts are handled by the __Ante__ team directly and are denominated in USD. However, payouts are done in __USDC__.",
            "assets_body": "All smart contracts of Ante can be found at [https://github.com/antefinance/](https://github.com/antefinance/ante-v0-core/blob/v0.5/contracts/AntePool.sol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of funds in AntePool that is not triggered by a valid withdrawal of funds by the user who deposited or settlement (in the case of a failed Ante Test)\n  - Inability for stakers or challengers to withdraw funds from the pool (except in the case of a failed Ante Test) \n  - Incorrect payment to stakers from challenger decay mechanism (aside from inaccuracy described above)\n  - Incorrect loss of funds from challengers due to challenger decay mechanism  (aside from inaccuracy described above)\n  - Incorrect payout to challengers on settlement following a failed Ante Test\n  - Withdrawal of staked funds by stakers without waiting for 24 hr window to pass following initialization of unstake\n  - AntePool triggers test failure workflow when underlying AnteTest did not revert or fail",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - Including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "stonedefi",
          "project": "Stone DeFi",
          "date": "2021-09-28T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/17Libu9FY1HWcChTsVlL9s/24cc6145111937e3dd265d7f8f54f173/StoneDefi.jpeg",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "STN 30 000 (~USD $20,000)"
            },
            {
              "level": "high",
              "payout": "STN 2 000 (~USD $1,300)"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $100"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            },
            {
              "level": "high",
              "payout": "USD $500"
            },
            {
              "level": "medium",
              "payout": "USD $200"
            },
            {
              "level": "low",
              "payout": "USD $50"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://www.stonedefi.io/",
              "type": "Web/App"
            },
            {
              "target": "https://etherscan.io/address/0x2cb53871c01e314343DDdc4a0e7cCD30Df72B7d5",
              "type": "Smart Contract - Oracle"
            },
            {
              "target": "https://etherscan.io/address/0xbC96510Af0F9Dd7bAE8Deb6ac3DAed2f18cF5757",
              "type": "Smart Contract - Staking Contract"
            },
            {
              "target": "https://etherscan.io/address/0x0F9F39F6AABc86c457901df26275c72de32B26A4",
              "type": "Smart Contract - WETH Vault"
            },
            {
              "target": "https://etherscan.io/address/0xFC1cF3DC111981eA4372E91f437581524f3721be",
              "type": "Smart Contract - USDC Vault"
            },
            {
              "target": "https://etherscan.io/address/0xbA3CfEa6514cF5acdDeff3167Df0b7a4337751bc",
              "type": "Smart Contract - USDT Vault"
            },
            {
              "target": "https://etherscan.io/address/0x5dC81697fC0b3752c1277D260064374E95E8A18b",
              "type": "Smart Contract - DAI Vault"
            },
            {
              "target": "https://etherscan.io/address/0xafB6c80FF3CFDaE5977Df0196F3d35Cd65e3c7a3",
              "type": "Smart Contract - UNI-V2 Vault"
            },
            {
              "target": "https://etherscan.io/address/0x254E72eFF41eD2fF82d58EC9C170E173950798eC",
              "type": "Smart Contract - StrategyONXankr "
            },
            {
              "target": "https://etherscan.io/address/0xb85E3Fe36a6084985E66d704ABD4be4EA51e06cE",
              "type": "Smart Contract - ankrETH Vault"
            },
            {
              "target": "https://etherscan.io/address/0xcF0c55931629E90b222Ec9c72a9f035eCbC7E835",
              "type": "Smart Contract - TPT Vault"
            },
            {
              "target": "https://etherscan.io/address/0x08BbAcD158BbaDdD3BC94aCEA2828ceDe204e45C",
              "type": "Smart Contract - CalculationsStoneVaults"
            },
            {
              "target": "https://etherscan.io/address/0x0BDa979A606112cB21797F6fF12Aa8EA5b779e14 ",
              "type": "Smart Contract - CalculationsSushiswap"
            }
          ],
          "mdx": {
            "program_overview": "Stone Protocol is the only yield management protocol focused on creating ‘Rock Solid Yield’ for all users in the DeFi ecosystem. The focus is developing innovative asset pools that maximizes return while keeping liquidity provider capital as safe and secure as possible. In doing so, we aim to create a robust passive income platform to meet the needs of the DeFi industry.\n\nStone is positioned as an anchor yield aggregation platform, and will eventually evolve to become a cross-chain asset aggregation and yield marketplace with the inclusion of multi-chain Proof of Stake (“POS”) assets such as Eth2.0 and Polkadot. With the inclusion of yield-bearing assets introduced by Stone, we will further create yield-based derivatives such as ‘Risk Optimized’ Yield indices and other derivatives.\n\nFor more information about Stone DeFi, please visit [https://www.stonedefi.io/](https://www.stonedefi.io/).  \n\nThis bug bounty program is focused on their smart contracts and website and is focused on preventing the following impacts:\n\n  - Functional bugs\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance role take over\n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data\n  - Deletion of user data\n  - Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll Critical bug reports are required to have a PoC and a suggestion for a fix in order to receive a reward. All web/app bug reports are required to have a PoC.\n\nVulnerabilities involving any bug already disclosed [in this audit](https://github.com/peckshield/publications/blob/master/audit_reports/PeckShield-Audit-Report-StoneV2-v1.0.pdf) are not eligible for a reward.\n\nThe payouts for Critical and High smart contract bug reports are in a fixed STN amount. The USD amounts are only provided as an estimate.\n\nIt is a known issue that the oracle price float reflects that profit was lost, but in reality it doesn’t cause any profit loss, as it only affects the user interface. Bug reports mentioning this are considered as out-of-scope.\n\nPayouts are handled by the __Stone DeFi__ team directly and are denominated in USD. However, payouts are done in __STN__ for Critical and High smart contract vulnerabilities. Payouts for all other bug reports are done in __STN__ or __USDT__, at the discretion of the team.",
            "assets_body": "The GitHub for Stone DeFi can be found at [https://github.com/stonedefi](https://github.com/stonedefi). However, only the things listed in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 2 hours\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Incorrect polling actions\n\n__Web/App__\n\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n  - Feature Requests\n  - Best Practices\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "gerowallet",
          "project": "GeroWallet",
          "date": "2021-08-06T11:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3pwhSRguB1VotAmj7ej7bO/278feaf90251df480880e49c60725123/GeroWallet.jpeg",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://gerowallet.io",
              "type": "Web/App"
            },
            {
              "target": "https://chrome.google.com/webstore/detail/gerowallet/bgpipimickeadkjlklgciifhnalhdjhe/",
              "type": "Web/App - Extension"
            }
          ],
          "mdx": {
            "program_overview": "GeroWallet is an all-in-one DeFi app designed to be a powerful instrument for experienced and new users alike. GeroWallet delivers a redefined UX by focusing on a user-centric design. Our product features a built-in multi-functional toolkit that boasts inter-chain and cross-chain swapping, liquidity lock, staking, swapping, and fiat on/off ramp functionality.\n\nFor more information about GeroWallet, please visit [https://gerowallet.io/](https://gerowallet.io/).   \n\nThe bug bounty program covers its Website and Chrome Extension and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Theft of any funds / tokens / nfts \n  - Leak of seed phrase\n  - Manipulating the user to send funds within the wallet\n  - Man in the middle attacks that lead to financial loss\n  - XSS/CSRF with financial loss as a result\n  - Loss of any fiat amount when user will be using on/off ramp services",
            "rewards_body": "Rewards are distributed for critical vulnerabilities only, defined as vulnerabilities that lead __directly__ to a financial loss for users. \n\nAll bug reports must come with a PoC demonstrating direct financial impact in order to be accepted.\n\nBug reports that do not contain a vulnerability that leads to a direct loss of funds are not accepted in this bug bounty program. Additionally, any vulnerability that involves social engineering is not in-scope. \n\nPayouts are handled by the __GeroWallet__ team directly and are denominated in USD. Payouts are done in __$GERO__.",
            "assets_body": "Backend Services hosted in AWS are out of scope unless there is a vulnerability that can lead to loss of client’s funds or something equivalent.\n\nThe GeroWallet Chrome Extension is in scope. However, anything else around the Google domain is not in scope. The link is only provided as a means to access the extension. \n\nUntil August 12, 2021, access to the GeroWallet Chrome Extension (which is the second Asset link listed in the above Asset table) requires email access. In order to request access, please email chris@gerowallet.io, and access will be provided. However, all bug reports must be submitted on Immunefi.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Web/App__\n\n  - Thefts and freezing of principal of any amount\n  - Theft of any funds / tokens / nfts \n  - Leak of seed phrase\n  - Manipulating the user to send funds within the wallet\n  - Man in the middle attacks\n  - XSS/CSRF with financial loss as a result \n  - Loss of any fiat amount when user will be using on/off ramp services",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types. However, they are only accepted if they result in an accepted impact.\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking \n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)"
          }
        },
        {
          "id": "ascendex",
          "project": "AscendEX",
          "date": "2021-07-14T12:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5YxnE52GlEj05xNjUF9yoj/20c8e427816b0fc01331457e09959904/AscendEx.jpeg",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000 - USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $1,000 - USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $200 - USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $50 - USD $200"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://asdx.io",
              "type": "Website"
            },
            {
              "target": "https://ascendex.com",
              "type": "Website"
            },
            {
              "target": "https://asdxstatic.oss-cn-shanghai.aliyuncs.com/app/android/ascendex.apk",
              "type": "App - Android"
            },
            {
              "target": "https://apps.apple.com/us/app/ascendex-bitmax/id1463917147",
              "type": "App - iOS"
            }
          ],
          "mdx": {
            "program_overview": "Built by a group of Wall Street quant trading veterans, AscendEX is a leading digital asset trading platform with a comprehensive suite of products to meet the needs of even the most sophisticated institutional trading counterparties. AscendEX's robust cash, margin, and derivative trading products rank amongst the most liquid and actively traded in the industry with average daily trade volume >$400mm from a diverse global user base of retail and institutional traders from over 200 countries.\nFor more information about AscendEX, please visit their website at [https://ascendex.com/](https://ascendex.com/). \n\nThe bug bounty program covers its website and is focused on the prevention of:\n\n  - Theft of user deposits\n  - Governance activity disruption\n  - Website goes down\n  - Leak of user data",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nBug reports must come with the following in order to be considered for a reward:\n\nProof of Concept (PoC) - All bug reports\nSuggestions for a fix - Critical, High, and Medium reports only \n\nUnder this bug bounty program, anything involving KYC data theft or leakage is considered as Critical. Additionally, anything involving user or company asset loss is also considered as Critical.\n\nThe USD 20 000 reward for critical vulnerabilities is only applicable if KYC data is stolen in an unencrypted format. All other critical vulnerabilities are capped at USD 5 000.\n\nThe final reward amount is determined by the __AscendEX__ team by the exploitability of the vulnerability as well as its potential economic impact. \n\nPayouts are handled by the AscendEX team directly and are denominated in USD. All payouts are done in __USDT__.\n",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the websites assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nThe links to the apps are provided as a way to find the apps themselves. Vulnerabilities on the websites that host the apps are not in-scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Websites and Apps__\n\n  - User asset loss\n  - Loss of company assets\n  - Business logic loopholes\n  - Leak of user data\n  - Deletion of user data\n  - Redirected funds by address modification\n  - Site goes down\n  - Accessing sensitive pages without authorization\n  - Injection of text \n  - Users spoofing other users\n  - Shell access on server",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they have a resulting impact that is listed as in-scope:\n\n__Websites and Apps__\n\n    - Remote Code Execution\n    - Trusting trust/dependency vulnerabilities\n    - Vertical Privilege Escalation\n    - XML External Entities Injection\n    - SQL Injection\n    - LFI/RFI\n    - Horizontal Privilege Escalation\n    - Stored XSS\n    - Reflective XSS with impact\n    - CSRF with impact\n    - Direct object reference\n    - Internal SSRF\n    - Session fixation\n    - Insecure Deserialization\n    - DOM XSS\n    - SSL misconfigurations\n    - SSL/TLS issues (weak crypto, improper setup)\n    - URL redirect\n    - Clickjacking (must be accompanied with PoC)\n    - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "saffronfinance",
          "project": "Saffron Finance",
          "date": "2021-04-27T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/aGYYJxwNrpYj6wpiMZoZP/4a820bdccdae590749ec7ed73a5110a7/Saffron.png",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,250"
            },
            {
              "level": "low",
              "payout": "USD $500"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://saffron-ui.web.app",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Saffron Finance is a decentralized protocol that acts as a yield optimizer for liquidity providers – it was first announced through a Medium article by a group of anonymous developers and was later launched on the Ethereum main net on 1 November 2020. Liquidity pools in Saffron Finance collect deposited base assets from liquidity providers and deploy them onto lending platforms to earn interest. However, unlike other yield aggregators, Saffron Finance aims to differentiate itself through the introduction of tranches.\n\nOne of the biggest issues that yield farming pools face is the effects of impermanent loss. Liquidity providers may lose out on value when the market price of their deposited assets is lower than when it was initially deposited. Through tranches, Saffron Finance aims to provide better exposure to yield farmers and give them the option to select portfolios based on their preferred risk appetite.\n\nSaffron Finance acts as an intermediary between liquidity providers and lending protocols. Through adaptors, the Saffron Finance protocol will automatically deploy its liquidity pools to the highest-yielding lending protocol at a given interval. Liquidity providers may supply Saffron Finance’s liquidity pools at any given time but are only able to withdraw their assets and interest earnings at the end of every epoch. Each epoch lasts for 2 weeks.\n\nThe bug bounty program covers its web app and is focused on Web3 / javascript exploits or vulnerabilities that can cause an attack on metamask and users’ data or funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nThe bug bounty program for web/app bugs covers only client-side vulnerabilities in the app as loaded by the browser. This excludes any vulnerabilities affecting CDNs, servers, DNS, or other project-controlled infrastructure.\n\nPayouts are handled by the __Saffron Finance__ team directly and are denominated in __USD__. Payouts are done in __USDC__.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nThe bug bounty program for the assets in scope in this table covers only client-side vulnerabilities in the app as loaded by the browser. This excludes any vulnerabilities affecting CDNs, servers, DNS, or other project-controlled infrastructure.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n__The following activities are prohibited by bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "unionfinance",
          "project": "Union Finance",
          "date": "2021-04-26T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4qCiIjG8zzpsQEnfJoHKjH/3ad991dadfa447c4344da68ad12bc9a6/UNN_logo.jpeg",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $250"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/UNIONProtocolFoundation/OC-Protection/tree/main/contracts",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/UNIONProtocolFoundation/SC-Protection",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "UNION is a technology platform that combines bundled protection and a liquid secondary market with a multi-token model. DeFi participants manage their multi-layer risks across smart contracts and protocols in one scalable system. UNION decreases the barriers to entry for retail users and lays the foundation for institutional investors.\n\nFor more information about Union Finance, please visit <Link href=\"https://www.unn.finance/\">https://www.unn.finance/</Link>. \n\nThe bug bounty program covers its smart contracts and is focused on the \nprevention of loss of user funds, denial of service, and data breaches, data leaks, and flashloan-related vulnerabilities.\n\n**KYC is only required for payouts above USD 5 000.**",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Union Finance team** directly and are denominated \nin **USD**. However, payouts are competed in **USDT**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "mtpelerin",
          "project": "Mt Pelerin",
          "date": "2021-02-08T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6tsDyr3ikdFL8rLa53IcOZ/e249b3d566eee170e2b73a37d6666f2f/Mtpelerin-logo.png",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Mobile App",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/access/Operator.sol",
              "type": "Smart Contract - Operator.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/access/Roles.sol",
              "type": "Smart Contract - Roles.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/exchange/Exchange.sol",
              "type": "Smart Contract - Exchange.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/gsn_1/GsnUtils.sol",
              "type": "Smart Contract - GsnUtils.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/gsn_1/IRelayHub.sol",
              "type": "Smart Contract - IRelayHub.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/gsn_1/IRelayRecipient.sol",
              "type": "Smart Contract - IRelayRecipient.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/gsn_1/LibBytes.sol",
              "type": "Smart Contract - LibBytes.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/gsn_1/RelayRecipient.sol",
              "type": "Smart Contract - RelayRecipient.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IAdministrable.sol",
              "type": "Smart Contract - IAdministrable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IBulkTransferable.sol",
              "type": "Smart Contract - IBulkTransferable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IComplianceRegistry.sol",
              "type": "Smart Contract - IComplianceRegistry.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IContactable.sol",
              "type": "Smart Contract - IContactable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IERC20Detailed.sol",
              "type": "Smart Contract - IERC20Detailed.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IERC2612.sol",
              "type": "Smart Contract - IERC2612.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IERC3009.sol",
              "type": "Smart Contract - IERC3009.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IExchange.sol",
              "type": "Smart Contract - IExchange.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IGovernable.sol",
              "type": "Smart Contract - IGovernable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IMintable.sol",
              "type": "Smart Contract - IMintable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IOwnable.sol",
              "type": "Smart Contract - IOwnable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IPriceOracle.sol",
              "type": "Smart Contract - IPriceOracle.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IPriceable.sol",
              "type": "Smart Contract - IPriceable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IProcessor.sol",
              "type": "Smart Contract - IProcessor.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IRulable.sol",
              "type": "Smart Contract - IRulable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IRule.sol",
              "type": "Smart Contract - IRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IRuleEngine.sol",
              "type": "Smart Contract - IRuleEngine.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/ISeizable.sol",
              "type": "Smart Contract - ISeizable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/ISuppliable.sol",
              "type": "Smart Contract - ISuppliable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/interfaces/IVotable.sol",
              "type": "Smart Contract - IVotable.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/lib/ds-math/math.sol",
              "type": "Smart Contract - math.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/ComplianceRegistry.sol",
              "type": "Smart Contract - ComplianceRegistry.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/PriceOracle.sol",
              "type": "Smart Contract - PriceOracle.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/Processor.sol",
              "type": "Smart Contract - Processor.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/operating/RuleEngine.sol",
              "type": "Smart Contract - RuleEngine.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/paymaster/TargetMethodPaymaster.sol",
              "type": "Smart Contract - TargetMethodPaymaster.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/AddressThresholdLockRule.sol",
              "type": "Smart Contract - AddressThresholdLockRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/GlobalFreezeRule.sol",
              "type": "Smart Contract - GlobalFreezeRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/HardTransferLimitRule.sol",
              "type": "Smart Contract - HardTransferLimitRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/MaxTransferRule.sol",
              "type": "Smart Contract - MaxTransferRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/MinTransferRule.sol",
              "type": "Smart Contract - MinTransferRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/SoftTransferLimitRule.sol",
              "type": "Smart Contract - SoftTransferLimitRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserAttributeValidToRule.sol",
              "type": "Smart Contract - UserAttributeValidToRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserFreezeRule.sol",
              "type": "Smart Contract - UserFreezeRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdBothRule.sol",
              "type": "Smart Contract - UserKycThresholdBothRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdFromRule.sol",
              "type": "Smart Contract - UserKycThresholdFromRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserKycThresholdToRule.sol",
              "type": "Smart Contract - UserKycThresholdToRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/UserValidRule.sol",
              "type": "Smart Contract - UserValidRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/YesNoRule.sol",
              "type": "Smart Contract - YesNoRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/YesNoUpdateRule.sol",
              "type": "Smart Contract - YesNoUpdateRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/rules/abstract/AbstractRule.sol",
              "type": "Smart Contract - AbstractRule.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/sale/TokenSale.sol",
              "type": "Smart Contract - TokenSale.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/BondBridgeToken.sol",
              "type": "Smart Contract - BondBridgeToken.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/BridgeToken.sol",
              "type": "Smart Contract - BridgeToken.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/CoinBridgeToken.sol",
              "type": "Smart Contract - CoinBridgeToken.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/ShareBridgeToken.sol",
              "type": "Smart Contract - ShareBridgeToken.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/abstract/BridgeERC20.sol",
              "type": "Smart Contract - BridgeERC20.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/abstract/SeizableBridgeERC20.sol",
              "type": "Smart Contract - SeizableBridgeERC20.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/utils/ECRecover.sol",
              "type": "Smart Contract - ECRecover.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/token/utils/EIP712.sol",
              "type": "Smart Contract - EIP712.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/utils/OtcSupportMethods.sol",
              "type": "Smart Contract - OtcSupportMethods.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/utils/ProofOfAddress.sol",
              "type": "Smart Contract - ProofOfAddress.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/utils/TokenDispenserQueue.sol",
              "type": "Smart Contract - TokenDispenserQueue.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/utils/WEth.sol",
              "type": "Smart Contract - WEth.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/voting/ShareholderMeeting.sol",
              "type": "Smart Contract - ShareholderMeeting.sol"
            },
            {
              "target": "https://github.com/MtPelerin/bridge-v2/blob/master/contracts/voting/VotingSession.sol",
              "type": "Smart Contract - VotingSession.sol"
            },
            {
              "target": "https://www.mtpelerin.com",
              "type": "Website"
            },
            {
              "target": "https://apps.apple.com/us/app/bridge-wallet/id1481859680",
              "type": "App"
            },
            {
              "target": "https://play.google.com/store/apps/details?id=com.mtpelerin.bridge",
              "type": "App"
            }
          ],
          "mdx": {
            "program_overview": "Mt Pelerin is a Swiss fintech company specialized in solutions to bridge the\ncrypto economy with traditional banking and finance. Today it offers two key\nproducts: Bridge Protocol, an open-source ERC20 asset tokenization platform\nwith related tech, financial, legal and compliance services, as well as Bridge\nWallet, a non-custodial Bitcoin and Ethereum mobile wallet with live\ncrypto-fiat on/off-ramp.\n\nThe bug bounty program is focused around its smart contracts, mobile apps and\nwebsite, and is mostly aimed at addressing serious security issues directly\naffecting fund safety and user data protection.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nFor this bug bounty program, the following website and app exploit effects\nhave their levels as follows:\n\n- Deletion of site data -> **Medium**\n- Leaking user data -> **Critical**\n- Dumping, but not modifying database -> **Critical**\n\nAdditionally, all web and app bug reports without proof of concept exploits with\ndemonstrated impact, as well as recommendations for new features, are not\naccepted.\n\nPayouts are handled by **Mt Pelerin** directly and are estimated in\n**USD**. However, payouts are done in **ETH, BTC, USDT, USDC, or DAI**.",
            "assets_body": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n\n__Web/App__\n\n  - Data theft\n  - Data deletion",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types as long as they result in an impact listed in the Impacts in Scope section:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Requests for new features\n- Bugs without proof-of-concept exploits showing impact\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "charm",
          "project": "Charm",
          "date": "2021-02-05T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3wLJpDE64CBLT8SP0YvlRg/f68df675ba08048c9def0018e1f7e022/Charm-logo.png",
          "maximum_reward": 20000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $20,000"
            },
            {
              "level": "high",
              "payout": "USD $7,500"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $750"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": "https://github.com/charmfinance/bug-bounty",
          "assets_in_scope": [
            {
              "target": "https://github.com/charmfinance/alpha-vaults-contracts",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Charm is a breakthrough Automatic Market Maker (AMM) that can create liquid options on the blockchain. By applying a prediction market scoring rule to the options world, they have invented a new model for options creation, pricing, trading, and settlement. This model powers a new type of AMM that can offer cheap options and higher profits for traders, and lower risk for liquidity providers (LPs).\n\nIncluded in this bug bounty program are Cube Tokens and Alpha Vaults, both projects of the Charm team.\n\nThe bug bounty program is focused around its smart contracts used in its products and is mostly concerned with the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the **Charm** team directly and are denominated in\n**USD**. However, payouts are done in **ETH or USDC**.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "autoshark",
          "project": "AutoShark",
          "date": "2021-09-16T00:00+02:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3FNZIyqEfhqYbCbYZ9TrxG/90ba1565fda1795fd256cc420b51b25f/AutoShark-logo.jpg",
          "maximum_reward": 15000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $15,000"
            },
            {
              "level": "high",
              "payout": "USD $10,000"
            },
            {
              "level": "medium",
              "payout": "USD $5,000"
            },
            {
              "level": "low",
              "payout": "USD $2,500"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $800"
            },
            {
              "level": "high",
              "payout": "USD $400"
            },
            {
              "level": "medium",
              "payout": "USD $200"
            },
            {
              "level": "low",
              "payout": "USD $100"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://bscscan.com/address/0xe759Dd4B9f99392Be64f1050a6A8018f73B53a13",
              "type": "Smart Contract - Fins Factory"
            },
            {
              "target": "https://bscscan.com/address/0x5a6f424DCD1908803BE9192fA672aFCa36416709#code",
              "type": "Smart Contract - Fins Router"
            },
            {
              "target": "https://bscscan.com/address/0xd1F1B7b2A0940c63437C0829f0AE8A23c8B1051A",
              "type": "Smart Contract - Oracle"
            },
            {
              "target": "https://bscscan.com/address/0xb817f55bff9e8a3bF50601fc089cd439d3480084",
              "type": "Smart Contract - Swap Fee Reward (Proxy)"
            },
            {
              "target": "https://bscscan.com/address/0x5f9cf289df23bc93855bb0e3adfd7b40c2ef11c1",
              "type": "Smart Contract - Swap Fee Reward (Implementation)"
            },
            {
              "target": "https://autoshark.finance/ ",
              "type": "Web/App"
            },
            {
              "target": "https://old.autoshark.finance/ ",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "AutoShark Finance is the 1st Cross-Chain Hybrid AMM and Yield Optimizer, offering unparalleled access to farming opportunities through the use of superior yield strategies and auto-compounding vaults. \n\nThe goal of AutoShark is to capture interest through our aggregation of decentralized exchanges swap systems and yield optimization.\n\nFor more information about AutoShark, please visit [https://autoshark.finance/](https://autoshark.finance/). \n\nThis bug bounty program is focused on their smart contracts and website and is focused on preventing the following impacts:\n\n- Thefts and freezing of principal of any amount\n- Thefts and freezing of unclaimed yield of any amount\n- Theft of governance funds \n- Governance activity disruption\n- Website goes down\n- Leak of user data\n- Deletion of user data\n- Access to sensitive pages without authorization",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nA PoC and a suggestion for a fix is required for High, and Critical bug reports. Low and Medium web/app bug reports only require a PoC. \n\nPayouts are handled by the __AutoShark__ team directly and are denominated in USD. However, payouts are done in __JAWS__, __BNB__, __BUSD__, and other stablecoins on the Binance Smart Chain (BSC) network, at the discretion of the team.",
            "assets_body": "All smart contracts of AutoShark can be found at [https://github.com/autoshark-finance/](https://github.com/autoshark-finance/). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n- Thefts and freezing of principal of any amount\n- Thefts and freezing of unclaimed yield of any amount\n- Theft of governance funds\n- Governance activity disruption\n- Flashloan attacks\n- Oracle Manipulation attacks\n- Reentrancy attacks\n\n__Web/App__\n\n- Website goes down\n- Leak of user data\n- Deletion of user data\n- Access to sensitive pages without authorization",
            "prioritized_vulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__Websites and Apps__\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack traces\n- Vulnerabilities used to enumerate or confirm the existence of users or tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\nThe following activities are prohibited by this bug bounty program:\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third-party systems and applications (e.g., browser extensions) as well as websites (e.g., SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "pods",
          "project": "Pods",
          "date": "2021-04-28T00:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2HNgiB8jmI9Wq4dU3C3bu/565e3bd8490b35e7fd054cd850b34b15/Pods-logo.jpg",
          "maximum_reward": 15000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "Up to USD $15,000"
            },
            {
              "level": "high",
              "payout": "Up to USD $7,500"
            },
            {
              "level": "medium",
              "payout": "Up to USD $4,000"
            },
            {
              "level": "low",
              "payout": "Up to USD $1,000"
            },
            {
              "level": "none",
              "payout": "Up to USD $500"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/pods-finance/contracts/tree/master",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Pods is a decentralized non-custodial options protocol that allows users to create calls and or puts and trade them in the Options AMM. Pods was implemented in a system of non-upgradable smart contracts in the Ethereum Blockchain.\n\nCurrently, users can participate:\n- as sellers or buyers of either puts or calls in the Options Instrument and or \n- as liquidity providers in the Options AMM.\n\nFor more information about Pods, please visit [https://docs.pods.finance/](https://docs.pods.finance/) \n\nThe bug bounty program is focused around its smart contracts and is mostly concerned with the loss of user funds.\n",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nBest practices critiques are not accepted under this program. This “Very Low/None” level is for bugs that may be considered “Low” but have an even lower impact level.\n\nThe likelihood of exploitability is also taken into consideration in the determination of the final payout amount based on the severity of the bug reported according to the table below: \n\n| | Very Low/None | Low | Medium | High | Critical |\n| :-- | :-- | :-- | :-- | :-- | :-: |\n| Almost Certain | $500 | $1,000 | $4,000 | $7,500 | $15,000 |\n| Likely | $250 | $500 | $1,000 | $4,000 | $7,500 | \n| Possible | $100 | $250 | $500 | $1,000 | $4,000 |\n| Unlikely  | $100 | $100 | $250 | $500 | $1,000 |\n| Almost Possible | $100 | $100 | $100 | $250 | $500 |\n\nPayouts are handled by the __Pods Finance__ team directly and are denominated in __USD__. However, payouts are done in __DAI__ or __USDC__.\n",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__The following activities are prohibited by bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "tropykus",
          "project": "Tropykus",
          "date": "2022-02-15T20:30-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/frRDEAhO4DfybaPr6wME3/2db8653b2e79d00c6bbb63324f5a62ac/Favicon_Tropykus_64_Dark.png",
          "maximum_reward": 10000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $6,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://explorer.rsk.co/address/0x2cd424965dcc0693a39024d23c4e25abe531796a",
              "type": "Smart Contract - MultiSigWallet"
            },
            {
              "target": "https://explorer.rsk.co/address/0x7fa5500c978e89660bf3bd0526f8f7164de0b38f",
              "type": "Smart Contract - PriceOracleProxy"
            },
            {
              "target": "https://explorer.rsk.co/address/0x21f459c7880a75455e8be7172ca58e24f9b4116f",
              "type": "Smart Contract - Unitroller"
            },
            {
              "target": "https://explorer.rsk.co/address/0x10d6d9cfacd77ec2f3b422a4ad7face58197c2e9",
              "type": "Smart Contract - ComptrollerG6"
            },
            {
              "target": "https://explorer.rsk.co/address/0x972a21c61b436354c0f35836195d7b67f54e482c",
              "type": "Smart Contract - SAToracle"
            },
            {
              "target": "https://explorer.rsk.co/address/0x9e71719a26349d0c4b44a80d9a8710dd998f0f75",
              "type": "Smart Contract - SATadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0x546046960a43f0f4ab0863a0305c40833454728a",
              "type": "Smart Contract - SATmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0xfa7bf65eba46f0533426ba39890356f996edf58a",
              "type": "Smart Contract - SATcompanion"
            },
            {
              "target": "https://explorer.rsk.co/address/0xd2ec53e8dd00d204d3d9313af5474eb9f5188ef6",
              "type": "Smart Contract - kSAT"
            },
            {
              "target": "https://explorer.rsk.co/address/0x972a21c61b436354c0f35836195d7b67f54e482c",
              "type": "Smart Contract - RBTCoracle"
            },
            {
              "target": "https://explorer.rsk.co/address/0xa8a0d3399caa1d0084df56df2c19258e3f6dd442",
              "type": "Smart Contract - RBTCadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0x6be15b7e8c783264feeede54a9fbdc2fb4bbefe6",
              "type": "Smart Contract - RBTCmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0x0aeadb9d4c6a80462a47e87e76e487fa8b9a37d7",
              "type": "Smart Contract - kRBTC"
            },
            {
              "target": "https://explorer.rsk.co/address/0xdb76a2816def5dd206ba0a8a50b7b57f414ef17d",
              "type": "Smart Contract - RIForacle"
            },
            {
              "target": "https://explorer.rsk.co/address/0xe5b18e6aba40379abfddb0e703eb53a1175bc7c0",
              "type": "Smart Contract - RIFadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0x1181bf85ed10154613250c33048429c3d10dd14a",
              "type": "Smart Contract - RIFmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0x3134b7fbfca5db217eca523eab1941452cf35163",
              "type": "Smart Contract - kRIF"
            },
            {
              "target": "https://explorer.rsk.co/address/0xb1a98c46f9b9ce9f4b26d5a44f8a70375e06ac02",
              "type": "Smart Contract - DOCoracle"
            },
            {
              "target": "https://explorer.rsk.co/address/0x583b8ca8d5e21633da4582f6b4b8b574d5e47772",
              "type": "Smart Contract - DOCadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0xa7999889e2615370a2448b26b9cc6f0ddebbb5b1",
              "type": "Smart Contract - DOCmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0x544eb90e766b405134b3b3f62b6b4c23fcd5fda2",
              "type": "Smart Contract - kDOC"
            },
            {
              "target": "https://explorer.rsk.co/address/0x45c907727ed15bd901560ff439293e6b89de877e",
              "type": "Smart Contract - USDToracle"
            },
            {
              "target": "https://explorer.rsk.co/address/0x5eb5749f789e5753f5cf260439b6b7da6bf591bf",
              "type": "Smart Contract - USDTadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0xedc2c5655173f314d506c797f38ca0336b140864",
              "type": "Smart Contract - USDTmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0xedaefc6b596ed38d712100976969975a37c84464",
              "type": "Smart Contract - kUSDT"
            },
            {
              "target": "https://explorer.rsk.co/address/0x45c907727ed15bd901560ff439293e6b89de877e",
              "type": "Smart Contract - XUSDoracle"
            },
            {
              "target": "https://explorer.rsk.co/address/0x1751085d50a010455ebc7971312e715b5ca618c9",
              "type": "Smart Contract - XUSDadapter"
            },
            {
              "target": "https://explorer.rsk.co/address/0xa4e5064c8bf8045d0d7d98934f9db21099f8e755",
              "type": "Smart Contract - XUSDmodel"
            },
            {
              "target": "https://explorer.rsk.co/address/0xe17551201eeaefbd625ca4fb48d49c06e7ac064b",
              "type": "Smart Contract - kXUSD"
            },
            {
              "target": "https://explorer.rsk.co/address/0xfc5e99a649a5a44fc45d4f1dcca292f9b69f5b65",
              "type": "Smart Contract - TropykusLens"
            }
          ],
          "mdx": {
            "program_overview": "Tropykus is a decentralized lending protocol on top of Bitcoin (i.e. second layer compatible with the Ethereum Virtual Machine EVM: RSK) inspired by Compound and Aave protocols. These lending protocols provide a decentralized marketplace for suppliers and borrowers holding crypto assets. \n\nTropykus provides alternative deposit and lending smart contracts for users with different interests in terms of return expectations and investment horizons, with similar risk management features of other lending protocols (e.g. collateralization, liquidation incentives). It also provides markets and accepts as collateral alternative crypto assets such as rBTC, RIF, rUSDT, DOC.\n\nThe main objective of Tropykus is to provide better financial services to everyday people in developing countries by creating a bridge between the needs of these users and the advantages of DeFi.\n\nFor more information about Tropykus, please visit [https://tropykus.com/](https://tropykus.com/). \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Informational issues",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Critical/High/Medium smart contract bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required. All bug reports must also come with a suggestion for a fix to be considered for a reward. \n\nPayouts are handled by the __Tropykus__ team directly and are denominated in USD. However, payouts are done in __USD__, __USDC__, __XUSD__, __BTC__, __RBTC__ or __DOC__, at the discretion of the team.",
            "assets_body": "All smart contracts of Tropykus can be found at [https://github.com/Tropykus/protocol](https://github.com/Tropykus/protocol). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for at least 8 hours\n  - Smart contract gas drainage\n  - Block stuffing without fund transfers blocked\n  - Smart contract fails to deliver promised returns, but doesn’t lose value\n  - Informational issues.\n",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "nsurenetwork",
          "project": "Nsure Network",
          "date": "2021-04-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/64u4xkLmZdjsWs7AuAdmuY/51265264e559fdba2d31a13bd24df89d/Nsurenetwork-logo.jpg",
          "maximum_reward": 10000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $2,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $2,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $0"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://app.nsure.network",
              "type": "Web/App"
            },
            {
              "target": "https://github.com/nsure-tech/core-contracts",
              "type": "Smart contract"
            }
          ],
          "mdx": {
            "program_overview": "Nsure is an open insurance platform for Open Finance. The project borrows the\nidea of Lloyd’s London, a market place to trade insurance risks, where premiums\nare determined by a Dynamic Pricing Model. Capital mining will be implemented\nto secure capital required to back the risks at any point of time. A 3-phase\ncrowd voting mechanism is used to ensure every claim is handled professionally.\n\nFor more information about Nsure, please read the <Link href=\"https://nsure.network/Nsure_WP_0.7.pdf\">Nsure whitepaper</Link>.\n\nThe bug bounty program covers its smart contracts and apps and is focused on\nthe prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nFor high and critical web and app bugs to be accepted, a PoC with demonstrated\nexploit must be submitted, not just a potential breach, otherwise, this would\nqualify as Medium or get categorized as a best practices recommendation, which\ndoes not come with a reward.\n\nPayouts are handled by the **Nsure Network** team directly and are denominated\nin USD.  Payouts are done in **USDC**.",
            "assets_body": "Only web/app vulnerabilities that directly affect this asset are accepted\nwithin the bug bounty program. All others are out-of-scope.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - including flash loan attacks\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Web/App Vulnerabilities:**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking (must be accompanied with PoC)\n- Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n**Smart Contracts and Blockchain**\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n- Feature requests\n- Best practices\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "moneyonchain",
          "project": "Money on Chain",
          "date": "2021-01-14T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1OsrVnYDfPNy8a3qWntuk4/9d26ef24ff56bf9ff6c71a6c1e90c84d/MoneyonChain-logo.png",
          "maximum_reward": 10000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $10,000"
            },
            {
              "level": "high",
              "payout": "USD $5,000"
            },
            {
              "level": "medium",
              "payout": "USD $3,000"
            },
            {
              "level": "low",
              "payout": "USD $1,000"
            },
            {
              "level": "none",
              "payout": "USD $0"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/money-on-chain/main-RBTC-contract",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/money-on-chain/price-feeder",
              "type": "App"
            },
            {
              "target": "https://github.com/money-on-chain/py_Moneyonchain",
              "type": "API"
            },
            {
              "target": "https://github.com/money-on-chain/RDOC-Contract",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/money-on-chain/Areopagus-Governance",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/money-on-chain/sc-moc-decentralized-exchange",
              "type": "Smart contract"
            },
            {
              "target": "https://github.com/money-on-chain/Amphiraos-Oracle",
              "type": "Oracle"
            }
          ],
          "mdx": {
            "program_overview": "Money On Chain brings Bitcoin to mass adoption. To that end, it offers\nsolutions to meet the needs of different types of users: a fully\nBitcoin-collateralized stablecoin (DoC), a Bitcoin on steroids conceived for\nthe long term bitcoin holder (BPro), and a dizzying bitcoiner option for lovers\nof leveraged trading (BTCx). All this, without requiring the delivery of\nprivate keys. To make this possible, we developed a unique\nmathematical-financial model with proven robustness, even in extreme market\nsituations. Money On Chain - Bringing Bitcoin into the mainstream.\n\nMoney on Chain is interested in securing its smart contracts, oracle, and price\nfeeder app and is primarily interested in preventing the loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nThe final payout amount may be affected by the exploitability of the\nvulnerability. Payouts are handled by **Money on Chain** directly and are\ndenominated in **USD**. However, payouts are done in **DOC**\n(Bitcoin-collateralized stablecoin).",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Smart Contracts/Blockchain:**\n\n- Re-entrancy\n- Logic errors\n  - Including user authentication errors\n- Solidity/EVM details not considered\n  - Including integer over-/under-flow\n  - Including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - Including composability vulnerabilities\n- Oracle failure/manipulation\n- Novel governance attacks\n- Economic/financial attacks\n  - Including flash loan attacks\n- Congestion and scalability\n  - Including running out of gas\n  - Including block stuffing\n  - Including susceptibility to frontrunning\n- Consensus failures\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces\n\n**Websites and Apps:**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Smart Contracts/Blockchain**\n\n- Incorrect data supplied by third party oracles\n- Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following vulnerabilities are not sought after for website bug reports:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "ultiarena",
          "project": "Ulti Arena",
          "date": "2021-09-02T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4fhULQZqj4mFgWXUQOO0eP/147ef778ed91b05274207e57cf671b7a/Ultiarena__1_.jpeg",
          "maximum_reward": 5000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $3,000"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            },
            {
              "level": "low",
              "payout": "USD $500"
            },
            {
              "level": "none",
              "payout": "USD $100"
            }
          ],
          "web_rewards": [],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/ultiarena/ulti-coin/blob/master/contracts/UltiCoin.sol",
              "type": "Smart Contract - UltiCoin.sol"
            },
            {
              "target": "https://github.com/ultiarena/ulti-coin/blob/master/contracts/extensions/TokensLiquify.sol",
              "type": "Smart Contract - TokensLiquify.sol"
            },
            {
              "target": "https://bscscan.com/address/0x42BFE4A3E023f2C90aEBFfbd9B667599Fa38514F#code",
              "type": "Smart Contract - UltiCoin"
            }
          ],
          "mdx": {
            "program_overview": "Ulti Arena (ULTI) is a community and NFT marketplace for Gaming Artists, Developers, Freelancers and Professionals that was shaped with the goal of empowering artists and creating opportunities for success. It’s the place for artists to connect with each other and showcase their work with friends, future projects and for gaming enthusiasts to enjoy latest creations from their favourite makers and developers.\n\nFor more information about Ulti Arena, please visit [https://ultiarena.com/](https://ultiarena.com/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Loss of user funds(principal) by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nA suggestion for a fix is required for all vulnerabilities in order to be considered for a reward. Additionally, all bug reports Medium or higher are required to have a PoC in order to receive a reward. \n\nAll vulnerabilities that have been [disclosed in an audit report](https://www.certik.org/projects/ultiarena) are ineligible for a reward. \n\nPayouts are handled by the __Ulti Arena__ team directly and are denominated in USD. However, payouts are done in __BNB__, __USDT__, or __ETH__, at the discretion of the team.",
            "assets_body": "Once Ulti Arena has launched on mainnet, the testnet smart contracts will be replaced with the ones on mainnet. \n\nAll smart contracts of Ulti Arena can be found at [https://github.com/ultiarena/ulti-coin](https://github.com/ultiarena/ulti-coin). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds(principal) by freezing or theft\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "ballena",
          "project": "ballena.io",
          "date": "2021-08-19T08:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/GKwI1WMyLCdMmBYwuR6Fq/f5e36ef5063bef79ce2898ebca357411/Ballena.jpeg",
          "maximum_reward": 5000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $5,000"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $100"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/token/BALLEv2.sol",
              "type": "Smart Contract - BALLEv2.sol "
            },
            {
              "target": "https://bscscan.com/address/0x9714c04b34e6300964161c3ac37b86451e79152d",
              "type": "Smart Contract - BALLEv2"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/vaults/BalleMaster.sol",
              "type": "Smart Contract - BalleMaster.sol"
            },
            {
              "target": "https://bscscan.com/address/0x1105bd1d8c952c24e73f6866177fad7bfb35e13d",
              "type": "Smart Contract - BalleMaster"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/treasury/BalleTreasury.sol",
              "type": "Smart Contract - BalleTreasury.sol "
            },
            {
              "target": "https://bscscan.com/address/0xe81e27be6b4171601e1c055959db2940655c544d",
              "type": "Smart Contract - BalleTreasury"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/strategies/StratPancakeLpV3.sol",
              "type": "Smart Contract - StratPancakeLpV3.sol"
            },
            {
              "target": "https://bscscan.com/address/0xe28fa263b54e9f5befb39695bb728562a3c51237",
              "type": "Smart Contract - StratPancakeLpV3"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/strategies/StratBalleLpV1.sol",
              "type": "Smart Contract - StratBalleLpV1.sol"
            },
            {
              "target": "https://bscscan.com/address/0x7365359652cc0bad7fe8649c6e7f2ea5d159e147",
              "type": "Smart Contract - StratBalleLpV1"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/strategies/StratPancakeCakeV2.sol",
              "type": "Smart Contract - StratPancakeCakeV2.sol"
            },
            {
              "target": "https://bscscan.com/address/0x8bd237e94ce369f6d78c7bb08b90efc5c6f27a4f",
              "type": "Smart Contract - StratPancakeCakeV2"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/staking/BalleStakingPoolV1.sol",
              "type": "Smart Contract - BalleStakingPoolV1.sol"
            },
            {
              "target": "https://bscscan.com/address/0x09d5040cc85a93a72e99b1a39c48801467c5b732",
              "type": "Smart Contract - BalleStakingPoolV1"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/staking/BalleRewarder.sol",
              "type": "Smart Contract - BalleRewarder.sol "
            },
            {
              "target": "https://bscscan.com/address/0x8129278a7842711328af6204567162247b9583e5",
              "type": "Smart Contract - BalleRewarder"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/staking/BalleRewardFund.sol",
              "type": "Smart Contract - BalleRewardFund.sol"
            },
            {
              "target": "https://bscscan.com/address/0x11e4ecf13e3b4ccb246ae538d28ecceb28e28833",
              "type": "Smart Contract - BalleRewardFund"
            },
            {
              "target": "https://github.com/ballena-io/ballena-protocol/blob/master/contracts/staking/BalleRewardDistribution.sol",
              "type": "Smart Contract - BalleRewardDistribution.sol"
            },
            {
              "target": "https://bscscan.com/address/0x660b4ae287ba28d96539cb4d76f05ddfe22604e9",
              "type": "Smart Contract - BalleRewardDistribution"
            }
          ],
          "mdx": {
            "program_overview": "ballena.io is a DAO-driven yield optimizer app on the BSC which automates investment strategies over yield farming in the DeFi ecosystem allowing its users to gain revenue through the compound interest technique. It offers auto-compounding vaults and a native and governance token BALLE that you can deposit in the staking pool to get the platform benefits and participate in DAO governance votes.\n\nBALLE maximum supply is 40 000 tokens and no more minting is possible. For more information about ballena.io, please visit [https://ballena.io/](https://ballena.io/).    \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nPayouts are handled by the __ballena.io__ team directly and are denominated in USD. However, payouts are done in __BALLE__.",
            "assets_body": "Further information about the smart contracts in ballena.io can be found at [https://github.com/ballena-io/ballena-protocol](https://github.com/ballena-io/ballena-protocol). However, only those in the assets in scope table are considered as in-scope of the bug bounty program.\n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Theft of unclaimed yield\n  - Freezing of unclaimed yield\n  - Temporary freezing of funds for any amount of time\n  - Unable to call smart contract\n  - Smart contract gas drainage\n  - Smart contract fails to deliver promised returns\n  - Vote manipulation\n  - Includes the inability to vote with staked tokens on the governance pool\n  - Incorrect polling actions",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n    - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "polymath",
          "project": "Polymath",
          "date": "2021-04-22T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5X5hB368sZb952sV0JMboJ/2e04f017bf81ee3daa9cc833d34b607b/Polymath-logo.jpg",
          "maximum_reward": 5000,
          "is_external": false,
          "is_special": true,
          "technologies": [
            "Smart Contract"
          ],
          "kyc": true,
          "verification_link": null,
          "mdx": {
            "program_overview": "Polymath makes it easy to create, issue, and manage tokens on the \nblockchain. Over 200 tokens have been deployed using our Ethereum-based \nsolution and we are now in the midst of launching mainnet of Polymesh, an \ninstitutional-grade blockchain built specifically for regulated assets. It \nstreamlines antiquated processes and opens the door to new financial \ninstruments by solving the inherent challenges with public infrastructure \naround identity, compliance, confidentiality, and governance.  \n\nFor more detailed information about Polymath, you can read their <Link href=\"https://uploads-ssl.webflow.com/5d4f4a138ab9f5b34b0a69fd/5f21cafa8b364179f4dc40cb_Polymesh%20Whitepaper.pdf?hsCtaTracking=adaab77c-3239-4eb2-acfc-1df8d74a3b5c%7C2e8b9a9f-dc00-47e9-ac04-81db81ada3f3\">whitepaper</Link>.   \n\nPolymesh currently powers their testnet, and the aim of the Bug Bounty \nprogram is to find bugs in Polymesh, to make it more robust.\n\nThis is focused around its smart contracts and is mostly concerned with the \nloss of user funds and the denial of service.\n\n### Rewards by Threat Level\n\nRewards are distributed according to the impact of the vulnerability severity with the following categorization:\n\n**Critical**: Transaction manipulation/censorship, double-spending, POLY/POLYX minting, unauthorized token minting, staled or undermined consensus/network, governance censorship or compromise, manipulation of signing keys or master keys to gain unauthorised access to an identity.\n\n**High**: Ability to use an extrinsic panic unexpectedly without proper handling, block the on-chain governance system from it’s expected behaviour, block other users from their ability to perform expected tasks (griefing).\n\n**Medium**: Ability to put chain data into an unexpected state which otherwise doesn’t cause any disruption, forcing the emission of events which are incorrect.\n\n**Low**: DoS’ing of the operator nodes, incorrect data being logged through events.\n\n**Smart Contracts and Blockchain**\n\n| Level | |\n|:- | :--: |\n| Critical | Up to USD $3,000 - USD $5,000 |\n| High | Up to USD $1,000 - USD $3,000 |\n| Medium | Up to USD $250 - $USD 750 |\n| Low | Up to USD $100 - USD $300 |\n| None | USD $0 |\n\nVariables considered for rewards include: the quality of the issue description, \nthe instructions for reproducibility, and the quality of the fix (if included).\n\nPayouts are handled by the **Polymath** team directly and are denominated in \n**USD**. However, payouts are done in **USDC**.\n\n### Assets in Scope\n\n| Target | Type |\n|:- | :--: |\n| <https://github.com/PolymathNetwork/Polymesh/releases/tag/v3.0.0> | Repository |\n| <https://github.com/PolymathNetwork/cryptography/tree/da06e1db8b6d907dd81bd63c5f26e18c77836081/confidential-identity> | Repository |\n\nIn addition to these listed above, the following repositories, sources and \nsites are explicitly out-of-scope of the Program:\n\n- https://github.com/PolymathNetwork/Polymesh/tree/develop/pallets/contracts\n- https://github.com/PolymathNetwork/Polymesh/tree/develop/contracts\n- No “test” code - i.e. javascript integration tests or unit tests are in scope.\n\n### Exclusions \n\nWhile researching, please refrain from:\n\n- Denial of service in general and of Public RPC nodes\n- Attacks that consume a substantial amount of Kovan ETH, Kovan POLY or Testnet POLYX and which would otherwise be cost-prohibitive on mainnet\n- Spamming\n- Social engineering (including phishing) of Polymath staff\n- Any physical attempts against Polymath property or data centres\n\n### Rules\n\n- [https://developers.polymesh.live/community/bug-bounty#submitting-a-bug](https://developers.polymesh.live/community/bug-bounty#submitting-a-bug)\n- [https://developers.polymesh.live/community/bug-bounty-rules#2-how-to-participate](https://developers.polymesh.live/community/bug-bounty-rules#2-how-to-participate)\n"
          }
        },
        {
          "id": "fuel",
          "project": "Fuel",
          "date": "2020-12-02T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5d2FjslN8lRLGfkvmo1Wlx/4e78940a1d330481a317ed7d2eff268b/Fuel-logo.png",
          "maximum_reward": 5000,
          "is_external": false,
          "is_special": true,
          "technologies": [
            "Smart Contract"
          ],
          "kyc": false,
          "verification_link": null,
          "mdx": {
            "program_overview": "Fuel is an L2 optimistic rollup provider and technology stack, designed to\nenable complex financial operations on the Ethereum blockchain, and across\nblockchains.\n\nFuel is interested in securing their smart contracts, which can be found at\n<https://github.com/FuelLabs/fuel>. Primary areas of concern are around anything that causes loss of funds, consensus failures, and other onchain code vulnerabilities.\n\n**Total Bounty Pool:** USD 10,000\n\n### Rewards by Threat Level\n\nRewards are distributed according to the exploitability level of the\nvulnerability and its impact based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). The payout for a bug report is first calculated by the consequence the vulnerability causes with its respective percentage reward multiplied by the total bounty pool. Afterwards,\nthe exploitability level and its respective percentage is multiplied by that\namount to determine the final payout for the bug report.\n\n| Consequence | |\n|:- | :--: |\n| Loss of contract funds | 50% |\n| Consensus failure in the protocol | 40% |\n| DoS amplification | 10% |\n| Denial of service | 10% |\n| No known exploit - best practices | 1% |\n\n| Exploitability | |\n|:- | :--: |\n| No access | 100% |\n| Ordinary access | 100% |\n| Moderator-approved access | 20% |\n| Privileged access (non-root) | 10% |\n| Physical access | 1% |\n\nPayouts are handled by Fuel directly and are denominated in USD.\n\n### Prioritized Vulnerabilities\n\nWe are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n- Re-entrancy related vulnerabilities\n- EVM related code misunderstandings or issues\n- Deposit failures\n- Overflows or underflows\n\n### Out of Scope & Rules\n\n**The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Minor vulnerabilities requiring unusual / unlikely user actions\n- Bugs or vulnerabilities relating to the fuel.sh website\n\n**The following activities are prohibited by bug bounty program:**\n\n- Exploiting bugs on public mainnet and testnets that could result in loss of\n  funds or consensus failure"
          }
        },
        {
          "id": "bitswift",
          "project": "Bitswift Cash",
          "date": "2021-02-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1ta3BCV18CvuAgafn5MnQ2/39078c6321c8262348d6ed652829ba86/Bitswift-logo.jpg",
          "maximum_reward": 4515,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "up to CAD $5,710 (~USD $4,515)"
            }
          ],
          "kyc": false,
          "verification_link": "https://bitswiftcash.zendesk.com/hc/en-us/articles/360056549711-Bitswift-Bug-Bounty",
          "assets_in_scope": [
            {
              "target": "http://bitswift.cash/",
              "type": "Website"
            }
          ],
          "mdx": {
            "program_overview": "Focused on business applications, Bitswift comes with a community and support\nnetwork of tech pros that have been working with blockchain since its\ninception. However, Bitswift is more than just a blockchain and token. Bitswift\nis composed of community, companies, and customers from all sectors including\nreal estate, healthcare, governance, supply chain management, retail, and much\nmore.\n\nBitswift.cash allows people to conveniently participate in the token economy,\nproviding an accessible interface interconnecting blockchains, leaving the user\nin control of their own personal digital information.\n\nThe bug bounty program is focused around bugs that relate to the ability to\nexploit the deposit, withdrawal, and claim processes on <Link href=\"https://bitswift.cash\">https://bitswift.cash</Link>.  Bitswift seeks to\nensure its claim, deposit, and withdrawal systems are functioning as intended\nand cannot be exploited to any user's advantage.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical-level payouts are only applicable when the vulnerability results in \nusers being able to withdraw more than they are supposed to be able to or \nwhen their accounts are credited more than the actual deposit or when the \nuser is able to claim more crypto than the stipulated time period \nallows. Otherwise, they may be classified as High.\n\nAdditionally, all web and app bug reports without proof of concept exploits with \ndemonstrated impact, as well as recommendations for new features, are not accepted. \n\nThere is currently a total bounty pool of CAD $5,710. Because of this, if\nthere are valid bug reports covering different vulnerabilities submitted where\nthe total reward amount is greater than the remaining bounty pool amount, the\nappropriate reward levels will be provided on a first-come-first-served basis,\nand the total bounty pool will be used to reward reports on this priority\nsystem until exhausted. This amount will be updated as rewards are paid out and\nrewards will adjust accordingly.\n\nPayouts are handled by **Bitswift** directly. The USD amount published is just\nan estimate. **In the event of a discrepancy between the CAD and USD exchange\nrates with the estimate provided on this page, the prevailing CAD rate will\napply.** However, payouts are done in **BTC, ETH, CASH or BITS.** Before any\npayout, the bug must first be verified and validated by Bitswift.",
            "assets_body": null,
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the\nfollowing types:\n\n**Web/App:**\n\n- Remote Code Execution\n- Trusting trust/dependency vulnerabilities\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- SQL Injection\n- LFI/RFI\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Direct object reference\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Direct object reference\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect\n- Clickjacking\n- Misleading Unicode text (e.g. using right to left override characters)\n- Coercing the application to display/return specific text to other users",
            "out_of_scope_and_rules": "**The following vulnerabilities are excluded from the rewards for this bug\nbounty program:**\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty\n- Multi accounts\n\n## Other Notes \n\nInstructions for replication of the bug must be provided in order for\nconsideration."
          }
        },
        {
          "id": "cryptotreasures",
          "project": "Crypto Treasures",
          "date": "2021-11-25T00:00+00:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2bDPXK2RnYAYgwo228mot7/b2a6ea1ddd11fc54431ee9760c49009f/Crypto_Treasures_logo.jpeg",
          "maximum_reward": 3000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $3,000"
            },
            {
              "level": "high",
              "payout": "USD $1,500"
            },
            {
              "level": "medium",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://rinkeby.etherscan.io/address/0xdfc666757fd571043ebdacca238c61eaf2520f82",
              "type": "Smart Contract - CryptoTreasure"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x23b248b05bcdd55d367ad6640e2dda333181ba7b",
              "type": "Smart Contract - BoxBase"
            }
          ],
          "mdx": {
            "program_overview": "Crypto Treasures is an ERC721 token with additional features. It has the capacity of a box and is able to store other tokens (ETH, ERC20, ERC721 & ERC1155). The box has an access management system (lock and restrictions).\n\nIt also has a \"type\" which manages an ERC20 locking system to mint a crypto treasure.\n\nFor more information about Crypto Treasures, please visit [https://crypto-treasures.com/](https://crypto-treasures.com/).\n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n- Loss of user funds staked (principal) by freezing or theft",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nThe following vulnerabilities are not eligible for a reward:\n\n- Storing a box in a box prevent to withdraw tokens unless it’s sent back to a regular address\n- Storing a box in a box and vice-versa prevent for ever to withdraw tokens\n- Admin can specify a token id range for a type that overlap the range of another type\n- We consider the collision hash impossible",
            "assets_body": "All High and Critical Smart Contract bug reports require a suggestion for a fix to be eligible for a reward. \n\nPayouts are handled by the __Crypto Treasures__ team directly and are denominated in USD. However, payouts are done in __USDC__.\n\nAll smart contracts of Crypto Treasures can be found at [https://github.com/vrolland/cryptotreasure/tree/main/contracts](https://github.com/vrolland/cryptotreasure/tree/main/contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.\n\n### Impacts in Scope\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n- Loss of user funds staked (principal) by freezing or theft",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain __\n\n- Re-entrancy\n- Logic errors\n  - including user authentication errors\n- Solidity/EVM details not considered\n  - including integer over-/under-flow\n  - including rounding errors\n  - including unhandled exceptions\n- Trusting trust/dependency vulnerabilities\n  - including composability vulnerabilities\n- Congestion and scalability\n  - including running out of gas\n  - including block stuffing\n  - including susceptibility to frontrunning\n- Cryptography problems\n  - Signature malleability\n  - Susceptibility to replay attacks\n  - Weak randomness\n  - Weak encryption\n- Susceptibility to block timestamp manipulation\n- Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "__The following vulnerabilities are excluded from the rewards for this bug bounty program:__\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks requiring access to leaked keys/credentials\n- Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n- Incorrect data supplied by third party oracles\n  - Not to exclude oracle manipulation/flash loan attacks\n- Basic economic governance attacks (e.g. 51% attack)\n- Lack of liquidity\n- Best practice critiques\n- Sybil attacks\n\n__The following activities are prohibited by this bug bounty program:__\n\n- Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees and/or customers\n- Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "perifinance",
          "project": "PERI Finance",
          "date": "2021-06-16T08:30-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7rX49fi52YiTfVlQaXn61Y/178a92107e5b3812fd5b5fe311100391/Peri_Finance.jpeg",
          "maximum_reward": 3000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000 - USD $3,000"
            },
            {
              "level": "high",
              "payout": "USD $500 - USD $1,000"
            },
            {
              "level": "medium",
              "payout": "USD $300 - USD $500"
            },
            {
              "level": "low",
              "payout": "USD $100 - USD $300"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $500"
            },
            {
              "level": "high",
              "payout": "USD $300"
            },
            {
              "level": "medium",
              "payout": "USD $200"
            },
            {
              "level": "low",
              "payout": "USD $100"
            }
          ],
          "kyc": true,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://github.com/perifinance/peri-finance/tree/v0.0.1/contracts",
              "type": "Smart Contract"
            },
            {
              "target": "https://staking.peri.finance",
              "type": "Web/App"
            },
            {
              "target": "https://bscscan.com/address/0xB8Aa8820da9F999Ba3b3dbB7F08f07Cc1c8Fa933",
              "type": "Smart Contract - SafeDecimalMath "
            },
            {
              "target": "https://bscscan.com/address/0x1E21E50999890E093B3525DA158877ddBda6DdBb",
              "type": "Smart Contract - Math"
            },
            {
              "target": "https://bscscan.com/address/0x69Cda6A078E6cb0C55d1f4FEC6544fb4B24aA967",
              "type": "Smart Contract - AddressResolver"
            },
            {
              "target": "https://bscscan.com/address/0x23d2B65507066e1855E201DD1a7dd5c007ddA4b7",
              "type": "Smart Contract - ReadProxyAddressResolver"
            },
            {
              "target": "https://bscscan.com/address/0x036ec2Bc5352C66C0D56c2c42E1F4C09355a790f",
              "type": "Smart Contract - SystemSettings"
            },
            {
              "target": "https://bscscan.com/address/0x538e8e2157Db0487Df93D377438A45Cfa85a56c9",
              "type": "Smart Contract - SystemStatus"
            },
            {
              "target": "https://bscscan.com/address/0x4637f7bA92b8e9aD51D6ef3700c5515eDF77Ed51",
              "type": "Smart Contract - FlexibleStorage"
            },
            {
              "target": "https://bscscan.com/address/0xb49B7e0742EcB4240ffE91661d2A580677460b6A",
              "type": "Smart Contract - ProxyERC20"
            },
            {
              "target": "https://bscscan.com/address/0xfc45e2897f131FB087A9580D4b19AC0759766b49",
              "type": "Smart Contract - TokenStatePeriFinance"
            },
            {
              "target": "https://bscscan.com/address/0xC23bED9D432358835eAC41e060676a89C27f338e",
              "type": "Smart Contract - BlacklistManager"
            },
            {
              "target": "https://bscscan.com/address/0x80582c87c6b4Aec304B869aAB1cbD49799cF503e",
              "type": "Smart Contract - PeriFinance"
            },
            {
              "target": "https://bscscan.com/address/0x61D3949a1133B8c63Ce4Af9bb983A17fcc830F8C",
              "type": "Smart Contract - ExchangeRates"
            },
            {
              "target": "https://bscscan.com/address/0x843E7773A4cb3295Ed7f155d066286c64F5461F0",
              "type": "Smart Contract - RewardEscrow"
            },
            {
              "target": "https://bscscan.com/address/0xc39C550C94E65740e02Ea2ee80Ec41E12Ad95ff7",
              "type": "Smart Contract - RewardEscrowV2"
            },
            {
              "target": "https://bscscan.com/address/0x1b6443aDb80aDD024758177995A349Dd7bb2cce8",
              "type": "Smart Contract - PeriFinanceEscrow"
            },
            {
              "target": "https://bscscan.com/address/0x309f68fB3D924b4692C0b3624727005fcBB28ee6",
              "type": "Smart Contract - PeriFinanceState"
            },
            {
              "target": "https://bscscan.com/address/0x30e60BBeE52b3FEC980fE4C251D9c0747E8eb289",
              "type": "Smart Contract - ProxyFeePool"
            },
            {
              "target": "https://bscscan.com/address/0x4470e2536C1bfd051a9095d13EAa807293156110",
              "type": "Smart Contract - DelegateApprovalsEternalStorage"
            },
            {
              "target": "https://bscscan.com/address/0xaBC49411fa5852313533c674cacfeD1727B7b2CC",
              "type": "Smart Contract - DelegateApprovals"
            },
            {
              "target": "https://bscscan.com/address/0xB60A5ba4522207472e2d00339863518e1D337D97",
              "type": "Smart Contract - Liquidations"
            },
            {
              "target": "https://bscscan.com/address/0x87F87D2037035DA1eB41235C770019FDfDF76b9a",
              "type": "Smart Contract - EternalStorageLiquidations"
            },
            {
              "target": "https://bscscan.com/address/0x87F87D2037035DA1eB41235C770019FDfDF76b9a",
              "type": "Smart Contract - FeePoolEternalStorage"
            },
            {
              "target": "https://bscscan.com/address/0x8B6C385CF1c4479a3F13Eb05c4AaF0B9CD30c148",
              "type": "Smart Contract - FeePool"
            },
            {
              "target": "https://bscscan.com/address/0xD591DEC6b36C92CE54dcAeeDd9D3893BcafB0B90",
              "type": "Smart Contract - FeePoolState"
            },
            {
              "target": "https://bscscan.com/address/0x5c69Bf45A9dBfCdc0044eC66cdfFDCD44cd5F8f2",
              "type": "Smart Contract - RewardsDistribution"
            },
            {
              "target": "https://bscscan.com/address/0xa960A3FB10349637e0401547380d05DFeFbf60f8",
              "type": "Smart Contract - DebtCache"
            },
            {
              "target": "https://bscscan.com/address/0x88a00B3eD479aae3Bc88DcF11ef4396416C9Bd73",
              "type": "Smart Contract - Exchanger"
            },
            {
              "target": "https://bscscan.com/address/0xd338310445152159c6C3661465ae88BaD5A59F28",
              "type": "Smart Contract - ExchangeState"
            },
            {
              "target": "https://bscscan.com/address/0x0E9F9543d4317eA64211C41c292f1A26a9D98f0e",
              "type": "Smart Contract - Issuer"
            },
            {
              "target": "https://bscscan.com/address/0x32968b00565993c7ff66834273649Cd1b36dc605",
              "type": "Smart Contract - TradingRewards"
            },
            {
              "target": "https://bscscan.com/address/0x65BCe046253f7B644a062252E89a8C2337F08A3d",
              "type": "Smart Contract - EscrowChecker"
            },
            {
              "target": "https://bscscan.com/address/0x8104aE1843ecfE7c9dB330539e24e24555662356",
              "type": "Smart Contract - SupplySchedule"
            },
            {
              "target": "https://bscscan.com/address/0xA65780148dC6a36992D14A9c289de90aae3af1FB",
              "type": "Smart Contract - TokenStatepUSD"
            },
            {
              "target": "https://bscscan.com/address/0xc9363d559D2e6DCAc6955A00B47d28326e07Cf07",
              "type": "Smart Contract - ProxyERC20pUSD"
            },
            {
              "target": "https://bscscan.com/address/0xA40421ebb84F839FCc63891F19b5aBA4a59341E5",
              "type": "Smart Contract - PynthpUSD"
            },
            {
              "target": "https://bscscan.com/address/0x96E5c0b4644ab18A77AB2984f4CCDCDc56B62e14",
              "type": "Smart Contract - StakingState"
            },
            {
              "target": "https://bscscan.com/address/0x3f2827B9F763fd3586542dD8E044b752990C4c5f",
              "type": "Smart Contract - ExternalTokenStakeManager"
            },
            {
              "target": "https://bscscan.com/address/0x174bF91F02A2DC86B5d99C6789470C2449abF96f",
              "type": "Smart Contract - ExternalRateAggregator"
            },
            {
              "target": "https://bscscan.com/address/0x34022EDCfDbd272508e6Fb0Fe45A8Ca60e0D7B5e",
              "type": "Smart Contract - Depot"
            },
            {
              "target": "https://bscscan.com/address/0x04F0d2CCAFA1a6E58b7FdC14D0a33FE9786e7a00",
              "type": "Smart Contract - EtherCollateral"
            },
            {
              "target": "https://bscscan.com/address/0xEc27fF0ebc22542EFD389539C8a4d85c526ae101",
              "type": "Smart Contract - EtherCollateralpUSD"
            },
            {
              "target": "https://bscscan.com/address/0x138506b2f8e55D27350B90a666eDC02ea31030DF",
              "type": "Smart Contract - PeriFinanceBridgeToOptimism"
            },
            {
              "target": "https://bscscan.com/address/0x3AC1c936bb394EDf58261033fa9CD1696D896153",
              "type": "Smart Contract - PynthUtil"
            },
            {
              "target": "https://bscscan.com/address/0x5d3B69aaFB9E7F8B706eb5e4832b19D0f5dfDfE3",
              "type": "Smart Contract - DappMaintenance"
            },
            {
              "target": "https://bscscan.com/address/0x9052f2B0eFD030c73199572cb741E95f5a76c37c",
              "type": "Smart Contract - CollateralManagerState"
            },
            {
              "target": "https://bscscan.com/address/0xc2a8347D7Ad277aA1BF20fb444596c9215ba3794",
              "type": "Smart Contract - CollateralManager"
            },
            {
              "target": "https://bscscan.com/address/0x6535Ee237f3edf2509eB3053d1ABF91Ad2Fbd7b2",
              "type": "Smart Contract - CollateralStateEth"
            },
            {
              "target": "https://bscscan.com/address/0xDfDBeC8aa8B2d3a7b6a6324B09A555883a21969B",
              "type": "Smart Contract - CollateralEth"
            },
            {
              "target": "https://bscscan.com/address/0x19826d226761c2c58A44e0d4f23980C66Eb49843",
              "type": "Smart Contract - CollateralStateErc20"
            },
            {
              "target": "https://bscscan.com/address/0x39d76a9730Fa8A96F086EA17A2bB613699c511F5",
              "type": "Smart Contract - CollateralErc20"
            },
            {
              "target": "https://bscscan.com/address/0xd224907906c661F36399E32baF84790ccc2d811C",
              "type": "Smart Contract - CollateralStateShort"
            },
            {
              "target": "https://bscscan.com/address/0xAC86bF49356930558aDB3d26f9dbCFbCEb04337A",
              "type": "Smart Contract - CollateralShort"
            },
            {
              "target": "https://bscscan.com/address/0xCA4f304F58dF2231ef04E63d85C88A9D46d0ca94",
              "type": "Smart Contract - StakingRewardsPeriBnbPancakeSwap"
            }
          ],
          "mdx": {
            "program_overview": "PERI Finance is a decentralized cross-chain synthetic issuance and derivative exchange protocol that provides unlimited liquidity on the Polkadot network. It gives an opportunity to access a wide range of both traditional financial and crypto assets in the forms of leveraged and none-leveraged synthetic products. We empower you with lower GAS fees, speedy transactions, and ample security from front-running or flash loans.\n\nFor more information about PERI Finance, please visit [https://www.pynths.com/](https://www.pynths.com/).  \n\nThe bug bounty program covers its smart contracts and staking page and is focused on the prevention of loss of user funds.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nThe final decision of the reward, which is affected by the exploitability of the bug report, is done by the PERI Finance team. \n\nPayouts are handled by the __PERI Finance__ team directly and are denominated in USD. Payouts are done in __USDT__.",
            "assets_body": "Only web/app vulnerabilities that __directly__ affect the web/app assets listed in this table are accepted within the bug bounty program. All others are out-of-scope.\n\nUnder the GitHub link, only the smart contract vulnerabilities that affect the following processes are accepted and are eligible for a reward.\n\n - Staking PERI/USDC(Issue pUSD)\n - Unstaking PERI/USDC(burn Pynths)\n - Claiming(Inflationary Reward)\n\nAll testnet and mock smart contracts, even those that are around Staking, Unstaking, and Claiming, are considered as out-of-scope for this bug bounty program.",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "cryptokek",
          "project": "Cryptokek",
          "date": "2021-01-22T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6cU9YzJXHlJIcVEyCljx7g/917962488fa851083be98ce7518d1856/Cryptokek-logo.png",
          "maximum_reward": 3000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web"
          ],
          "blockchain_rewards": [],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $3,000"
            }
          ],
          "kyc": false,
          "verification_link": "https://cryptokek-com.medium.com/cryptokek-joins-forces-with-immunefi-to-deploy-a-bug-bounty-program-abcba06156fd",
          "assets_in_scope": [
            {
              "target": "https://keks.app/",
              "type": "App"
            },
            {
              "target": "https://api.keks.app/",
              "type": "API"
            }
          ],
          "mdx": {
            "program_overview": "Cryptokek is a cryptocurrency analytics toolbox that provides unique data\ninsights about cryptocurrencies. The focus of the Cryptokek bug bounty program\nis the API service at <Link href=\"https://api.keks.app/\">https://api.keks.app/</Link>\nand the application at <Link href=\"https://keks.app/\">https://keks.app/</Link>. ",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on\nthe <Link href=\"/severity-system/\">Immunefi Vulnerability Severity Classification System</Link>. This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical: Deletion of site data, XSS/CSRF, ACE\n\nPayouts are handled by **Cryptokek** directly. Payouts are denominated in\n**USD** and are paid in **KEK, ETH, or USDT/USDC (payments in currencies other\nthan KEK may result in reduced bounty amounts)**",
            "assets_body": "**Please note that <Link href=\"https://cryptokek.com/\">https://cryptokek.com/</Link>\nand its subdomains are *excluded* from the Cryptokek bug bounty program.**",
            "prioritized_vulnerabilities": "Cryptokek is especially interested in receiving and rewarding vulnerabilities\nof the following types:\n\n- DOS\n- XSS\n- CSRF\n\n**Websites and Apps**\n\n- Remote Code Execution\n- Vertical Privilege Escalation\n- XML External Entities Injection\n- Horizontal Privilege Escalation\n- Stored XSS\n- Reflective XSS with impact\n- CSRF\n- CSRF with impact\n- Internal SSRF\n- Session fixation\n- Insecure Deserialization\n- Path Traversal\n- DOM XSS\n- SSL misconfigurations\n- SSL/TLS issues (weak crypto, improper setup)\n- URL redirect",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty\nprogram:\n\n- Attacks that the reporter has already exploited themselves, leading to damage\n- Attacks that rely on social engineering\n- Attacks requiring access to leaked keys/credentials\n\n**Websites and Apps**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following vulnerabilities are not sought after for website bug reports:**\n\n- Theoretical vulnerabilities without any proof or demonstration\n- Content spoofing / Text injection issues\n- Self-XSS\n- Captcha bypass using OCR\n- CSRF with no security impact (logout CSRF, change language, etc.)\n- Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security\n  flags (such as “httponly”)\n- Server-side information disclosure such as IPs, server names, and most stack\n  traces\n- Vulnerabilities used to enumerate or confirm the existence of users or\n  tenants\n- Vulnerabilities requiring unlikely user actions\n- URL Redirects (unless combined with another vulnerability to produce a more\n  severe vulnerability)\n- Lack of SSL/TLS best practices\n- DDoS vulnerabilities\n- Attacks requiring privileged access from within the organization\n\n**The following activities are prohibited by bug bounty program:**\n\n- Any testing with mainnet or public testnet contracts; all testing should be\n  done on private testnets\n- Any testing with pricing oracles or third party smart contracts\n- Attempting phishing or other social engineering attacks against our employees\n  and/or customers\n- Any testing with third party systems and applications (e.g. browser\n  extensions) as well as websites (e.g. SSO providers, advertising networks)\n- Any denial of service attacks\n- Automated testing of services that generates significant amounts of traffic\n- Disassembly or reverse engineering of binaries for which source code is not\n  published, not including smart contract bytecode\n- Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "pillar",
          "project": "Pillar",
          "date": "2022-02-11T10:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1hUZjVntbdF15Wq74B7gzc/a9213709bc95dfd0bea562007cc136ea/Pillar_Logo.png",
          "maximum_reward": 1250,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,250"
            },
            {
              "level": "high",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://rinkeby.etherscan.io/address/0x3c5f6b3ea031fbd7a762c0b9df2c63fc263faa29",
              "type": "Smart Contract - PillarDAO staking contract"
            },
            {
              "target": "https://rinkeby.etherscan.io/address/0x316ac5cf04bb555da44c8b8f86dec05b56bbd718",
              "type": "Smart Contract - MembershipNFT"
            }
          ],
          "mdx": {
            "program_overview": "Pillar is the only community-run, multichain DeFi wallet with one address, low-to-no gas fees, and in-app curated insights to help you ‘learn to earn’. Pillar is one place for your tokens, NFTs, dApps and DeFi services. Easily connect to Ethereum, Polygon, xDai, Binance Smart Chain, and more.\n\nFor more information about Pillar, please visit [https://www.pillar.fi/](https://www.pillar.fi/).   \n\nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Loss of user funds staked (principal) by freezing or theft.\n  - Ability to mint membership NFTs without the corresponding stake of Pillar tokens.\n  - Withdrawing more funds than what is staked.\n  - Temporary freezing of funds for at least 1 day.\n  - Withdrawing of funds before the completion of staking term.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll bug reports must come with a PoC with an end-effect impacting an asset-in-scope in order to be considered for a reward. Explanations and statements are not accepted as PoC and code is required.\n\nPayouts are handled by the __Pillar__ team directly and are denominated in USD. However, payouts are done in __USDC__ (on Polygon).",
            "assets_body": "All smart contracts of Pillar can be found at [https://github.com/pillarwallet/pillar-dao-contracts](https://github.com/pillarwallet/pillar-dao-contracts). However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft.\n  - Ability to mint membership NFTs without the corresponding stake of Pillar tokens.\n  - Withdrawing more funds than what is staked.\n  - Temporary freezing of funds for at least 1 day.\n  - Withdrawing of funds before the completion of staking term.",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "cromax",
          "project": "CRO Max",
          "date": "2022-02-08T09:00-06:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7ioiq47B6QaN1N5GXz7D4G/a631cdb92be347c86d260d15a08a497d/CRO_Max_logo.jpeg",
          "maximum_reward": 1000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://cronoscan.com/address/0x1985127d1B21af04d09a69Cdcb1dD33fd8961e9c#code",
              "type": "Smart Contract - CRO Max"
            }
          ],
          "mdx": {
            "program_overview": "CRO Max Token is a Crypto.com CRC20 Token that uses proof of staking under DeFi. \n\nWe can create utility in the form of passive income by utilizing staking pools to help our investors yield high % returns on their staked investments & and via Tokenomics from volume trades of CROMAX Token.\n\nFor more information about CRO Max, please visit [https://cromax.io](https://cromax.io). \nThis bug bounty program is focused on their smart contracts and is focused on preventing:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount\n  - Theft of governance funds \n  - Governance activity disruption",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit. \n\nAll Smart Contract bug reports require a suggestion for a fix to be eligible for a reward.\n\nAll vulnerabilities marked in the [CoinTool security review](https://drive.google.com/file/d/1a3t3P-jbc5fMigRnGw0noTPf9yGXKmuS/view?usp=sharing) are not eligible for a reward.\n\nPayouts are handled by the __CRO Max__ team directly and are denominated in USD. However, payouts are done in __CRO__.",
            "assets_body": "All smart contracts of CRO Max can be found at https://github.com/Cromaxtoken/code. However, only those in the Assets in Scope table are considered as in-scope of the bug bounty program.",
            "prioritized_vulnerabilities": "__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts/Blockchain__\n\n  - Loss of user funds staked (principal) by freezing or theft\n  - Loss of governance funds\n  - Governance vote manipulation",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n  - Centralization risks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "nuggies",
          "project": "Nuggies",
          "date": "2021-08-11T09:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5FAdIU9aIDB3JOW0DV0QDK/ad0a545186e863e98163331e467c7680/Nuggies__1_.png",
          "maximum_reward": 1000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            },
            {
              "level": "high",
              "payout": "USD $200"
            },
            {
              "level": "medium",
              "payout": "USD $50"
            }
          ],
          "web_rewards": [],
          "kyc": false,
          "verification_link": null,
          "assets_in_scope": [
            {
              "target": "https://etherscan.io/address/0x000000004a434312bfcbb119fa7bbdf7169fdc56#code",
              "type": "Smart Contract"
            }
          ],
          "mdx": {
            "program_overview": "Nuggies is a DeFi project currently in alpha with an autocompounding vault. Currently, they have this feature available for ALCX. \n\nFor more information about Nuggies, please visit [https://www.nuggies.fi/](https://www.nuggies.fi/). \n\nThe bug bounty program covers its smart contracts and is focused on preventing the following impacts:\n\n  - Thefts and freezing of principal of any amount\n  - Thefts and freezing of unclaimed yield of any amount",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-updated/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nCritical bug reports must come with a PoC.\n\nThe team is aware of cases where the strategist fee /or gas fee is changed while there are pending rewards, resulting in the pending rewards potentially not being divided perfectly. This is out of scope of the bug bounty program as this can be mitigated by always changing fees when harvest is called.\n\nPayouts are handled by the __Nuggies__ team directly and are denominated in USD. Payouts are done in __ETH__.",
            "assets_body": "All contracts can be found at [https://github.com/nuggiesfinance/platform](https://github.com/nuggiesfinance/platform). However, only the contracts listed in the table are counted as within the scope of the bug bounty program. \n\n__Impacts in Scope__\n\nOnly the following impacts are accepted within this bug bounty program. All other impacts are not considered as in-scope, even if they affect something in the assets in scope table.\n\n__Smart Contracts__\n\nLoss of user funds staked (principal) by freezing or theft\nTheft of unclaimed yield\nFreezing of unclaimed yield\nUnable to call smart contract\nSmart contract fails to deliver promised returns\nSmart contract gas drainage\nTemporary freezing of funds of any amount of time\n",
            "prioritized_vulnerabilities": "We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\nThe following activities are prohibited by this bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty\n"
          }
        },
        {
          "id": "dorafactory",
          "project": "Dora Factory",
          "date": "2021-05-25T02:00-05:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/48fHS96zpg2EqM4nBVCWIb/61704b738652b9e48569f9296136aa67/DoraFactory.svg",
          "maximum_reward": 1000,
          "is_external": false,
          "is_special": false,
          "technologies": [
            "Web",
            "Smart Contract"
          ],
          "blockchain_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            },
            {
              "level": "high",
              "payout": "USD $800"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $200"
            }
          ],
          "web_rewards": [
            {
              "level": "Critical",
              "payout": "USD $1,000"
            },
            {
              "level": "high",
              "payout": "USD $600"
            },
            {
              "level": "medium",
              "payout": "USD $500"
            },
            {
              "level": "low",
              "payout": "USD $200"
            }
          ],
          "kyc": true,
          "verification_link": "https://github.com/DoraFactory/DoraID/blob/master/bugbounty.md",
          "assets_in_scope": [
            {
              "target": "https://github.com/DoraFactory/DoraID/tree/master/src/contract",
              "type": "Smart Contract"
            },
            {
              "target": "https://testnet.bscscan.com/address/0x22cc3f3db9255b6b228a859dc55156f840733139",
              "type": "Smart Contract"
            },
            {
              "target": "https://github.com/DoraFactory/DoraID",
              "type": "Web/App"
            },
            {
              "target": "https://dorafactory.github.io/DoraID/",
              "type": "Web/App"
            }
          ],
          "mdx": {
            "program_overview": "Dora Factory is a DAO-as-a-Service infrastructure for on-chain governance and open-source ventures. It offers key pallets such as quadratic funding, curve auction, on-chain voting and incentive mechanisms to support open source blockchain ventures from global developer community and decentralized organizations in general.\n\n__DAO-as-a-Service__\n\nAt Dora Factory, curators can freely launch DAOs and add different pallets in an ad-hoc manner based on their specific needs.\n\n__Programmable Infrastructure__\n\nTo implement new features, useful pallets can be created by developers and added to Dora Factory parachain runtime or Dora Factory Ethereum layer-2 through governance. DAOs may manage functionalities by adding pallets based on their needs.\n\n__Powered by Developer Community__\n\nBacked by DoraHacks Global Hackathon Series and Hackerlink Grants, Dora Factory engages global hackers, cypherpunks and open source developers.\n\n__Infrastructure for On-Chain Governance__\n\nSpecialized in community governance, Dora Factory prioritizes features that optimize vital daily processes in DAO management, including quadratic voting, grants, bounties, funding management, fundraising schemes, and many more.\n\nFor more information about Dora Factory, please read the [Dora Factory whitepaper](https://dorafactory.medium.com/dora-factory-1-0-dao-as-a-service-infrastructure-for-on-chain-governance-and-open-source-ventures-6ad53688758f).\n\nThe bug bounty program covers its smart contracts and apps and is focused on the prevention of loss of user funds, frontend security risks, and other types of attacks.",
            "rewards_body": "Rewards are distributed according to the impact of the vulnerability based on the [Immunefi Vulnerability Severity Classification System](https://immunefi.com/severity-system/). This is a simplified 5-level scale, with separate scales for websites/apps and smart contracts/blockchains, encompassing everything from consequence of exploitation to privilege required to likelihood of a successful exploit.\n\nAll web and app bugs must come with a PoC in order to be accepted. All web and app bug reports without a PoC will be rejected with a request for a PoC.\n\nPayouts are handled by the __Dora Factory__ team directly and are denominated in __USD__. Payouts are done in __USDC__ or __DORA__.",
            "assets_body": null,
            "prioritized_vulnerabilities": " We are especially interested in receiving and rewarding vulnerabilities of the following types:\n\n__Smart Contracts and Blockchain__ \n\n  - Re-entrancy\n  - Logic errors\n    - including user authentication errors\n  - Solidity/EVM details not considered\n    - including integer over-/under-flow\n    - including rounding errors\n    - including unhandled exceptions\n  - Trusting trust/dependency vulnerabilities\n    - including composability vulnerabilities\n  - Oracle failure/manipulation\n  - Novel governance attacks\n  - Economic/financial attacks\n    - including flash loan attacks\n  - Congestion and scalability\n    - including running out of gas\n    - including block stuffing\n    - including susceptibility to frontrunning\n  - Consensus failures\n  - Cryptography problems\n    - Signature malleability\n    - Susceptibility to replay attacks\n    - Weak randomness\n    - Weak encryption\n  - Susceptibility to block timestamp manipulation\n  - Missing access controls / unprotected internal or debugging interfaces\n\n__Websites and Apps__\n\n  - Remote Code Execution\n  - Trusting trust/dependency vulnerabilities\n  - Vertical Privilege Escalation\n  - XML External Entities Injection\n  - SQL Injection\n  - LFI/RFI\n  - Horizontal Privilege Escalation\n  - Stored XSS\n  - Reflective XSS with impact\n  - CSRF with impact\n  - Direct object reference\n  - Internal SSRF\n  - Session fixation\n  - Insecure Deserialization\n  - DOM XSS\n  - SSL misconfigurations\n  - SSL/TLS issues (weak crypto, improper setup)\n  - URL redirect\n  - Clickjacking (must be accompanied with PoC)\n  - Misleading Unicode text (e.g. using right to left override characters)",
            "out_of_scope_and_rules": "The following vulnerabilities are excluded from the rewards for this bug bounty program:\n\n  - Attacks that the reporter has already exploited themselves, leading to damage\n  - Attacks requiring access to leaked keys/credentials\n  - Attacks requiring access to privileged addresses (governance, strategist)\n\n__Smart Contracts and Blockchain__\n\n  - Incorrect data supplied by third party oracles\n    - Not to exclude oracle manipulation/flash loan attacks\n  - Basic economic governance attacks (e.g. 51% attack)\n  - Lack of liquidity\n  - Best practice critiques\n  - Sybil attacks\n\n__Websites and Apps__\n\n  - Theoretical vulnerabilities without any proof or demonstration\n  - Content spoofing / Text injection issues\n  - Self-XSS\n  - Captcha bypass using OCR\n  - CSRF with no security impact (logout CSRF, change language, etc.)\n  - Missing HTTP Security Headers (such as X-FRAME-OPTIONS) or cookie security flags (such as “httponly”)\n  - Server-side information disclosure such as IPs, server names, and most stack traces\n  - Vulnerabilities used to enumerate or confirm the existence of users or tenants\n  - Vulnerabilities requiring unlikely user actions\n  - URL Redirects (unless combined with another vulnerability to produce a more severe vulnerability)\n  - Lack of SSL/TLS best practices\n  - DDoS vulnerabilities\n  - Attacks requiring privileged access from within the organization\n  - Feature requests\n  - Best practices\n\nThe following activities are prohibited by bug bounty program:\n\n  - Any testing with mainnet or public testnet contracts; all testing should be done on private testnets\n  - Any testing with pricing oracles or third party smart contracts\n  - Attempting phishing or other social engineering attacks against our employees and/or customers\n  - Any testing with third party systems and applications (e.g. browser extensions) as well as websites (e.g. SSO providers, advertising networks)\n  - Any denial of service attacks\n  - Automated testing of services that generates significant amounts of traffic\n  - Public disclosure of an unpatched vulnerability in an embargoed bounty"
          }
        },
        {
          "id": "7klevX1iR58pHaJ5GcCneZ",
          "project": "Solana",
          "date": "2018-08-17T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3uGnTrMIGxjFOili6YUK8s/738803c7334c41c566ec2a826782562f/Solana-logo.png",
          "maximum_reward": 2000000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/solana-labs/solana/security/policy",
          "technologies": []
        },
        {
          "id": "2S41Wv0wQTuG3fMmD2ZbTW",
          "project": "bZx",
          "date": "2021-04-01T00:00+02:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2DrENWsEmTgWY1hTVl0AXo/21d5a8f9f1ac098d95945e46ea27951e/bzx-logo.png",
          "maximum_reward": 350000,
          "is_external": true,
          "is_special": false,
          "url": "https://bzx.network/blog/bzxisback?utm_source=immunefi",
          "technologies": []
        },
        {
          "id": "3AWyaHQXgHXBy3BlJp00HS",
          "project": "Keep Network",
          "date": "2020-05-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3xTO8T5mZ4cgxSUZhk7Kix/7de30ee0aa037756aa90d9c7818a0c7c/Keep-Network-logo.png",
          "maximum_reward": 310000,
          "is_external": true,
          "is_special": false,
          "url": "https://blog.keep.network/an-update-on-tbtcs-launch-9403ad82970f",
          "technologies": []
        },
        {
          "id": "5OFU6aF4miY7Egs4Yzxh1h",
          "project": "Aave",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5ofPkWCy7zOvj071txSiFx/a75ed0ab1e7e1369494c328ce4f62ce7/aave-logo.png",
          "maximum_reward": 250000,
          "is_external": true,
          "is_special": false,
          "url": "https://aave.com/bug-bounty",
          "technologies": []
        },
        {
          "id": "6UiZ1zphi3DZmnsKBaRSVk",
          "project": "Monero",
          "date": "2020-01-18T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4krgOxUlTadHsXTV85WcBC/7f0fe5b7358ef9007dff6b9549632a94/monero-logo.png",
          "maximum_reward": 187500,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/monero-project/meta/blob/master/VULNERABILITY_RESPONSE_PROCESS.md",
          "technologies": []
        },
        {
          "id": "3Srkn0NuycVhXESBkvv0wI",
          "project": "Flexa",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6xLVzuPdc29ofWAU42C8f9/0b3f949d80b2a8cda3fd273b4eb9859f/Flexa-logo.jpeg",
          "maximum_reward": 150000,
          "is_external": true,
          "is_special": false,
          "url": "https://flexa.network/security/bug-bounty-program",
          "technologies": []
        },
        {
          "id": "7ERvU83E7Rld5qFUyeX8FB",
          "project": "Hermez",
          "date": "2021-01-08T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2oRL44XQcHBxMzll6miNLo/4151f4c178c4cd841d24b7ebc3add42f/hermez-logo.png",
          "maximum_reward": 120000,
          "is_external": true,
          "is_special": false,
          "url": "https://blog.hermez.io/hermez-bug-bounty-program/",
          "technologies": []
        },
        {
          "id": "48x4jgaViHUR5enfYReXQU",
          "project": "Growth DeFi GRO",
          "date": "2020-12-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1YNrjrOlkED1H6pgstUBL7/9e3908917b6f7b051992869103230882/GrowthDeFi-logo.png",
          "maximum_reward": 100000,
          "is_external": true,
          "is_special": false,
          "url": "https://growthdefi.medium.com/gtokens-bug-bounty-up-to-100-000-caa914fb765b",
          "technologies": []
        },
        {
          "id": "2xhxYj0OFvYqpFChwRx1pa",
          "project": "0x Protocol",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5LC64JsWX9CuJupiszb509/3728a48f1604e6fd5bff41fe0a563012/0x-logo.png",
          "maximum_reward": 100000,
          "is_external": true,
          "is_special": false,
          "url": "https://0x.org/docs/guides/bug-bounty-program",
          "technologies": []
        },
        {
          "id": "A941pFSVGuhTReSiCeGtJ",
          "project": "Binance",
          "date": "2020-10-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5xewaqJKYBcm7wxi9nA9XY/bbba8dbc66b7aaab7dc61326ffcaa395/Binance-logo.png",
          "maximum_reward": 100000,
          "is_external": true,
          "is_special": false,
          "url": "https://bugcrowd.com/binance",
          "technologies": []
        },
        {
          "id": "5bnppUndfuhpCphPnqAMFV",
          "project": "Tron",
          "date": "2018-05-31T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4GX2yvmlFyzjgt4R1jYPdS/6cf5752aeee94d50a216956f5c39bb54/Tron-logo.png",
          "maximum_reward": 100000,
          "is_external": true,
          "is_special": false,
          "url": "https://tron.network/findBug",
          "technologies": []
        },
        {
          "id": "4xwNxfFfiMcF6GWr5bl8EK",
          "project": "BL3P",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3swqZxUgNxLhUFJNeVJda7/774df590483edf07ad894337a70b1f30/BL3P-logo.jpg",
          "maximum_reward": 93000,
          "is_external": true,
          "is_special": false,
          "url": "https://bl3p.eu/bug-bounty",
          "technologies": []
        },
        {
          "id": "56VewMYEZjNyU0v12JjwCI",
          "project": "OpenSea",
          "date": "2022-01-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2CTheJ610iVEC8Vi87pgy4/eb572bef1b2f3a0d69aba8bf7ac572af/opensea.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/opensea",
          "technologies": []
        },
        {
          "id": "6wLpDuxzrxKbqHpW6T0q8f",
          "project": "Curve",
          "date": "2020-12-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1vFdc16WFqP9r8iapQ7mZb/91c8356d3620a89970d7c114ea1d06b6/curve-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.curve.fi/bugbounty",
          "technologies": []
        },
        {
          "id": "6kaTVjIse7QyAv78Wqj09B",
          "project": "Balancer",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4xNOiUegiJ19hPlHepiWoK/80a4b89d065d11bd6419cfe603d17589/balancer-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.balancer.finance/core-concepts/security/bounty",
          "technologies": []
        },
        {
          "id": "6GjfsuL2WUzzoX97AGvbtr",
          "project": "Eth2",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/41qqxvvBPtwXMVO6KIokcG/180668fe843961b259160958153a1fae/Eth2-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://ethereum.org/en/eth2/get-involved/bug-bounty/",
          "technologies": []
        },
        {
          "id": "6emYDEyWdiWv42qIDW4zLg",
          "project": "Centrifuge",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5BklmUVboiWDPBWAhzxQsJ/ad9edac2498ced70c8c0e2201089089e/Centrifuge-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://centrifuge.io/security",
          "technologies": []
        },
        {
          "id": "46AMYqbCZ2fEyEcelvhZpQ",
          "project": "MYKEY",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/UVa7mBtnpUIr4nxkjbuTq/3ce3d42e22122805f08385e867d8af36/MYKEY-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/mykey/index.html?utm_source=index&utm_medium=cpc&utm_campaign=mykey",
          "technologies": []
        },
        {
          "id": "3mMCdpSUT1anQBpqNaddQi",
          "project": "dydx",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6cXrvj6ET2jgFNiAm6etOe/c55b764d840ffa2b44cbd079eab1a719/dydx-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.dydx.exchange/#vulnerability-disclosure-policy",
          "technologies": []
        },
        {
          "id": "O6DuPb5beRSymH9uAlqc2",
          "project": "Dodoex",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5MuDmSEFzfcJ8XQogOel5f/c1ba2168693660ffea46e07c2eac7390/Dodoex-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://dodoex.github.io/docs/docs/bugBounty/",
          "technologies": []
        },
        {
          "id": "2tt2h0w6hue9iYxINAgolR",
          "project": "Argent",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6cMywF6BhSDhORxucm2F14/70ae8b21ac753d0c1303e7a41ae6f9fe/Argent-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.argent.xyz/argent-bug-bounty/",
          "technologies": []
        },
        {
          "id": "6gU2pv7zGbdkriGlMHB1lH",
          "project": "Yearn Finance External",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4Max7iB6UyFFDqz1BYXyWl/8d0703c7315280fdc3bf6015f9d052d1/yearn-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/iearn-finance/yearn-protocol/blob/develop/SECURITY.md",
          "technologies": []
        },
        {
          "id": "7rTiRJlR3ciK5L9MshYR8",
          "project": "Core Vault",
          "date": "2020-11-11T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5FfrF5CJ2roIs9zMyn8w61/8898318dbe746dcb61d0a35046ad5a42/Core-Vault-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/core-vault/cores-bug-bounty-program-3e2dfa01738f",
          "technologies": []
        },
        {
          "id": "1hnU0QFUENLnmB1GtOjAjK",
          "project": "Sogur",
          "date": "2020-10-20T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/28xFxKcesBFmLmwiSvfzWc/a5d5a0d42e97e1ed11ba4640ee73387e/Sogur-logo.jpg",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/SogurCurrency/Gitcoin-hackathon/issues/2",
          "technologies": []
        },
        {
          "id": "2LmeOc3fnI4aIMDgqSVtCH",
          "project": "Set Protocol",
          "date": "2020-09-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4MA5zIDclOYHqrbTkRoByK/357c678ef7b0dc8ce630a05eed9fcae2/set-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.tokensets.com/protocol/security/bugbounty",
          "technologies": []
        },
        {
          "id": "2blDcerXQf5tAiLUDZ05OF",
          "project": "Matic Network",
          "date": "2020-07-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/22LbLHzRLutFeZefQMqNtm/944a2c32205f6d3b283e73c13768acb5/Matic-Network-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://gitcoin.co/issue/maticnetwork/matic-bounties/14/100023264",
          "technologies": []
        },
        {
          "id": "2doMwXQksbba6ToWnRc7jg",
          "project": "Aragon Network Smart Contracts",
          "date": "2019-11-25T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3bgGlmb56XPjGWTVnAhnLV/d711778365e5ad8390df38686bbb88e4/nexus-mutual.svg",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://wiki.aragon.org/association/security/an_bug_bounty/",
          "technologies": []
        },
        {
          "id": "7ArVLbUQ2mM2vimHXuD8oO",
          "project": "TokenSets",
          "date": "2019-08-16T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7mp210ltz6mY31joF4IOwE/e33110db277b49c579016c37518abdfd/TokenSets-logo.jpg",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/set-protocol/introducing-the-set-protocol-bug-bounty-program-5790f16d2b8c",
          "technologies": []
        },
        {
          "id": "5YP50LzHUbxETtTBUunm7C",
          "project": "Aragon Client Smart Contracts",
          "date": "2018-11-17T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5fRUKImw4MJEffYIdYcraT/7615991e04edbfd6d0a41f494f14b301/aragon-logo.png",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://wiki.aragon.org/association/security/client_bug_bounty/",
          "technologies": []
        },
        {
          "id": "7IejRnJmoVhNdarQxSduVB",
          "project": "Coinbase",
          "date": "2014-03-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/J1uiudN8eHh3NrSc1wkoF/15fc343e68455a3dbfaecd93abe91970/Coinbase-logo.jpg",
          "maximum_reward": 50000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/coinbase?type=team",
          "technologies": []
        },
        {
          "id": "2H8xrKzUWQZHlNCTsZmAVg",
          "project": "1Hive",
          "date": "2021-03-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5z752bOTPeNARmnwwk4PZq/9f00bbb6c558f2d7e7a38f0e975b3c55/image",
          "maximum_reward": 40000,
          "is_external": true,
          "is_special": false,
          "url": "https://wiki.1hive.org/community/security/bug-bounty",
          "technologies": []
        },
        {
          "id": "7FshlW6ejpaydFoz171YwY",
          "project": "Uniswap",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6Vqzp5JDx2BMTaT4EfNyaZ/4157c47c389c59a797baa9274f35d12d/uniswap-logo.png",
          "maximum_reward": 40000,
          "is_external": true,
          "is_special": false,
          "url": "https://uniswap.org/bug-bounty/",
          "technologies": []
        },
        {
          "id": "7xA8A8TSdiwuxgGX8s9npl",
          "project": "Augur",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7mr9CCTMgLMiSYWgcYsTs0/ac740c13f0bbdc26b7d6152b7b796a6e/augur-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://augur.net/developers/",
          "technologies": []
        },
        {
          "id": "52efHkO6qvUSqFJIMCM9aS",
          "project": "Stellar",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2GO6pZrZouQb3r9x2sj8ae/83a754e405450610073ff1722423245a/stellar-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.stellar.org/ecosystem/bug-bounty-program",
          "technologies": []
        },
        {
          "id": "2CWWXle9mTkyOjCOKlRYXo",
          "project": "OMG Network",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1AfIpSh1gUucs7jtDgq0y6/7b4e301d8a66106b7e76c41d42517033/OMG-Network-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.omg.network/security/bug-bounty",
          "technologies": []
        },
        {
          "id": "X4rEuoOrimzs5B9XV3S4T",
          "project": "Leverj",
          "date": "2019-02-21T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/40tpX988bgFjz2qwpM9uFX/efad68a4f6de8ad728bf0ffe88b66186/Leverj-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://blog.leverj.io/leverj-exchange-bug-bounty-c3c2e884e67d",
          "technologies": []
        },
        {
          "id": "pumKDfHoV8LJTHvnDMH2i",
          "project": "Decred",
          "date": "2019-01-21T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5n3bnJoEWLgb1KE6aMhDer/055899f2e548616a4e3ea62e76b7f6bc/decred-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://bounty.decred.org/",
          "technologies": []
        },
        {
          "id": "3GXT09FiWZ1Haec1pDCQ2n",
          "project": "Ethereum",
          "date": "2015-10-30T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/21PRsNomAWpaRKa2Oy247r/5cf7e5a871bb19f1130700954ccd3329/ethereum-logo.png",
          "maximum_reward": 25000,
          "is_external": true,
          "is_special": false,
          "url": "https://bounty.ethereum.org/#bounties",
          "technologies": []
        },
        {
          "id": "4hoVw7wDTp0HM3kFPXwXmn",
          "project": "MiMC Hash Challenge",
          "date": "2020-12-20T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6duaOij5hL5Hm3mhe5rPDI/674e73d0229d91e9229aee7071744f5a/mimc-logo.png",
          "maximum_reward": 20000,
          "is_external": true,
          "is_special": false,
          "url": "http://mimchash.org/",
          "technologies": []
        },
        {
          "id": "ipca28XDsrwJ9Vk8E5zSL",
          "project": "Enecuum",
          "date": "2020-07-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4pXdY6nPCzvjslOcMtCzhe/dcc7e9f7894da633086901c6cde8ae12/enecuum-logo.png",
          "maximum_reward": 20000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/@ENQBlockchain/enecuum-bounty-program-welcomes-you-bug-hunter-66d05aba76f7",
          "technologies": []
        },
        {
          "id": "kjk9x4vylmYqjHxNMHbAD",
          "project": "Request",
          "date": "2019-07-29T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/EdKQZtyniFAqX48Pct3l9/22ca7b005eeff3c6790bacc92016eb2c/Request-logo.png",
          "maximum_reward": 20000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/RequestNetwork/documentation/blob/master/contribute/bug-bounty.md",
          "technologies": []
        },
        {
          "id": "7bbXq56O7tCoTK5MyYoQQl",
          "project": "Shapeshift",
          "date": "2018-10-25T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3lGdFmVli1kfbDFp23Tgxv/1ba760ff96766c46bc86db29ec807ee6/shapeshift-logo.png",
          "maximum_reward": 20000,
          "is_external": true,
          "is_special": false,
          "url": "https://shapeshift.com/responsible-disclosure-program",
          "technologies": []
        },
        {
          "id": "45D746Mmn80KxB8YetZOBV",
          "project": "Spectrocoin",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5ZCVszZsThVv6zDA4p5Z0r/8d3f5cc25cb8244834060601601be8a9/spectrocoin-logo.png",
          "maximum_reward": 15000,
          "is_external": true,
          "is_special": false,
          "url": "https://spectrocoin.com/en/bug-bounty.html",
          "technologies": []
        },
        {
          "id": "4IgiEOBB9MU1Tvj22xvV2D",
          "project": "Auctus",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7cLsDXGHTcET6iu33nTGKb/1213a67e672708a5d0f33e9745fbee7a/Auctus-logo.png",
          "maximum_reward": 15000,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.auctus.org/security",
          "technologies": []
        },
        {
          "id": "19wmCoEuIrZkMGKqGdDn2Y",
          "project": "Waves",
          "date": "2018-07-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6HV0o9O3LEgMGBRDSBRU7w/7bbd4665a059bdd0b609bc686fdfccda/waves-logo.png",
          "maximum_reward": 13700,
          "is_external": true,
          "is_special": false,
          "url": "https://forum.waves.tech/t/bug-bounty-program/1127",
          "technologies": []
        },
        {
          "id": "0EcQGHmsjPnJyIUgozcCR",
          "project": "TOP.ONE",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/eg6Sb9ujh2DNHpqKMr4R6/cefb4c67fb5722173eebc98331a12df0/TOP.ONE-logo.png",
          "maximum_reward": 11600,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/topone/index.html?utm_source=index&utm_medium=cpc&utm_campaign=topone",
          "technologies": []
        },
        {
          "id": "5Aim24bO91Uk9svPVPgF3k",
          "project": "Kleros",
          "date": "2018-10-23T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1NE5V9944V1zYPPcou7yED/11d77b5c45e72948a8953a6d0d2e73e4/Kleros-logo.jpg",
          "maximum_reward": 11500,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/kleros/kleros/blob/master/auditor.md#bounties",
          "technologies": []
        },
        {
          "id": "7vqHwc2QnFeVo1GxpVWt32",
          "project": "Bithumb Global",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6k3F1ojzDHjsbGiSBswYnD/b4041d94b20caf39dcb41cd21e46fb1d/Bithumb-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bithumb-global/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bithumb-global",
          "technologies": []
        },
        {
          "id": "6c6b9zwbLYXEVWNfwIuzpN",
          "project": "imToken",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1vtM7p3aiuPvaIosvCZK1z/f66a9ac61d04310ba7d650c5b2ac6d7f/imToken-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/imtoken/index.html?utm_source=index&utm_medium=cpc&utm_campaign=imtoken",
          "technologies": []
        },
        {
          "id": "bjRfDhS5mHrUXi6TvJJbB",
          "project": "MXC",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2UYDSTAHDSRnfbbAbzKIws/99d9c607c8293002364920ce655d46c1/MXC-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/mxc/index.html?utm_source=index&utm_medium=cpc&utm_campaign=mxc",
          "technologies": []
        },
        {
          "id": "3qvHN5XwK8Oookj9vLgALV",
          "project": "RenrenBit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3roI4V6OHEGOB8vFUfy7xO/78efe2d374fe63937fd6c8a215014817/RenrenBit-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/renrenbit/index.html?utm_source=index&utm_medium=cpc&utm_campaign=renrenbit",
          "technologies": []
        },
        {
          "id": "1ib6aCw1dIenJpoQ9QlyBD",
          "project": "Kucoin",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5kEvsacuvbjGuLYLIUqmoO/4a28837d7cbd9261c2c9e561bca28033/KuCoin-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/kucoin/index.html?utm_source=index&utm_medium=cpc&utm_campaign=kucoin",
          "technologies": []
        },
        {
          "id": "7CSaLfajDf1MqyGkatwyRI",
          "project": "HBTC",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1QJPgCKMTT3xFSKmGz29N9/4ef0ec75ea432656f73fb16437ea8042/HBTC-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/hbtc/index.html?utm_source=index&utm_medium=cpc&utm_campaign=hbtc",
          "technologies": []
        },
        {
          "id": "22vfwhzXfjFigVqfgU7m1w",
          "project": "BKEX",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5zL6ureOLP8ZKONahfMaQc/c4bcf3b9b9aa582cec32abfa6fa79537/BKEX-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bkex/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bkex",
          "technologies": []
        },
        {
          "id": "wd5cltKDmdCpwkPYPDRB1",
          "project": "VeChain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6odIfpRhs7PyZj1i5aAiHD/4604279cf3109262bf1b766125a41ee8/VeChain-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/vechain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=vechain",
          "technologies": []
        },
        {
          "id": "R1dRTZsHM0Fjlq90d4Xdd",
          "project": "Qtum",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4bmRldIMzkcq9t0rKymPhU/64ddb40434bf82bd22baa7b13f66ecac/Qtum-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/qtum/index.html?utm_source=index&utm_medium=cpc&utm_campaign=qtum",
          "technologies": []
        },
        {
          "id": "1gDzkomIFAGaPDXmTOVdlt",
          "project": "Waltonchain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2dfATnbaWlp5cshNVddDwJ/011eada8999a0bf57cf64be90fdd98e6/Waltonchain-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/waltonchain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=waltonchain",
          "technologies": []
        },
        {
          "id": "416C8RivahYFIMYc4FyJZR",
          "project": "DeversiFi (necDAO)",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1Ycx8PynJOvfJFCgTBTOZ/66b9f6f4fb2521560284c650ea5034f2/deversifi-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/necdao/necdao-bug-bounty-goes-live-59cdccb1a7cee",
          "technologies": []
        },
        {
          "id": "2A6oWmWuIp35nZC2pTcD3q",
          "project": "Oasis Protocol",
          "date": "2020-11-07T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/503om2UANP8MTLibSGQkuX/b8645ae94ba7b0920eb120bb0e17c0c6/Oasis-Protocol-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/oasis_protocol_foundation?type=team",
          "technologies": []
        },
        {
          "id": "JfhkSeNPpeoEi7RG2Pj3H",
          "project": "Exodus",
          "date": "2020-11-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3R7yESRMSnlziqbVgm4Gm5/4eab4be9f0f23b1961157130787c641c/Exodus-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/exodus?type=team",
          "technologies": []
        },
        {
          "id": "5sQVHinJsTwkwcssb1wzLf",
          "project": "GoodDollar",
          "date": "2020-09-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1UxhXD3syizfSuYFTyUv0Y/eca00f7284b39244356a07748aa9170b/GoodDollar-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/GoodDollar/Bugbounty/issues/2",
          "technologies": []
        },
        {
          "id": "6KxryBFae89gY1EUGfjrzP",
          "project": "Witnet",
          "date": "2020-09-07T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5rdbj9LtnquprevwwhqXJz/eb97868b32ba27bf0465812bebc09f91/Witnet-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/witnet/witnet-bounties/issues/1",
          "technologies": []
        },
        {
          "id": "1Kboq6UOai4vSNXd1yAhaK",
          "project": "Crypto.com",
          "date": "2020-04-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7EVi7XF6fmsXpB2kSwrDQC/aa803dc954cb6886a3aa4817b3861e91/Crypto.com-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/crypto?type=team",
          "technologies": []
        },
        {
          "id": "2MpqO6Pmdjw5uzn67O27mr",
          "project": "Monolith",
          "date": "2020-02-05T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2MovLOaefylQ0tWYhqqAt4/d1a7ddd647fba373c761fa048ae18d65/Monolith-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://monolith.medium.com/monolith-bug-bounty-program-3b4ef426dde7",
          "technologies": []
        },
        {
          "id": "cYpgOgB27TCWOMgzyFg9O",
          "project": "Liquidity Network",
          "date": "2019-05-27T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6BOHmSWZDyJ6kxppLsVP4C/23a9ca3ab69c903cfa27c3cc9c12512f/Liquidity-Network-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://blog.liquidity.network/2019/05/27/nocust-smart-contracts-bug-bounty/",
          "technologies": []
        },
        {
          "id": "7FnH99Uqd4vxB54UDb7nBL",
          "project": "Blockimmo",
          "date": "2018-08-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6mJHbw2mfJHlccuN7QcTqa/8116766ea38117051c3d3617f73472d7/Blockimmo-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/blockimmo?type=team",
          "technologies": []
        },
        {
          "id": "rOFVTsuEmIOk8kYqIJxKP",
          "project": "DDEX",
          "date": "2018-07-27T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5G78Jg0klMlYWORZizkxz8/61372859d302fe3025037e44c47f11ba/DDEX-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/ddex/ddex-bug-bounty-program-44895138e648",
          "technologies": []
        },
        {
          "id": "2zv9IUy7WyuO1cnrxiRqPZ",
          "project": "IOVLabs",
          "date": "2018-02-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2E1RLXptDxkcvhTdLDQmDl/294855b26c2d3c8a7a0551ab442d5688/IOVLabs-logo.png",
          "maximum_reward": 10000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/iovlabs?type=team",
          "technologies": []
        },
        {
          "id": "3A7nhzT39arPWT2vPytK0a",
          "project": "ONTology",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/40MlQ6CdGBUAJH0JDJTnXt/a7c9f02abea52148d3879c162979af3b/ONTology-logo.png",
          "maximum_reward": 8000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/ontology/index.html?utm_source=index&utm_medium=cpc&utm_campaign=ontology",
          "technologies": []
        },
        {
          "id": "jDsAjfDp7d9sUHCQeHqEQ",
          "project": "Codefi",
          "date": "2020-07-28T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1WveJnmys4oHbykv01rJ0W/1124cbe0cc6ed8b4342b704a3448e447/Codefi-logo.png",
          "maximum_reward": 8000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/codefi_bbp?type=team",
          "technologies": []
        },
        {
          "id": "KqDtihqCTWLr76IopxqQ7",
          "project": "UMA",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7jqjFMUHt5LXIq36avd80V/56783c7e858b9c2debf59932671023c5/uma-logo.png",
          "maximum_reward": 7500,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.umaproject.org/dev-ref/bug-bounty",
          "technologies": []
        },
        {
          "id": "26Q4ILPJ2Sw5Tdk0mtnixA",
          "project": "YELD",
          "date": "2020-10-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/t84NR6ULelZaulXSgSy0a/7f75ff58afc475f58b9f5ab00367bd06/YELD-logo.png",
          "maximum_reward": 7000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/merlox/yeld-contracts/issues/2",
          "technologies": []
        },
        {
          "id": "jbjjymnpqkV0MR2Q7V3FL",
          "project": "Metamask #1",
          "date": "2018-01-30T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3zFOKcpj3aM803DOXANQdU/9167358a47232e5d3f3757748f0c44cb/Metamask-logo.png",
          "maximum_reward": 6000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/MetaMask/metamask-extension/issues/3127",
          "technologies": []
        },
        {
          "id": "1RgUi0wAIuEcLtHv4o168o",
          "project": "Gate.io",
          "date": "2020-12-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4gSnzjOLbVVat5JY5FUVDo/ad20db8b0884c17c27940c9e1be20898/gateio-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.gate.io/en/securecenter",
          "technologies": []
        },
        {
          "id": "1RGVV5q8mjdfacI5JVKWz7",
          "project": "Lisk",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2fn0xgkSus01LP4JgGKDbu/748052563746ed801b7dc33f0f7f0cd4/lisk-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://lisk.io/bug-bounty-program",
          "technologies": []
        },
        {
          "id": "4s5dCmhi15GueZbAPxYQn1",
          "project": "Deribit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4Am9UrVYTkVvS4J4dkFdAx/148aea530613550678072327cb7e8369/Deribit-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.deribit.com/pages/information/bug-bounty-program",
          "technologies": []
        },
        {
          "id": "1Ptcj89MsXluOmCja4DUHI",
          "project": "Bittorrent",
          "date": "2020-04-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/13RIOQh7EkBblo4OxEqv5j/aa16c64c1c357b99004132dda64cee28/BitTorent-File-System-logo.jpg",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/btfs?type=team",
          "technologies": []
        },
        {
          "id": "1xeIsLi9oJaYiPe5dloMTO",
          "project": "Formatic",
          "date": "2020-03-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/55n3QLx4cin49JfuU1FX3g/1deab1e6ee2ab0ad81cdeca47d2f48ac/Fortmatic-logo.jpg",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/fortmatic_inc?type=team",
          "technologies": []
        },
        {
          "id": "5WtvcESDC8Ug1KqRCqzdfZ",
          "project": "2Key",
          "date": "2019-11-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4j7HTQBNvl4I9frjucs832/de69031a1922610a8010fd10f6f76081/2Key-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.2key.network/bug-bounty",
          "technologies": []
        },
        {
          "id": "5LI7IBneI9UfiVwXGTG0B9",
          "project": "Bitcoin Gold",
          "date": "2018-12-24T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/39sR7uWSCOX3SmkswvYqHx/6ea570da95667510db101c8e8457af28/Bitcoin.de-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/BTCGPU/Developer-Portal/blob/master/responsible-disclosure.md",
          "technologies": []
        },
        {
          "id": "iOcK8I4VWWhIMwEeaOMNL",
          "project": "everiToken",
          "date": "2018-07-31T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/VwUEJXJALKAn6xvQ8t7SA/69bea45b12fae77045c72c98371707bc/everiToken-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackenproof.com/everitoken/everitoken-blockchain",
          "technologies": []
        },
        {
          "id": "y01h3ZdjFU7V68EzEcVWi",
          "project": "Tendermint",
          "date": "2018-05-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/79WeSrUnWH8FMQTzmUM9Xn/0f6865d8be9ac5cd8b46e25d9068ab0c/Tendermint-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/tendermint?type=team",
          "technologies": []
        },
        {
          "id": "0tkcl5Bm5kGL5nDmKdn0E",
          "project": "Dether",
          "date": "2018-04-13T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6GFKyLySRlP0ez5vYhRiuA/2becfdd3b0dac2507ce04f83b62775f6/Dether-logo.png",
          "maximum_reward": 5000,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/dether/dethers-bug-bounty-program-beta-testing-e9f1bb4fec73",
          "technologies": []
        },
        {
          "id": "19iCbYJihne425oJYNb0Z2",
          "project": "PlatON",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5RUUFk5r4uyudgEPFKOheZ/9e2c575ffb478ff6d6790acfbc3cd05a/PlatON-logo.png",
          "maximum_reward": 4000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/platon/index.html?utm_source=index&utm_medium=cpc&utm_campaign=platon",
          "technologies": []
        },
        {
          "id": "7F3cYSSgseyo3m60jB4Iht",
          "project": "Bybit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/GfpsulgdBnQ54uB1yIUe4/7275ac75ff376da8354c64e216b4410d/Bybit-logo.png",
          "maximum_reward": 4000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bybit/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bybit",
          "technologies": []
        },
        {
          "id": "7iSy3r8rl8ct78ckKeHguA",
          "project": "Bingbon",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6cqdfEVd5a3SeYmjqJvetp/e48db93e32b4af0ac3c7ccc58b2f79cc/Bingbon-logo.png",
          "maximum_reward": 4000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bingbon/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bingbon",
          "technologies": []
        },
        {
          "id": "PsIa7smAsKuw0UBfPjCz7",
          "project": "MagnaChain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/NHbPqajN68gpqy2xLyglm/ddd75ce4fa8788da646a99df7d15a3ef/MagnaChain-logo.png",
          "maximum_reward": 3800,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/magnachain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=magnachain",
          "technologies": []
        },
        {
          "id": "4sIpmQNGLR1UMb6gp5Umu4",
          "project": "Hoo",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5I9sEgytezaXql1Ibl7PsK/c5c8b13c6d645927dba31d3ec89f3a4e/Hoo-logo.png",
          "maximum_reward": 3000,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/hoo/index.html?utm_source=index&utm_medium=cpc&utm_campaign=hoo",
          "technologies": []
        },
        {
          "id": "1mMVnbGHUDmnO5WFvlGJXL",
          "project": "Status.im",
          "date": "2020-10-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6qGLgmiQKTonpBHmJeQ4qa/dff7adfe425ba15e208dcf543ea1451f/status-logo.png",
          "maximum_reward": 3000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/status_im?type=team",
          "technologies": []
        },
        {
          "id": "50cAfqunHS7FLBsBKsCHFO",
          "project": "SynLev",
          "date": "2020-09-28T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4Wd6bXrpt3LdRrYRQAKH0O/4e8e1104da04583a2fb8166c22bbea51/chainlink-logo.png",
          "maximum_reward": 3000,
          "is_external": true,
          "is_special": false,
          "url": "https://synlev.medium.com/synlev-bug-bounty-rewards-up-to-3-000-in-syn-e3267c90a6b4",
          "technologies": []
        },
        {
          "id": "1C7MUCG6BPAof7zrRndyPT",
          "project": "Pillar",
          "date": "2019-11-13T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6nYivQBa6unFxuVdeDtUt6/75b91c17a92fd444dc584e411dc39d77/pillar-logo.png",
          "maximum_reward": 3000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/pillarproject?type=team",
          "technologies": []
        },
        {
          "id": "1OSQCeTKHftG5Gh5MQlCgQ",
          "project": "Metamask #2",
          "date": "2019-06-08T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3zFOKcpj3aM803DOXANQdU/9167358a47232e5d3f3757748f0c44cb/Metamask-logo.png",
          "maximum_reward": 3000,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/MetaMask/metamask-extension/issues/6699",
          "technologies": []
        },
        {
          "id": "Uhwq6WL76iVCMMUxLOQia",
          "project": "Blockchair",
          "date": "2020-12-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6Ky5hwwjC2idMvKL9fLqMA/a11231e705b8f78292b14d3c125aac11/blockchair-logo.png",
          "maximum_reward": 2500,
          "is_external": true,
          "is_special": false,
          "url": "https://blockchair.com/bug-bounty",
          "technologies": []
        },
        {
          "id": "4XlWQmvySkjWhfpYvEF11w",
          "project": "Algorand",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/76lTLCFhjrVACVRrTZPze/0633fd55d80e042b2bbff088011503f9/Algorand-logo.png",
          "maximum_reward": 2500,
          "is_external": true,
          "is_special": false,
          "url": "https://bugcrowd.com/algorand",
          "technologies": []
        },
        {
          "id": "7n6Hf8RiWwtUv4VaP4G1oB",
          "project": "Fusion",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4KV41ITAotmiVYVzIyRd9w/232a9d00ab305fc1f07da86da3dddce0/Fusion-logo.png",
          "maximum_reward": 2500,
          "is_external": true,
          "is_special": false,
          "url": "https://www.fusion.org/developers/bug-bounty#bugs",
          "technologies": []
        },
        {
          "id": "3YgufOBOm45QblD3wahfQc",
          "project": "ZVChain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/39Gtm4QFXs4Lz4X9KBi4hF/242ca9b3e5215f9337db3f0dc98fe89d/ZVChain-logo.png",
          "maximum_reward": 2500,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/zvchain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=zvchain",
          "technologies": []
        },
        {
          "id": "2nTuHz50G1kX3CsUXr5amB",
          "project": "BigONE",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1ok19gf5QGjr0fBCjsG8Kh/484de4e170bcf70f394f5daed2bdb1e2/BigONE-logo.png",
          "maximum_reward": 2400,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bigone/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bigone",
          "technologies": []
        },
        {
          "id": "55hSUc3GadnwECxtb4ZoSN",
          "project": "Numerai",
          "date": "2020-04-30T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7qtCU9N84s4jsTbt3Tt1Ei/c1da1887a4744142e58975082a64202a/numerai-logo.png",
          "maximum_reward": 2400,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.numer.ai/tournament/bounties",
          "technologies": []
        },
        {
          "id": "6uNJfXnNK8vLUdozviuKmp",
          "project": "Coingaming",
          "date": "2020-08-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2tZQJRK6SBnlfJLKcVwh4K/8b2067989468792c25daca3b68a35872/coingaming-logo.png",
          "maximum_reward": 2000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/coingaming?type=team",
          "technologies": []
        },
        {
          "id": "6K8LFtJaaJgSUaBLT6ewKY",
          "project": "Ark",
          "date": "2018-01-02T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6Kf7H6u8xYAnZFxvZRtZUW/8b59fce66130a7a6e9568a8c176198fa/ark-logo.png",
          "maximum_reward": 2000,
          "is_external": true,
          "is_special": false,
          "url": "https://ark.io/blog/ark-github-development-bounty-113806ae9ffe",
          "technologies": []
        },
        {
          "id": "zYgE2xAxE1LAwBr2lK8Dv",
          "project": "Hyperledger",
          "date": "2017-08-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/399llniGkg5Hgmob9evycZ/e22a6471727186f14e8323415310a850/Hyperledger-logo.png",
          "maximum_reward": 2000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/hyperledger?type=team",
          "technologies": []
        },
        {
          "id": "5EwRWI04C32LNDmSb1oqhN",
          "project": "Blockstack 2.0 Testnet",
          "date": "2016-08-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/tzjTEtXiUzLEccm0che1c/b3cab127e52c200cb8c09bdbfb443a5e/blockstack-logo.png",
          "maximum_reward": 2000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/blockstack?type=team",
          "technologies": []
        },
        {
          "id": "4BNtPneXHetqdF7E2o9l99",
          "project": "Blockchain",
          "date": "2015-02-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2oO9aZiimkuhZOPEiZwDbl/1b0411c315b7f6289a2afc4eb80483c7/Blockchain-logo.png",
          "maximum_reward": 2000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/blockchain?type=team",
          "technologies": []
        },
        {
          "id": "4TqOUa7QoocAgBtS9XsoHL",
          "project": "Coingecko",
          "date": "2020-12-25T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/QpY60gyNsYnl2cWyUdHrj/fe8a294e37d8500b8145baa88405a91e/coingecko-logo.png",
          "maximum_reward": 1500,
          "is_external": true,
          "is_special": false,
          "url": "https://hackenproof.com/coingecko/coingecko",
          "technologies": []
        },
        {
          "id": "365S0imA5yCgKmbp9QgPOT",
          "project": "Hotbit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2isov754EZVJSAfoD31FE2/2c389f6e2d63323648a18b34edcba7b3/Hotbit-logo.png",
          "maximum_reward": 1500,
          "is_external": true,
          "is_special": false,
          "url": "https://hackenproof.com/hotbit/hotbit",
          "technologies": []
        },
        {
          "id": "4pREQPefBcVR4igehV5jep",
          "project": "Enjin",
          "date": "2020-10-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5Jy5dAy2pmjsp5FASxPIuD/aa818d422d2c4f3074439558abfc4c60/Enjin-logo.png",
          "maximum_reward": 1500,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/enjin?type=team",
          "technologies": []
        },
        {
          "id": "4qX5WkzRAiKNXaHDWVU5ru",
          "project": "OceanONE",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7rHoLIzOANP64INmJ8YZvd/486062aec7c6e39441f17f432cd4e9f4/OceanONE-logo.png",
          "maximum_reward": 1400,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/oceanone/index.html?utm_source=index&utm_medium=cpc&utm_campaign=oceanone",
          "technologies": []
        },
        {
          "id": "2GpYIy3mhw2DbWqvuIXLPF",
          "project": "Zebpay",
          "date": "2020-12-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5Rv7JxYt43ZwHfJ8uQoE6s/84896b1b03d703ab04838acef545f83f/zebpay-logo.png",
          "maximum_reward": 1000,
          "is_external": true,
          "is_special": false,
          "url": "https://zebpay.com/sg/bug-bounty-program/",
          "technologies": []
        },
        {
          "id": "6PPs1TsCvM1HPoMlO27PrT",
          "project": "Coinpayments",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6SJ8dhQ55ouzKhigE54COL/2d8aa374140f35817fc27d1df7b8f415/Coinpayments-logo.png",
          "maximum_reward": 1000,
          "is_external": true,
          "is_special": false,
          "url": "https://www.coinpayments.net/help-bug-bounty",
          "technologies": []
        },
        {
          "id": "3JGw27JMpeBqhulafrxdtw",
          "project": "Helium",
          "date": "2020-02-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/422ZYHxBgqiJztipY4btIG/a91fcb33870c860d5c8620cdd788aa97/Helium-logo.png",
          "maximum_reward": 1000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/helium?type=team",
          "technologies": []
        },
        {
          "id": "3jlgyTtKaM7gLNuarw5hVo",
          "project": "Eobot",
          "date": "2014-10-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/56cvuns4CFH84KxQg0Ql9D/7b892a8592cde920cc21c0ef7e2a7294/Eobot-logo.png",
          "maximum_reward": 1000,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/eobotcom?type=team",
          "technologies": []
        },
        {
          "id": "2uNKD19Q9ualmZUOdVOZxX",
          "project": "YOYOW",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3vjgygvkQq4MRo7qJH1I0K/605ca4621922518b29e4a299d6c98b6d/YOYOW-logo.png",
          "maximum_reward": 900,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/yoyow/index.html?utm_source=index&utm_medium=cpc&utm_campaign=yoyow",
          "technologies": []
        },
        {
          "id": "7Hho1onv7prqUkiw1ODSBD",
          "project": "FIBOS",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1SkBhoRDWZnOgtdzryYCoN/7169f98660772e0983bc7e8037f1e8f8/FIBOS-logo.png",
          "maximum_reward": 750,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/fibos/index.html?utm_source=index&utm_medium=cpc&utm_campaign=fibos",
          "technologies": []
        },
        {
          "id": "5JUOXlzC5hKndjpFOFDaQ9",
          "project": "INTChain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7l1DTH8jVtEIAgpuOFpeut/89844b8f1d122894c64acb33bcc61d26/INTChain-logo.png",
          "maximum_reward": 700,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/intchain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=intchai",
          "technologies": []
        },
        {
          "id": "2iXulUtja315zRSH11nJaK",
          "project": "Bytom",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2wBjxNC3BfJPFMK6Dz1XTN/32b6203d3c197be6ee4e7fc51a1e9ff7/Bytom-logo.png",
          "maximum_reward": 660,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bytom/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bytom",
          "technologies": []
        },
        {
          "id": "6HzENu6LfOBXON2nBnwMIT",
          "project": "Ravencoin",
          "date": "2019-11-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1p8wmG1r4PhRmDPGBgoXa8/894534a907249a3482e2cb4d4634cb5f/Ravencoin-logo.png",
          "maximum_reward": 630,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/RavenProject/Ravencoin/wiki",
          "technologies": []
        },
        {
          "id": "28q6sVwAt9PbnxBRKSgHxO",
          "project": "Coinmode",
          "date": "2020-08-04T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Q5gOl3gL0JEBM2M1ZT9c9/f40412c44f9f86ec3d1dfe9c718119f4/Coinmode-logo.png",
          "maximum_reward": 600,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/coinmode/bounties/issues/1",
          "technologies": []
        },
        {
          "id": "4ImBYIJz7bI1fxV92HoYTx",
          "project": "Gitcoin",
          "date": "2019-08-24T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6oBeW1NqYIWLSXZyE0XyKw/c504fc4422bb8b79aea66e76505c4100/Gitcoin-logo.png",
          "maximum_reward": 600,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/gitcoinco/web/issues/5053",
          "technologies": []
        },
        {
          "id": "1FRXajupXKy2Od9y3Yxp2i",
          "project": "coinsbit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4OGIAWY9QqmliQWaVAObfI/d8828b759fb163ea41b264cde69de79a/coinsbit-logo.png",
          "maximum_reward": 500,
          "is_external": true,
          "is_special": false,
          "url": "https://coinsbit.io/bug-bounty",
          "technologies": []
        },
        {
          "id": "2ooq9XK4F123gzVQGfyeh8",
          "project": "BitPanda",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/cIvTJMilR2INU35IDwRqM/a2145c7083302e803a92d57029c47705/BitPanda-logo.png",
          "maximum_reward": 500,
          "is_external": true,
          "is_special": false,
          "url": "https://www.bitpanda.com/en/legal/bugbounty",
          "technologies": []
        },
        {
          "id": "BtqXV0WJ7cYBedZNFNKDD",
          "project": "Brave",
          "date": "2016-10-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/20Ce9mLNJUJerztp4jIPBN/ac895696bfc19e149bc8b3dc5b462866/brave-logo.jpg",
          "maximum_reward": 500,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/brave?type=team&view_policy=true",
          "technologies": []
        },
        {
          "id": "3f1aS6CI6mwOTRUMULFMh2",
          "project": "GXChain",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3t0G1VP4pQUCAJd5Eu0pu2/ffb1d21611d4b3552fb162dbbc33437f/GXCHAIN-logo.jpg",
          "maximum_reward": 385,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/gxchain/index.html?utm_source=index&utm_medium=cpc&utm_campaign=gxchain",
          "technologies": []
        },
        {
          "id": "62SdECwPiF9zctKxOS7Kq7",
          "project": "ConsensysMesh",
          "date": "2018-06-15T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1eeVY0nAbVuHtAvIHyh8sv/7a3d9c5a454493c1f603172ade8003bd/ConsenSys-Mesh-logo.png",
          "maximum_reward": 200,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/ConsenSysMesh/Stow-Smart-Contracts/issues/50",
          "technologies": []
        },
        {
          "id": "3UbaYasnbJl2wfbTqlOchC",
          "project": "Bitaccess",
          "date": "2016-02-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4rPZs9FhmaNhVjzAeIxqdu/f6cf0d17e9c5ed5dd94c995525a00abe/bitaccess-logo.png",
          "maximum_reward": 200,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/bitaccess?type=team",
          "technologies": []
        },
        {
          "id": "2cfcHjUJdPQSrjgPTy8s5Z",
          "project": "DFOhub",
          "date": "2020-08-20T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5YE6l9ogn4Ah44wC5Rj3Dy/a505351f6f1a702778eb0cd7cbd22d7b/DFOhub-logo.jpg",
          "maximum_reward": 130,
          "is_external": true,
          "is_special": false,
          "url": "https://www.notion.so/Community-Guidelines-a03ceeab28254eb3944ab85320be70de",
          "technologies": []
        },
        {
          "id": "cvnsHQBsx9tIWoF89CHDy",
          "project": "Kriptomat",
          "date": "2020-12-19T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5EnTQ14zsV23TW2bEbdvoA/449565e326b262bf8e4d8a6a9276d864/kriptomat-logo.png",
          "maximum_reward": 100,
          "is_external": true,
          "is_special": false,
          "url": "https://kriptomat.io/kriptomat-bug-bounty/",
          "technologies": []
        },
        {
          "id": "1Y4s43yalqAF00ozvymVmg",
          "project": "Parity",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6V9kFducbwO6C7fAKhT12f/67437e5110eb999c600b6224b4fd58dd/parity-logo.png",
          "maximum_reward": 100,
          "is_external": true,
          "is_special": false,
          "url": "https://www.parity.io/bug-bounty/",
          "technologies": []
        },
        {
          "id": "4EFkcwoUl7dsRZDcFRsCv7",
          "project": "3Commas",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3l4tW6jmis6KYW8z6Qm1N0/d3f128c6ad1034ac323598273d12838a/3commas-logo.png",
          "maximum_reward": 100,
          "is_external": true,
          "is_special": false,
          "url": "https://3commas.io/bounty",
          "technologies": []
        },
        {
          "id": "53HSzFHyyCnuNpH0EWXEDP",
          "project": "BOSCORE",
          "date": "2019-07-08T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7gLDWfgCkz3pf0EuYTRwHh/187bb7194369c747babc244ddc062462/BOSCORE-Logo.png",
          "maximum_reward": 100,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/bos/index.html?utm_source=index&utm_medium=cpc&utm_campaign=bos",
          "technologies": []
        },
        {
          "id": "1ylsTXQoQZDqeRR4QLnimd",
          "project": "Coinpunk",
          "date": "2014-01-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3YLLoKUut9ATcKouhTqKlb/924dc2e42bfce203a760f64345554e32/coinpunk-logo.png",
          "maximum_reward": 100,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/kyledrake/coinpunk/blob/master/docs/H4XX0RZ.md",
          "technologies": []
        },
        {
          "id": "19sUZDWaH4HOQprpM6DEXc",
          "project": "Coinsuper",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3F9wM5zzFOCl9mnqTB3sWy/ec120019476df904ca765a0f23b60e34/Coinsuper-logo.png",
          "maximum_reward": 20,
          "is_external": true,
          "is_special": false,
          "url": "https://slowmist.io/en/coinsuper/index.html?utm_source=index&utm_medium=cpc&utm_campaign=coinsuper",
          "technologies": []
        },
        {
          "id": "1AUvcWxkwxibe9LHt3OhzV",
          "project": "bitbns",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6iLgPJbBvxCcISVB12krGP/dbcdbb1f7d1372c23f33330daf163f0f/bitbns-logo.png",
          "maximum_reward": 10,
          "is_external": true,
          "is_special": false,
          "url": "https://bitbns.com/bug-bounty/",
          "technologies": []
        },
        {
          "id": "2mfKQArFc0YZhO25uVKcRU",
          "project": "Etherscan",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5VlG3lbmFaLMmrgUiWBpGw/ef8e075ea292ecedf18d9d12776f8a22/ether-logo.png",
          "maximum_reward": 10,
          "is_external": true,
          "is_special": false,
          "url": "https://etherscan.io/bugbounty",
          "technologies": []
        },
        {
          "id": "2vN8K9Duzv7OPQFwMdE18W",
          "project": "ICON",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4oLGyP7uvHOqtpXAdfOSaT/1bf2065a78039c0e8fef9308e2700415/icon-logo.png",
          "maximum_reward": 4,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.google.com/forms/d/e/1FAIpQLSejpzKaGuj8ekYfurLOufZLuTimNDNRxwgdXggS6ZOIC42CvQ/viewform",
          "technologies": []
        },
        {
          "id": "7qYmYdpemrpclTethRx1c8",
          "project": "Diem",
          "date": "2020-12-13T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7yl8c6mA8rV8fpYufWEZEH/efdfb0ffa1fa3532e64d6ec352f29326/diem-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://developers.diem.com/docs/reference/security/",
          "technologies": []
        },
        {
          "id": "4SLAn5tMFxQaRm0aiuNGbT",
          "project": "Bitmex",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7iryUOk4ACVxaFrstkkPsr/a5bea3bc93b10ea94d15f30671f81211/Bitmex-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://www.bitmex.com/app/security",
          "technologies": []
        },
        {
          "id": "1SLrkbDnH5mrsr1DKR2jmI",
          "project": "Bitcoin.de",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3exzRVdSqyG1Os50krbsY0/406b9076fd253099553fbf0e4832bc31/Bitcoin.de-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://www.bitcoin.de/en/bug-bounty",
          "technologies": []
        },
        {
          "id": "1moN2oCfF4pMeNkoO5pNvC",
          "project": "Coinjar",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6YbPapQyxSEVp0wHbqocLm/e63b422bdda9333398833c6339ff5833/Coinjar-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://www.coinjar.com/bounty",
          "technologies": []
        },
        {
          "id": "1Ggdfsa7pJ8UGBFR6kpq1o",
          "project": "Digital Asset",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2o8koShqtEnrKSSf54GCrA/3448db87ef72bdd6cd208c547bc0f0d8/Digital-Asset-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://www.digitalasset.com/responsible-disclosure",
          "technologies": []
        },
        {
          "id": "IkaWa7XCSZW8asHxljXge",
          "project": "HitBTC",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2R4K8FOb7twqMAYAiuo3aO/dfa5886c40da07c182ccaa1d0278eebf/HitBTC-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://hitbtc.com/bug-report",
          "technologies": []
        },
        {
          "id": "4KiLFFpOHvsWlRaN0MkocE",
          "project": "Navcoin",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/44PbLeqehUnInro7WT0rtf/f4f217dffa661c73950583fdc235a97d/Navcoin-logo.jpg",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://navcoin.org/en/responsible-disclosure",
          "technologies": []
        },
        {
          "id": "2z4GCZBmodOJDIoxcuiTcG",
          "project": "Ripple",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7pzcDUTvOeGeze2XiFYeQS/5b35ad93ec4045101b8b57c764055b8d/Ripple-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://ripple.com/bug-bounty/",
          "technologies": []
        },
        {
          "id": "78dBoHBTc2mJaovhx57g8U",
          "project": "Urbit",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3Dg3ZOAeMAKrmYHVbqQcCO/c5c63d92d8febf76d863c4a7deb560a3/Urbit-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://urbit.org/bounties/",
          "technologies": []
        },
        {
          "id": "7k5cBPj8144bIQvmmsZHSM",
          "project": "Ledger",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/ktAIIclek6iagx6N07wOA/22c490e079c1a56128f06d16c04aec8a/Ledger-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://donjon.ledger.com/bounty/",
          "technologies": []
        },
        {
          "id": "1ZvReFz0hsWDdoMA4xLvsw",
          "project": "Coinfinity",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7xClcKCpM74JMwNXRnq8pe/959013bbb0fddb4b4ba9452d37f02e38/Coinfinity-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://coinfinity.co/responsible-disclosure/",
          "technologies": []
        },
        {
          "id": "5ZWPIf1yeZXYZwBP2KcUMn",
          "project": "Gemini",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2Dh6sE9iHwC9R5o7pkDsDk/113ce4be14530f549d623459cb97541f/gemini-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://gemini.com/security",
          "technologies": []
        },
        {
          "id": "MVkMlZpeuGbPNfx9cv2C7",
          "project": "LocalBitcoins",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/4fdIqKrl3BLMtNB3ytfcnG/edcd357bac7c7ec136ddb97fc77a3b70/LocalBitcoins-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://localbitcoins.com/whitehat",
          "technologies": []
        },
        {
          "id": "5A0y1lMTuefiRbkI3u6mpw",
          "project": "PerlinX",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3FFaFkOB8kgtZFOrxIKlaw/a541853bc770e3e97f5de525fdf72024/PerlinX-logo.jpg",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.perlinx.finance/perlin-community/legal/terms-and-conditions",
          "technologies": []
        },
        {
          "id": "w07QzYRPRnTqls83knnRN",
          "project": "Radar Relay",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3qHxlkKgQdCBk04Ols7p8E/76b90938769696730e100d9cc4cfa271/Radar-Relay-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://relay.radar.tech",
          "technologies": []
        },
        {
          "id": "4gqCc3KcHejTX4FQBevRtc",
          "project": "CertiK",
          "date": "2020-12-03T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/6eoyrqIdJxzkzTd3VCt2tS/7a8d8549e42eb5b66e95e6ca0a10c97a/CertiK-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://docs.certik.foundation/certik-chain/overview/token-incentive-program/deepwallet-and-explorer-bug-bounty",
          "technologies": []
        },
        {
          "id": "68jcBaIwPPynbzghDM3g4f",
          "project": "tokens.net",
          "date": "2020-08-28T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3MFfUlb8ylYet57vGBIEzh/1a48b5d5af8fcbe0db353e8104675b5e/tokens.net-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://www.tokens.net/security-policy/",
          "technologies": []
        },
        {
          "id": "KTSZa9LxhUDleriPV2P7f",
          "project": "Bitwala",
          "date": "2020-06-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/247yt5XqP89hQeQkJelra7/d7d106cde2f673d418b5e1b016b17697/Bitwala-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/bitwala?type=team",
          "technologies": []
        },
        {
          "id": "55aWxI4VJyAJguZjRHv2nG",
          "project": "DeBank",
          "date": "2020-05-02T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/7L2Vwbc3NDapy7LV0XjhBd/e76a8a9a90d06a0de2b647f7ebd9f910/DeBank-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/DeBankDeFi/Issues",
          "technologies": []
        },
        {
          "id": "7rYiZ1BnndM3MLrnJbHp5h",
          "project": "Ren",
          "date": "2019-12-24T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/2JheDeDRJ1kj7psdLhMtTg/411a37e5697f7124cd12e7e290e48ec4/Ren-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://medium.com/renproject/december-development-update-e910df747d38",
          "technologies": []
        },
        {
          "id": "5XcVVJKZP3DWnLY7aovDnA",
          "project": "Bitpay",
          "date": "2019-12-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5rqLdZxWvI3dTM1zsPN1yD/3b0bd6052650fd4ff1392d023ead2987/Bitpay-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://support.bitpay.com/hc/en-us/articles/204229369-Does-BitPay-have-a-bug-bounty-program-",
          "technologies": []
        },
        {
          "id": "1WtAzi1hRco1XhUSJC0ccU",
          "project": "AlphaWallet",
          "date": "2019-06-10T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/5YuH8VkAW1kjJyr6QUO8J3/c5545a3a78902d8f90c1afec8e431859/AlphaWallet-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://github.com/crypt04dvisor/AlphaWallet",
          "technologies": []
        },
        {
          "id": "1gRtVmVTEmunFpNQmGmI0r",
          "project": "Quantstamp",
          "date": "2018-12-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/1pvZdQ79n1sG2FJgFSP7pQ/6acb6f1686f6ad6b3dc6559df894a350/Quantstamp-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://quantstamp.com/legal/responsible-disclosure",
          "technologies": []
        },
        {
          "id": "38iMXpwxIK6KjTHb3Y4wmG",
          "project": "MyCrypto",
          "date": "2018-03-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/3Y92y9v3lUPgX5F99rluMh/1da697960c5f621f803653839b5ee6c8/MyCrypto-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://hackerone.com/mycrypto?type=team",
          "technologies": []
        },
        {
          "id": "5XJiBAQofGMVUqf5z1nJhT",
          "project": "Trezor",
          "date": "2017-06-01T00:00-07:00",
          "logo": "https://images.ctfassets.net/t3wqy70tc3bv/37zxqZZfoWZWeotgzLfVMg/a4f69cb373de51ad22e75071fe108ab0/Trezor-logo.png",
          "maximum_reward": 0,
          "is_external": true,
          "is_special": false,
          "url": "https://trezor.io/security/",
          "technologies": []
        }
      ]
    },
    "__N_SSG": true
  },
  "page": "/explore",
  "query": {},
  "buildId": "jgaGWTW0xsciqMUMG1pfg",
  "isFallback": false,
  "gsp": true,
  "scriptLoader": []
}
